<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C#: Guess The Word Game on Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/</link><description>Recent content in C#: Guess The Word Game on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 23 Jul 2019 11:45:38 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/csharp-guess-the-word/index.xml" rel="self" type="application/rss+xml"/><item><title>Starting Up</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/starting-up/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/starting-up/</guid><description>Starting Up The goal of today&amp;rsquo;s activity is to learn C# skills and incorporate your new-found knowledge to create a Guess The Word game! Let&amp;rsquo;s get the game set up.
Today you will be using Replit. Before starting, you will need to sign up for a Replit account, if you do not yet have one.
Click the button below to sign up for a Replit account - you will need an email account in order to sign up.</description></item><item><title>Writing to Console</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/writing-to-console/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/writing-to-console/</guid><description>Writing to Console Console.WriteLine means to tell the computer to print the sentence enclosed within the parentheses () out onto the console.
Working Together In the Replit program below, press run. You see that Hello World is printed out to the screen on the right. Without removing the quotation marks, try changing &amp;quot;Hello World&amp;quot; to another sentence. Press run to see if anything changes. Add another Console.WriteLine below the current line to print a second sentence below the first sentence.</description></item><item><title>Comments</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/comments/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/comments/</guid><description>Comments Developers often need to collaborate with other developers. Comments are an easy way for developers to write notes in the code and communicate with others. Comments are ignored by the computer; thus, they are also an easy way to tell the computer to not run certain lines of code. There are two ways to create comments:
To comment out one line, place // in front of a line of code.</description></item><item><title>Activity 1 - Write to console</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-1/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-1/</guid><description>Instructions Go to the code containing the GuessTheWord game. Press run. Notice that Press 'run' on the top of the screen to play again. is the only thing that is printed to the console. Let&amp;rsquo;s add a welcome message so that the player knows they playing the Guess the Word game.
Find // TODO (ACTIVITY 1) in the code. Add a line of code to print Welcome to C# GuessTheWord to the console.</description></item><item><title>Strings</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/strings/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/strings/</guid><description>Strings Anything that is surrounded in quotation marks is called a string. This is how a computer represents words or sentences. For example, &amp;quot;a&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;banana!&amp;quot;, and &amp;quot;Hello World&amp;quot; are strings, but Hello World and 2 are not strings, because the quotation marks are missing.
You can combine many strings together using the + operator. For example:
&amp;quot;Apple&amp;quot; + &amp;quot;Pineapple&amp;quot; produces the string &amp;quot;ApplePineapple&amp;quot;. &amp;quot;Nuevo&amp;quot; + &amp;quot; &amp;quot; + &amp;quot;Foundation&amp;quot; produces the string &amp;quot;Nuevo Foundation&amp;quot;.</description></item><item><title>Activity 2 - Add words to the word bank</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-2/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-2/</guid><description>Instructions Find // TODO (ACTIVITY 2) in the GuessTheWord code. For the Guess the Word game, we will give the computer a word bank, and the computer will choose one of the words randomly to use for the game. So far, we have added the words &amp;quot;Hello&amp;quot; and &amp;quot;World&amp;quot; to the word bank. However, a Guess the Word game with only two possible words to guess is not fun at all!</description></item><item><title>Numbers</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/numbers/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/numbers/</guid><description>Numbers The computer can also do regular math that you see in school. Use Console.WriteLine to print out the result from the math expressions. No quotation marks are needed for numbers!
Console.WriteLine(5 + 4); Console.WriteLine(6 * (9 - 7) / 3); Here is the full list of math symbols that you can use:
Operator Description Operator Description + Add \ | Divide | - Subtract % Modulo (remainder) * Multiply (,) Parenthesis Fun Fact: Computer Division The computer does division differently from your regular calculator.</description></item><item><title>Booleans</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/booleans/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/booleans/</guid><description>Booleans Booleans are true or false statements. Unlike strings or numbers, booleans store statements of truth: is what I am saying true or false? For example, if I ask, &amp;ldquo;Are you a robot?&amp;quot;, this question produces a true or false result, which we call a Boolean. In this case, since you are not a robot (hopefully!), we would produce false.
We can also use math operators to create boolean expressions. Here are some examples; however, notice the unusual symbols for &amp;ldquo;equal to&amp;rdquo; and &amp;ldquo;not equal to&amp;rdquo;:</description></item><item><title>Boolean Operators</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/boolean-operators/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/boolean-operators/</guid><description>Booleans Operators You can also connect boolean expressions together using the &amp;amp;&amp;amp; (AND) and the || (OR) operator. For example, suppose I ask: &amp;ldquo;Are you a human, and is Nuvi a robot?&amp;rdquo; The word &amp;ldquo;and&amp;rdquo; connects the two true-false questions together. In this case, since it is true that you are a human, and it is also true that Nuvi is a robot, then the overall result is true.
Here&amp;rsquo;s a chart that describes what happens when we connect booleans together:</description></item><item><title>Variables</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/variables/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/variables/</guid><description>Variables Variables are simply names that we can give to values such as strings, numbers and booleans. We use variables to store information that the computer can keep track of.
Here&amp;rsquo;s how to declare a variable named str. We say str has the value &amp;quot;Hello World&amp;quot;. Can you describe what the other variables below mean?
var str = &amp;#34;Hello World&amp;#34;; var x = 88; var happy = true; Press run. Note that variables are not printed out to the console.</description></item><item><title>Activity 3 - Declare your variables</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-3/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-3/</guid><description>Activity 3 This activity is split into 2 parts and will test your knowledge about variables. Before starting, look out for HINT (ACTIVITY 3) in the code, where we declare a variable called lives which stores the number of lives the player has, and use the variable to print out how many lives the player has at the start of the game. This should give you an idea for how to complete the following two parts.</description></item><item><title>Reading from Console</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/reading-from-console/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/reading-from-console/</guid><description>Reading from Console Now that we know the basics about variables, we can now accept input from the user. Use the following line to tell the console to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called input.
var input = Console.ReadLine(); Here&amp;rsquo;s an example of how to use Console.ReadLine to accept user input:</description></item><item><title>Activity 4 - Putting it all together</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-4/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-4/</guid><description>Activity 4 This activity has four parts. This is a great time to use your knowledge of comments, numbers, variables, and reading from console to complete the 4 activities. Some background information for each activity is provided below, and hints are provided in the code. After each part, press run and make sure there are no errors present in the console.
Activity 4.1 First, let&amp;rsquo;s introduce some more code into our game.</description></item><item><title>If-else statements</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/if-else-statements/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/if-else-statements/</guid><description>If-else statements You can use if statements to run code statement only if certain conditions are met. Here is an example:
var myNum = (93 + 41) / 12; if (myNum == 11) { Console.WriteLine(&amp;#34;They are equal!&amp;#34;); } Inside the () beside if, you should specify a boolean expression. If the expression is true, the code inside { } is executed. In this case, since myNum is equal to 11, They are equal!</description></item><item><title>Activity 5 - Use conditional statements</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-5/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-5/</guid><description>Activity 5 This activity is split into two parts. Use your knowledge of if-else statements to complete the activities. As always, press run after completing each part to check for errors.
Activity 5.1 After the player guesses a letter, and we have checked whether the letter appears in the word, we need to check if the entire word has been guessed. If the entire word has been correctly identified, we should let the computer know that the player has won the game.</description></item><item><title>While loops</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/while-loops/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/while-loops/</guid><description>While loops while loops are an easy way to repeat the execution of lines without having to reuse a line many times. For example, to print Hello World five times in a row, you can do:
var counter = 1; while (counter &amp;lt;= 5) { Console.WriteLine(&amp;#34;Hello World&amp;#34;); counter = counter + 1; } Like an if statement, inside the () beside while, you should specify a boolean expression. If the expression is true, the code inside the curly braces { } is executed.</description></item><item><title>Activity 6 - Complete the game!</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-6/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-6/</guid><description>Instructions Now, let&amp;rsquo;s finally address the bug that was introduced in Activity 4.2. The game should continue to ask the player to guess letters if they have some lives remaining, and they have not yet won the game. Look at the for loop. As you might have noticed, even though you might have lives remaining, the game abruptly stops after only 3 guesses. We will replace this for-loop with a while-loop, with the correct looping condition.</description></item><item><title>Answer Key - C# Guess the Word</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/answer-key/</link><pubDate>Sat, 28 Mar 2020 10:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/answer-key/</guid><description>Activity 1: using System; class MainClass { public static void Main(string[] args) { Console.WriteLine(&amp;#34;Hello there&amp;#34;); Console.WriteLine(&amp;#34;I am awesome&amp;#34;); } } Activity 2: using System; class MainClass { public static void Main(string[] args) { Console.WriteLine(&amp;#34;Nuevo&amp;#34; + &amp;#34; &amp;#34; + &amp;#34;Foundation&amp;#34;); Console.WriteLine(&amp;#34;Nue&amp;#34; + &amp;#34;vo &amp;#34; + &amp;#34;Foundation&amp;#34;); Console.WriteLine(&amp;#34;Nuevo &amp;#34; + &amp;#34;Foun&amp;#34; + &amp;#34;dation&amp;#34;); } } Activity 3: class MainClass { public static void Main(string[] args) { Console.WriteLine(2-19); Console.WriteLine((3+5)*6); Console.WriteLine((13+5*8)/(6-(3+7))); } } Activity 4: class MainClass { public static void Main(string[] args) { Console.</description></item></channel></rss>