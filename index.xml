<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/</link><description>Recent content on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Jul 2019 12:40:43 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Virtual Machines Part 1</title><link>https://nuevofoundation.github.io/workshops/linux-basics/vbox-setup/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/vbox-setup/</guid><description>We are providing you with a copy of the hacked computer as a virtual machine so you can help us. What is a virtual machine? A virtual machine (commonly called a VM) is a computer file (called an image), that behaves like an actual computer.
In other words, it is a computer inside a computer. It runs in a window, like any other program.
This gives you the same experience on a VM as you would on a regular computer.</description></item><item><title>Conditional statements</title><link>https://nuevofoundation.github.io/workshops/python-basics/conditional-statements-loops/conditional-statements/</link><pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/conditional-statements-loops/conditional-statements/</guid><description>Now that we know the basics of print statements, variables, and reading in input from the user – we can combine all these awesome skills with conditional statements. Conditional statements allow the computer to make decisions based off the value of an expression. In the real world, we use conditional statements all the time to make decisions! For example, if it is raining outside, then I use an umbrella. In this example, the I evaluated the weather outside and because it was raining, I made the sequential decision to use an umbrella.</description></item><item><title>Starting up with Trinket</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/using-trinket/</link><pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/using-trinket/</guid><description>Today, we&amp;rsquo;ll be using Trinket to learn about Python. Here is an example of an interactive Trinket window you will be using today.
Before we start, let’s first understand how the window works. The main.py file contains code, or instructions for the computer to run. Anything that results from running the code will be displayed on the right side. This window is called the console.
Hit run and watch your console run your code on the screen to the right!</description></item><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/using-repl-it/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/using-repl-it/</guid><description>Tic Tac Toe Summary Using Replit Today you will be using Replit to learn how to code in Java. Before starting, you will need to sign up for a Replit account, if you do not yet have one.
Click the button below to sign up for a Replit account - you will need an email account in order to sign up. If you already have a Replit account, you can login to your account using the below button as well.</description></item><item><title>Using Repl.It</title><link>https://nuevofoundation.github.io/workshops/java-basics/activity-0/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/activity-0/</guid><description>Using Replit Today you will be using Replit to learn how to code in Java. Before starting, you will need to sign up for a Replit account, if you do not yet have one.
Click the button below to sign up for a Replit account - you will need an email account in order to sign up. If you already have a Replit account, you can login to your account using the below button as well.</description></item><item><title>Installing Unity</title><link>https://nuevofoundation.github.io/workshops/unity/install-unity/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/install-unity/</guid><description>We need to help Nuvi defeat the aliens, but programming everything from scratch might be a bit too much right now. Unity is a tool that has some basic parts of game-building simplified for us, so all we need to do is drag and drop objects, and write a bit of simple C# code!
Why use Unity when there are other tools out there? Well, Unity has some great aspects, especially if you&amp;rsquo;re just starting your game development journey.</description></item><item><title>Getting Started</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/getting-started/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/getting-started/</guid><description>What is Android? Android is currently the most used mobile operating system in the world! Android Studio lets you create apps that can be used by these Android devices. In fact, if you have an Android phone, then you can even download the app you&amp;rsquo;re making today onto your phone!
About this Project In this project we&amp;rsquo;ve given you a mostly working Android application that&amp;rsquo;s a game of Tic-Tac-Toe. It needs your help to fix some problems and add a few parts to make it a great game!</description></item><item><title>Welcome to your new Summer job!</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/welcome/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/welcome/</guid><description>Hey there, congratulations! You have been hired at an apparel returns processing warehouse for the summer!
Your job is to take returns of clothing and sort them based on the type of clothing they are. At orientation, your supervisor shows you the traditional, by-hand method to sorting this clothing. On your first day, you notice it is more time consuming than you expected. Not wanting to do more work than you have to of course, you convince your supervisors that you can devise a more efficient method using machine learning.</description></item><item><title>Starting Up</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/starting-up/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/starting-up/</guid><description>Starting Up Today you will be using Replit to learn how to code your Space Invaders game. Before starting, you will need to sign up for a Replit account, if you do not yet have one.
Click the button below to sign up for a Replit account - you will need an email account in order to sign up. If you already have a Replit account, you can login to your account using the below button as well.</description></item><item><title>How the site is built</title><link>https://nuevofoundation.github.io/workshops/guidelines/site-architecture/</link><pubDate>Wed, 29 Jul 2020 14:08:32 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/guidelines/site-architecture/</guid><description>How the site is built The workshops subdomain content is built using the DocDock theme for Hugo. Hugo is a static site generator with a number of benefits:
Content authors can focus on content using markdown and not on the technical implementation of the site or CSS/page styling. Workshops are automagically added to the left table-of-contents and the workshops home page. Hugo works great locally (ex: on an airplane), and Hugo is the fastest static site generator, building the entire workshop site in &amp;lt;2 seconds.</description></item><item><title>Starting up with Replit</title><link>https://nuevofoundation.github.io/workshops/jsappybird/repl-it/</link><pubDate>Tue, 28 Jul 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/jsappybird/repl-it/</guid><description>Today you will be using Replit to build JSappy bird. Open your favorite internet browser (such as Edge, Firefox, Google Chrome, Internet Explorer) and go to https://replit.com .
You should see something like the following screen:
Here is an example of the final game:
https://jsappybird-answers--nuevofoundation.repl.co/
Starting up Open Activity-1 to do the activity.
When you make changes to the scaffold you will be created as anonymous users.
You should see something like the following screen:</description></item><item><title>Activity 1: Create a color board</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-1/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-1/</guid><description>Example for basic colorboard Here is an example of how to make a color board with the color red, a width of 60, and a length of 30.
#This is the example for creating a colorboard. from PIL import Image img = Image.new(&amp;#39;RGB&amp;#39;, (60, 30), &amp;#39;red&amp;#39;) img.save(&amp;#39;pil_red.png&amp;#39;) Create your own colorboard! Choose your favorite color and make a color board to play with! Here are some example colors you can choose from, but you can also pick your own color.</description></item><item><title>Import an image module</title><link>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/load_image_module/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/load_image_module/</guid><description>Setting up the project To get started let’s start with importing a module. What does that mean? To do fun stuff with images, we need to unlock some functions to use. To get these functions we need to import a module. In this case if we import the module Pillow, we can use some functions that will help us modify images.
Firstly, let’s delete everything in the main.py file. Then, add the following statements:</description></item><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/2d-arrays/introduction/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/2d-arrays/introduction/</guid><description>What is a 2D Array? We&amp;rsquo;ve already learned plenty about arrays. We know that an array can hold many different types (integers, strings, doubles, etc.), but how about an array that holds arrays?
A 2D array has a type such as int[][] or String[][], with two pairs of square brackets. The elements of a 2D array are arranged in rows and columns, and the new operator for 2D arrays specifies both the number of rows and the number of columns.</description></item><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/arraylists/introduction/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/arraylists/introduction/</guid><description>We&amp;rsquo;ve learned about arrays and even ventured into multidimensional arrays. Unfortunately arrays have many limitations and can sometimes be hard to use. One limitation that an array has is its explicit size. If you only have 10 elements of allotted space in that array, you can only store up to 10 elements. ArrayLists are a great data structure that has a dynamic size, meaning that you can add or subtract items at any time.</description></item><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/hashmaps/introduction/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/hashmaps/introduction/</guid><description>A HashMap is a table that holds a collection of key-value pairs. It &amp;ldquo;maps&amp;rdquo; numerous keys to their respective values. A HashMap is very similar to a dictionary. In a dictionary, you might want to look up a definition for a certain word. You simply look up the keyword in the dictionary and by doing so, you can get the definition attached to that keyword. The dictionary maps words (the &amp;ldquo;keys&amp;rdquo;) to their definition (the &amp;ldquo;values&amp;rdquo;).</description></item><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/queues/introduction/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/queues/introduction/</guid><description>Visualizing a Queue Imagine that you are designing NuevoEats for a business, and perhaps this business is McDonalds.
We want to serve our new potential clients in the most efficient way possible for our large business; one at a time. When customers place their to-go order on the NuevoEats app, it is almost as if they are forming an orderly line in front of our restaurant, with new customers joining at the rear.</description></item><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/stacks/introduction/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/stacks/introduction/</guid><description>Visualizing a Stack A stack is very similar to a queue and many of the concepts that you learned about a queue can be applied on a stack. Unlike the queue with the FIFO logic, a stack is different in that uses the opposite logic, LIFO (Last In, First Out).
A common example to think about a stack is a stack of plates. Imagine 5 plates stacked on top of one another.</description></item><item><title>More about functions</title><link>https://nuevofoundation.github.io/workshops/python-basics/functions/more-about-functions/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/functions/more-about-functions/</guid><description>Suppose you have many lines of code, and you would like to give this section of code a meaningful name. Functions are blocks of code that do just that. A function is a set of instructions that we give to the computer to store, and it can take in parameters (input data) and output data. A function in Python looks like this:
def my_function(): print(&amp;#34;Hello World!&amp;#34;) print(&amp;#34;My name is Nuvi!&amp;#34;) Let’s analyze this piece of code.</description></item><item><title>Strings</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-types/strings/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-types/strings/</guid><description>Anything that is surrounded by quotation marks is called a string. This is how a computer represents words or sentences. For example, &amp;ldquo;a&amp;rdquo;, &amp;ldquo;2&amp;rdquo;, &amp;ldquo;banana!&amp;quot;, and &amp;ldquo;Hello World&amp;rdquo; are strings, but 2 and Hello World are not strings, because the quotation marks are missing. You can combine many strings together using the + sign!
The strings that you combine do not have to be real words! For example, &amp;quot;Ap&amp;quot; + &amp;quot;ple&amp;quot; will produce the string &amp;quot;Apple&amp;quot;.</description></item><item><title>Using Replit</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/using-repl-it/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/using-repl-it/</guid><description>To build our game, we will use the Pygame library, which provides a set of readymade functionality that we can use to build Pong and its animations.
Using Replit Today, we will be using Replit to build the Pong game.
If you would like a recap on how to use Replit, check out our Python basics tutorial.
Now, let&amp;rsquo;s go through some of the code that has been provided to you in the main.</description></item><item><title>Using Repl.It</title><link>https://nuevofoundation.github.io/workshops/secret-messages/using-repl-it/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/using-repl-it/</guid><description>In order to help the Kin and Queen, we will develop a program, in a programming language called C++. With that program we will be able to input a message, and the program will modify it to make it secret.
Using Replit Today you will be using Replit. Before starting, you will need to sign up for a Replit account, if you do not yet have one.
Click the button below to sign up for a Replit account - you will need an email account in order to sign up.</description></item><item><title>Using Trinket</title><link>https://nuevofoundation.github.io/workshops/python-turtle/using-trinket/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/using-trinket/</guid><description>To help Alex live in a beehive, he needs to learn how to create a honeycomb! We will use Python&amp;rsquo;s turtle library to draw a honeycomb for Alex.
Using Trinket Today you will be using Trinket to learn how to code in Python. Here is an example interactive window that you will use today:
Before we start, let&amp;rsquo;s first understand how the window works. The main.py file contains code, or instructions for the computer to run.</description></item><item><title>What is a micro:bit?</title><link>https://nuevofoundation.github.io/workshops/microbit-distance-checker/what-is-microbit/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/microbit-distance-checker/what-is-microbit/</guid><description>What is a micro:bit? A micro:bit is a programmable mini computer! It can be coded from any web browser in various languages like javaScript, Python, Scratch, and Blocks. For our session today, we will be using MakeCode Blocks.
Your micro:bit has the following physical features:
25 individually-programmable LEDs 2 programmable buttons Physical connection pins Motion sensors (accelerometer and compass) Wireless communication via bluetooth radio USB interface If you want to learn more about each individual component and all the features that come with your micro:bit, you can click here .</description></item><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/arrays/introduction/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/arrays/introduction/</guid><description>Arrays are a data structure where each of its elements are arranged in a numerical sequence and each item is referenced by its position number. In Java, each of these elements are of one type (String, int, double, etc.) and are zero indexed, which means that the first element in an array starts at 0, the second element with 1, and so on.
Here are some important vocabulary that you will need to know before we talk more about arrays.</description></item><item><title>Meet DJ Nuevo</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/meet-dj-nuevo/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/meet-dj-nuevo/</guid><description>Nuevo has new headphones! Can you find yours? You got contacted to make Nuvi&amp;rsquo;s next hit mixtape, but when you get to the studio, Nuvi says their next project is going to be produced all in code. This is something that hasn&amp;rsquo;t been done before, are you up to the challenge? Look around yourself to find your headphones and get ready to join him!
Before we start, make sure that your headphones are working.</description></item><item><title>Starting Up</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/starting-up/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/starting-up/</guid><description>Starting Up The goal of today&amp;rsquo;s activity is to learn C# skills and incorporate your new-found knowledge to create a Guess The Word game! Let&amp;rsquo;s get the game set up.
Today you will be using Replit. Before starting, you will need to sign up for a Replit account, if you do not yet have one.
Click the button below to sign up for a Replit account - you will need an email account in order to sign up.</description></item><item><title>Time to Create</title><link>https://nuevofoundation.github.io/workshops/adventure/time-to-create/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/time-to-create/</guid><description>It’s time to start creating our own stories with all the skills we’ve learned today! The question that we are tackling today is how to get the audience involved with the story line, and the answer to this is CODE!</description></item><item><title>Bob goes fishing</title><link>https://nuevofoundation.github.io/workshops/security-phishing/bob-goes-fishing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security-phishing/bob-goes-fishing/</guid><description>Meet our friend Bob. Bob is a nice and jolly gentleman. His hobbies are travelling and fishing. One fine evening Bob received an email saying he won a free trip to the &amp;ldquo;Bahamas&amp;rdquo;. Bob got excited. He immediately clicked the link to enter his personal details and waited for his itinerary to come.
Bob decided to go shopping for his trip. He bought new clothes and a new fishing rod.</description></item><item><title>Generate a random number</title><link>https://nuevofoundation.github.io/workshops/python-guess-number/generate-random-number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-guess-number/generate-random-number/</guid><description>Python includes a library called random that helps you generate random numbers. You can use this in your program by writing import random at the top of your program and using the randint function to generate a number between a range.
This would generate a random number between 1 and 10.
random.randint(1,10) Try running the below code a few times to see what you get!
You can also play around by changing the range of random numbers.</description></item><item><title>Lists</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-structures/lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-structures/lists/</guid><description>Lists are the ordered collection of items and can be written as comma separated values inside square bracket []. As we saw in our loops lesson, lists can be of any data type, for example strings or integers.
#Creating a list of 5 fruits fruits = [&amp;#39;orange&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;banana&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;mango&amp;#39;] If you want to refer to a specific element of a list, you can do so by using indexes (position) inside square bracket.</description></item><item><title>Meeting Alice, Bob and Eve</title><link>https://nuevofoundation.github.io/workshops/security/meeting-alice-bob-eve/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security/meeting-alice-bob-eve/</guid><description>Meet our friend Bob. Bob has a secret that he doesn’t want to share, he would like to keep it secured. He has the secret locked somewhere safe. Only Bob has the key to the lock to make sure that no one can get to his secret but him.
Meet our not so good friend Eve. Eve wants access to Bob’s secret.
Eve realizes that to get to Bob&amp;lsquo;s secret, they need to first get past Bob&amp;lsquo;s lock.</description></item><item><title>The Components</title><link>https://nuevofoundation.github.io/workshops/adafruit/the-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/adafruit/the-components/</guid><description>The components we will use for the project are listed below. Make sure you have all of these before starting:
One Adafruit Micro USB to USB cord 2 alligator clip wires, any colors Two oranges</description></item><item><title>Using Virtual Machines Part 2</title><link>https://nuevofoundation.github.io/workshops/linux-basics/vm-import-setup/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/vm-import-setup/</guid><description>Excellent work on preparing the host environment! Now let's load the hacked computer's image as a VM. What is an image? Images come in a variety of types. We have photographs, which are images. Computer images are very similar. Both are copies of things from a single point in time. We will be working with a copy of a computer that has been acting weird. Don&amp;rsquo;t worry though, this won&amp;rsquo;t hurt your computer!</description></item><item><title>Writing to Console (Print statement)</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/writing-to-console/</link><pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/writing-to-console/</guid><description>Make your program talk to you! Print statements are used to write something to the console. Use print(&amp;quot;Hello World&amp;quot;) to print Hello World in the output screen. We will later learn that print is a function and we use it to perform a print job. Whatever you pass to the print function is printed on the screen. Let&amp;rsquo;s start by doing a print statement.
We will use printing a lot in the later lessons, so make sure you understand this before moving on to the next concept!</description></item><item><title>1. Set Up the Board!</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-1/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-1/</guid><description>In this activity, we will have a program that prints out the game board and gaming prompt, like the output below:
&amp;lt;&amp;lt;&amp;lt;~ Tic Tac Toe ~&amp;gt;&amp;gt;&amp;gt; * Choose number 1 - 9 to place your move * Player: 'X' Computer: 'O' 1 | 2 | 3 ---+---+--- 4 | 5 | 6 ---+---+--- 7 | 8 | 9 Enter your move (1-9): 2 O | X | ---+---+--- | | ---+---+--- | | Enter your move (1-9): The Main Class and Main Method Notice that in the starter code, we have the class Main and the main() method.</description></item><item><title>Print Statements and Comments</title><link>https://nuevofoundation.github.io/workshops/java-basics/activity-1/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/activity-1/</guid><description>Let the Program Speak! Let’s try to write a program that says Hello World out by typing the line of code System.out.print(&amp;quot;Hello World&amp;quot;);
The program prints out whatever you typed in the parenthesis of System.out.print. And, each line of code ends with ;.
After, add more statements to print numbers by putting numbers in the parenthesis (i.e. System.out.print(2020)) or a symbol by putting one symbol between 2 single quotes ' (i.</description></item><item><title>Understanding the Unity Interface</title><link>https://nuevofoundation.github.io/workshops/unity/understanding-unity-interface/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/understanding-unity-interface/</guid><description>Before you start working on our game, take some time to look at Unity&amp;rsquo;s interface and familiarize yourself with the windows. You can move these windows around to customize your workspace layout. If you get stuck in a weird layout, you can always go back to the default layout by doing: Windows -&amp;gt; Layouts -&amp;gt; Default.
Game This window shows what the camera is seeing - in other words, it&amp;rsquo;s what you&amp;rsquo;re going to see displayed when you run and play the game.</description></item><item><title>Android Setup</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/android-setup/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/android-setup/</guid><description>Follow the steps below to get Android Studio installed on your computer. If you already have Android Studio installed, open it up and skip to the next step!
These steps have examples for installing on Windows computers. However, the steps are similar for other types of computers as well.
Download and Install Android Studio Download Android Studio for your operating system. Follow these steps to install Android Studio. Set the JAVA_HOME environment variable Android Studio comes with a version of Java needed for certain parts of the application to run.</description></item><item><title>Puzzle 1</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/puzzle1/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/puzzle1/</guid><description>Run the Game Press the play button button (►) at the top of Android Studio to start the game. You&amp;rsquo;ll see that the title at the top of the app says Toe-Tac-Tic (that doesn&amp;rsquo;t seem right!); let&amp;rsquo;s change it to Tic-Tac-Toe.
Solve the Puzzle Double-click the strings.xml file under app → res → values: How can you modify this file to say Tic-Tac-Toe?</description></item><item><title>Activity 1 - Importing the TensorFlow library and datasets</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-1/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-1/</guid><description>Import Dependencies Packages The first thing we have to do is to import the TensorFlow library in order to use functions that will allow us to train your model.
We will also be implementing plots to visualize the prediction of our model, so for that we need to import the following libraries:
# Importing TensorFlow and tf.keras libraries import tensorflow as tf from tensorflow import keras # Helper libraries for statistics and plotting import numpy as np import matplotlib.</description></item><item><title>The Game's File Structure</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/game-structure/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/game-structure/</guid><description>As you can see, we&amp;rsquo;ve already created many files for you. The structure of the game has already been laid out, and you will be filling each file with content. So, in order to begin, we must first have at least a basic understanding of what each file does and how they relate to each other.
Firstly, phaser.min.js is simply a JavaScript file that contains code that allows the game to run Phaser, the framework we are using to make the game.</description></item><item><title>Getting Started</title><link>https://nuevofoundation.github.io/workshops/guidelines/getting-started/</link><pubDate>Wed, 29 Jul 2020 14:08:32 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/guidelines/getting-started/</guid><description>Prerequisites Visual Studio Code Hugo Git . Learn more about Git and GitHub in their Quickstart guide. Reference Links Github repo Workshops website Walkthrough Videos Workshops Github repository development cycle Workshops Github repository structure Code Contribution to this repository is via the fork model . Contributors push changes to their own &amp;ldquo;forked&amp;rdquo; version of workshops, and then submit a pull request into it requesting those changes be merged.</description></item><item><title>New Workshop Guidelines</title><link>https://nuevofoundation.github.io/workshops/guidelines/new-workshops/</link><pubDate>Wed, 29 Jul 2020 14:08:32 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/guidelines/new-workshops/</guid><description>This document is intended to guide you on how to create new workshops for the Nuevo Foundation workshop project .
Please familiarize yourself with the Site Architecture and the Getting Started sections.</description></item><item><title>Activity 2: Modify your color board</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-2/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-2/</guid><description>Example one: Make a diagonal #This creates the original colorboard. from PIL import Image img = Image.new(&amp;#39;RGB&amp;#39;, (60, 30), &amp;#39;red&amp;#39;) img.save(&amp;#39;pil_red.png&amp;#39;) #This uses a nested while loop to change the picture. x = 0 y = 0 while x &amp;lt; 10: while y &amp;lt; 20: img.putpixel( (x,y), (0, 0, 0)) x += 1 y += 1 img.save(&amp;#39;pil_red.png&amp;#39;) This is the picture before changing. This is the picture after changing. Example two: Make a rectangle.</description></item><item><title>Built in Functions</title><link>https://nuevofoundation.github.io/workshops/python-basics/functions/built-in/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/functions/built-in/</guid><description>There are many built-in functions in python that can be used to increase the ease of writing code. Let&amp;rsquo;s discuss a few of them here.
sort() This function is used to sort the values in data structures such as arrays and lists.
arr = [8,5,1,4,6] arr.sort() print(&amp;#39;The sorted arr is :&amp;#39;,arr) #prints The sorted arr is [1,4,5,6,8] find() Returns the first occurence of the input(pattern) to the find() provided in the given string.</description></item><item><title>Load the bird image &amp; change the screen text</title><link>https://nuevofoundation.github.io/workshops/jsappybird/load-the-bird/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/jsappybird/load-the-bird/</guid><description>First of all let&amp;rsquo;s load Flappy and put it on the screen.
Add below command in the file [File: load-sprites.js] game.load.image('bird','assets/bird.png');
Working Together In the Replit window below, we started the code with the line game.load.image('bird', 'assets/bird.png');.
In your console you should see a Jsappy bird after you press run and then the space bar:
Change the screen text Let&amp;rsquo;s change the start screen text:
Add below command in the file [File: start-screen.</description></item><item><title>Methods</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/arraylists/methods/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/arraylists/methods/</guid><description>Modifying Elements import java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList&amp;lt;String&amp;gt; order = new ArrayList&amp;lt;String&amp;gt;(); order.add(&amp;#34;Whopper&amp;#34;); order.add(&amp;#34;Chicken Nugget&amp;#34;); order.add(&amp;#34;Fries&amp;#34;); order.set(1, &amp;#34;Coke&amp;#34;); // This sets the first element (chicken nuggets) to a coke instead } } Using set(), you can set the element at the index number to a new element.
Removing Elements import java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList&amp;lt;String&amp;gt; order = new ArrayList&amp;lt;String&amp;gt;(); order.</description></item><item><title>Methods</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/hashmaps/methods/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/hashmaps/methods/</guid><description>Hashmaps A HashMap can store items in key/value pairs and you can assign those pairs to different types such as strings or integers.
As usual, to create a HashMap, you will have to import the HashMap class like so.
import java.util.HashMap; // will import HashMap HashMap&amp;lt;String, String&amp;gt; addresses = new HashMap&amp;lt;String, String&amp;gt;(); In this case, we created a HashMap called addresses which stores keys of String type and values of String type.</description></item><item><title>Methods</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/queues/methods/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/queues/methods/</guid><description>Priority Queues A PriorityQueue is used when the objects are supposed to be processed based on the priority. In this case, we want to sort the queue by the time the customer has been waiting. It is known that a Queue follows the First-In-First-Out algorithm, but sometimes the elements of the queue are needed to be processed according to the priority; that’s when the PriorityQueue comes into play. The PriorityQueue is based on the priority heap.</description></item><item><title>Methods</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/stacks/methods/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/stacks/methods/</guid><description>Stacks A stack is similar to a queue. The only difference are the method names and the manner in which we retrieve the items.
Before we create a stack, we will have to import the stack class. To make life easier, we can use a * instead to import all classes in the library. It will look something like this.
// This will import stack, among other classes import java.util.*; There are several methods to use on a stack.</description></item><item><title>Numbers</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-types/numbers/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-types/numbers/</guid><description>The computer can also do math. Use print() to print out the result from the math expressions. No quotation marks are needed for numbers! Unlike strings, you can do math on numbers.
print(7-3) #prints 4 print(5 * -6 + 7) #prints -23 print(24 * (8-3) / 6) #prints 20.0 The computer does division of integers differently from your regular calculator. Division of integers will exclude remainders or decimals.
For example,</description></item><item><title>Open an image</title><link>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/open-image/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/open-image/</guid><description>To change an image, we must open an image. We can use the Pillow Image module we just imported in the setup. Let’s first find some images to open. Find an image of your choice and download it. Once you have downloaded it, navigate back to your Replit window and upload your image by clicking on the three dots and selecting ‘upload file’.
For example, to upload the cat.jpg file:</description></item><item><title>Operations</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/arrays/operations/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/arrays/operations/</guid><description>Creating an array Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each value. To declare an array, define the variable type with square brackets.
String[] restaurants; We have now declared a variable that holds an array of strings. To insert values to it, we can use an array literal - place the values in a comma-separated list, inside curly braces:</description></item><item><title>Problem 1: Array basics</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/arrays/problem-1/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/arrays/problem-1/</guid><description>-- Task 1: Printing We&amp;rsquo;ve created an array of existing restaurants in our system! We need your help to print out everything so we do not include the same restaurants.
Use a for Loop to print out the contents of the array. Use the length() method to find the size of the array. Look at the example below.
If we are given the array below:
String[] restaurants = { &amp;#34;Burger King&amp;#34;, &amp;#34;Chipotle&amp;#34;, &amp;#34;Panda Express&amp;#34;, &amp;#34;McDonalds&amp;#34; }; the answer should print out:</description></item><item><title>The Menu</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/2d-arrays/the-menu/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/2d-arrays/the-menu/</guid><description>Storing Restaurant Information Let&amp;rsquo;s recall the restaurant array that we made earlier in the array section.
As you can see, this array holds all the different restaurants for our app. Now, let&amp;rsquo;s try to make each restaurant contain an array of all of its menu items. If done correctly, the 0th element of our array, &amp;ldquo;Burger King&amp;rdquo;, should now hold its respective menu items. It might look something like this:</description></item><item><title>Basics</title><link>https://nuevofoundation.github.io/workshops/web-basics/basics/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/basics/</guid><description>What is a website? A website is just a page that can be found on the Internet. It is displayed through a browser when you type the address (aka unique name) in the address bar.
Parts of a website Common website elements include navigation bars, footers, search bars, and contact forms.
Website design The first step in making a website is to decide which elements we want, and how they will look.</description></item><item><title>The Basics - Class and Object</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/the-basics/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/the-basics/</guid><description>Classes and objects Before you start building a game, you should know how to draw different objects and modify them based on the way they need to look and move on computer screen.
In order to build objects, you need to first decide how they should look, what role they should perform in your game, and how player can control their movement on screen. You can do this by creating a class for each object you want on screen.</description></item><item><title>Activity 1 - Create your Restaurant Banner</title><link>https://nuevofoundation.github.io/workshops/python-interactive/activity-1/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-interactive/activity-1/</guid><description>Pre-reqs Printing with Python Create your Restaurant Banner When setting up your restaurant&amp;rsquo;s virtual cashier, we&amp;rsquo;re going to have to first make sure we have a restaurant banner with the name of your restaurant. Since we want an actual banner, not just plain text for the name, let&amp;rsquo;s use ASCII art! ASCII art uses special symbols such as (), {}, * and other keys to create images and words.</description></item><item><title>Activity 1 - Output</title><link>https://nuevofoundation.github.io/workshops/secret-messages/activity-1/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/activity-1/</guid><description>We first need to enter a message for our program to be able to create secret messages.
Launch Replit
To do that we are going to start by telling the computer to show in console for whom is that message. This is the command that we will be using.
cout &amp;lt;&amp;lt; &amp;quot;Hello Developer!&amp;quot; &amp;lt;&amp;lt; endl; Let&amp;rsquo;s learn more about this line of code, shall we?
Strings Everything that we see wrapped in quotation marks (&amp;quot;&amp;quot;) are called strings.</description></item><item><title>Broadcasting a Signal</title><link>https://nuevofoundation.github.io/workshops/microbit-distance-checker/broadcasting/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/microbit-distance-checker/broadcasting/</guid><description>Turning On the Radio Today we&amp;rsquo;ll be using the Bluetooth radio on your micro:bit to figure out how far away you are from other micro:bits. The first thing we need to do is turn on the radio and tune it to a channel. Click on the section that says Radio. It&amp;rsquo;s the pink section which is fifth from the top. Choose &amp;ldquo;radio set group 1&amp;rdquo; and drag it into the blue &amp;ldquo;on start&amp;rdquo; block in the workspace.</description></item><item><title>The Basics - Drawing a colored line</title><link>https://nuevofoundation.github.io/workshops/python-turtle/the-basics/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/the-basics/</guid><description>Before Alex can learn how to create a beehive, he must first learn how to draw a colored line. We will add code to the below Trinket window, and we will do this in two parts.
First, we need tell the turtle what color we want the line to be. To do this, let&amp;rsquo;s type in:
turtle.color(&amp;#34;orange&amp;#34;) Let&amp;rsquo;s try to understand this line of code in more detail.</description></item><item><title>Music Basics</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/music-basics/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/music-basics/</guid><description>Basics first. A few things about music. What is Music? Music is the chronological organisation of sounds; that is, making certain sounds at certain times, which make melodic, rhythmic and harmonic sense. The first, most basic concept, is keeping the sounds &amp;ldquo;in time&amp;rdquo;. This leads us to some of the first few musical concepts: beat, rhythm, duration &amp;amp; tempo.
Beat is the regular pulse which provides a timeline for the rhythm to anchor itself to.</description></item><item><title>Section 1: Story Boarding</title><link>https://nuevofoundation.github.io/workshops/adventure/story-boarding/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/story-boarding/</guid><description>To get started, pull out a piece a paper and start &amp;ldquo;story boarding&amp;rdquo;. What does that mean? In order to develop a great story that allows the reader to choose between options, one can outline the flow of their story. This is a great planning step, that will you help you tremendously once you start coding! I would start with the 3 or 4 main choices your protagonist is going to make in the story.</description></item><item><title>Setting Up</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/introduction/setting-up/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/introduction/setting-up/</guid><description>-- Setting Up Replit! Today you will be using Replit to learn about data structures with Java. Before starting, you will need to sign up for a Replit account, if you do not yet have one.
Click the button below to sign up for a Replit account - you will need an email account in order to sign up. If you already have a Replit account, you can login to your account using the below button as well.</description></item><item><title>Writing to Console</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/writing-to-console/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/writing-to-console/</guid><description>Writing to Console Console.WriteLine means to tell the computer to print the sentence enclosed within the parentheses () out onto the console.
Working Together In the Replit program below, press run. You see that Hello World is printed out to the screen on the right. Without removing the quotation marks, try changing &amp;quot;Hello World&amp;quot; to another sentence. Press run to see if anything changes. Add another Console.WriteLine below the current line to print a second sentence below the first sentence.</description></item><item><title>An Overview of Debugging</title><link>https://nuevofoundation.github.io/workshops/debugging/01-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/01-overview/</guid><description>There are many different ways to debug a program. In this guide, we’ll start off with some general steps so that you don’t get lost when you debug a program. There are 3 basic steps to debugging a program:
Identify the problem. In this step, your goal is to identify what is causing the bug. This involves finding the conditions that led to the bug. Being able to reproduce the bug gives you some of the information you need, which lets you narrow down the problem and perhaps helps you understand why the bug is occurring in the first place.</description></item><item><title>Building the DJ station</title><link>https://nuevofoundation.github.io/workshops/adafruit/building-the-dj-station/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/adafruit/building-the-dj-station/</guid><description>Hooking up the oranges Grab an orange and one of your wires. Open up one of the alligator clips and insert the bottom half into the orange, leaving the top part of the clip on the outside. This is easiest to do if you insert it in the middle of the bottom of the orange. The same spot where you’d start peeling if you were going to eat the orange.</description></item><item><title>Create the game</title><link>https://nuevofoundation.github.io/workshops/python-guess-number/create-game/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-guess-number/create-game/</guid><description>Accept user input This game will use some of the concepts you learned in the Python Basics section. You will need to know how to use the following concepts. If you are not familiar with any of these, please go back to review them.
While loops Writing to console Reading from the console Conditional statements Random numbers You will need to code this game so that it randomly generates a number.</description></item><item><title>Else-if Condition</title><link>https://nuevofoundation.github.io/workshops/python-basics/conditional-statements-loops/else-if-statement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/conditional-statements-loops/else-if-statement/</guid><description>In the last exercise, we learned basic if-else conditions. If you need a quick refresher, you can review Conditional statements.
In this section, we&amp;rsquo;ll expand to introduce a new condition called &amp;ldquo;elif&amp;rdquo;.
Elif Condition Elif Keyword represents the &amp;ldquo;else-if&amp;rdquo; condition. A real world example would be: If I am really hungry, I will eat a cake, else if I am only a little hungry, I will have an apple, else I won&amp;rsquo;t eat anything.</description></item><item><title>Loops</title><link>https://nuevofoundation.github.io/workshops/python-basics/conditional-statements-loops/loops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/conditional-statements-loops/loops/</guid><description>Loops in Python If you want to repeat a task multiple times, Python has a way to do that easily using loops. There are two types of basic loops in python: for loops and while loops.
For loops For loops iterate over a sequence. Let&amp;rsquo;s say you wanted to repeat a simple task 5 times. Here is how you would do it.
The following for loop iterates through each of the numbers in the list [1,2,3,4,5], and assigns the value x to it.</description></item><item><title>Password Basics</title><link>https://nuevofoundation.github.io/workshops/security/password-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security/password-basics/</guid><description>Our Secret Agent Alice solves the case by explaining Bob about Passwords!!!
What is a Password? Passwords are the key to the lock to your virtual world. Just like your secret is kept safe in a secure room using a lock and a key, your personal information on the internet is secured by your login password and username.
The secure room is only as secure as the key to the lock on the door.</description></item><item><title>Phishing Basics</title><link>https://nuevofoundation.github.io/workshops/security-phishing/phishing-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security-phishing/phishing-basics/</guid><description>Our Secret Agent Alice explains to Bob about Phishing!!!
What is Phishing? Just like when fishing, one uses a bait to catch fish on a rod, malicious hackers use different types of bait to steal personal information from unsuspecting people.
Phishing is a type of social engineering attack which is used to steal sensitive data, including login credentials, banking and credit card details.
It occurs when a Hacker, posing as a trusted entity, lures an individual using email, text message, or phone.</description></item><item><title>The Components</title><link>https://nuevofoundation.github.io/workshops/arduino/the-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/arduino/the-components/</guid><description>The Components The components we will use for the project are shown below. Make sure you have all these components before starting:
Elegoo UNO Project Super Starter Kit with Tutorial for Arduino includes all hardware (with exception to the computer)
Core components needed for all activities Arduino UNO R3 USB A to B cable Windows 10 PC Arduino IDE software (download) Additional components needed for specific activities (5) LEDs (any color) (5) 220ohm resistor https://somanytech.</description></item><item><title>Tuples</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-structures/tuples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-structures/tuples/</guid><description>A Tuple is also an ordered collection of elements just like lists, but tuples are immutable. So you can not change the elements of a tuple after it is assigned (unlike lists where you are allowed to do so). This immutable nature makes tuples very useful when you don&amp;rsquo;t want your data to be mutated through out the program. Along with this, tuples are generally used to store elements of different data types.</description></item><item><title>Starting up the Virtual Machine</title><link>https://nuevofoundation.github.io/workshops/linux-basics/launch-vm/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/launch-vm/</guid><description>Now that everything is installed, let's launch the virtual machine! Starting the VM This is pretty simple in VirtualBox. Just double-click on the VM that we created in the previous step and off you go! As the virtual machine is getting started, it may show some warnings like in the following image. It is safe to ignore these.
Sign into the VM First you will need to log in.</description></item><item><title>2. Read and Process Input</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-2/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-2/</guid><description>Importing Packages In Java, an efficient way to obtain user input is to use the Scanner class in java.util package. To use this class and all its methods, we need to import the class with the following line of code on the top of the file.
import java.util.Scanner; Using the Scanner Class In main(), we need to first create a Scanner object called sc by calling its constructor (shown below).</description></item><item><title>Variables and Types</title><link>https://nuevofoundation.github.io/workshops/java-basics/activity-2/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/activity-2/</guid><description>Variables: Name It! In the last exercise, we learned to print different statements with System.out.print().
While it&amp;rsquo;s great to print out a number or a sentence, we haven&amp;rsquo;t given them a meaning.
In Java, we introduce the idea of a variable for data. A variable is like a box that stores a piece of data with a name.
For example, there can be a variable called myName that stored &amp;quot;Patrick&amp;quot;, another variable called loveMusic that stored true, and another variable called age that stored 3.</description></item><item><title>Game Application Structure</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/app-structure/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/app-structure/</guid><description>Back to Foundations Now that the game has the right title, let&amp;rsquo;s dive deeper into all these files in the game folder. What do they all mean? How does it contribute to the game? AndroidManifest.xml Every project in Android includes a manifest file. For your game, this is the AndroidManifest.xml file. The manifest file defines the metadata for your game, for instance, it can define the icon and the overall theme for your game application.</description></item><item><title>Activity 2 - Displaying RGB Color Values for Images</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-2/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-2/</guid><description>View Images from the Samples We will now view the image of a shoe from our collection of clothing samples using the code snippet below.
Go ahead and copy the following code into your Google Colab notebook:
plt.figure() plt.imshow(train_images[0]) #Shows the first image in the data set as a plot or different colored pixels plt.colorbar() #displays the color bar on the right plt.grid(False) plt.show() #displays the entire plot Notice that the image generated has a color bar on the left.</description></item><item><title>Activity 3: Challenge: Design new elements</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-3/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-3/</guid><description>Using loops, you can actually design your own elements on the colorboard. You can design your own logo or anything you want on this color board. Here is an example we provided for you.
Example: make an N. #This creates the original colorboard. from PIL import Image img = Image.new(&amp;#39;RGB&amp;#39;, (60, 30), &amp;#39;white&amp;#39;) #This uses nested while loop to change the colorboard. #Left vertical line for x in range(10, 15): for y in range(5, 25): img.</description></item><item><title>Phaser Fundamentals</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/phaser-fundementals/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/phaser-fundementals/</guid><description>Part 1: The Config Variable Let&amp;rsquo;s go over some of the fundamentals of Phaser, a game framework that uses HTML and JavaScript to create games for the web! This is what you&amp;rsquo;ll be learning to use in this workshop.
Go to game.js. Every Phaser game will start out off with a variable that stores the configurations for the game (often named config like we have here).
var config = { type: Phaser.</description></item><item><title>Booleans</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-types/booleans/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-types/booleans/</guid><description>Booleans are True or False statements. Unlike strings or numbers, booleans store statements of truth: is what I&amp;rsquo;m saying true or false?
For example, if I say, &amp;ldquo;You are a robot&amp;rdquo;, a boolean can store whether this statement is true. In this case, since you are not a robot (hopefully!), False would be stored.
What are the boolean answers to these questions about you?
I am a human. _______ I have 25 fingers.</description></item><item><title>Make the bird jump &amp; add gravity</title><link>https://nuevofoundation.github.io/workshops/jsappybird/jump/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/jsappybird/jump/</guid><description>What should we do with the bird?
Let&amp;rsquo;s make him jump:
Add below command in the file [File: create-game.js] spaceKey.onDown.add(jump, this);
Working Together In the Replit window below, we started the code with the line spaceKey.onDown.add(jump, this);.
In your console you should see a Jsappy bird jumping after you press run:
Add gravity Let&amp;rsquo;s add gravity to our game. Add below command in the file [File: create-game.js] bird.body.gravity.y = 900;</description></item><item><title>Operations</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/2d-arrays/operations/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/2d-arrays/operations/</guid><description>2D arrays work very similarly to regular arrays, and many of the ideas or methods that we use on arrays apply to multidimensional arrays as well. As a quick reminder, here is how to initialize a 2D array and access an element:
public static void main(String[] args) { int[][] arr = new int[10][20]; arr[0][0] = 1; System.out.println(arr[0][0]); } // Outputs 1 The only hard part that might not make a whole lot of sense at first is iterating through a 2D array, but this is quite simple as well.</description></item><item><title>Prerequisites</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/introduction/prerequisites/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/introduction/prerequisites/</guid><description>-- Variables Before you start this workshop, you should have some prior knowledge of how Java variables work and how you can create them. Click here to review the Java Basics workshop! Don&amp;rsquo;t worry if you still feel a little shaky! We&amp;rsquo;ll slowly introduce you to these topics at hand. However, if you have no idea what variables are, we strongly recommend you to go ahead and finish the java basics workshop beforehand.</description></item><item><title>Problem 1: ArrayList Basics</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/arraylists/problem-1/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/arraylists/problem-1/</guid><description>-- Task 1: Insertion Tacos Truck is now available down the street! New employees are struggling to get keep track of all the different orders. Help them organize all the items using ArrayLists!
/* Dan is ordering from his favorite taco shop: - 2 orders of &amp;#34;carne asada&amp;#34; - 4 orders of &amp;#34;carnitas&amp;#34; - 1 order of &amp;#34;pollo&amp;#34; - 2 orders of &amp;#34;birria&amp;#34; Return an ArrayList of all of these elements in that order */ How can you add items onto the list?</description></item><item><title>Problem 1: HashMap Basics</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/hashmaps/problem-1/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/hashmaps/problem-1/</guid><description>Task 1: Using Hashmap to organize data It&amp;rsquo;s a party! A customer has a big birthday party for more than 20 people! Everyone has their own order. To keep the mass order organized, you decide to create a hashmap of Strings. The birthday girl&amp;rsquo;s name is Isabella, but her name is lost in the list. Can you figure out what Isabella ordered?
Do you remember the hashmap methods? Look at example order below!</description></item><item><title>Problem 1: Queue Basics</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/queues/problem-1/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/queues/problem-1/</guid><description>-- Task 1: Clearing Queue for New Orders A new restaurant has been added into Nuevo Eats! New orders have been flooding in and the Queue is flooded with orders! The popularity of the different tacos grew fast and the restaurant is overloaded. Look for a way to clear all elements to save the restaurant!
How can you iterate through the Queue? Try to clear the Queue as you go through it!</description></item><item><title>Problem 1: Stack Basics</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/stacks/problem-1/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/stacks/problem-1/</guid><description>Task 1: Reversing Using Stack Oh no! A new intern was hired and messed up the list of restaurants! The inputs of the restaurants are in reverse order! Luckily the stack is the perfect data structure for this. Can you create a new stack in the correct order?
Remember the stack is Last In First Out (LIFO; think of a stack of plates). How does the original stack look like?</description></item><item><title>Putting it together</title><link>https://nuevofoundation.github.io/workshops/web-basics/putting-together/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/putting-together/</guid><description>For your browser to understand what each element of your site is, we need to label them with HTML tags. HTML stands for Hypertext Markup Language. Tags are words surrounded by the symbols &amp;lt;and&amp;gt;. For example, the &amp;lt;img&amp;gt; tag tells your browser “this is an image.” The &amp;lt;button&amp;gt; tag tells it “this is a button.”
Tags can also be used to organize your webpage! The image below outlines the structure of a basic webpage.</description></item><item><title>Activity 1 - Define the width of the Pong screen</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-1/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-1/</guid><description>You can adjust the boundary of the Pong game by adjusting the height and width of the rectangle that represents the boundary.
Go to the code containing the Pong game. Press run. Notice that the game&amp;rsquo;s boundary doesn&amp;rsquo;t seem look right - see the image below. Let&amp;rsquo;s fix that in this activity, so that the game boundary looks better.
Find # TODO (ACTIVITY 1) in the code. Follow the instructions there to modify the WIDTH attribute of the Pong class.</description></item><item><title>Built-in Math Functions</title><link>https://nuevofoundation.github.io/workshops/python-basics/functions/built-in-math/</link><pubDate>Sun, 28 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/functions/built-in-math/</guid><description>Python provides a number of important built-in functions that we can use without needing to provide the function definition. In this section, we will learn about some of the built-in math functions using that you can perform mathematical tasks on numbers.
The max() and min() functions give us the largest and smallest values in a list, respectively:
x = min(20, 10, 50, 25) #x = 10 print(x) y = max(20, 10, 50, 25) #y = 50 print(y) The abs() function give us the absolute(positive) value of number:</description></item><item><title>Activity 1 - Drawing a square</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-1/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-1/</guid><description>Kudos! You helped Alex draw a line! Now let’s step it up and help Alex draw a square. To draw a square, we need to follow these steps:
Go forward for 50 steps Turn left by 90 degrees Go forward for 50 steps Turn left by 90 degrees Go forward for 50 steps Turn left by 90 degrees Go forward for 50 steps Remember to use turtle.forward() to draw lines.</description></item><item><title>Activity 2 - How to Create and Store your Menu</title><link>https://nuevofoundation.github.io/workshops/python-interactive/activity-2/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-interactive/activity-2/</guid><description>Pre-reqs Lists How to Create and Store your Menu Now that we have a banner for your restaurant, let&amp;rsquo;s start thinking about how to organize the information about your dishes. Remember how earlier you decided what foods and beverages you wanted to sell at your restaurant? Well, now we need to figure out how to store all of that information. We need to store the name, price, and description of every item on your menu.</description></item><item><title>Activity 2 - Variables and Inputs</title><link>https://nuevofoundation.github.io/workshops/secret-messages/activity-2/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/activity-2/</guid><description>Awesome! Now let&amp;rsquo;s go a step further. We will now not only print the message, but input the name of the receiver and make our program say &amp;ldquo;Hello&amp;rdquo;.
To do that we will need variables.
Variables A variable is a container that stores information. There are many kinds of variables, each storing different types of information:
string: represents a sequence of characters, letters, numbers, and symbols. strings are always wrapped in double quotes.</description></item><item><title>Activity 6 - Show the Customer their Receipt</title><link>https://nuevofoundation.github.io/workshops/python-interactive/activity-6/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-interactive/activity-6/</guid><description>Show Customer their Receipt Yay! You&amp;rsquo;ve calculated the price of the customer&amp;rsquo;s order, now we just need to display it as a Receipt. Below is an example that would work. Display all of the items ordered by the customer, the price per item, and the total price.
&amp;mdash;&amp;ndash;Receipt&amp;mdash;&amp;ndash;
Spring Rolls $16.0
Creamy Pesto Pasta $15.99
Total Price: $31.99</description></item><item><title>Activity 7 - Thank the Customer for their Business</title><link>https://nuevofoundation.github.io/workshops/python-interactive/activity-7/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-interactive/activity-7/</guid><description>Thank Customer for their Business Include an ASCII art pic that will pop up on the console.
Thank the customer for ordering from your restaurant by displaying another text to ASCII art image like &amp;ldquo;Thank you!&amp;quot;, &amp;ldquo;Come again soon!&amp;quot;, &amp;ldquo;Bon Appetit&amp;rdquo;, or anything else along those lines by using the same art generator we used when printing out the restaurant banner.
Here&amp;rsquo;s the link to the ASCII art generator for your convenience :) https://onlineasciitools.</description></item><item><title>Receiving a Message</title><link>https://nuevofoundation.github.io/workshops/microbit-distance-checker/receiving/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/microbit-distance-checker/receiving/</guid><description>Now that we&amp;rsquo;re sending messages and listening for them, we need to use that information to find out how close together or far apart our micro:bits are. To do that, we need to know how strong the signal we&amp;rsquo;re receiving is. Go back into the Radio section and this time drag the &amp;ldquo;on radio received (receivedNumber)&amp;rdquo; block and drag it to an empty spot on your workspace. It should not be inside of any other block.</description></item><item><title>Comments</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/comments/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/comments/</guid><description>Comments Developers often need to collaborate with other developers. Comments are an easy way for developers to write notes in the code and communicate with others. Comments are ignored by the computer; thus, they are also an easy way to tell the computer to not run certain lines of code. There are two ways to create comments:
To comment out one line, place // in front of a line of code.</description></item><item><title>Section 2: Transferring the Story Board to Code!</title><link>https://nuevofoundation.github.io/workshops/adventure/story-board-code/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/adventure/story-board-code/</guid><description>It’s time to open Trinket. Now it is time to create, let’s get creative!
You can continue working off Nuvi’s story line:
You can work on a template for a Choose Your Own Adventure game:
Or you can start from scratch and make it your own! Just go to Trinket and start story telling!</description></item><item><title>A closer look</title><link>https://nuevofoundation.github.io/workshops/security-phishing/a-closer-look/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security-phishing/a-closer-look/</guid><description>Bob received the following email the other night.
What do you think is suspicious here? Let&amp;rsquo;s analyze the email: The sender's email address is suspicious and you don't know this email sender personally.
Lucrative offer in the subject line suggests it's too good to be true.
You received an email during irregular business hours.
These words show a sense of urgency.
The sender is asking you to click on a link or open an attachment that you don't know about.</description></item><item><title>Activity</title><link>https://nuevofoundation.github.io/workshops/security/activity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security/activity/</guid><description>Let&amp;rsquo;s play a game!
Write your favorite sentence in the text box below. Make sure it has at least five words. (E.g. I like playing volleyball at the beach.) Now take the first letter of each word from the above sentence and write inside the text box. (E.g. ilpvatb) Add some numbers to the text. Remember the position of the numbers. (E.g. 1ilpvatb6) Finally, let's add some special characters to the text.</description></item><item><title>Basics of colors</title><link>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/basic-of-colors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/basic-of-colors/</guid><description>Basics of Colors While going through all kinds of pictures online, have you ever questioned how those pictures get their colors? Actually, computers have RGB mode to represent colors.
RGB format In Python, we follow a specific format when defining colors: (R, G, B), where &amp;ldquo;R&amp;rdquo;, &amp;ldquo;G&amp;rdquo;, and &amp;ldquo;B&amp;rdquo; are all integers. &amp;ldquo;R&amp;rdquo; represents some amount of red, &amp;ldquo;G&amp;rdquo; represents some amount of green, and &amp;ldquo;B&amp;rdquo; represents some amount of blue.</description></item><item><title>Comments</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/comments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/comments/</guid><description>Make notes while you are coding When creating a Python program, we can add some notes by adding one line comments using #. Comments are the parts of the code that do not effect the program. Anything after the # symbol is part of the comment and is ignored by your code. Comments are put in the code to tell the readers what the code is doing. They can make maintenance of code easy and can also help in finding bugs.</description></item><item><title>Creating the Program</title><link>https://nuevofoundation.github.io/workshops/adafruit/creating-the-program/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/adafruit/creating-the-program/</guid><description>Open your favorite internet browser (such as Edge, Firefox, Google Chrome, Internet Explorer), and go to https://aka.ms/oranges. Your screen should look like this:
Defining the Variables Today we are going to be using oranges to tell our Adafruit when to make noise. The first thing we need to do is give the computer a name for each orange and where to look for what they are saying. We do the first part by defining a variable.</description></item><item><title>Python Basics</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/python-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/python-basics/</guid><description>Python basics To code music, we need to learn a little Python. Don&amp;rsquo;t worry, it won&amp;rsquo;t bite you. Python is one of the languages that we humans use to tell computers what to do. These languages are known as &amp;ldquo;programming languages&amp;rdquo;. We will learn Python concepts throughout the class, but let&amp;rsquo;s start with a simple print statement.
If you want to jump to a specific Python section, click on the topic below:</description></item><item><title>Sets</title><link>https://nuevofoundation.github.io/workshops/python-basics/data-structures/sets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/data-structures/sets/</guid><description>Just like a list, a set is a collection of items. The difference between a set and a list is that a set cannot contain duplicates. So, if you have 5 chocolates and you put them in a set, you&amp;rsquo;ll only be left with 1 chocolate as duplicates will be removed. 😢
In the image above, the left side represents Indoor Games (Chess &amp;amp; Table Tennis) while the right side represents the Outdoor Games (Cricket &amp;amp; Football).</description></item><item><title>Setting up the PC</title><link>https://nuevofoundation.github.io/workshops/arduino/setting-up-the-pc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/arduino/setting-up-the-pc/</guid><description>Getting to know the Arduino IDE Download and install the Arduino IDE from:
the Microsoft Store (quicker install) - https://www.microsoft.com/store/productId/9NBLGGH4RSD8 or from the Arduino website https://www.arduino.cc/en/Main/Software (pick the latest version) Once the software has been installed on your computer, go ahead and open it up. This is the Arduino IDE and is the place where all the programming will happen. Take some time to look around and get comfortable with it.</description></item><item><title>Step 1 - Finding the problem (Part 1)</title><link>https://nuevofoundation.github.io/workshops/debugging/02-identify-the-problem1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/02-identify-the-problem1/</guid><description>Compiler Errors Let’s start and take a look at one of the first daunting problems a novice programmer faces: reading and understanding errors.
There are two kinds of errors: compiler and runtime errors.
A compiler error usually indicates a problem with your syntax. Perhaps you wanted to express an idea in the program but didn&amp;rsquo;t adhere to the rules of the programming language. These are caught when you compile your program.</description></item><item><title>Activity 1 - Determine User Account</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-1/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-1/</guid><description>Now we are at the command line. Let's test a simple command to show us the user account. What are user accounts? Every user in Linux has a user account. These are used to uniquely identify each user.
For example, say you and your friend, Nuvi, share a computer. You and Nuvi might create separate user accounts to keep track of which files belong to which of you and to ensure that none of you accidentally changes anything important.</description></item><item><title>Variables</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/variables/</link><pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/variables/</guid><description>In a previous exercise, we learned to print different statements with print(&amp;quot;&amp;quot;). While it is great to print out a number or a sentence, we haven&amp;rsquo;t given them a meaning. Variables are simply names that we can give to values such as strings, numbers, and booleans. Here’s how to make a variable named s in Python. We say s is a string that has the value &amp;quot;Hello, World!&amp;quot;.
s = &amp;#34;Hello, World!</description></item><item><title>3. Update the Game Board</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-3/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-3/</guid><description>In the last exercise, we have a program that prints out the board and prompt Enter your move (1-9): to user with each valid move. However, the board stayed empty (shown below). In this exercise, we will learn how to update board and generate a random move for the computer.
&amp;lt;&amp;lt;&amp;lt;~ Tic Tac Toe ~&amp;gt;&amp;gt;&amp;gt; * Choose number 1 - 9 to place your move * Player: 'X' Computer: 'O' 1 | 2 | 3 ---+---+--- 4 | 5 | 6 ---+---+--- 7 | 8 | 9 Enter your move (1-9): 1 | | ---+---+--- | | &amp;lt;--------------- The board doesn't have the player/computer moves ---+---+--- | | Enter your move (1-9): d Invalid Input; re-enter your move (1-9): 3 | | ---+---+--- | | &amp;lt;--------------- The board doesn't have the player/computer moves ---+---+--- | | Enter your move (1-9): Displaying User Moves Inside the hasNextInt() if statement, before the method call printBoard(board), update the board array with user&amp;rsquo;s input at the corresponding index.</description></item><item><title>Operators</title><link>https://nuevofoundation.github.io/workshops/java-basics/activity-3/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/activity-3/</guid><description>Let&amp;rsquo;s do Math: Arithmetic Operator In the last exercise, we learned about variables and how we can assign values to a variable of a specific type, such as:
int age = 3; // declare variable age of type int with value 3 age = 4; // assign 4 to the variable age Looking at the code above, it essentially adds 1 to the value of the variable age.
And, in Java, we can perform math operations on variables directly with arithmetic operators: +, -, *, /, %.</description></item><item><title>Scripts Explained</title><link>https://nuevofoundation.github.io/workshops/unity/scripts-explained/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/scripts-explained/</guid><description>Before we begin with making Nuvi move, let&amp;rsquo;s first explain the structure of a Unity script. There are many ways to make Nuvi move within Unity, and one way to do this is to add a Script component onto Nuvi. A Script component is a component that you can make on your own from scratch.
An empty Unity Script will look like this:
using System.Collections; using System.Collections.Generic; using UnityEngine; public class EmptyScript : MonoBehaviour { void Start() { } void Update() { } } Each new script will have the first 3 lines that start with using.</description></item><item><title>Printing to Console</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/printconsole/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/printconsole/</guid><description>Sometimes the game or application might not work the way you expect it to or you want to write something to the console for logging purposes. Outside of debugging the application, you can use System.out.println() to write your message. Lookout for your messages in the &amp;ldquo;logcat&amp;rdquo; window at the bottom of Android Studio: Working Together Without removing the quotation marks, try changing &amp;quot;Restarting the Tac-Tic-Toe Game!&amp;quot; to &amp;quot;Restarting the Tic-Tac-Toe Game!</description></item><item><title>Progress Update 1</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_1/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_1/</guid><description>Compare Your Code Before moving on, please check your Google Colab notebook against the code below:
# Importing TensorFlow and tf.keras libraries import tensorflow as tf from tensorflow import keras # Helper libraries for statistics and plotting import numpy as np import matplotlib.pyplot as plt #This variable is declared from the fashion_mist library of the datasets section fashion_mnist = keras.datasets.fashion_mnist #This loads four variables from the dataset. #The train_images and train_labels are data that the model uses to learn #The test_images and test_labels are used by the model to compare against.</description></item><item><title>Activity 4: Create Basic Filter</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-4/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-4/</guid><description>Now that we understand more about pixels and images, we can start to learn how to design your own filter on the image. Let us see some examples on how to design a basic filter on your image.
Example for blue filter We want to add a blue filter on the cute cat above. Let's see how to achieve that. # We need to import PIL package to allow manipulation with pixels.</description></item><item><title>Preload, Create, and Update</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/preload-create-update/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/preload-create-update/</guid><description>The Preload, Create, and Update methods So now let&amp;rsquo;s look at our scenes, which will eventually hold the code for our game. If you scroll through, you will see that each scene has a constructor (because it is a class), and also three large methods: preload(), create(), update(). There are also a number of helper functions in Scene 2, but we will talk about the aforementioned three methods because they are integral to understanding Phaser.</description></item><item><title>Make the bird jump with force &amp; falling with rotation</title><link>https://nuevofoundation.github.io/workshops/jsappybird/jump-force/</link><pubDate>Wed, 29 Jul 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/jsappybird/jump-force/</guid><description>Let&amp;rsquo;s add force to the bird
Add the below command in the file [File: create-game.js] bird.body.velocity.y = -350;
Working Together In the Replit window below, we started the code with the line bird.body.velocity.y = -350;.
In your console you should see a JSappy bird jumping with force after you press run:
Bonus Activity Let&amp;rsquo;s make the bird jump up and forwards:
Add below command in the file [File: create-game.js] bird.</description></item><item><title>Nested loops</title><link>https://nuevofoundation.github.io/workshops/python-basics/conditional-statements-loops/nested-loops/</link><pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/conditional-statements-loops/nested-loops/</guid><description>Nested loops Nested loops, builds off what we learned about for-loops and while loops in the previous exercise. You might want to review the For-loop and While-loop page before we move on.
In this section, we will use one loop inside another, which is called nested loop.
Nested while loop #This is the format for nested while loop while expressionA: while expressionB: statement(B) statement(A) In the while loop above, when expressionA produces False, we will skip the whole block.</description></item><item><title>Problem 2: Advanced Arrays</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/arrays/problem-2/</link><pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/arrays/problem-2/</guid><description>-- Task 1: Find the average cost! Suppose we have an array containing the costs of various foods. Find the average cost of the food!
You can use a for loop to go through the array! Remember, the average of a list is the total divided by the number of items
Launch Replit
Task 2: Sorting an array! The cost of each item in the menu is all over the place!</description></item><item><title>Problem 1: Example Menu</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/2d-arrays/problem-1/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/2d-arrays/problem-1/</guid><description>Task 1: Print the 2D array In the 2D array below we have a list of different foods. Each row is the same type. For an example, row 1 is an array of main courses. Row 2 is an array of drinks and row 3 is an array of desserts.
String[][] menu = { { &amp;#34;Hamburger&amp;#34;, &amp;#34;Pasta&amp;#34;, &amp;#34;Steak&amp;#34;, &amp;#34;Tacos&amp;#34; }, { &amp;#34;Cola&amp;#34;, &amp;#34;Sprite&amp;#34;, &amp;#34;Pepsi&amp;#34;, &amp;#34;Fanta&amp;#34; }, { &amp;#34;Pudding&amp;#34;, &amp;#34;Ice Cream&amp;#34;, &amp;#34;Mochi&amp;#34;, &amp;#34;Cake&amp;#34; } }; Use what you have learned to print out the array!</description></item><item><title>Activity 1 - Familiarize with online editor</title><link>https://nuevofoundation.github.io/workshops/web-basics/activity-1/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/activity-1/</guid><description>Activity 1 - Creating a basic website It&amp;rsquo;s now time to start building a basic website. To complete this activity, you will need to complete the following steps:
Open the web editor (click the &amp;ldquo;Try it yourself!&amp;rdquo; button below) Use the header tags to add a title, and the paragraph tags to write a paragraph about Benji If you have time: write a list of Benji&amp;rsquo;s favorite treats: turkey, peanut butter, and string cheese Try it yourself!</description></item><item><title>Activity 2 - Change the color of objects in game.</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-2/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-2/</guid><description>Great! You just fixed the game&amp;rsquo;s boundary. Now, notice how everything inside the game looks black and white? Let&amp;rsquo;s bring it to life by giving it some colors.
To do this, we need to modify the RGB values in the COLOR attribute. RGB stands for Red, Green, and Blue. On a computer screen, you can modify the color of each pixel by modifying its RGB value. You can make create about 16.</description></item><item><title>Activity 2 - Simplifying code with loops</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-2/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-2/</guid><description>Great! You drew a square. But notice that we are writing the same lines over and over again! We had to repeat the instructions to draw a line and turn left 4 times. Wouldn’t it be great if we can give instructions once and tell the program to repeat it 4 times? Fear not, we can!
To do this, we need to use loops. Loops run a set of instructions multiple times.</description></item><item><title>Activity 3 - Loops</title><link>https://nuevofoundation.github.io/workshops/secret-messages/activity-3/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/activity-3/</guid><description>Great!
The King has now requested that we input our message letter by letter so that we can change them afterwards.
To do this we need something called loops. Loops allow us to execute a block of code multiple times. Let&amp;rsquo;s see the below example which uses a loop to print out some numbers.
for(int i=0; i&amp;lt;3; i++){ cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl; } Let&amp;rsquo;s try to understand what this line of code does.</description></item><item><title>Activity 3 - Welcome Customer to your Restaurant &amp; Display Menu</title><link>https://nuevofoundation.github.io/workshops/python-interactive/activity-3/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-interactive/activity-3/</guid><description>Welcome Customer to your Restaurant &amp;amp; Display Menu Now that we have both a restaurant banner to display to the customer and a menu stored in your Python Program, let&amp;rsquo;s display your menu to the customer and welcome them in. In this activity, we&amp;rsquo;re going to write 2 helper functions to accomplish this.
Helper Functions Helper functions are functions that get called in a main function that runs all of the code for this program.</description></item><item><title>Interpreting Signal Strength</title><link>https://nuevofoundation.github.io/workshops/microbit-distance-checker/signal-strength/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/microbit-distance-checker/signal-strength/</guid><description>Now that our micro:bit knows how strong the signal it got is, we need to use that to figure out how close we are. Click on the Logic section and grab the &amp;ldquo;if true then / else&amp;rdquo; block. Drag that inside the radio received block, just under where we set the strength variable. Go back into the Logic section and drag the 0 = 0 comparison on top of the true on the &amp;ldquo;if true then&amp;rdquo; line.</description></item><item><title>Activity 1 - Write to console</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-1/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-1/</guid><description>Instructions Go to the code containing the GuessTheWord game. Press run. Notice that Press 'run' on the top of the screen to play again. is the only thing that is printed to the console. Let&amp;rsquo;s add a welcome message so that the player knows they playing the Guess the Word game.
Find // TODO (ACTIVITY 1) in the code. Add a line of code to print Welcome to C# GuessTheWord to the console.</description></item><item><title>Web Developer Guidelines</title><link>https://nuevofoundation.github.io/workshops/guidelines/web-developer/</link><pubDate>Mon, 22 Jul 2019 14:08:32 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/guidelines/web-developer/</guid><description>This document is for website developers only for changing the Nuevo Foundation workshop project templates and style.
Before getting started Before adding/updating the website, ensure you have synced with the project team and the existing work in the Project Backlog .
Setup Follow the instructions in the Getting Started page to install Git and Hugo to test the project locally.
Web design styles and structure Images: Website images should be themes/images CSS Ignore the SCSS files and just use CSS files in /themes/docdock/static/css/ Make sure to add a reference to the CSS you want to include in the head.</description></item><item><title>Activity 1: Blinking LED</title><link>https://nuevofoundation.github.io/workshops/arduino/activity-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/arduino/activity-1/</guid><description>Wiring Our Blinking LED For your introduction to this system, we&amp;rsquo;re going to turn an LED on and OFF. From this we can get the basics of circuitry and how our program can run and manipulate components.
Attach the long lead (anode) of your LED to pin 25J and the short lead (cathode) anywhere in the blue [-] line. Attach a 220 resistor with one leg in 25H and the other anywhere in the red [+] line.</description></item><item><title>Downloading your program</title><link>https://nuevofoundation.github.io/workshops/adafruit/downloading-your-program/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/adafruit/downloading-your-program/</guid><description>At the bottom of your workspace you should see this bright pink download button next to the name of your program. You can name your program anything, here it’s called adafruit_musicalfruit. Click on the download button.
You should see a window popping up, asking where to save your file. It should default to the Downloads folder, if not, navigate to your downloads folder and save the file there.
Now you can plug your USB cable into the computer.</description></item><item><title>Getting started with Earsketch</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/getting-started-earsketch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/getting-started-earsketch/</guid><description>EarSketch is a free educational programming environment developed at Georgia Institute of Technology. We will be composing music using EarSketch today.
To make music, click on the below button to open Earsketch in a new tab. Launch Earsketch
Now, let&amp;rsquo;s get started. Click on Scripts icon on the left menu bar and select Create a new script. When prompted to enter the script name, enter myjam and click on Create button.</description></item><item><title>More about phishing</title><link>https://nuevofoundation.github.io/workshops/security-phishing/other-phishing-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security-phishing/other-phishing-types/</guid><description>Alice goes on to explain different kinds of phishing scams other than the email phishing.
Smishing (SMS Phishing) Phishing conducted via Short Message Service (SMS), a telephone-based text messaging service. A smishing text, for example, attempts to entice a victim into revealing personal information via a link that leads to a phishing website.
In the above image, an unknown sender texts you about free deals on iPads and lures you into clicking a malicious link.</description></item><item><title>Pixels on an Image</title><link>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/pixel-on-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/pixel-on-image/</guid><description>Pixels Pixels are a small area of color on a display screen. Images are formed by pixels on the screen. We can manipulate pixels by changing the RGB Value, which are essentially changing the value of red, green and blue color on each pixels. When we see the an image on the screen, it is made of huge numbers of tiny pixel. Each tiny pixels has its only unique position and color it displays.</description></item><item><title>Spy Game</title><link>https://nuevofoundation.github.io/workshops/security/spy-game/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security/spy-game/</guid><description>From our last activity we learnt that a strong password is a combination of random characters (possibly having uppercase and lowercase letters), numbers and some special characters. Now it&amp;rsquo;s time to play Hacked or Safe!
From a list of passwords used by our Nuvi select the strongest password which cannot be hacked by Eve.
Can this password be Hacked? Yes No Can this password be Hacked? Yes No Can this password be Hacked?</description></item><item><title>Step 1 - Finding the problem (Part 2)</title><link>https://nuevofoundation.github.io/workshops/debugging/03-identify-the-problem2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/03-identify-the-problem2/</guid><description>Print Statements Compiler errors are one thing, but runtime errors and bugs are another. While the compiler can easily tell you where to look, runtime bugs are caused by how your program executes. We need to understand what the program is doing when the bug happens:
What variables are being used? Which instruction is being called? Is there a missing statement we needed? In smaller applications, we can use print statements in the code to quickly figure out the program’s running state.</description></item><item><title>Summary</title><link>https://nuevofoundation.github.io/workshops/security/summary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security/summary/</guid><description>Remember the characteristics of a strong password are: At least 8 characters - the more characters, the better A mixture of letters and numbers Inclusion of at least one special character, e.g., ! @ # ? ] Note: do not use &amp;lt; or &amp;gt; in your password, as both can cause problems in Web browsers A strong password is hard to guess, but it should be easy for you to remember - a password that has to be written down is not strong, no matter how many of the above characteristics are employed.</description></item><item><title>Activity 2 - Determine User Location</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-2/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-2/</guid><description>Before we can stop the hackers, we need to learn to navigate the Linux filesystem. What is a filesystem? A filesystem is a structured collection of files and data on a computer disk or drive. The highest level of a filesystem is referred to as the &amp;ldquo;root&amp;rdquo;. You can think of it as the beginning of the filesystem.
Fun fact: filesystems are often described as a &amp;ldquo;tree&amp;rdquo;.</description></item><item><title>4. Check the winner</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-4/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-4/</guid><description>Displaying a Winner Write a method getWinner(String[] curBoard) that returns the winner in a String with an array input of the current game board.
If the player wins, return &amp;quot;Congratulations! \nYou won the Game :)&amp;quot;. If the computer wins, return &amp;quot;Game Over! \nYou lost the Game :(&amp;quot;. If there&amp;rsquo;s a tie, return &amp;quot;It's a TIE! Try again&amp;quot;. If there isn&amp;rsquo;t a winner yet, return &amp;quot;&amp;quot;. There are several ways to write this method.</description></item><item><title>Control Structures</title><link>https://nuevofoundation.github.io/workshops/java-basics/activity-4/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/activity-4/</guid><description>Make a Decision: If-Statement Patrick 🐥 is a very polite duck who likes to greet everyone he meets with &amp;ldquo;Good Morning,&amp;rdquo; &amp;ldquo;Good Afternoon,&amp;rdquo; or &amp;ldquo;Good Night&amp;rdquo; depending on the current time.
(image by National Geographic: giphy.com/natgeochannel)
As we learned before, we can print these statements as below:
System.out.println(&amp;#34;Good Morning&amp;#34;); // say it between 0:00 - 11:59 System.out.println(&amp;#34;Good Afternoon&amp;#34;); // say it between 12:00 - 19:59 System.out.println(&amp;#34;Good Night&amp;#34;); // say it between 20:00 - 23:59 However, we also know Patrick 🐥 should only decide to say one of these statements based on the current time.</description></item><item><title>Making Nuvi Move</title><link>https://nuevofoundation.github.io/workshops/unity/making-nuvi-move/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/making-nuvi-move/</guid><description>Now that we know what a Script looks like, let&amp;rsquo;s actually make one.
First, we want to create a new folder called &amp;ldquo;Scripts&amp;rdquo; in Assets under the Project window, similar to the Drawings folder. We will do this because it is better practice to have all the scripts in an easy to access place. Double click the Scripts folder and create a script by right clicking and selecting &amp;ldquo;C# Script.&amp;rdquo; You can also go under the &amp;ldquo;Assets&amp;rdquo; tab and choose &amp;ldquo;Create -&amp;gt; C# Script&amp;rdquo; as shown below.</description></item><item><title>Puzzle 2</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/puzzle2/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/puzzle2/</guid><description>Let&amp;rsquo;s add a welcome message that the user can see when they start your app!
Go to MainActivity.kt and find // PUZZLE 2 in the code and write a toast that welcomes the user to your game with &amp;ldquo;Welcome to Tic-Tac-Toe!”. Now press the play button (►) at the top of Android Studio and your app should look like this:
HELP! I got a lot of red text! If you see any red text, you have encountered some errors!</description></item><item><title>Activity 3 - Displaying Clothing Samples</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-3/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-3/</guid><description>Display Samples Now, you will be displaying all of your clothing samples by doing the following:
Copy the following code into your Colab notebook. This displays a collection of images along with their specific category.
plt.figure(figsize=(10,10)) #sets the image size to 10x10 inches for i in range(25): #displays first 25 images with their class name plt.subplot(5,5,i+1) plt.xticks([]) plt.yticks([]) plt.grid(False) plt.imshow(train_images[i], cmap=plt.cm.binary) plt.xlabel(class_names[train_labels[i]]) plt.show() #shows images with their labels Question 1 Your supervisor hands you out around 15-20 more clothing samples, which you will have to include in your program.</description></item><item><title>Activity 5: More advanced filters</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-5/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-5/</guid><description>In the last section, we saw an example of creating a blue filter and thought about how to create the grey filter. Now, let us create our grey filter together.
Example - Create a grey filter Let us change the original cat image below with our grey filter together!
# We need to import PIL package to allow manipulation with pixels. from PIL import Image # Open the cat image img = Image.</description></item><item><title>Placing Things into Phaser</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/placing-things/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/placing-things/</guid><description>Placing Text Now, you will learn how to place things within Phaser. Look at the repl below.
Let&amp;rsquo;s first go over how to place text!
message = this.add.text(20, 10, &amp;#34;Hello World!&amp;#34;, { font: &amp;#34;25px Arial&amp;#34;, fill: &amp;#34;white&amp;#34; }); These lines of code create a variable named &amp;ldquo;message.&amp;rdquo; This variable adds the text &amp;ldquo;Hello World&amp;rdquo; to the (X, Y) coordinate (20, 10) on our game window. The code also specifices that the text is created to be the color white, have font Arial, and have font size 25 px.</description></item><item><title>Formatting</title><link>https://nuevofoundation.github.io/workshops/guidelines/formatting/</link><pubDate>Wed, 29 Jul 2020 14:08:32 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/guidelines/formatting/</guid><description>When creating or modifying workshops, you&amp;rsquo;ll write them using standard Markdown syntax, plus some additional custom syntax. This page explains what syntax to use to add specific formats to a workshop.
Formatting Reference Standard Markdown cheatsheet Custom Formatting Options using shortcodes Formatting Examples This theme includes a number of options to customize the look and feel of your site. Below, you can find several usage examples, which include the syntax to use followed by what is actually shown on a page when you use that syntax.</description></item><item><title>Add sound while the bird is jumping &amp; bonus</title><link>https://nuevofoundation.github.io/workshops/jsappybird/add-jump-sound/</link><pubDate>Wed, 29 Jul 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/jsappybird/add-jump-sound/</guid><description>Let&amp;rsquo;s add sounds to the bird while it is jumping
Add the below command in the file [File: create-game.js] jumpSound.play();
Working Together In the Replit window below, we started the code with the line jumpSound.play();.
In your console you should see a Jsappy bird jumping with sound after you press run:
Bonus activities What happens if we make gravity stronger? What happens if we make gravity have a negative value?</description></item><item><title>For Loops</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/introduction/for-loops/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/introduction/for-loops/</guid><description>-- When you know exactly how many times you want to loop through a block of code, use a for loop instead of a while loop:
for (initialization; condition; iteration) { // code block to be executed } initialization is executed (one time) before the execution of the code block. condition (as the name implies) defines the condition for executing the code block. iteration is executed (every time) after the code block has been executed.</description></item><item><title>HTML Attributes</title><link>https://nuevofoundation.github.io/workshops/web-basics/html-attributes/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/html-attributes/</guid><description>Each tag can also have additional information like style attributes that can change the properties of an element. There are attributes that we can use to change the visual appearance of an element, such as the size, the color, and the text font.
All attributes are formatted as: attribute-name=&amp;quot;value in quotes&amp;quot;. For example, we can change the color of a paragraph to red with this code: &amp;lt;p style=&amp;quot;color:red&amp;quot;&amp;gt;This text is red&amp;lt;/p&amp;gt;.</description></item><item><title>Activity 3 - Change the key assignment to move left paddle</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-3/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-3/</guid><description>Kudos! You not only fixed the game boundary, but you were able to give color to objects too. Now, let&amp;rsquo;s see if you can change the keys for paddle movement.
To do this, we need to modify one of the parameters we passed in when creating the left paddle object. Remember from &amp;ldquo;The Basics - Class and Object&amp;rdquo; section, you defined the Paddle class with UP and DOWN key assignments as its attributes.</description></item><item><title>Activity 3 - Drawing a hexagon</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-3/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-3/</guid><description>Great job! You just drew your first shape in Python with Turtle! Now let’s slightly change the code we already wrote to draw a square to instead draw a hexagon. Alex is a bee, after all, and he needs to draw hexagons to build his first honeycomb.
To help you draw a hexagon, think of how many sides a hexagon has. How many degrees are in each angle of a hexagon?</description></item><item><title>Activity 4 - Conditions</title><link>https://nuevofoundation.github.io/workshops/secret-messages/activity-4/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/activity-4/</guid><description>Very well!
We are getting closer and closer to making our secret messages. But let&amp;rsquo;s also not forget that we have to be able to decipher these messages!
For that, we are going to enter in the console a 1, if we want to encrypt a message, or the number 2, if we want to decrypt it.
For this we will need conditions.
Conditions if / else A condition in programming is an instruction or a group of instructions, which can be executed or not, based on whether a condition is true.</description></item><item><title>Activity 4 - Interacting with the Customer</title><link>https://nuevofoundation.github.io/workshops/python-interactive/activity-4/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-interactive/activity-4/</guid><description>Interacting with the Customer Let&amp;rsquo;s continue interacting with the customer and get their order! In the main() function, the next thing we need to do is create an empty list stored in the variable listOrderItems so that any items they will eventually order are stored here.
Now let&amp;rsquo;s use our knowledge of if-else statements and while loops to receive the customer&amp;rsquo;s order. If the customer responded No to the question asking them whether they would like to order anything from the menu, then print out a Goodbye statement.</description></item><item><title>Lighting it up</title><link>https://nuevofoundation.github.io/workshops/microbit-distance-checker/light-it-up/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/microbit-distance-checker/light-it-up/</guid><description>We have all our logic written, but no way to tell if we&amp;rsquo;re more than 6 feet apart. Now we&amp;rsquo;ll add some lights so we can actually see when we&amp;rsquo;re far enough apart. Click the Basic section at the top and drag a &amp;ldquo;show icon&amp;rdquo; block into the if part of our logic block. Click on the icon to see a list of other icons and choose the sad, frowning face.</description></item><item><title>Strings</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/strings/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/strings/</guid><description>Strings Anything that is surrounded in quotation marks is called a string. This is how a computer represents words or sentences. For example, &amp;quot;a&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;banana!&amp;quot;, and &amp;quot;Hello World&amp;quot; are strings, but Hello World and 2 are not strings, because the quotation marks are missing.
You can combine many strings together using the + operator. For example:
&amp;quot;Apple&amp;quot; + &amp;quot;Pineapple&amp;quot; produces the string &amp;quot;ApplePineapple&amp;quot;. &amp;quot;Nuevo&amp;quot; + &amp;quot; &amp;quot; + &amp;quot;Foundation&amp;quot; produces the string &amp;quot;Nuevo Foundation&amp;quot;.</description></item><item><title>Access pixels on image</title><link>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/access-pixel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/colors_and_pixels/access-pixel/</guid><description>More about pixels We have already learned how to make a pure color image using pixels and change a pixel on the image. Now, we will learn how to identify pixels in existing images.
For information about how to use lists and tuples in Python see more on these pages: Data Structure Get image data # Remember to import Image from PIL import Image Image.size Image.size[0] Image.size[1] Image.</description></item><item><title>Activity 1 - Set tempo &amp; add sounds</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/activity-1-set-tempo-add-sounds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/activity-1-set-tempo-add-sounds/</guid><description>Let&amp;rsquo;s take a closer look at the pre-existing code and understand what it means. We will be placing our new code between the setTempo() and finish() functions. The setTempo() function allows you to set the overall project tempo.
Quick Fact: Tempo is the speed at which a piece of music is played. Changing a project&amp;rsquo;s tempo allows for different styles of music to be created. Try changing the tempo of your setTempo function and see what happens!</description></item><item><title>Activity 2 - Joystick with Serial Output</title><link>https://nuevofoundation.github.io/workshops/arduino/activity-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/arduino/activity-2/</guid><description>Wiring the Joystick Now that you understand how we can get the system to provide signals from the program (outputs) and use those to control LEDs, let’s look at how we can get dynamic inputs into the system. For this activity we will use a joystick input, similar to those used in video game consoles.
Attach one end of a jumper wire to GND on the joystick and the other to GND on the Elegoo.</description></item><item><title>Answer Key - Adafruit</title><link>https://nuevofoundation.github.io/workshops/adafruit/answer-key/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/adafruit/answer-key/</guid><description>Setup In summary:
The two alligator clips should be clipped into the surface of the oranges. The other side of the clips should be on the A1 and A2 inputs on the adafruit. The USB should be plugged in to the adafruit, but not into the computer. After setup, the oranges and adafruit should look like this:
Solution Solution - advanced (with lights) How it Works</description></item><item><title>Answer Key - Security</title><link>https://nuevofoundation.github.io/workshops/security/answer-key/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security/answer-key/</guid><description>Solution In our Spy Game, the passwords &amp;ldquo;Ilovemypet&amp;rdquo; does not contain any numbers and special characters, and &amp;ldquo;12345678&amp;rdquo; is a sequence of numbers; thus, both passwords are weak and can be easily hacked/guessed by a malicious person.</description></item><item><title>Step 1 - Finding the problem (Part 3)</title><link>https://nuevofoundation.github.io/workshops/debugging/04-identify-the-problem3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/04-identify-the-problem3/</guid><description>Debuggers Debugging code is such a widespread, common problem that people have built entire programs designed to help other programmers debug more efficiently. These are suitably named debuggers, and there are plenty of debuggers that work for the C programming language. Let&amp;rsquo;s take a look at gdb, a common debugger used with the command line.
Launch Replit
For our examples, we will make use of the Quicksort algorithm.
Quicksort is an algorithm that sorts an array by first selecting an element in the array as a pivot.</description></item><item><title>What's Phishy?</title><link>https://nuevofoundation.github.io/workshops/security-phishing/whats-phishy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security-phishing/whats-phishy/</guid><description>From our last section we learned about different types of phishing methods and how to recognize them. Now it&amp;rsquo;s time to play a game called What's phishy?
Which images from the list given below do you think are phishy?
Does this email look phishy? Yes No Does this email look phishy? Yes No -- Does this banner look phishy? Yes No Does this text message look phishy?</description></item><item><title>Activity 3 - Explore Current Directory</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-3/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-3/</guid><description>Now that we know who and where we are, let's take a look around for signs of the hackers. How do you explore the directory? To see the files in the current directory, we use the ls command. It means &amp;ldquo;List&amp;rdquo;.
Try it:
ls How do I get more info about the files in this directory? Try it:
ls -l The -l flag in the above command tells ls to list long form information.</description></item><item><title>5. (Optional) AI Move</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-5/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/activity-5/</guid><description>Let&amp;rsquo;s make the computer think Previously, we used a Random object to randomly generate a move for the computer. As a result, the competitiveness of the computer is fairly low.
In this exercise, we want to increase the difficulty of the game by making optimal decisions for the computer.
We will do so by adding artificial intelligence into our program with the use of the Minimax algorithm (a well-defined procedure that allows computers to solve problems).</description></item><item><title>Methods</title><link>https://nuevofoundation.github.io/workshops/java-basics/activity-5/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/activity-5/</guid><description>What is a Method? So far, we&amp;rsquo;ve learned about how to store data in variables, print data and sentences, and make decisions with if-statement, for-loop, and while-loop.
From the last exercise, we know the following block of code calculates the sum from 1 to 100:
int total = 0; int num = 1; while(num &amp;lt;= 100){ total = total + num; num = num + 1; } System.out.println(&amp;#34;Sum: &amp;#34; + total); But what if we want to calculate the sum from 1 to 77 instead?</description></item><item><title>Colliders</title><link>https://nuevofoundation.github.io/workshops/unity/colliders/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/colliders/</guid><description>The reason Nuvi runs off is because there are no colliders to stop them.
Colliders allow two objects to touch each other.
So, let&amp;rsquo;s use colliders to add invisible walls around our arena. Head over to the Hierarchy window and right-click, then choose &amp;ldquo;Create Empty&amp;rdquo;. Name this empty object &amp;ldquo;Walls&amp;rdquo;.
Then, right-click the &amp;ldquo;Walls&amp;rdquo; object you just made, and this time choose &amp;ldquo;3D Object -&amp;gt; Cube&amp;rdquo;. Resize the cube into a rectangular shape so it covers a side of the screen like below:</description></item><item><title>Comments</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/comments/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/comments/</guid><description>Developers often need to collaborate with other developers. Comments are an easy way for developers to write notes in the code and communicate with others. Comments are ignored by the computer; thus, they are also an easy way to tell the computer to not run certain lines of code. There are two ways to create comments:
To comment out one line, place // in front of a line of code.</description></item><item><title>Building the Neural Network</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/building_neural_network/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/building_neural_network/</guid><description>This is the first step in building a neural network, which is actually a tool that allows us to do &amp;ldquo;machine learning&amp;rdquo;. With this tool, we are training a program to analyze images or data, otherwise known as training data. Then after training, we can ask the program to perform and execute a specific task using what it learned. For example, let&amp;rsquo;s say we train a program with dog and cat pictures, and we provide the program with the correct identification of the images.</description></item><item><title>Activity 6: Crop Image</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-6/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-6/</guid><description>In this section, we will start to learn how to crop your image.
Example - Crop cat into half Now, let us crop out the right half of the cat image
# We need to import PIL package to allow manipulation with pixels. from PIL import Image # Open the cat image img = Image.open(&amp;#34;cat.png&amp;#34;) width = img.size[0] height = img.size[1] # Set up a new image with the half width and height newimg = Image.</description></item><item><title>Activity 1 - Place Background and Player Ship</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-1/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-1/</guid><description>This activity will have two parts: loading in the game&amp;rsquo;s background and loading in the ship that the player will eventually control (it will just be an image that doesn&amp;rsquo;t move for now). For both of these activities, the method will be very similar: we will first upload the image into the game on Scene 1 and then make it visible with Scene 2. You can think of Scene 1 as being used to upload the picture into the game and Scene 2 being used to create things that we&amp;rsquo;ve uploaded.</description></item><item><title>Reading from the Console</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/reading-from-console/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/reading-from-console/</guid><description>Now that we know the basics about variables, we can ask for input from the user. Use the following line to tell our program to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called value.
value = input() Here&amp;rsquo;s and examples of how to use input() to accept user input:
print(&amp;#34;What&amp;#39;s your name?&amp;#34;) value = input() print(&amp;#34;Hello &amp;#34; + value + &amp;#34;!</description></item><item><title>Activity 2 - CSS</title><link>https://nuevofoundation.github.io/workshops/web-basics/activity-2/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/activity-2/</guid><description>Style it with CSS Tags tell the browser what website elements to use. But we also need to tell it how to display the elements, and where to place them. We may want the title on the center or on the right side. We may want a picture on the right and a paragraph on the left. There are two ways we can do this: through HTML attributes or Cascading Style Sheets.</description></item><item><title>Activity 4 - Change the key assignment to move right paddle.</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-4/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-4/</guid><description>Now you know how to change key assignments to control a paddle&amp;rsquo;s movement. Awesome work!
We have added movement for the left paddle. Can you change the key assignment for the right paddle using your knowledge of the Paddle object and its attributes that influence its movement on screen?
Find # TODO (ACTIVITY 4) in the code. Modify the appropriate attribute value for the right paddle such that pressing the 'UP' key moves the right paddle up.</description></item><item><title>Activity 4 - Simplifying code with functions</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-4/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-4/</guid><description>We drew one hexagon. But this is just one of many hexagons Alex needs to build his honeycomb. Once again, it seems that we would have to repeat the code many times to draw multiple hexagons. Fortunately, we don&amp;rsquo;t have to! Functions to the rescue!
Functions A function is a way to group together lines of code to do something. For instance, turtle.forward(50) moves the turtle forward 50 steps, and turtle.</description></item><item><title>Activity 5 - Analyzing the customer's order</title><link>https://nuevofoundation.github.io/workshops/python-interactive/activity-5/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-interactive/activity-5/</guid><description>Pre-reqs Functions Loops Analyzing the customer&amp;rsquo;s order We&amp;rsquo;ve got the customer&amp;rsquo;s order, and now we have to simply calculate how much their order costs!
Creating a dictionary from the customer&amp;rsquo;s order The first function we&amp;rsquo;ll be writing is createDictOrderItems(listOrderItems) and it takes the list of items in the customer&amp;rsquo;s order as a parameter. We&amp;rsquo;ll be returning a dictionary of all the items ordered and their respective quantities. Currently we only have a list of strings that contain both the item name and quantity, however, we need to separate this information out and convert the quantity into an integer type since it&amp;rsquo;s a number.</description></item><item><title>Activity 5 - ASCII Code</title><link>https://nuevofoundation.github.io/workshops/secret-messages/activity-5/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/activity-5/</guid><description>That&amp;rsquo;s great!
In this activity we will encrypt (make secret) the name of the recipient.
Let&amp;rsquo;s use the ASCII Code
ASCII Code The ASCII code shows that each character has a numeric value. For example, the character A is the number 65, B is 66, C is 67, etc.
The following list shows the value of the most commonly used characters:
Since each character has a numeric value, we can use this to add or subtract values to these letters, and thus change the order of them in a certain way.</description></item><item><title>Downloading the code and trying it out</title><link>https://nuevofoundation.github.io/workshops/microbit-distance-checker/running-code/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/microbit-distance-checker/running-code/</guid><description>Now that our code has been written, it&amp;rsquo;s time to try it all out. First, we have to pair the micro:bit with a computer. Find your USB cable and connect the smaller side to the silver USB port on the top of your micro:bit. Connect the other, larger end to a USB port on your computer. On the MakeCode workspace, click the ellipsis (&amp;hellip;) next to the Download button to make a small menu pop up.</description></item><item><title>Activity 2 - Add words to the word bank</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-2/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-2/</guid><description>Instructions Find // TODO (ACTIVITY 2) in the GuessTheWord code. For the Guess the Word game, we will give the computer a word bank, and the computer will choose one of the words randomly to use for the game. So far, we have added the words &amp;quot;Hello&amp;quot; and &amp;quot;World&amp;quot; to the word bank. However, a Guess the Word game with only two possible words to guess is not fun at all!</description></item><item><title>Activity 2 - Make a song!</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/activity-2-make-a-song/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/activity-2-make-a-song/</guid><description>Now that you have learned how to add sounds to Earsketch, let&amp;rsquo;s try and make a song! You should already have one audio clip in Earsketch, but songs are made up of various instruments, so we need to add more audio clips.
Add another fitMedia() call. Find an audio clip you would like to add to your current song and input it under the fileName parameter. The trackNumber parameter should be a unique number.</description></item><item><title>Activity 3 - Joystick &amp; LEDs</title><link>https://nuevofoundation.github.io/workshops/arduino/activity-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/arduino/activity-3/</guid><description>Activity 3 - Joystick + LEDs Let’s combine activity 1 and activity 2. Let’s control LEDs based on the input from the joystick.
Attach one end of a jumper wire to GND on the joystick and the other to 7X on the Breadboard. Attach one end of a jumper wire to +5V on the joystick and the other to 5W on the Breadboard. Attach one end of a jumper wire to VRx on the joystick and the other to A0 on the Elegoo.</description></item><item><title>Step 2 - Fixing the problem</title><link>https://nuevofoundation.github.io/workshops/debugging/05-fixing-the-problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/05-fixing-the-problem/</guid><description>Once you’ve figured out what’s causing the bug, you can start thinking about how to fix the bug. Compiler errors are easy enough - most of the time, the compiler gives you plenty of hints on how to fix it, and during times you can’t figure it out by compiler output alone, you can turn to the web. Chances are, someone ran into the same problem as you years ago and asked the question already on a forum such as StackOverflow.</description></item><item><title>Summary</title><link>https://nuevofoundation.github.io/workshops/security-phishing/summary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/security-phishing/summary/</guid><description>Conclusion In conclusion, the common features found in Phishing scams have at least one of the following properties:
Lucrative offers or attention grabbing statements. Unusual sender of unexpected behavior or character. Sense of urgency by asking you to act fast because of limited time offers or deals. Example: Your password is about to expire click here to change it immediately. Suspicious hyperlinks. Hovering over the link will show the actual URL you will be directed to.</description></item><item><title>Activity 4 - Note Taking Practice</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-4/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-4/</guid><description>As a cybersecurity engineer, it is important to take a lot of notes. These are helpful for future reference to understand how the hack happened. Let's step up our workspace! What if I want to create a new directory? To practice creating a new directory, use the command mkdir (meaning &amp;ldquo;Make Directory&amp;rdquo;) in the following format: mkdir new_directory_name.
Let&amp;rsquo;s make a directory called files by typing the command below:</description></item><item><title>Object and Classes</title><link>https://nuevofoundation.github.io/workshops/java-basics/activity-6/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/activity-6/</guid><description>What is an Object and a Class? An object is an thing (noun) that has certain characteristics and can perform certain tasks. A Class is the blueprint or definition for that object.
An example is a Person. A Person is Class. A person can have certain characteristics that distinguish it from another person. It can have blue eyes, it can be 30 years old, etc. A person can also perform certain tasks.</description></item><item><title>Setting up the Enemies</title><link>https://nuevofoundation.github.io/workshops/unity/setting-up-enemies/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/setting-up-enemies/</guid><description>Now that Nuvi is all set and ready to move, let&amp;rsquo;s have them welcome aliens into the universe! Locate the alien png file called &amp;ldquo;alien_pink&amp;rdquo; from the Drawings folder. Then, drag and drop the alien_pink into the hierarchy. Rescale the enemy to match Nuvi&amp;rsquo;s size as it is too large.
Now, if we were to run the game, Nuvi runs on top of the pink alien. We want Nuvi to collide with it.</description></item><item><title>Strings</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/strings/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/strings/</guid><description>Anything that is surrounded in quotation marks is called a string. This is how a computer represents words or sentences. For example, &amp;quot;a&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;banana!&amp;quot;, and &amp;quot;Hello World&amp;quot; are strings, but Hello World and 2 are not strings, because the quotation marks are missing. You can combine many strings together using the + operator. For example:
&amp;quot;Apple&amp;quot; + &amp;quot;Pineapple&amp;quot; produces the string &amp;quot;ApplePineapple&amp;quot;. &amp;quot;Nuevo&amp;quot; + &amp;quot; &amp;quot; + &amp;quot;Foundation&amp;quot; produces the string &amp;quot;Nuevo Foundation&amp;quot;.</description></item><item><title>Activity 4 - Training the Model</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-4/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-4/</guid><description>Parameters for Training The following code determines how many times model is trained. It is normal for this segment of code to take longer than usual to run.
model.fit(train_images, train_labels, epochs=10) Epochs represent the number of times the model processes all the training data.
The following code prints out the overall test accuracy.
test_loss, test_acc = model.evaluate(test_images, test_labels, verbose=2) print(&amp;#39;\nTest accuracy:&amp;#39;, test_acc) Question 1 Set the value of epochs equal to 2.</description></item><item><title>Activity 7: Change the background of image</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-7/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-7/</guid><description>In this section, we will start to learn how to change the simple background of your image using pixels.
Example - Change background color Let us change the background color of Nuvi to pink. from PIL import Image # Open the Nuvi image img = Image.open(&amp;#34;nuevo.png&amp;#34;) width = img.size[0] height = img.size[1] # Set up a new image with width and height newimg = Image.new(&amp;#39;RGB&amp;#39;,(width,height)) # Set the pixels for the new image colorpink = (244,114,208) coloryellow = img.</description></item><item><title>Creating Animations</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/animation/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/animation/</guid><description>Animation in Phaser Animation works by showing a set of images back to back very quickly. When we do this quickly, our mind sees it as movement. In a way, you&amp;rsquo;re tricking the mind to think that this set of images is just one thing that is moving.
We use spritesheets for things we want to be animated because we can create that animation by scrolling through the spritesheets. In order to animate spritesheets, there are two steps we must do.</description></item><item><title>Media Elements</title><link>https://nuevofoundation.github.io/workshops/web-basics/media-elements/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/media-elements/</guid><description>Add a GIF GIF stands for Graphic Interchange Format, but all you need to know is that it&amp;rsquo;s just another type of image file. The only difference is that the file has many images. When displayed in the browser, the images are played in sequence, similar to the frames of a movie. Think of it like one of those flip books that seem like the image is animated when you flip it.</description></item><item><title>Activity 5 - Declare and use a variable for font</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-5/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-5/</guid><description>Great progress so far! Now let&amp;rsquo;s make use of a variable to change the font of the text in the game.
In this activity, you need to apply your knowledge about variables that you learned in the Python Basics workshop.
Find # TODO (ACTIVITY 5) in the code. Declare the variable font_label and assign it the value 'arial'. Now take a look at this statement in the code font_name = pygame.</description></item><item><title>Activity 5 - Drawing a honeycomb</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-5/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-5/</guid><description>This is the finale! Let&amp;rsquo;s create the honeycomb that Alex will live in. Fortunately, a honeycomb is simply 6 hexagons, so let&amp;rsquo;s combine our knowledge of functions and loops to make our honeycomb!
In this activity, create a new function called draw_honeycomb(). Inside the function body, create a loop that repeats 6 times. Inside the loop we have to first draw a hexagon using our draw_hexagon() function we previously defined. Next, move the turtle so it can draw the next hexagon.</description></item><item><title>Activity 6 - Functions</title><link>https://nuevofoundation.github.io/workshops/secret-messages/activity-6/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/activity-6/</guid><description>Very well!
You&amp;rsquo;ve already done a lot of the program!
In this activity we will use functions to group sections of the code.
Functions Functions allow us to divide the work of a program into smaller tasks separate from the main section, that is, from the main function.
We can think of functions as a machine such that when we turn it on, it executes instructions to return a final result.</description></item><item><title>Numbers</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/numbers/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/numbers/</guid><description>Numbers The computer can also do regular math that you see in school. Use Console.WriteLine to print out the result from the math expressions. No quotation marks are needed for numbers!
Console.WriteLine(5 + 4); Console.WriteLine(6 * (9 - 7) / 3); Here is the full list of math symbols that you can use:
Operator Description Operator Description + Add \ | Divide | - Subtract % Modulo (remainder) * Multiply (,) Parenthesis Fun Fact: Computer Division The computer does division differently from your regular calculator.</description></item><item><title>Activity 3 - Organize your song using functions</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/activity-3-organize-songs-using-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/activity-3-organize-songs-using-functions/</guid><description>In Earsketch, functions are mostly used to organize different sections of a song. The most common musical form is A-B-A where each section is four measures in length, and the A sections sound different from the B section.
Now that we learned how to use functions, let&amp;rsquo;s try to use them to organize our songs better.
Define your function with a startMeasure parameter and endMeasure parameter. Place the sounds you would like to have the function represent underneath your function definition.</description></item><item><title>Activity 4 - LCD Display</title><link>https://nuevofoundation.github.io/workshops/arduino/activity-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/arduino/activity-4/</guid><description>Wiring Diagram Now that you have mastered outputting signals to LEDs let’s look at displaying text with a simple display. Only 1 resistor (5K) is used to limit the brightness of the display. Try wiring this per the diagram without specific instructions.
The Code: //www.elegoo.com
//2016.12.9
/*
LiquidCrystal Library - Hello World
Demonstrates the use a 16x2 LCD display. The LiquidCrystal
library works with all LCD displays that are compatible with the
Hitachi HD44780 driver.</description></item><item><title>Step 3 - Testing</title><link>https://nuevofoundation.github.io/workshops/debugging/06-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/06-testing/</guid><description>You’ve implemented the fix(es) for your bug(s). Naturally, the first thing you do is recompile your code and run it. If it looks right, you’ve fixed the bug! For smaller projects, this works relatively well. Larger projects might be more difficult since it takes much longer to compile. Typically, they have have automated tests that are run automatically after updates are made to the codebase so programmers don&amp;rsquo;t even need to worry too much about this step (except for the programmers making the tests!</description></item><item><title>Activity 5 - Secure User Permissions</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-5/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-5/</guid><description>Oh no. Some of our files might have been messed with! Let’s secure our notes, file1. We don't want a hacker to mess with these! How do we limit access to our files? By giving users &amp;ldquo;permissions&amp;rdquo; on files!
Permissions are a way for the computer to determine who has access to files and what they can do with those files.
In Linux, there are three common types of access to a file that a user might request: &amp;ldquo;read&amp;rdquo;, &amp;ldquo;write&amp;rdquo;, or &amp;ldquo;execute&amp;rdquo;.</description></item><item><title>Data Structures (Array &amp; ArrayList)</title><link>https://nuevofoundation.github.io/workshops/java-basics/activity-7/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/activity-7/</guid><description>In previous exercises, we learned that variables allow us to access and store a piece data. But, what if we want to store a bunch of similiar data? Is there a good way to organize them without declaring multiple variables?
In programming, data structures are elements that allow coders to store multiple pieces of data of the same type. Using data structures is an efficient way to store and access large pieces of data.</description></item><item><title>Setting up the Projectile and Making it a Prefab</title><link>https://nuevofoundation.github.io/workshops/unity/setup-projectile-and-prefab/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/setup-projectile-and-prefab/</guid><description>Oh no! The pink alien is attacking now! It&amp;rsquo;s mad because Nuvi ran over it. Let&amp;rsquo;s set Nuvi up with a self-defense mechanism.
After selecting Nuvi in the hierarchy, right click and select &amp;ldquo;Create Empty&amp;rdquo;, which creates an empty GameObject with only a Transform component.
To be able to see where our empty object is, make sure we are on the Move tool! You should see two intersecting arrows — where they intersect is where our empty GameObject is located.</description></item><item><title>Numbers</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/numbers/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/numbers/</guid><description>The computer can also do regular math that you see in school. Use System.out.println to print out the result from the math expressions.
System.out.println(5 + 4); System.out.println(6 * (9 - 7) / 3); Here is the full list of math symbols that you can use:
+ Add \ Divide - Subtract % Modulo (remainder) * Multiply (,) Parenthesis Fun Fact: Computer Division
The computer does division differently from your regular calculator.</description></item><item><title>Activity 5 - Testing the Model</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-5/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-5/</guid><description>Testing Our Model Now that we have built and trained our model, we want to go ahead and test it against returned clothing items. Let&amp;rsquo;s start off with our first sample item, which was the shoe.
# Initiate a model object with a softmax layer probability_model = tf.keras.Sequential([model, tf.keras.layers.Softmax()]) A softmax layer is a type of neural network layer in a machine learning model. The softmax layer transforms our inputs, which theoretically could come from a varied range of data structures, into a probability distribution between 0 to 1.</description></item><item><title>Activity 8: Flip your image</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-8/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-8/</guid><description>In this section, we will start to learn how to flip your image using pixels.
Example - Flip your image upside down Let us flip the cat upside down. Flipping the image upside down is the same as creating a symmetrical image with respect to the horizontal central line, which is the black line in the following image.
# We need to import PIL package to manipulation with pixels.</description></item><item><title>Activity 2 - Animating the Player's Ship</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-2/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-2/</guid><description>To add some life to our game, let’s get things moving around! Animate the player we have created.
Once your ship is animated, it should look like this. Notice the flames coming out of the ship&amp;rsquo;s engine! (Although it may be faster or slower depending on the frame rate that you picked).
We will make one final touch to the animation - we will move the background as well. Change the background from a regular image to a TileSprite like this:</description></item><item><title>Activity 3 - Adding a GIF of Nuvi</title><link>https://nuevofoundation.github.io/workshops/web-basics/activity-3/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/activity-3/</guid><description>
To complete this activity, you will need to complete the following steps:
Follow this link to see the available GIFs Click on the one you like and select &amp;ldquo;Embed&amp;rdquo; Copy the code from the white box below &amp;ldquo;GIF Embed Code&amp;quot;
Paste the code anywhere in your page as long as it&amp;rsquo;s inside the &amp;lt;body&amp;gt; tags.
Try it yourself!</description></item><item><title>Activity 6 - Fix the 'if' condition to track correct score.</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-6/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-6/</guid><description>You have come a long way - we hope that you are enjoying this workshop!2
In this activity, you need to apply your knowledge of &amp;lsquo;if&amp;rsquo; control structures you learned in the Python basics workshop.
Find # TODO (ACTIVITY 6) in the code. We have created an 'if' block with a wrong condition for tracking the score when the right paddle misses the ball on purpose. This not only causes the wrong score to be displayed on screen - it also causes the ball to move in an erratic manner.</description></item><item><title>Activity 7 - Input line</title><link>https://nuevofoundation.github.io/workshops/secret-messages/activity-7/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/activity-7/</guid><description>Congratulations!
You are very close to completely saving the nation. All that remains is to be able to enter a complete sentence! For this we only have to make a few small changes. First, you need to use the statement to enter the string:getline().
string phrase; getline(cin, phrase); By doing it this way, the console will be able to accept a complete message, not just a single word.
Follow these steps, and complete the program to save the kingdom:</description></item><item><title>Part 2 - Building a Mandala Flower</title><link>https://nuevofoundation.github.io/workshops/python-turtle/part-2/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/part-2/</guid><description>Great job! You finished building a honeycomb for Alex’s beehive, but Alex needs to also get his pollen from flowers! Wouldn’t it be nice to add a flower to the picture as well? In part 2, we will be creating a mandala flower!
(Stay tuned - we&amp;rsquo;ll show you what a mandala flower looks like.)</description></item><item><title>Booleans</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/booleans/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/booleans/</guid><description>Booleans Booleans are true or false statements. Unlike strings or numbers, booleans store statements of truth: is what I am saying true or false? For example, if I ask, &amp;ldquo;Are you a robot?&amp;quot;, this question produces a true or false result, which we call a Boolean. In this case, since you are not a robot (hopefully!), we would produce false.
We can also use math operators to create boolean expressions. Here are some examples; however, notice the unusual symbols for &amp;ldquo;equal to&amp;rdquo; and &amp;ldquo;not equal to&amp;rdquo;:</description></item><item><title>Activity 4 - Add effects to your song</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/activity-4-add-effects-to-your-songs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/activity-4-add-effects-to-your-songs/</guid><description>Effects in EarSketch Effects allows the producer to alter the sound of the audio clip into its own unique sound. Similar to how we used fitMedia() to add new audio clips, we must use the setEffect() function to define specific effects for each audio clip. It is important to note that multiple effects can be placed on the same track. This allows for the producer to combine multiple effects together.</description></item><item><title>Appendix</title><link>https://nuevofoundation.github.io/workshops/arduino/appendix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/arduino/appendix/</guid><description>Appendix The components, in detail Imagine our circuit is a play. Before the final performance in front of an audience, we need a place to practice. This is where the breadboard comes in.
Breadboards are simple platforms that we can use to build temporary circuits for testing and debugging before finalizing our design and permanently soldering (welding) it together. Breadboards allow us to easily add, remove, or reposition components. Below on the left is an image of a breadboard.</description></item><item><title>Activity 6 - A BAD File</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-6/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-6/</guid><description>I know I had a file secret-message.txt with one of my favorite quotes in it. "Do. Or do not. There is no try." Can you help me find it? Searching for a pattern in a file? grep (global search for regular expression and print the result) is a command used to search for text within files. There are different flags or options that can change how it is used.</description></item><item><title>Firing</title><link>https://nuevofoundation.github.io/workshops/unity/firing/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/firing/</guid><description>Now that the projectile is all set up, let&amp;rsquo;s get Nuvi firing those projectiles. Make a script called &amp;ldquo;FiringBehavior&amp;rdquo;, then copy and paste this code:
using System.Collections; using System.Collections.Generic; using UnityEngine; public class FiringBehavior : MonoBehaviour { public Transform spawn_coor; //where the projectile will spawn public float projectile_speed; //how fast projectile will go public GameObject projectile_object; //red projectile sprite // Start is called before the first frame update void Start() { projectile_speed = 15f; } // Update is called once per frame void Update() { if(Input.</description></item><item><title>Booleans</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/booleans/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/booleans/</guid><description>Booleans are true or false statements. Unlike strings or numbers, booleans store statements of truth: is what I am saying true or false? For example, if I ask, &amp;ldquo;Are you a robot?&amp;quot;, this question produces a true or false result, which we call a Boolean. In this case, since you are not a robot (hopefully!), we would produce false. We can also use math operators to create boolean expressions. Here are some examples; however, notice the unusual symbols for &amp;ldquo;equal to&amp;rdquo; and &amp;ldquo;not equal to&amp;rdquo;:</description></item><item><title>Activity 6 - Testing the Model (Again!)</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-6/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-6/</guid><description>Let&amp;rsquo;s repeat what we did in Activity 5 with the second clothing sample you chose in Activity 2. Change the index value to the one used for the second image in Activity 2. Then, repeat Activity 5 starting from predictions[your_index_value].</description></item><item><title>Activity 9: Rotate your image</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-9/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-9/</guid><description>In this section, we will start to learn how to rotate your image using pixels.
Example - Rotate your image 180 degree clock-wise Let us rotate our cat 180 degrees clock-wise. # We need to import PIL package to allow manipulation with pixels. from PIL import Image # Open the cat image img = Image.open(&amp;#34;cat.png&amp;#34;) width = img.size[0] height = img.size[1] # Set up a new image with the half width and height newimg = Image.</description></item><item><title>Enabling User Inputs</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/input/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/input/</guid><description>User Inputs Inputs are essential because without the user inputting things with controls, our game isn&amp;rsquo;t really much of a game. Although Phaser supports a variety of different input options, we are going to go over three that you will use in the Space Invaders Game.
Arrow Keys Let&amp;rsquo;s start with one of the most important controls: arrow keys. First, we will create a variable that is able to detect when the player presses an arrow key.</description></item><item><title>Activity 4 - Try the form and change the style</title><link>https://nuevofoundation.github.io/workshops/web-basics/activity-4/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/activity-4/</guid><description>Adding a Contact Form Finally, we will add a contact form to let people reach us if they are interested in Benji.
Most browsers do not support sending emails directly from the contact form because it&amp;rsquo;s an easy way for trouble makers to send spam to users. Spam is an irrelevant or inappropriate message sent over the internet. Therefore, to send a form, we will use a free service called FormSpree .</description></item><item><title>Activity 7 - Define the key combination to exit the game</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/activity-7/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/activity-7/</guid><description>Time for the final activity in this workshop; yay! You have done an awesome job getting here. You should be proud of yourself!
In this activity, you need to change the way the game exits anytime a given key combination is pressed.
Find # TODO (ACTIVITY 7) in the code. The Pygame library gives you a handy way to detect what keystrokes are being pressed while the program is running by using event .</description></item><item><title>Activity 6 - Moving the turtle</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-6/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-6/</guid><description>Our first step is to draw a smaller beehive so that we can draw both the beehive and the flower on the screen. We have already done this for you - do you see what we have changed in order to draw a smaller beehive?
def draw_hexagon(): for i in range(6): turtle.forward(20) turtle.left(60) def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.forward(20) turtle.right(60) Next, we need to move the turtle to a new location to draw the flower (we don’t want to draw the flower on top of the beehive!</description></item><item><title>Conclusion</title><link>https://nuevofoundation.github.io/workshops/secret-messages/activity-8/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/activity-8/</guid><description>Congratulations!
You have done an amazing job. You have saved the kingdom and while doing that you learned C++ programming as well! :)
Let&amp;rsquo;s review what you learned:
You have used the console to input and send encrypted or decrypted messages. You usedvariables to store the messages that were going to be sent out. You used loops to analyze each letter in the messages. You used conditionals to determine if encryption or decryption was needed.</description></item><item><title>Boolean Operators</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/boolean-operators/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/boolean-operators/</guid><description>Booleans Operators You can also connect boolean expressions together using the &amp;amp;&amp;amp; (AND) and the || (OR) operator. For example, suppose I ask: &amp;ldquo;Are you a human, and is Nuvi a robot?&amp;rdquo; The word &amp;ldquo;and&amp;rdquo; connects the two true-false questions together. In this case, since it is true that you are a human, and it is also true that Nuvi is a robot, then the overall result is true.
Here&amp;rsquo;s a chart that describes what happens when we connect booleans together:</description></item><item><title>Activity 5 - Use effects to fade in</title><link>https://nuevofoundation.github.io/workshops/python-earsketch/activity-5-use-effects-to-fade-in/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-earsketch/activity-5-use-effects-to-fade-in/</guid><description>Now that you have one effect in your song, let&amp;rsquo;s try to fade in the introduction of our song.
In activity 4, we used setEffect function to apply an effect to a specific track for the entire duration of the song, but what if you only want a specific section of your song to have an effect? Use the setEffect function with more parameters! effectStartValue: The starting value applied to the parameter effectStartLocation: The measure at which the starting value is set effectEndValue: The ending value of the parameter effectEndLocation: The measure at which the ending value is set This version of the setEffect allows for us to perform automation on a specific piece of our song.</description></item><item><title>Exercise 1 - Binary Tree Implementation</title><link>https://nuevofoundation.github.io/workshops/debugging/e1-binary-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/e1-binary-tree/</guid><description>The binary tree is one of the simplest data structures in computer science and the ideas it uses are very useful. It stores sortable data and boasts an optimal runtime of O(log n) for searching, adding, and removing elements. However, this performance depends heavily on the order in which elements are added or removed, which limits its use to academic discussion.
The Theory A binary tree consists of many nodes that are linked together.</description></item><item><title>Activity 7 - What's wrong with the file?</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-7/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-7/</guid><description>Malware can be dangerous! Don't open it right away! Instead let's use the command line to take a peek. For files that we aren&amp;rsquo;t sure about, we need to peek at them so we don&amp;rsquo;t accidentally open a virus.
How can we look at the first lines of the file? Sometimes you just need to look at the beginning of a file. The command head shows the first line of a file.</description></item><item><title>Triggers and Tags</title><link>https://nuevofoundation.github.io/workshops/unity/triggers-and-tags/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/triggers-and-tags/</guid><description>Triggers Now, let&amp;rsquo;s stop and think about how we want our projectile to work. A projectile is going to be fired, and then when it hits an enemy it will disappear. &amp;hellip;That&amp;rsquo;s not really physics, is it? Physics can&amp;rsquo;t make an object disappear into thin air, so this disappearing will have to be a custom behavior that we add to the projectile using a script. The disappearing behavior will happen when the projectile touches an enemy.</description></item><item><title>Conditionals</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/conditionals/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/conditionals/</guid><description>We can use if statements to run a code statement only if certain conditions are met.
For example:
if (isRainingOutside == true) { takeUmbrella = true; } else { takeUmbrella = false; } For our game, we should use if statements to determine if a player has 3 vertical, horizontal, or diagonal matches.
Inside the () beside if, you should specify a Boolean expression. Booleans are true or false statements. We can utilize this in our if statement.</description></item><item><title>Variables</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/variables/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/variables/</guid><description>Variables are simply names that we can give to values such as strings, numbers, and booleans. We use variables to store information so the computer can keep track of it. Variables are created by using the type of the variable and the name of the variable. Then you can assign that variable to the information that you want to store by using = and the content.
Look at the variables at the top of of MainActivity.</description></item><item><title>Activity 3 - Add Keyboard Input to Move the Player</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-3/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-3/</guid><description>Now, let&amp;rsquo;s allow our ship to move when the player uses the keyboard. The first step is to create a cursor attribute in the create() method in Scene2.js:
The most efficient way to create movement is to create a helper function that uses the cursor attribute to check whether the keyboard has been pressed. We have already made this function for you, and it is called movePlayer():
We then move the player with this function.</description></item><item><title>Progress Update 2</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_2/</link><pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_2/</guid><description>Great job! You are now able to successfully identify which category an image most likely falls under.
To verify that your code is correct up to this checkpoint, please compare your code against the example code provided below.
The outputs of the code may vary. You only need to copy the code blocks, and not the output blocks, as they will be generated automatically in your notebook.
Compare Your Code Before moving on, please check your Google Colab notebook against the code below:</description></item><item><title>Activity 10: Making a meme!</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-10/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-10/</guid><description>One other thing we can do to enhance our image is to add text. We can do that by utilizing the Pillow ImageDraw module. Let’s import that at the top of our file along with our other import statements.
from PIL import Image from PIL import ImageFilter from PIL import ImageDraw To allow us to add text, we must redraw the same image we used earlier. Let’s do that using the draw() function, which takes in an image object.</description></item><item><title>Activity 4 - The final exercise</title><link>https://nuevofoundation.github.io/workshops/web-basics/activity-5/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/activity-5/</guid><description>Using what you&amp;rsquo;ve learned, let&amp;rsquo;s try to create a site that describes you! Try and use some or all of the following:
A heading &amp;amp; paragraph tag Different fonts Different colors Add an image to your site A list Embed a gif or video Show your style!</description></item><item><title>Wrap up</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/wrapup/</link><pubDate>Mon, 29 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/wrapup/</guid><description>Congratulations! You made it! We are excited to see that you made it here! We hope that you had fun working on your game and learning concepts that will help you make even better games. Have fun with your game!
Now, it&amp;rsquo;s your turn! Use the knowledge you gained from this tutorial to make various interesting changes to the game.
Add rounds to the game, where a player wins a round once they reach 21 points.</description></item><item><title>Activity 7 - Drawing a figure 8</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-7/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-7/</guid><description>Great! Now let’s make a figure 8 as the first step to making a mandala flower! A figure 8 is just two circles that are opposite to each other. To do this we can make use of the turtle.circle(x) method, which takes an integer x as the radius of the circle. (You may recall that 2 * radius is how wide the circle is.) Having the radius as an argument means we can decide how big or small the circle should be.</description></item><item><title>Variables</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/variables/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/variables/</guid><description>Variables Variables are simply names that we can give to values such as strings, numbers and booleans. We use variables to store information that the computer can keep track of.
Here&amp;rsquo;s how to declare a variable named str. We say str has the value &amp;quot;Hello World&amp;quot;. Can you describe what the other variables below mean?
var str = &amp;#34;Hello World&amp;#34;; var x = 88; var happy = true; Press run. Note that variables are not printed out to the console.</description></item><item><title>Activity 8 - What's different?</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-8/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-8/</guid><description>Let's look at the secret message to make sure this weird `malware.sh` file hasn't done anything to it! Differences Do we know a command that can help us find the location of the secret-message.txt file?
Let&amp;rsquo;s move into that directory and let&amp;rsquo;s check for the quote &amp;ldquo;Do. Or do not. There is no try.&amp;rdquo; from earlier. Do you remember what command can help us check?
This file usually has good and fun quotes, but there seems to be lots of changes.</description></item><item><title>Projectile/Enemy Behavior</title><link>https://nuevofoundation.github.io/workshops/unity/projectile-enemy-behavior/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/projectile-enemy-behavior/</guid><description>Projectile behavior Now that we know how triggers and tags work, let&amp;rsquo;s set up the projectile behavior! Create a new script within the Scripts folder called &amp;ldquo;ProjectileBehavior&amp;rdquo;. Then drag and drop it in the projectile inspector from the projectile in the Prefabs folder, and open the script up. Remove the Start() and Update() function and replace it with this:
void OnTriggerEnter2D(Collider2D collision) { if(collision.gameObject.tag != &amp;#34;&amp;#34;) //destroy projectile if it collides with anything but the player { // make the projectile disappear } } In this function, we want to destroy the projectile if it collides with anything but the player.</description></item><item><title>Puzzle 3</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/puzzle3/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/puzzle3/</guid><description>Puzzle 3a This puzzle will test your knowledge about variables. There is something strange with one of the player&amp;rsquo;s color on the board.
Find // PUZZLE 3a in the MainActivity.kt file and update the colorGreen variable to show green colored pieces on the board.
Puzzle 3b Why does Player 2 always win on the first move?! This doesn&amp;rsquo;t make any sense, solve puzzle 3b to fix the game.
Find // PUZZLE 3b in the MainActivity.</description></item><item><title>Plotting the Model and its Predictions</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/plotting_model/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/plotting_model/</guid><description>Now that we are able to classify the category of an individual piece of clothing using our model, we will visualize these predictions by creating a bar plot for a specified image.
Predicated Classification The plot_image function displays an image along with its predicted classification, the confidence level of the model for that category, and the actual classification (which is for reference).
A confidence level is used to convey how confident or certain we are in our answer being correct.</description></item><item><title>Activity 11: Challenge: Make your own image</title><link>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-11/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/activities/activity-11/</guid><description>In this section, we will take what you have learned so far to create and change your own picture! In this section, you are free to make any combination of basic colorboards, drawing elements, filters, cropping, flipping, changing colors or text.
Challenge - Make your own image In the following replit, we provide you some images you can play around with. You are also welcome to add your own images.</description></item><item><title>Activity 4 - Adding Enemies</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-4/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-4/</guid><description>Now, let’s make some enemies for our player to fight! Let’s first load a sprite sheet for our enemies in Scene 1 just like we did for the player. Use the same syntax you used to load in the player, but use a different name, 'assets/enemies.png as the source of the sprite sheet, and a frameWidth and frameHeight of 16:
In addition, create another animation in Scene 1 in the same way you created the player&amp;rsquo;s animation (you can use the same arguments for frameRate and repeat, but remember to use enemies for frames:</description></item><item><title>Hosting your website</title><link>https://nuevofoundation.github.io/workshops/web-basics/hosting/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/hosting/</guid><description>Host your site on the internet! Now that you&amp;rsquo;ve created your own personal website, let&amp;rsquo;s host it on the internet so everyone can access it! You will need a GitHub account to do so. If you don&amp;rsquo;t have one, create one here .
Once you have created your account and verified your email address, you will land on this page.
Now, you will need to create a new repository to store the contents of your site!</description></item><item><title>Activity 8 - Creating a mandala flower</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-8/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-8/</guid><description>We’re done creating our first figure 8! We can now use the figure_8() function to create a mandala flower! A mandala flower is many figure 8s placed on top of each other at different angles. So, to do this we need to use a&amp;hellip; you guessed it, a loop!
Create a new function called mandala_flower(). In the loop we will call the figure_8() function we wrote earlier to create a figure 8.</description></item><item><title>Activity 3 - Declare your variables</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-3/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-3/</guid><description>Activity 3 This activity is split into 2 parts and will test your knowledge about variables. Before starting, look out for HINT (ACTIVITY 3) in the code, where we declare a variable called lives which stores the number of lives the player has, and use the variable to print out how many lives the player has at the start of the game. This should give you an idea for how to complete the following two parts.</description></item><item><title>Activity 9 - Remove the Bad File</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-9/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-9/</guid><description>So malware.sh is definitely a bad file left by the hackers. We need to remove it and the directory holding it! Remove the bad file! rm is a command that removes files.
The format is: rm [filename].
rm permanently removes the file.
Remove the file we have decided is causing our problems. How can we check that the file was fully removed?
What if we need to remove a directory?</description></item><item><title>Making the UI: Part 1</title><link>https://nuevofoundation.github.io/workshops/unity/ui-part-1/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/ui-part-1/</guid><description>Menu Screen We&amp;rsquo;re almost done! To complete this game, we need to do two more things: add a UI and an Outline script to piece everything together. Let&amp;rsquo;s start with the UI.
Right click in the hierarchy window and, instead of selecting &amp;ldquo;Create Empty&amp;rdquo;, we want to create a canvas. Look for &amp;ldquo;UI&amp;rdquo; → &amp;ldquo;Canvas&amp;rdquo;. This is where all of our UI elements will be under.
Under &amp;ldquo;Canvas&amp;rdquo;, we want to create &amp;ldquo;UI&amp;rdquo; → &amp;ldquo;Image&amp;rdquo;.</description></item><item><title>Final Puzzle</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/finalpuzzle/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/finalpuzzle/</guid><description>Now that Player 2 is no longer automatically winning the game and all the game pieces look good, there is still one last thing that is weird. Tic-Tac-Toe rules state that a player can win when the player has 3 pieces connected horizontally, vertically, or diagonally. The game works well for detection the horizontal and vertical wins, but something is wrong with the diagonal check.
Look for // FINAL PUZZLE in the MainActivity.</description></item><item><title>Activity 7 - Plotting an Image's predicted Category</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-7/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/activity-7/</guid><description>Plotting an Image&amp;rsquo;s Category You may remember that, when we were plotting the models, the x-axis of the graphs was labeled with the numbers 1 through 9. These correspond to the categories of items that we defined earlier in the workshop, i.e. t-shirt/top, trouser, pullover, dress, coat, sandal, shirt, sneaker, bag, and ankle boot. We will adjust the labeling of the x-axis so that the data it displays is easier to understand.</description></item><item><title>Activity 5 - Making the Enemies Move</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-5/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-5/</guid><description>At the moment, the enemies are a bit boring because they’re just sitting still. Let’s make them move a little bit! Our goal will be to make them move from left to right like this: Let’s start by making the enemies move to the left once they’re created. We can do this by simply adding one line of code:
enemy.body.velocity.x = -90; Place in our createEnemies() method:
But if you test out the code now, we can see that the enemies just keep going to the left infinitely because of Phaser’s infinite canvas.</description></item><item><title>In case you were wondering</title><link>https://nuevofoundation.github.io/workshops/web-basics/conclusion/</link><pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/conclusion/</guid><description>You might be concerned about Benji, but we are happy to tell you that he found his home through a website just like the one you are building. Benji is now a full time good boy working hard on his tricks to earn treats.</description></item><item><title>Activity 9 - Coloring your mandala flower</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-9/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-9/</guid><description>Now that we have the shape of a mandala flower, it’s time to color it! We’re still going to use the turtle.color() method; however this time we’re going to use an RGB value instead of a string color value, so that we can produce a larger variety of colors.
RGB (Red-Green-Blue) colors In primary school, you might recall that by mixing colors together, you can produce new colors. For example, combining red and blue together make purple.</description></item><item><title>Help, I am stuck!</title><link>https://nuevofoundation.github.io/workshops/python-basics/help/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/help/</guid><description>No worries! See if any of the following helps you, if not, feel free to reach out to one of us, and we will help you. Indentation is very important when you are working in Python. Be careful of spaces &amp;amp; tabs in your code, because indentation errors can sometimes be pretty difficult to spot.
However on the positive side, strict formatting makes Python code very clean and organized.</description></item><item><title>Reading from Console</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/reading-from-console/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/reading-from-console/</guid><description>Reading from Console Now that we know the basics about variables, we can now accept input from the user. Use the following line to tell the console to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called input.
var input = Console.ReadLine(); Here&amp;rsquo;s an example of how to use Console.ReadLine to accept user input:</description></item><item><title>Activity 10 - Let's move and replace</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-10/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-10/</guid><description>Great, now that the hackers' malicious file won't cause us any more headaches, let's restore the old file so things will run smoothly again. How to fix the secret-message The command mv can also be used to replace the destination file with the source file.
The format is: mv [source filename] [destination name].
Replace the messed up secret message with the backup that we found earlier.</description></item><item><title>Making the UI: Part 2</title><link>https://nuevofoundation.github.io/workshops/unity/ui-part-2/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/ui-part-2/</guid><description>End Screen Next, we want to make an end screen that will be displayed once Nuvi defeats all the aliens. Most of this process will be very similar to how you made the Menu Screen!
Under &amp;ldquo;Canvas&amp;rdquo;, create &amp;ldquo;UI&amp;rdquo; → &amp;ldquo;Image&amp;rdquo; like you did for the starting Menu, and this time rename it to &amp;ldquo;EndScreen&amp;rdquo;. Resize to the same size as Menu.
Create &amp;ldquo;UI&amp;rdquo; → &amp;ldquo;Text&amp;rdquo; under EndScreen, rename it &amp;ldquo;EndMessage&amp;rdquo;, and type in whatever you like — this message is going to be displayed when Nuvi defeats all the aliens and the game ends!</description></item><item><title>Progress Update 3</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_3/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/progress_update_3/</guid><description>Great job! You&amp;rsquo;ve nearly reached the end!
To verify that your code is correct up to this checkpoint, please compare your code against the example code provided below.
The outputs of the code may vary. You only need to copy the code blocks, and not the output blocks, as they will be generated automatically in your notebook.
Compare Your Code Before moving on, please check your Google Colab notebook against the code below:</description></item><item><title>Activity 6 - Restarting the Player after Being Destroyed</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-6/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-6/</guid><description>We have made some pretty solid enemies, but now there&amp;rsquo;s something wrong - they don&amp;rsquo;t actually do anything to you! Specifically, they can&amp;rsquo;t actually hurt you in any way. Let&amp;rsquo;s change that. In the final game, there will be two ways you can get damaged: getting shot by an enemy laser, or directly touching the enemy. Let&amp;rsquo;s start with the latter since it is a bit easier.
Collision is relatively easy in Phaser.</description></item><item><title>Activity 10 - Randomizing the color of your mandala flower petals</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-10/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-10/</guid><description>We’ve successfully set the color of the mandala flower to an RGB value. Now, let&amp;rsquo;s explore changing the color of the individual mandala flower petals?
We will make use of python’s random library. The random.randint() method allows us to choose a random value for each of the red, green, or blue value. To choose a value that is between 0 inclusive and 256 exclusive (in other words, between 0 and 255 inclusive), we need to use random.</description></item><item><title>Activity 4 - Putting it all together</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-4/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-4/</guid><description>Activity 4 This activity has four parts. This is a great time to use your knowledge of comments, numbers, variables, and reading from console to complete the 4 activities. Some background information for each activity is provided below, and hints are provided in the code. After each part, press run and make sure there are no errors present in the console.
Activity 4.1 First, let&amp;rsquo;s introduce some more code into our game.</description></item><item><title>Activity 11 - Store and protect files</title><link>https://nuevofoundation.github.io/workshops/linux-basics/activity-11/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/activity-11/</guid><description>Thanks so much for helping us fix my machine! Now let's get everything up into one nice package. Secure your files, so they don&amp;rsquo;t get tampered with again tar is a command that creates and extracts archived files.
An archive is a collection of archive files. An archive file holds the compressed data of one or more files.
zip is a command that compresses a set of files.</description></item><item><title>Piecing it All Together</title><link>https://nuevofoundation.github.io/workshops/unity/outline/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/outline/</guid><description>Now that we have all the UI set, we want the game to function as we intend it to. Right now when we simulate the playable game, we can move Nuvi, but the end screen is already showing. To fix this, we will have a script that will dictate how the game should go. Under the Scripts folder in the Projects window, create a new script called &amp;ldquo;Outline&amp;rdquo;. Drag this script into the &amp;ldquo;Main Camera&amp;rdquo; inspector which we can locate under the hierarchy.</description></item><item><title>Answer Key - Android Tic-Tac-Toe</title><link>https://nuevofoundation.github.io/workshops/android-tictactoe/answer-key/</link><pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/android-tictactoe/answer-key/</guid><description>Puzzle 1 &amp;lt;resources&amp;gt; &amp;lt;string name=&amp;#34;app_name&amp;#34;&amp;gt;Tic-Tac-Toe&amp;lt;/string&amp;gt; &amp;lt;/resources&amp;gt; Puzzle 2 Toast.makeText(this, &amp;#34;Welcome to Tic-Tac-Toe&amp;#34;, Toast.LENGTH_LONG).show() Puzzle 3 Puzzle 3a var colorGreen = Color.GREEN Puzzle 3b var winner = -1 Final Puzzle //cross1 if (Player1.contains(1) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(9)) { winner = 1 } if (Player2.contains(1) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(9)) { winner = 2 } //cross2 if (Player1.contains(3) &amp;amp;&amp;amp; Player1.contains(5) &amp;amp;&amp;amp; Player1.contains(7)) { winner = 1 } if (Player2.contains(3) &amp;amp;&amp;amp; Player2.contains(5) &amp;amp;&amp;amp; Player2.contains(7)) { winner = 2 }</description></item><item><title>Workshop Conclusion</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/wrapup/</link><pubDate>Wed, 09 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/wrapup/</guid><description>Congratulations! You and your colleagues are now able to sort 4 times as many returned clothes! Your supervisor is impressed by this and chooses you as the Employee of the Month!
Thank you for doing this workshop! We hope you enjoyed it and learned the basics of Machine Learning!
If you would like to test the finished code, visit this link
To edit this code, click on the &amp;lsquo;Copy to Drive&amp;rsquo; button to make a personal copy of this notebook.</description></item><item><title>Activity 7 - Allowing the Player to Shoot</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-7/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-7/</guid><description>Now, we we want to add one of the most important parts of the game - shooting the enemies! Although we can defeat enemies by crashing into them, this won&amp;rsquo;t be a good idea once we add lives later. We will create a shooting effect by creating an object for the beam using a separate JavaScript file (like we did for the explosion).
We will start with some basic stuff - loading a spritesheet and animation in Scene 1 for the player&amp;rsquo;s beams:</description></item><item><title>Activity 11 - Now, it's your turn!</title><link>https://nuevofoundation.github.io/workshops/python-turtle/activity-11/</link><pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/activity-11/</guid><description>If there is any time left, try drawing your own shapes and designs! Make your picture interesting using various shapes and colors.
Click the button below to open a new blank Trinket window to start on your creation.
Click here
Help, I am stuck! Stuck? Check the Answer key for the activity that you are stuck on!</description></item><item><title>If-else statements</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/if-else-statements/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/if-else-statements/</guid><description>If-else statements You can use if statements to run code statement only if certain conditions are met. Here is an example:
var myNum = (93 + 41) / 12; if (myNum == 11) { Console.WriteLine(&amp;#34;They are equal!&amp;#34;); } Inside the () beside if, you should specify a boolean expression. If the expression is true, the code inside { } is executed. In this case, since myNum is equal to 11, They are equal!</description></item><item><title>Answer Key - Linux Basics</title><link>https://nuevofoundation.github.io/workshops/linux-basics/answer-key/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/answer-key/</guid><description>Activity 1 whoami Activity 2 pwd cd Desktop cd.. Activity 3 ls -l mv Documents/ Downloads/ ls -l Downloads mv Downloads/Documents/ . Activity 4 mkdir files touch file1 vim file1 mv file1 files Activity 5 chmod u=rwx g=rx o=x file1 chmod 751 [insert filename] Activity 6 cd grep -R &amp;quot;Do. Or do not. There is no try.&amp;quot; find . -name *.sh Activity 7 head -n 5 malware.sh tail -n 5 malware.</description></item><item><title>Building and Running your Game</title><link>https://nuevofoundation.github.io/workshops/unity/build-and-run/</link><pubDate>Wed, 06 Oct 2021 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/unity/build-and-run/</guid><description>In order to export your game, locate &amp;ldquo;File&amp;rdquo; at the top, left corner of the Unity window and select &amp;ldquo;Build Settings&amp;rdquo;. You will be greeted by this pop-up window:
The two most common builds are either the Mac build or PC build. To choose between the two, select the drop-down menu next to &amp;ldquo;Target Platform&amp;rdquo; and choose your platform choice. Finally, simply select &amp;ldquo;Build&amp;rdquo; at the bottom right. You will then be asked to choose where you want to save your game.</description></item><item><title>Answer Key</title><link>https://nuevofoundation.github.io/workshops/python-tensorflow/answer_key/</link><pubDate>Mon, 14 Sep 2020 16:19:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-tensorflow/answer_key/</guid><description>Activity 1 Task 1: class_names = [&amp;#39;T-shirt/top&amp;#39;, &amp;#39;Trouser&amp;#39;, &amp;#39;Pullover&amp;#39;, &amp;#39;Dress&amp;#39;, &amp;#39;Coat&amp;#39;,&amp;#39;Sandal&amp;#39;, &amp;#39;Shirt&amp;#39;, &amp;#39;Sneaker&amp;#39;, &amp;#39;Bag&amp;#39;, &amp;#39;Ankle boot&amp;#39;] Activity 2 Question 1: plt.figure() plt.imshow(train_images[7]) #Shows the first image in the data set as a plot or different colored pixels plt.colorbar() #displays the color bar on the right plt.grid(False) plt.show() #displays the entire plot Question 2: 255! The max pixel value is 255 for any index used.
Activity 3 Question 1: To answer Q1 you would change your code to the following:</description></item><item><title>Activity 8 - Allowing the Enemies to Shoot</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-8/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-8/</guid><description>Now, we will make the enemies shoot back at the player. Each enemy will shoot randomly, and the difficulty (which will later be escaleted with each level) is defined by how often they randomly shoot.
The enemy beam is rather similar to the player’s beam. We will again make a very similar enemyBeam.js file with nearly the same code as the playerBeam.js but with different variable names and numbers:
We will share sprite and animation for the player&amp;rsquo;s beams and enemy&amp;rsquo;s beams.</description></item><item><title>Java: TicTacToe - Answer Key</title><link>https://nuevofoundation.github.io/workshops/java-tictactoe/answer-key/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-tictactoe/answer-key/</guid><description>activity-1: Game SetUp public class TicTacToe_Nuevo { public static void main(String args[]){ // the board that stores moves String[] board = {&amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;}; // starting board that labeled position(only printed once) String[] startBoard = {&amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;6&amp;#34;, &amp;#34;7&amp;#34;, &amp;#34;8&amp;#34;, &amp;#34;9&amp;#34;}; System.out.println(&amp;#34;&amp;lt;&amp;lt;&amp;lt;~ Tic Tac Toe ~&amp;gt;&amp;gt;&amp;gt;\n* Choose number 1 - 9 to place your move\n* Player: &amp;#39;X&amp;#39; Computer: &amp;#39;O&amp;#39;\n&amp;#34; ); printBoard(startBoard); System.</description></item><item><title>Java: Basics - Answer Key</title><link>https://nuevofoundation.github.io/workshops/java-basics/answer-key/</link><pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-basics/answer-key/</guid><description>activity-1: Print Statements and Comments Hello World class Main { public static void main(String[] args) { System.out.print(&amp;#34;Hello World&amp;#34;); System.out.print(2020); System.out.print(&amp;#39;@&amp;#39;); } } Output:
Hello World2020@ Owl class Main { public static void main(String[] args) { System.out.println(&amp;#34;Hello world!&amp;#34;); System.out.println(&amp;#34; ​, ___ / ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ \\&amp;#34;); System.out.println(&amp;#34;​`\\/{o,o} &amp;lt; Hi, I am Minerva. Patrick&amp;#39;s friend! |&amp;#34;); System.</description></item><item><title>Pygame Pong game - Answer Key</title><link>https://nuevofoundation.github.io/workshops/pygame-pong/answer-key/</link><pubDate>Sun, 29 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/pygame-pong/answer-key/</guid><description>Activity 1 WIDTH = 800 # The value of WIDTH was 20 previously Activity 2 COLOR = (70, 130, 180) Activity 3 self.paddles.append(Paddle( # The left paddle self.BALL_VELOCITY, pygame.K_w, pygame.K_s, 0, self.HEIGHT / 2 - self.PADDLE_HEIGHT / 2, self.PADDLE_WIDTH, self.PADDLE_HEIGHT )) Activity 4 self.paddles.append(Paddle( # The right paddle self.BALL_VELOCITY, pygame.K_UP, pygame.K_DOWN, self.WIDTH - self.PADDLE_WIDTH, self.HEIGHT / 2 - self.PADDLE_HEIGHT / 2, self.PADDLE_WIDTH, self.PADDLE_HEIGHT )) Activity 5 font_label = &amp;#39;arial&amp;#39; font_name = pygame.</description></item><item><title>Answer Key - Web Basics</title><link>https://nuevofoundation.github.io/workshops/web-basics/answer-key/</link><pubDate>Sat, 28 Mar 2020 12:53:41 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/web-basics/answer-key/</guid><description>Special note: This curriculum allows students to be creative. The below is just an example of what they can do, please use your best judgement and ask for guidance if needed. The answer key provided here is fairly long because we are including snippets of full HTML for context.
When a student clicks on the &amp;lsquo;Try it yourself!&amp;rsquo; it&amp;rsquo;ll open a new tab with some of the HTML code (and CSS code) already scaffolded.</description></item><item><title>C++ Secret Messages - Answer Key</title><link>https://nuevofoundation.github.io/workshops/secret-messages/answer-key/</link><pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/secret-messages/answer-key/</guid><description>The following 5 lines are needed for all the activities.
#include &amp;lt;iostream&amp;gt; using namespace std; int main() { return 0; } Activity 1 cout &amp;lt;&amp;lt; &amp;quot;Hello programmer!&amp;quot; &amp;lt;&amp;lt; endl; Activity 2 string name; cin &amp;gt;&amp;gt; name; cout &amp;lt;&amp;lt; &amp;quot;Hello &amp;quot; &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl; Activity 3 string name; cin &amp;gt;&amp;gt; name; for(int i=0; i&amp;lt;name.size(); i++){ cout &amp;lt;&amp;lt; name[i] &amp;lt;&amp;lt; endl; } Activity 4 int number; cin &amp;gt;&amp;gt; number; if(number == 1){ cout &amp;lt;&amp;lt; &amp;quot;Encrypt a message&amp;quot; &amp;lt;&amp;lt; endl; }else{ cout &amp;lt;&amp;lt; &amp;quot;Decrypt a message&amp;quot; &amp;lt;&amp;lt; endl; } Activity 5 #include &amp;lt;iostream&amp;gt; using namespace std; int main() { string code; string name; cin &amp;gt;&amp;gt; code; cin &amp;gt;&amp;gt; name; int counter = 0; for(int i=0; i&amp;lt;name.</description></item><item><title>Python Guess The Number - Answer Key</title><link>https://nuevofoundation.github.io/workshops/python-guess-number/answer-key/</link><pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-guess-number/answer-key/</guid><description>Playing with randit import random number = random.randint(1,100) print(&amp;#34;your randomly generated number is&amp;#34;, number) Create the &amp;lsquo;Guess the number game&amp;rsquo; import random #Use the random.randint() function here to generate a number #Also define the number of guesses you want to allow here randomNumber = random.randint(1,10) guessesLeft = 3 #Create a loop here that repeatedly asks the player for a number and compares it to the random number #Remember to decrease the number of guesses left so the player doesn&amp;#39;t get unlimited tries!</description></item><item><title>Python Interactive - Answer Key</title><link>https://nuevofoundation.github.io/workshops/python-interactive/answer-key/</link><pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-interactive/answer-key/</guid><description>Here is a full solution to the workshop. The solutions to each activity cannot stand alone so instead, there will be comments indicating where each activity&amp;rsquo;s solution is within the larger block of code.
# Activity 2 dictMenu = {&amp;#39;Creamy Pesto Pasta&amp;#39;:[15.99, &amp;#39;Penne pasta tossed in a creamy pesto sauce, topped with black olives and sundried tomatoes&amp;#39;], &amp;#39;Spring Rolls&amp;#39;:[8.00, &amp;#39;Stir fried vegetables such as cabbage and carrot mixed with vermicelli and thin strips of fried tofu, wrapped in a crunchy outer layer.</description></item><item><title>Python Turtle - Answer Key</title><link>https://nuevofoundation.github.io/workshops/python-turtle/answer-key/</link><pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-turtle/answer-key/</guid><description>The below 3 lines are needed for the introduction activity and all the other activities as well.
import turtle turtle.color(&amp;#34;orange&amp;#34;) turtle.shape(&amp;#34;turtle&amp;#34;) Introduction Activity turtle.color(&amp;#34;orange&amp;#34;) turtle.forward(50) Activity 1 turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) Activity 2 for i in range(4): turtle.forward(50) turtle.left(90) Activity 3 for i in range(6): turtle.forward(50) turtle.left(60) Activity 4 def draw_hexagon(): for i in range(6): turtle.forward(50) turtle.left(60) draw_hexagon() Activity 5 def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.</description></item><item><title>Activity 5 - Use conditional statements</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-5/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-5/</guid><description>Activity 5 This activity is split into two parts. Use your knowledge of if-else statements to complete the activities. As always, press run after completing each part to check for errors.
Activity 5.1 After the player guesses a letter, and we have checked whether the letter appears in the word, we need to check if the entire word has been guessed. If the entire word has been correctly identified, we should let the computer know that the player has won the game.</description></item><item><title>Closing</title><link>https://nuevofoundation.github.io/workshops/linux-basics/closing/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/linux-basics/closing/</guid><description>Congratulations! You have helped us thwart the hackers evil shenanigans by learning several Linux commands and how to use them. Thanks so much for helping SHH! But don't forget - this is all top secret! Click the &amp;ldquo;Download&amp;rdquo; button below to receive your honorary certificate of completion!
Download link</description></item><item><title>Activity 9 - Adding Score, Levels, and Lives</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-9/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-9/</guid><description>Now, we will add some numbers to quantify our game! The easiest one to implement is the score. Create a text variable on the top left of the screen that displays Score: and the value of a num variable that stores the player&amp;rsquo;s score.
this.scoreText = this.add.text(20, 10, &amp;#34;Score: &amp;#34; + this.score, { font: &amp;#34;25px Arial&amp;#34;, fill: &amp;#34;white&amp;#34; }); this line print score variable at the top left of the screen.</description></item><item><title>While loops</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/while-loops/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/while-loops/</guid><description>While loops while loops are an easy way to repeat the execution of lines without having to reuse a line many times. For example, to print Hello World five times in a row, you can do:
var counter = 1; while (counter &amp;lt;= 5) { Console.WriteLine(&amp;#34;Hello World&amp;#34;); counter = counter + 1; } Like an if statement, inside the () beside while, you should specify a boolean expression. If the expression is true, the code inside the curly braces { } is executed.</description></item><item><title>Activity 10 - Adding a Title Screen</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-10/</link><pubDate>Thu, 20 Aug 2020 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/activity-10/</guid><description>Now, we will put our separation of scene 1 and scene 2 to good use by adding a title screen to finish off our game!
This is very simple! we will first comment out startGame() line from the bottom of create() in Scene 1. We are going to use startGame() function to start game instead of start automatically as before:
The console will go back to a black canvas. To make a title screen, we need to import the background screen and some text in start page section from scene 1:</description></item><item><title>Activity 6 - Complete the game!</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-6/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/activity-6/</guid><description>Instructions Now, let&amp;rsquo;s finally address the bug that was introduced in Activity 4.2. The game should continue to ask the player to guess letters if they have some lives remaining, and they have not yet won the game. Look at the for loop. As you might have noticed, even though you might have lives remaining, the game abruptly stops after only 3 guesses. We will replace this for-loop with a while-loop, with the correct looping condition.</description></item><item><title>Answer Key - Python Image Manipulation</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/answer-key/</link><pubDate>Sat, 25 Apr 2020 10:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/answer-key/</guid><description>Python Basic Answers: Activity 1: # The sentences can be anything! Encourage having fun with it. print(&amp;#34;My name is Nuvi!&amp;#34;) print(&amp;#34;I love making memes.&amp;#34;) Activity 2: # There can be a variety of answers, here are a few: print(&amp;#34;Nuevo&amp;#34; + &amp;#34;&amp;#34; + &amp;#34;Foundation&amp;#34;) print(&amp;#34;Nu&amp;#34; + &amp;#34;evo&amp;#34; + &amp;#34;Found&amp;#34; + &amp;#34;ation&amp;#34;) print(&amp;#34;N&amp;#34; + &amp;#34;uevo F&amp;#34; + &amp;#34;oundation&amp;#34;) Activity 3: print(2-19) # -17 print((3 + 5) * 6) # 48 print((13 + 5 * 8) / (6 - (3 + 7))) # -13.</description></item><item><title>Answer Key - C# Guess the Word</title><link>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/answer-key/</link><pubDate>Sat, 28 Mar 2020 10:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/csharp-guess-the-word/answer-key/</guid><description>Activity 1: using System; class MainClass { public static void Main(string[] args) { Console.WriteLine(&amp;#34;Hello there&amp;#34;); Console.WriteLine(&amp;#34;I am awesome&amp;#34;); } } Activity 2: using System; class MainClass { public static void Main(string[] args) { Console.WriteLine(&amp;#34;Nuevo&amp;#34; + &amp;#34; &amp;#34; + &amp;#34;Foundation&amp;#34;); Console.WriteLine(&amp;#34;Nue&amp;#34; + &amp;#34;vo &amp;#34; + &amp;#34;Foundation&amp;#34;); Console.WriteLine(&amp;#34;Nuevo &amp;#34; + &amp;#34;Foun&amp;#34; + &amp;#34;dation&amp;#34;); } } Activity 3: class MainClass { public static void Main(string[] args) { Console.WriteLine(2-19); Console.WriteLine((3+5)*6); Console.WriteLine((13+5*8)/(6-(3+7))); } } Activity 4: class MainClass { public static void Main(string[] args) { Console.</description></item><item><title>Answer Key - Phaser Space Invaders Game</title><link>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/answer-key/</link><pubDate>Sat, 28 Mar 2020 10:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/phaser-space-invaders-game/answer-key/</guid><description>Activity 1 Scene1.js
preload(){ this.load.image(&amp;#34;background&amp;#34;, &amp;#34;assets/space.png&amp;#34;); this.load.spritesheet(&amp;#39;player&amp;#39;, &amp;#39;assets/player.png&amp;#39;, { frameWidth: 32, frameHeight: 48 }); } Scene2.js
create(){ this.background = this.add.image(config.width/2, config.height/2, &amp;#34;background&amp;#34;); this.player = this.physics.add.sprite(config.width / 2, config.height - 75, &amp;#34;player&amp;#34;); } Activity 2 Scene1.js
create(){ this.anims.create({ key: &amp;#34;player_anim&amp;#34;, frames: this.anims.generateFrameNumbers(&amp;#34;player&amp;#34;), frameRate: 20, repeat: -1 }); } Scene2.js
create(){ // delete your previous background code and create it again as a tile sprite this.background = this.add.tileSprite(0, 0, config.width, config.height, &amp;#34;background&amp;#34;); this.</description></item><item><title>Project Overview</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/project-overview/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/project-overview/</guid><description>Applications like Instagram and Snapchat allow its users to modify their images. For example, you can rotate your image and make it black and white. Ever wondered how these apps do it? The answer is using code!
Today, we’re going to learn how to do some image manipulations using Python!
Setting up the project To get started let’s start with importing a module. What does that mean? To do fun stuff with images, we need to unlock some functions to use.</description></item><item><title>Open an image</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/open-image/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/open-image/</guid><description>To change an image, we must open an image. We can use the Pillow Image module we just imported in the setup. Let’s first find some images to open. Find an image of your choice and download it. You can also use the one we use in this workshop: Click to download.
Once you have downloaded it, navigate back to your Replit window and upload your image by clicking on the three dots and selecting ‘upload file’.</description></item><item><title>Rotate the image</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/rotate-image/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/rotate-image/</guid><description>Now that we have the image in our code, let’s turn it in different directions. To do that, let’s look at the Pillow Image function rotate().
The rotate image works using angles. For example, rotate(45) will tilt your picture sideways by 45 degrees. Using rotate(90) will turn your picture sideways.
Let’s give that a try! Let’s rotate the image before we save it:
image = Image.open(&amp;#34;cat.jpg&amp;#34;) image.rotate(90) image.save(&amp;#34;myCat.jpg&amp;#34;) Hmm, the picture didn’t seem to rotate.</description></item><item><title>Image Filters</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/image-filters/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/image-filters/</guid><description>I want to turn my cat black and white! Let&amp;rsquo;s do this by using the Pillow ImageFilter function filter() &amp;amp; convert().
To use the filter() function, you can specify the ImageFilter type within the parentheses. For example, image.filter(ImageFilter.BLUR) will make the image blurry. Or, if you use ImageFilter.CONTOUR instead, it will add a ‘sketch’ type effect to your image.
Add something like this below your previously added code
blurredImage = image.</description></item><item><title>Making a meme!</title><link>https://nuevofoundation.github.io/workshops/image-manipulation/making-meme/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/image-manipulation/making-meme/</guid><description>So now that my image looks how I want it to look, I want to add some text. We can do that by utilizing the Pillow ImageDraw module. Let’s import that at the top of our file along with our other import statements.
from PIL import Image from PIL import ImageFilter from PIL import ImageDraw To allow us to add text, we must redraw the same image we used earlier for image manipulation.</description></item><item><title>Exercise 2 - Binary Heap Implementation</title><link>https://nuevofoundation.github.io/workshops/debugging/e2-binary-heap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/e2-binary-heap/</guid><description>A binary heap is an important data structure used most often to implement a data type called a priority queue. It is also used conceptually in sorting algorithm called heapsort. Its distinctive feature is its O(1) query for the largest or smallest value within its contents, depending on what kind of heap we are talking about.
The Theory The binary heap is conceptually a complete binary tree. This means that nodes are added to the tree in level order, and the depth of the tree increases only when there is no room the deepest tree level.</description></item><item><title>Exercise 3 - The Burrows-Wheeler Transform</title><link>https://nuevofoundation.github.io/workshops/debugging/e3-burrows-wheeler-transform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/debugging/e3-burrows-wheeler-transform/</guid><description>The Burrows-Wheeler transform is an algorithm used in data compression. It takes as an input a string, and outputs an encoded string, which usually has similar characters clustered together.
The Theory The algorithm is relatively straightforward and easy to understand.
Take the input string and extract all of its rotational transformations. (See picture). Sort the rotations in lexicographical order, ascending. Take the last column of the sorted transform; this is the output.</description></item><item><title>SQL Workshop Answer Key</title><link>https://nuevofoundation.github.io/workshops/sql_workshop/answer-key/</link><pubDate>Sat, 28 Mar 2020 10:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/sql_workshop/answer-key/</guid><description>Note: Do not use Firefox Browser for this workshop!
For Drag and Drop Activities: Correctly chosen blocks will have a green highlight around them while incorrect blocks will highlight in red until the player moves the block.
For Type-In Activities: Correct words/commands will be highlighted in green in the Previous Command Box, incorrectly placed or misused words will be highlighted in red. If the command players write matches the answer key and it still highlights in red, make sure there are no extra spaces at the end or beginning of the command!</description></item><item><title/><link>https://nuevofoundation.github.io/workshops/java-datastructures/img/lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/img/lab/</guid><description/></item><item><title/><link>https://nuevofoundation.github.io/workshops/java-datastructures/lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/lab/</guid><description/></item><item><title>Activity 1: FIFA Linear Regression</title><link>https://nuevofoundation.github.io/workshops/machine-learning/fifa_linear_regression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/machine-learning/fifa_linear_regression/</guid><description>Let&amp;rsquo;s learn some machine learning to evaluate player overall ratings in FIFA video game Machine learning is the science to study *algorithms* and *models* that enable computers to recognize things, make decisions, even predict results without explicit instructions. As an example, when talking to your phone assistant such as Siri or Cortana, machine learning helps to translate your voice into text and further understand what you requested. Is that amazing? Today we are going to show you how to *teach* a computer evaluate overall ratings for soccer player based on their attributes step by step.</description></item><item><title>Answer key - Python-Pixel</title><link>https://nuevofoundation.github.io/workshops/python-pixel/answer-key/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-pixel/answer-key/</guid><description>Activity1 This is the sample answer for creating a blue color board with width 100 and height 100.
from PIL import Image width=100 height=100 color=&amp;#39;blue&amp;#39; img = Image.new(&amp;#39;RGB&amp;#39;, (width, height), color) img.save(&amp;#39;pixel-activity1.png&amp;#39;) Activity2 This is the sample answer to draw a line from the middle of the color board from Activity1 to its bottom right corner.
#Create your color board from PIL import Image # setup image first img = Image.</description></item></channel></rss>