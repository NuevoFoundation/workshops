<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basics on Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/</link><description>Recent content in Basics on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Feb 2020 13:24:17 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/python-basics/basics/index.xml" rel="self" type="application/rss+xml"/><item><title>Starting up with Repl.it</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/repl-it/</link><pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/repl-it/</guid><description>Open your favorite internet browser (such as Edge, Firefox, Google Chrome, Internet Explorer) and go to https://replit.com. Scroll to the bottom of the page, look for languages, search for Python and click it.
You should see something like the following screen:
We will ignore some of the details on this screen, but we will go over some of the basics that show up. The main.py file contains code, or instructions for the computer to run.</description></item><item><title>Writing to Console (Print statement)</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/writing-to-console/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/writing-to-console/</guid><description>Make your program talk to you! Print statements are used to print something on the console. Use print(&amp;quot;Hello World&amp;quot;) to print Hello World in the output screen. We will later learn that print is a function and we use it to perform a print job. Whatever you pass to the print function is printed on the screen. Let&amp;rsquo;s start by doing a print statement. A print statement allows you to take control of the computer and make it print something out!</description></item><item><title>Comments</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/comments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/comments/</guid><description>Make notes while you are coding Comments are the parts of the code that do not get evaluated. In Python, they are preceded by the # symbol. Anything after the # symbol is part of the comment and is ignored by your code. Comments are put in the code to tell the readers what the code is doing. They can make maintenance of code easy and can also help in finding bugs.</description></item><item><title>Variables</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/variables/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/variables/</guid><description>Variables are simply names that we can give to values such as strings, numbers, and booleans. Here’s how to make a variable named s. We say s is a string that has the value &amp;quot;Hello, World!&amp;quot;. Can you describe the following variables?
s = &amp;#34;Hello, World!&amp;#34; x = 88 happy = True Press run.
Note that variables are not printed out to the console. Instead, the variable simply saves the string, number, or boolean into the computer’s memory.</description></item><item><title>Reading from the Console</title><link>https://nuevofoundation.github.io/workshops/python-basics/basics/reading-from-console/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/python-basics/basics/reading-from-console/</guid><description>Now that we know the basics about variables, we can ask for input from the user. Use the following line to tell our program to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called value.
value = input Here&amp;rsquo;s and examples of how to use input() to accept user input:
print(&amp;#34;What&amp;#39;s your name?&amp;#34;) value = input() print(&amp;#34;Hello &amp;#34; + value + &amp;#34;!</description></item></channel></rss>