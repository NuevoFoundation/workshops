<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nuevo Foundation 워크샵 on Nuevo Foundation Workshops</title>
    <link>/kr/</link>
    <description>Recent content in Nuevo Foundation 워크샵 on Nuevo Foundation Workshops</description>
    <generator>Hugo</generator>
    <language>kr</language>
    <lastBuildDate>Wed, 13 Sep 2023 11:45:38 -0700</lastBuildDate>
    <atom:link href="/kr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Visual Studio Code 알아보기</title>
      <link>/kr/razor/learn-vscode/</link>
      <pubDate>Tue, 12 Sep 2023 11:45:38 -0700</pubDate>
      <guid>/kr/razor/learn-vscode/</guid>
      <description>&lt;h2 id=&#34;visual-studio-code-소개&#34;&gt;Visual Studio Code 소개&lt;/h2&gt;&#xA;&lt;p&gt;Visual Studio Code는 코드 편집기입니다. 이 편집기의 사용자 인터페이스와 레이아웃은 다른 많은 코드 편집기와 유사합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;왼쪽 사이드 바(Side Bar): 인터페이스의 왼쪽에는 사이드 바가  있으며, 코드 프로젝트의 파일과 폴더에 접근할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;오른쪽 편집 영역(Editor Area): 인터페이스의 오른쪽에는 편집 영역이 있습니다. 애플리케이션 파일의 내용을 확인하고 편집할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;visual-studio-code-사용자-인터페이스의-주요-영역-이해하기&#34;&gt;Visual Studio Code 사용자 인터페이스의 주요 영역 이해하기&lt;/h3&gt;&#xA;&lt;p&gt;Visual Studio Code의 사용자 인터페이스는 다음의 6가지 주요 섹션으로 구성됩니다. 아래 다이어그램과 설명을 통해 각 섹션의 역할을 이해해봅시다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction</title>
      <link>/kr/java-tictactoe/using-repl-it/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/kr/java-tictactoe/using-repl-it/</guid>
      <description>&lt;h2 id=&#34;틱택토-요약&#34;&gt;틱택토 요약&lt;/h2&gt;&#xA;&lt;img src=&#34;../images/code.png&#34; height=&#34;500&#34; alt=&#34;틱택토: 당신의 자바 프로젝트. void main(String args[])는 플레이어의 입력을 읽고, 입력을 처리하며, 게임의 각 라운드를 프롬프트하거나 게임의 승자를 출력하는 메서드입니다. void printBoard(String[] curBoard)는 게임 보드를 출력하는 메서드입니다. int getComputerMove(String[] curBoard)는 컴퓨터를 위한 사용 가능한 이동을 무작위로 반환합니다. String getWinner(String[] curBoard)는 게임의 승자, 무승부 또는 게임이 계속되어야 하는 경우에는 빈 문자열을 반환합니다..&#34; /&gt; &#xD;&#xA;&lt;h2 id=&#34;replit-사용하기&#34;&gt;Replit 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;오늘 여러분은 Replit을 사용하여 자바로 코딩하는 방법을 배웁니다.&lt;/p&gt;&#xA;&lt;p&gt;시작하기 전에 Replit 계정이 필요합니다. 계정이 없으면 아래 버튼을 눌러 가입하세요. 이미 계정이 있다면, 아래 버튼을 사용하여 로그인하세요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>사이트 구축 방식</title>
      <link>/kr/guidelines/site-architecture/</link>
      <pubDate>Wed, 29 Jul 2020 14:08:32 -0700</pubDate>
      <guid>/kr/guidelines/site-architecture/</guid>
      <description>&lt;h1 id=&#34;사이트-구축-방식&#34;&gt;사이트 구축 방식&lt;/h1&gt;&#xA;&lt;p&gt;워크숍 서브도메인(subdomain)의 콘텐츠는 Hugo의 &lt;a href=&#34;https://docdock.netlify.com/&#34; target=&#34;_blank&#34;&gt;DocDock&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; 테마를 사용하여 구축됩니다. &lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; 는 여러 장점을 가진 정적 “사이트 생성기(static site generator)”입니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;콘텐츠 작성자&lt;/strong&gt; 는 사이트의 기술 구현이나 CSS/페이지 스타일에 신경 쓰지 않고 Markdown 형식으로 콘텐츠에 집중할 수 있습니다. 워크숍들은 &lt;em&gt;자동으로&lt;/em&gt; 왼쪽 목차와 워크숍 홈 페이지에 추가됩니다. Hugo는 로컬 환경, 즉 자체 네트워크상(예: 비행기 안)에서도 잘 작동하며, 가장 빠른 정적 사이트 생성기로서 전체 워크숍 사이트를 2초 이내에 구축할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;학생들&lt;/strong&gt; 은 일관된 사용자 경험(UX), 내장된 접근성(built-in accessibility), 로컬라이제이션(localization), 모바일부터 데스크톱까지 지원하는 반응형 디자인의 혜택을 누릴 수 있습니다. 또한 “GitHub” 저장소로의 자동 링크와 “Azure CDN”을 통한 빠른 글로벌 사이트 성능을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Nuevo 개발 팀&lt;/strong&gt; 은 워크숍 페이지를 구축하고 사용자화할 수 있는 기능을 통해 다양한 이점을 누립니다. 여기에는 사용자화 페이지 템플릿(custom page templates), &lt;a href=&#34;https://workshops.nuevofoundation.org/guidelines/formatting/&#34; target=&#34;_blank&#34;&gt;알림(alerts), 메모(notes), 버튼(buttons), 경고(warnings) 등을 위한 내장 페이지 컨트롤(built-in page controls)&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;, Nuevo 헤더(Nuevo header)와 같은 사용자화 컨트롤(custom controls), iframe 상호작용(iframe interactivity), 커스텀 메타데이터(custom metadata), 자동 페이지 링크 연결(automated cross-page linking), 페이지 테마 지정(page theming), 자동 사이트맵 생성(automated site map creation), 내장 아이콘(built-in icons), 그리고 GitHub Actions 및 Azure DevOps를 사용하는 빌드/배포 자동화(built-in automation using GitHub Actions and Azure DevOps for build/deployment)가 포함됩니다.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Repl.It 사용하기</title>
      <link>/kr/secret-messages/using-repl-it/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/using-repl-it/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/sdO27-l4aqM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;왕과 왕비를 돕기 위해, 우리는 C++이라는 프로그래밍 언어로 프로그램을 개발할 것입니다. 이 프로그램을 사용하면 메시지를 입력하고, 프로그램이 메세지를 비밀 메시지로 변환할 수 있습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;replit-사용법&#34;&gt;Repl.It 사용법&lt;/h2&gt;&#xA;&lt;p&gt;오늘 우리는 Repl.It을 사용할 것입니다. 시작하기 전에, Repl.It 계정이 없다면 먼저 가입해야 합니다.&#xA;아래 버튼을 클릭하여 Repl.It 계정을 생성하세요. 가입하려면 이메일 계정이 필요합니다. 이미 Repl.It 계정이 있다면, 아래 버튼을 사용해 로그인할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://replit.com/signup&#34; target=&#34;_blank&#34;&gt;Replit 가입 하기&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>마이크로빗이란?</title>
      <link>/kr/microbit-distance-checker/what-is-microbit/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/microbit-distance-checker/what-is-microbit/</guid>
      <description>&lt;h2 id=&#34;마이크로빗이란&#34;&gt;마이크로빗이란?&lt;/h2&gt;&#xA;&lt;p&gt;마이크로빗은 프로그래밍 마이크로컨트롤러입니다! JavaScript, Python, Scratch, Blocks와 같은 다양한 언어를 사용하여 웹 브라우저에서 코딩할 수 있습니다. 이번 세션에서는 MakeCode Blocks를 사용합니다.&lt;/p&gt;&#xA;&lt;p&gt;마이크로빗에는 다음과 같이 다양한 동작이 가능한 기능과 센서가 포함되어 있습니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;25개의 개별적으로 제어 가능한 LED&lt;/li&gt;&#xA;&lt;li&gt;2개의 물리적 버튼&lt;/li&gt;&#xA;&lt;li&gt;2개의 입력/출력(IO) 핀&lt;/li&gt;&#xA;&lt;li&gt;자력계 센서&lt;/li&gt;&#xA;&lt;li&gt;가속도계(모션 센서)&lt;/li&gt;&#xA;&lt;li&gt;블루투스&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!---![Image of simulated micro:bits with the radio highlighted](../img/simulatorStart.png) ---&gt;&#xD;&#xA;&lt;img src=&#34;../img/microbit-hardware-access.jpg&#34; alt=&#34;microbit components&#34; style=&#34;width:800px;&#34;/&gt;&#xD;&#xA;&lt;p&gt;마이크로빗의 개별 구성 요소와 기능에 대해 모두 알고 싶다면 &lt;a href=&#34;https://micro:bit.org/guide/features/&#34; target=&#34;_blank&#34;&gt;여기&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;에서 확인할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>음악의 기본 요소</title>
      <link>/kr/javascript-blocks-earsketch/music-basics/</link>
      <pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate>
      <guid>/kr/javascript-blocks-earsketch/music-basics/</guid>
      <description>&lt;h2 id=&#34;먼저-기본적인-음악-개념을-알아봅시다&#34;&gt;먼저 기본적인 음악 개념을 알아봅시다.&lt;/h2&gt;&#xA;&lt;h3 id=&#34;음악이란-무엇인가요&#34;&gt;음악이란 무엇인가요?&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikiversity.org/wiki/Introduction_to_music&#34; target=&#34;_blank&#34;&gt;음악&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;은 소리를 시간적으로 조직화한 것입니다. 즉, 특정한 소리를 특정한 시간에 배치하여 선율, 리듬, 화성이 조화를 이루도록 만드는 것입니다. 가장 기본적인 개념은 소리를 제때 맞추는 것입니다. 이 개념에서 몇 가지 중요한 음악 용어들이 나옵니다: 비트(beat), 리듬(rhythm), 듀레이션(duration) 및 템포(tempo)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;비트(Beat)&lt;/strong&gt; 는 리듬이 맞춰지는 기준이 되는 규칙적인 박자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;리듬(Rhythm)&lt;/strong&gt; 은 길거나 짧은 소리, 강하거나 약한 소리 또는 침묵이 반복되는 패턴으로, 메인 비트에 맞춰집니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;듀레이션(Duration)&lt;/strong&gt; 은 리듬을 구성하는 음이나 소리, 침묵의 길이입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;템포(Tempo)&lt;/strong&gt; 는 음악이 연주되는 속도를 의미합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>‘회귀’란 무엇인가요?</title>
      <link>/kr/ml-machine-learning/01-regression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/ml-machine-learning/01-regression/</guid>
      <description>&lt;h1 id=&#34;회귀란-무엇인가요&#34;&gt;회귀란 무엇인가요?&lt;/h1&gt;&#xA;&lt;p&gt;회귀(Regression)는 어떤 변수(독립 변수/independent variable)가 다른 변수(종속 변수/dependent variable)에 어떤 영향을 미치는지 알아보는 방법입니다. 다시 말해 한 변수의 값이 바뀌면 다른 변수의 값이 어떻게 변하는지 알 수 있도록 관계를 찾아내는 것입니다. 이 방법을 잘 사용하면 앞으로의 결과를 쉽게 예측할 수 있습니다.&lt;/p&gt;&#xA;&lt;!-- TODO: Add diagram to replace image below. --&gt;&#xD;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;img src=&#34;../resources/regression.png&#34; alt=&#34;Regression&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;회귀&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;회귀는 우리가 가진 데이터를 이어주는 선(직선이나 곡선)을 찾아주는 효과적인 수단입니다. 회귀를 사용하면 &lt;a href=&#34;https://www.youtube.com/watch?v=xHtsuOB-TPw&#34; target=&#34;_blank&#34;&gt;수학적인 모델&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;을 만들어 독립 변수와 종속 변수의 관계를 보여줄 수 있습니다. 수학적인 모델은 우리가 어떤 시스템(예를 들어 날씨, 판매량 등)을 이해하고, 그것을 바탕으로 미래를 예측하는 데 도움을 줍니다. 하지만, 우리가 만든 수학적 모델이 항상 데이터를 잘 데이터의 속성을 잘 반영하지 않을 수도 있습니다. 그러므로 데이터의 패턴을 더 잘 나타낼 수 있는 모델을 찾는 과정이 필수적입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DJ 스테이션 만들기</title>
      <link>/kr/adafruit/building-the-dj-station/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/adafruit/building-the-dj-station/</guid>
      <description>&lt;h2 id=&#34;오렌지-연결하기&#34;&gt;오렌지 연결하기&lt;/h2&gt;&#xA;&lt;p&gt;오렌지와 악어 클립 와이어 하나를 준비하세요. 악어 클립의 아래쪽 절반을 오렌지에 꽂고 클립의 윗부분이 바깥으로 나오게 합니다. 악어클립을 오렌지의 아랫부분 중앙, 껍질을 벗기기 시작하는 부분에 꽂으면 가장 쉽습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/setup1.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&#xA;&lt;img src=&#34;../img/setup2.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;다른 와이어를 사용하여 두 번째 오렌지에도 같은 작업을 반복합니다.&#xA;&lt;img src=&#34;../img/setup3.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;하나의 오렌지는 아다프루트 보드의 A1 포트에 연결합니다. 다른 오렌지는 아다프루트 보드의 A2 포트에 연결합니다.&#xA;&lt;img src=&#34;../img/setup4.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;이제 오렌지를 모두 연결한 모습은 아래 그림과 같이 보일 것입니다!!&#xA;&lt;img src=&#34;../img/setup5.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Step 1: 데이터셋 가져오기</title>
      <link>/kr/machine-learning/get-dataset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/machine-learning/get-dataset/</guid>
      <description>&lt;p&gt;FIFA 2019는 축구 비디오 게임입니다. 이 게임의 모든 선수는 종합 능력치(overall ratings)를 가지고 있으며, 크로스(crossing), 마무리(finishing)와 같은 다양한 속성(attribute)도 갖추고 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;우리는 Kaggle이라는 웹사이트에 가서 데이터셋을 가져올 것입니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/karangadiya/fifa19/&#34; target=&#34;_blank&#34;&gt;FIFA19 dataset&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&#xA;&lt;br&gt;&#xA;&lt;em&gt;참고: 다운로드 링크를 받기 위해서는 이 웹사이트의 회원가입이 필요할 수도 있습니다.&lt;/em&gt;&#xA;&lt;br&gt;&lt;/p&gt;&#xA;&lt;p&gt;이 페이지에서는 이 데이터셋에 대한 많은 정보를 찾을 수 있습니다. 시간을 들여 탐색하고 데이터셋에 익숙해지는 것이 좋습니다.&#xA;&lt;img src=&#34;../images/kaggle_fifa_dataset.png&#34; alt=&#34;kaggle_fifa_dataset.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;데이터를 다운로드한 후, 압축 파일을 C:\fifa_dataset\ 폴더에 압축 해제합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>밥의 낚시 이야기</title>
      <link>/kr/security-phishing/bob-goes-fishing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-phishing/bob-goes-fishing/</guid>
      <description>&lt;p&gt;우리 친구 &lt;strong&gt;밥&lt;/strong&gt;을 소개할게요. &lt;strong&gt;밥&lt;/strong&gt;은 친절하고 유쾌한 사람이에요. 여행과 낚시를 취미로 즐기죠. 어느 날 저녁, &lt;strong&gt;밥&lt;/strong&gt;은 &amp;ldquo;바하마 여행 당첨&amp;quot;이라는 이메일을 받았어요. &lt;strong&gt;밥&lt;/strong&gt;은 너무 기뻐서 당장 링크를 눌러 자신의 정보를 입력했고, 여행 일정이 도착하기를 기다렸어요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;밥&lt;/strong&gt;은 여행을 준비하며 새 옷과 새 낚싯대를 샀어요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../media/nuvi_phish_reduced.png?height=250px&#34; alt=&#34;Bob is preparing for his fishing trip to the Bahamas&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;하지만 24시간이 지나도 여행 확인 메시지가 오지 않았어요. 하루가 더 지나도 여전히 아무 소식이 없었죠. 그래서 &lt;strong&gt;밥&lt;/strong&gt;은 친구 &lt;strong&gt;앨리스&lt;/strong&gt;를 만나기로 했어요.&#xA;&lt;img src=&#34;../media/Alice_reduced.png?height=250px&#34; alt=&#34;Secret Agent Alice&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>보안이란 무엇일까요?</title>
      <link>/kr/security-fundamentals/what-is-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-fundamentals/what-is-security/</guid>
      <description>&lt;h2 id=&#34;일반-보안-vs-사이버-보안&#34;&gt;일반 보안 vs. 사이버 보안&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;보안&lt;/strong&gt;은 위험이나 위협으로부터 자유로운 상태를 의미합니다. &lt;strong&gt;사이버 보안&lt;/strong&gt;도 마찬가지로 위험에서 벗어나 안전한 상태를 만드는 것을 목표로 하지만, 사이버 보안은 &lt;strong&gt;사이버 공간&lt;/strong&gt;에서의 안전을 의미합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;사이버 보안 전문가&lt;/strong&gt;들은 사용자가 인터넷을 안전하게 이용할 수 있도록 다양한 방법으로 보호 작업을 진행합니다. 어떤 사이버 보안 엔지니어들은 새로운 취약점을 찾아내는 데 주의를 기울이고, 또 다른 엔지니어들은 해커들이 프로그램을 공격하기 전에 이를 방어하는 역할을 합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;사이버-공간이란&#34;&gt;사이버 공간이란?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;사이버 공간&lt;/strong&gt;은 컴퓨터 네트워크를 통해 의사소통이 이루어지는 모든 장소를 의미합니다. 소셜 미디어 사이트나 포럼에서 다른 사람들과 상호작용하는 공간뿐 아니라, 인터넷을 통하거나, 가정이나 사무실과 같은 소규모 네트워크 내에서 컴퓨터들끼리 대화하는 경우도 포함됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>앨리스, 밥, 이브 만나기</title>
      <link>/kr/security/meeting-alice-bob-eve/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security/meeting-alice-bob-eve/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../img/Bob.png?height=250px&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;여기 우리 친구 밥이 있습니다. 그리고 밥은 공유하고 싶지 않은 비밀이 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;밥은 그것을 안전하게 지키고 싶어합니다. 그의 비밀을 안전하게 잠가 두었습니다. 오직 밥만이 잠금 장치의 열쇠를 가지고 있어 누구도 그의 비밀에 접근할 수 없습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/Eve.png?height=250px&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;성격이 좋지 않은 이브가 있습니다. 이브는 밥의 비밀에 접근하고 싶어합니다.&lt;/p&gt;&#xA;&lt;p&gt;이브는 밥의 비밀에 접근하기 위해서 먼저 밥의 잠금을 풀어야 한다는 것을 깨닫습니다. 이브는 잠금 장치를 부술 수는 없지만, 아마도 열쇠를 찾아낼 수는  있을 것입니다. 밥을 잠시 염탐한 후 이브가 깨닫게 된 것은, 밥이 정말로 반려견 맥스를 사랑한다는 것이었습니다. 여기서 이브는 아이디어를 얻게 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 1 - Visual Studio Code 탐색하기</title>
      <link>/kr/razor/activity-1/</link>
      <pubDate>Tue, 12 Sep 2023 11:45:38 -0700</pubDate>
      <guid>/kr/razor/activity-1/</guid>
      <description>&lt;h2 id=&#34;활동-1---visual-studio-code-탐색하기&#34;&gt;활동 1 - Visual Studio Code 탐색하기&lt;/h2&gt;&#xA;&lt;h3 id=&#34;visual-studio-code를-열고-welcome-페이지를-살펴보세요&#34;&gt;Visual Studio Code를 열고 Welcome 페이지를 살펴보세요.&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Windows 시작 메뉴를 사용하여 Visual Studio Code 열기&lt;/p&gt;&#xA;&lt;p&gt;Windows 시작 메뉴를 열면 최근에 추가된 애플리케이션 목록에서 Visual Studio Code를 찾을 수 있습니다. 또는 시작 메뉴를 아래로 스크롤하여 Visual Studio Code를 찾아보세요. 화면 하단의 실행 트레이에 있는 Windows 검색 상자에 &amp;ldquo;Visual Studio Code&amp;quot;를 입력하여 검색할 수도 있습니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Visual Studio Code의 Welcome 페이지 확인하기&lt;/p&gt;&#xA;&lt;p&gt;Visual Studio Code를 처음 열면 Welcome 페이지가 나타나며, 몇 가지 링크와 정보가 포함되어 있습니다. 처음 실행할 때 Get Started with VS Code와 같은 유용한 안내 내용이 표시됩니다. 이 안내 내용은 후에 따로 참고해볼 수 있습니다&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. 게임판 설정하기!</title>
      <link>/kr/java-tictactoe/activity-1/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/kr/java-tictactoe/activity-1/</guid>
      <description>&lt;p&gt;이 활동에서는 게임판과 게임 진행을 출력하는 프로그램을 작성합니다. 아래와 같은 출력이 나와야 합니다:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;~  틱택토  ~&amp;gt;&amp;gt;&amp;gt;&#xD;&#xA;* 숫자 1 - 9를 선택하여 말을 놓으세요&#xD;&#xA;* 플레이어: &amp;#39;X&amp;#39; 컴퓨터: &amp;#39;O&amp;#39;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; 1 | 2 | 3 &#xD;&#xA;---+---+---&#xD;&#xA; 4 | 5 | 6 &#xD;&#xA;---+---+---&#xD;&#xA; 7 | 8 | 9 &#xD;&#xA;말을 놓을 위치를 선택하세요 (1-9): 2&#xD;&#xA; O | X |   &#xD;&#xA;---+---+---&#xD;&#xA;   |   |   &#xD;&#xA;---+---+---&#xD;&#xA;   |   |   &#xD;&#xA;말을 놓을 위치를 선택하세요 (1-9):&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;메인-클래스와-메인-메서드method&#34;&gt;메인 클래스와 메인 메서드(method)&lt;/h2&gt;&#xA;&lt;p&gt;시작 코드에서 &lt;code&gt;main()&lt;/code&gt;클래스와 &lt;code&gt;main()&lt;/code&gt;메서드가 제공되어 있습니다. &lt;code&gt;main()&lt;/code&gt; 메서드는 우리가 &lt;strong&gt;Run&lt;/strong&gt; 버튼을 누르면 프로그램이 실행되는 시작점입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>상황 설정하기</title>
      <link>/kr/supply-chain-analytics/scenario/</link>
      <pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate>
      <guid>/kr/supply-chain-analytics/scenario/</guid>
      <description>&lt;p&gt;새로운 Xbox 1000이 출시되었고, 꼭 사고 싶어졌어요. 하지만 돈을 많이 모아야 하죠. 학교 모금 행사에서 엄마가 구워주신 쿠키가 인기를 끌었던 기억이 떠올라서, 엄마와 함께 베이커리를 시작해 수익을 50:50으로 나누자는 멋진 아이디어를 생각해냈어요!&lt;/p&gt;&#xA;&lt;p&gt;처음에는 두 가지 종류의 쿠키만 팔기로 했어요. 친구들에게 설문조사를 해보니, 친구들이 가장 좋아하는 두 가지 쿠키는 초코칩 쿠키와 설탕 쿠키였어요.&lt;/p&gt;&#xA;&lt;p&gt;한 번에 구워내는 양은 쿠키 12개예요. 초코칩 쿠키 한 판은 $20에 팔 수 있고, 설탕 쿠키 한 판은 $15에 팔 수 있어요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>새 워크숍 가이드라인 (New Workshop Guidelines)</title>
      <link>/kr/guidelines/new-workshops/</link>
      <pubDate>Wed, 29 Jul 2020 14:08:32 -0700</pubDate>
      <guid>/kr/guidelines/new-workshops/</guid>
      <description>&lt;p&gt;이 문서는 &lt;a href=&#34;https://github.com/nuevoFoundation/workshops&#34; target=&#34;_blank&#34;&gt;Nuevo Foundation 워크숍 프로젝트&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;에 새로운 워크숍을 만드는 방법을 안내하기 위한 것입니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../site-architecture/&#34;&gt;사이트 아키텍처(Site Architecture)&lt;/a&gt;&#xD;&#xA; 와 &lt;a href=&#34;../getting-started/&#34;&gt;시작하기(Getting Started)&lt;/a&gt;&#xD;&#xA; 섹션을 숙지해 주세요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>시작하기</title>
      <link>/kr/guidelines/getting-started/</link>
      <pubDate>Wed, 29 Jul 2020 14:08:32 -0700</pubDate>
      <guid>/kr/guidelines/getting-started/</guid>
      <description>&lt;h2 id=&#34;필수-준비물&#34;&gt;필수 준비물&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34; target=&#34;_blank&#34;&gt;Visual Studio Code&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34;&gt;Git&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;.&#xA;Git 및 GitHub에 대한 자세한 정보는 &lt;a href=&#34;https://docs.github.com/en/get-started/quickstart&#34; target=&#34;_blank&#34;&gt;Quickstart&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; 가이드를 참고하세요.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;참고-링크&#34;&gt;참고 링크&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/NuevoFoundation/workshops&#34; target=&#34;_blank&#34;&gt;Github 저장소 (Github repo)&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://workshops.nuevofoundation.org/&#34; target=&#34;_blank&#34;&gt;워크숍 웹사이트&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;연습-영상&#34;&gt;연습 영상&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/LpjucoAVviI&#34; target=&#34;_blank&#34;&gt;워크숍 GitHub 저장소 개발 사이클&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/cygmE6LGcOw&#34; target=&#34;_blank&#34;&gt;워크숍 GitHub 저장소 구조&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;코드&#34;&gt;코드&lt;/h2&gt;&#xA;&lt;p&gt;이 저장소에 대한 작업 기여는 &lt;a href=&#34;https://help.github.com/articles/fork-a-repo/&#34; target=&#34;_blank&#34;&gt;포크(fork) 모델&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; 을 통해 이루어집니다. 참여자는 워크숍의 자신만의 &amp;ldquo;포크 된&amp;rdquo; 버전에 변경 사항을 적용한 후, 해당 변경 사항을 “풀 리퀘스트(pull request)”로 제출합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>새 이미지 로드 및 화면 텍스트 변경</title>
      <link>/kr/jsappybird/load-the-bird/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/kr/jsappybird/load-the-bird/</guid>
      <description>&lt;p&gt;먼저 “Flappy”를 로드하고 화면에 배치해 봅시다.&lt;/p&gt;&#xA;&lt;p&gt;파일 [File: load-sprites.js] 에 다음 명령을 추가하세요:&#xA;&lt;code&gt;&#xD; game.load.image(&#39;bird&#39;,&#39;assets/bird.png&#39;);&#xD; &lt;/code&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;함께-해보기&#34;&gt;함께 해보기&lt;/h3&gt;&#xA;&lt;p&gt;아래 “Replit” 창에서 코드는 &lt;code&gt;game.load.image(&#39;bird&#39;, &#39;assets/bird.png&#39;);&lt;/code&gt;로 시작합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/loadbird.png&#34; alt=&#34;alt text&#34; title=&#34;image to add the bird in the file&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;run&lt;/strong&gt;을 누르고 스페이스 바를 누르면, 여러분의 콘솔에 새가 나타나는 것을 볼 수 있습니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/loadbird_output.png&#34; alt=&#34;alt text&#34; title=&#34;bird image in the output&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;화면-텍스트-변경하기&#34;&gt;화면 텍스트 변경하기&lt;/h2&gt;&#xA;&lt;p&gt;시작 화면 텍스트를 변경해 봅시다:&lt;/p&gt;&#xA;&lt;p&gt;파일 [File: start-screen.js] 에 다음 명령을 추가하세요.&#xA;var text = game.add.text(0, 0, &amp;ldquo;Press Space to Start&amp;rdquo;, textOptions);&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activity 1 - 출력하기t</title>
      <link>/kr/secret-messages/activity-1/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/activity-1/</guid>
      <description>&lt;p&gt;우리가 비밀 메시지를 생성할 수 있으려면, 먼저 프로그램에 입력할 메시지를 작성해야 합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://replit.com/@nuevofoundation/activity-1-english&#34; target=&#34;_blank&#34;&gt;Replit 실행하기&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;이를 위해, 먼저 메시지가 누구를 위한 것인지 콘솔에 출력하도록 컴퓨터에 지시할 것입니다. 아래는 우리가 사용할 명령어입니다:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cout &amp;lt;&amp;lt; &amp;#34;Hello Developer!&amp;#34; &amp;lt;&amp;lt; endl;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 코드 줄에 대해 더 알아봅시다.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h3 id=&#34;문자열-strings&#34;&gt;문자열 (Strings)&lt;/h3&gt;&#xA;&lt;p&gt;따옴표(&amp;quot;&amp;quot;)로 감싸인 모든 것은 문자열(String)이라고 부릅니다. 문자열은 문자, 숫자, 글자 또는 기호로 이루어진 연속적인 데이터입니다.&#xA;예를 들어, 위 코드 줄에서 &lt;code&gt;&amp;quot;Hello Developer!&amp;quot;&lt;/code&gt;는 문자열입니다. &lt;code&gt;&amp;quot;123&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;abc!&amp;quot;&lt;/code&gt; , 또는 &lt;code&gt;&amp;quot;Hello&amp;quot;&lt;/code&gt; 또한 문자열의 예입니다. 하지만 , &lt;code&gt;123&lt;/code&gt;, &lt;code&gt;abc!&lt;/code&gt; , 또는 , &lt;code&gt;Hello!&lt;/code&gt;는 따옴표로 감싸지 않았으므로 문자열이 아닙니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>신호 방송하기</title>
      <link>/kr/microbit-distance-checker/broadcasting/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/microbit-distance-checker/broadcasting/</guid>
      <description>&lt;h2 id=&#34;라디오-켜기&#34;&gt;라디오 켜기&lt;/h2&gt;&#xA;&lt;p&gt;마이크로빗의 블루투스 라디오를 사용하여 다른 마이크로빗과 얼마나 떨어져 있는지 확인합니다. 먼저 라디오를 켜고 채널에 맞추는 작업을 해야 합니다. “Radio” 섹션을 클릭하세요. 화면에서 다섯 번째에 있는 분홍색 섹션입니다. “radio set group 1”을 선택하고 이를 작업 영역의 파란색 “on start” 블록으로 끌어다 놓으세요. 모든 참가자가 동일한 그룹 번호를 사용하도록 하세요. 다른 그룹 번호를 사용하면 마이크로빗 간 통신이 이루어지지 않습니다. 작업 영역은 아래와 같이 보여야 합니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/radioMenu.png&#34; alt=&#34;MakeCode menu showing the Radio section selected&#34;&gt;&#xA;&lt;img src=&#34;../img/setRadioGroup.png&#34; alt=&#34;MakeCode workspace showing the “radio set group” block in the “on start” block&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>EarSketch 시작하기</title>
      <link>/kr/javascript-blocks-earsketch/getting-started-earsketch/</link>
      <pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate>
      <guid>/kr/javascript-blocks-earsketch/getting-started-earsketch/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/EarSketch&#34; target=&#34;_blank&#34;&gt;EarSketch&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;는 조지아 공과대학교에서 개발한 무료 교육용 프로그래밍 환경입니다. 오늘 우리는 EarSketch를 사용하여 음악을 만들 것입니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;음악을 만들기 위해, 아래 버튼을 클릭하여 EarSketch를 새 탭에서 엽니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://earsketch.gatech.edu/earsketch2/&#34; target=&#34;_blank&#34;&gt;Earsketch 실행&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;웹페이지가 열리면, 아래와 같은 환영 화면이 나타날 수 있습니다. &amp;ldquo;건너뛰기(skip)&amp;ldquo;를 눌러 안내 과정을 생략하세요. 필요한 단계를 아래에서 모두 다룰 것입니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;../img/screenshot-skip-tour.png&#34; height=&#34;400&#34;/&gt;&#xD;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;이제 시작해봅시다. 왼쪽 메뉴바에서 스크립트(Scripts) 아이콘을 클릭하고, + 새 스크립트(New Script)를 선택하세요.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;../img/screenshot-new-script.png&#34; height=&#34;400&#34;/&gt;&#xD;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;스크립트 이름을  &lt;em&gt;myjam&lt;/em&gt; (또는 원하는 이름) 으로 입력하고, 프로그래밍 언어를 &lt;em&gt;JavaScript&lt;/em&gt;로 변경하세요. 그런 다음 &lt;em&gt;생성(Create)&lt;/em&gt; 버튼을 눌러 스크립트를 생성합니다(여기에 코드가 작성됩니다).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;../img/screenshot-new-myjam.png&#34; height=&#34;200&#34;/&gt;&#xD;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;마지막으로, 톱니바퀴 아이콘을 클릭하고 블록 모드(Blocks mode)를 선택합니다. 화면이 다음과 같이 표시되어야 합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;../img/screenshot-setup-complete.png&#34; height=&#34;400&#34;/&gt;&#xD;&#xA;&lt;div class=&#34;notices info&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h2 id=&#34;교사를-위한-추천-사항---earsketch-개요&#34;&gt;교사를 위한 추천 사항 - EarSketch 개요&lt;/h2&gt;&#xA;&lt;p&gt;수업을 시작하기 전에 EarSketch 개요를 살펴보세요. 사용자 인터페이스(UI)를 어떻게 탐색하는지에 대해 이해하는 것이 중요합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Step 2: 프로젝트 시작하기</title>
      <link>/kr/machine-learning/start-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/machine-learning/start-project/</guid>
      <description>&lt;p&gt;Jupyter Notebook을 열고, 새 노트북을 생성한 후 Python 3을 선택하세요.&lt;/p&gt;&#xA;&lt;p&gt;파일의 시작 부분에 필요한 패키지를 먼저 불러옵니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 필요한 패키지 불러오기&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pandas&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pd&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;numpy&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;np&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;plt&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;sklearn.linear_model&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;LinearRegression&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;sklearn.model_selection&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;train_test_split&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력 결과:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;ImportError                               Traceback (most recent call last)&#xD;&#xA;&#xD;&#xA;&amp;lt;ipython-input-2-122d997e4faf&amp;gt; in &amp;lt;module&amp;gt;()&#xD;&#xA;      1 # Importing necessary packages&#xD;&#xA;----&amp;gt; 2 import pandas as pd&#xD;&#xA;      3 import numpy as np&#xD;&#xA;      4 import matplotlib.pyplot as plt&#xD;&#xA;      5 from sklearn.linear_model import LinearRegression&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;ImportError: No module named pandas&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>단순 선형 회귀</title>
      <link>/kr/ml-machine-learning/02-simple-linear-regression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/ml-machine-learning/02-simple-linear-regression/</guid>
      <description>&lt;h1 id=&#34;단순-선형-회귀란&#34;&gt;단순 선형 회귀란?&lt;/h1&gt;&#xA;&lt;p&gt;단순 선형 회귀(Simple Linear Regression)는 두 변수 간의 상관관계를 찾아내고, 이 관계를 설명하는 수학적 공식을 만드는 방법입니다. 일반적으로 단순 선형 회귀에서는 다음과 같은 결론에 도달하는 것을 목적으로 합니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;우리가 가진 변수들 간에 관계가 있는가?&lt;/p&gt;&#xA;&lt;p&gt;여러분은 소득과 소비, 경력과 급여, 또는 습도와 온도 사이의 관계를 파악할 수 있습니다. 반면, 학생의 키와 시험 점수 사이에는 아무런 관계가 없습니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;값을 예측하거나 예견할 수 있는가?&lt;/p&gt;&#xA;&lt;p&gt;회귀 분석(Regression)을 통해 모델을 학습시키고, 값을 확실하게 예측할 수 있는지 알아낼 수 있습니다. 우리가 관계에 대해 알고 있는 정보를 사용해서 새로운 값을 예측할 수 있을까요?&lt;/p&gt;</description>
    </item>
    <item>
      <title>비밀번호 기초</title>
      <link>/kr/security/password-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security/password-basics/</guid>
      <description>&lt;p&gt;우리 비밀 요원 앨리스는 밥에게 비밀번호에 대해 설명하면서 사건을 해결합니다!!!&lt;/p&gt;&#xA;&lt;h2 id=&#34;비밀번호란-무엇일까요&#34;&gt;비밀번호란 무엇일까요?&lt;/h2&gt;&#xA;&lt;p&gt;비밀번호는 당신의 가상 세계의 잠금 장치에 대한 열쇠입니다. 비밀번호와 사용자 이름을 사용하여 인터넷에서 개인 정보를 안전하게 보호하는 것처럼, 당신의 비밀은 잠금 장치와 열쇠를 사용하여 안전한 방에 보관됩니다.&#xA;안전한 방은 문에 있는 잠금 장치의 열쇠만큼이나 안전합니다. 해커라고 알려진 나쁜 사람들로부터 온라인 데이터와 신원을 보호하기 위해 더 강력한 비밀번호가 필요합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;무엇이-문제일까요&#34;&gt;무엇이 문제일까요?&lt;/h2&gt;&#xA;&lt;p&gt;비밀번호는 비공식적이어야 하며 당신만 알아야 합니다. 강력한 비밀번호란 기계나 인간이 추측하기 어려운 특성으로 인해 더 안전한 비밀번호를 말합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>일상생활에서 어떻게 안전한 보안을 유지할 수 있을까요?</title>
      <link>/kr/security-fundamentals/how-can-we-incorporate-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-fundamentals/how-can-we-incorporate-security/</guid>
      <description>&lt;!-- Links for javascript needed for logic --&gt;&#xD;&#xA;&lt;script type=&#34;text/javascript&#34; src=&#34;../_incorporate-security.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;p&gt;사이버 보안은 매우 넓은 분야이며, 우리 모두가 인터넷을 안전하게 사용할 수 있도록 각자의 역할을 해야 합니다. 사이버 보안을 활용하면 우리가 속한 네트워크에 해커와 사이버 범죄자들이 침입하는 것을 예방할 수 있습니다.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;div&gt;&#xD;&#xA;  &lt;form name=&#34;form1&#34; accept-charset=&#34;UTF-8&#34;&gt;&#xD;&#xA;    해커들의 침입을 막기 위해 우리가 할 수 있는 방법에는 무엇이 있을까요?&#xD;&#xA; &lt;/br&gt;&#xD;&#xA; &lt;/br&gt;&#xD;&#xA; &lt;/form&gt;&#xD;&#xA;&#xD;&#xA; &lt;input id=&#34;text_field&#34; type=&#34;text&#34; name=&#34;name1&#34; placeholder=&#34;여러분의 생각을 입력하세요.&#34;&gt;&#xD;&#xA; &#xD;&#xA; &lt;!-- Enter button --&gt;&#xD;&#xA; &lt;div&gt;&#xD;&#xA;   &lt;button id=&#34;submit_button&#34; type=&#34;button&#34; onclick=&#34;displaySection()&#34;&gt;제출&lt;/button&gt;&#xD;&#xA; &lt;/div&gt;&#xD;&#xA;&lt;/br&gt;&#xD;&#xA; &#xD;&#xA; &lt;!-- Hidden section with sample answers --&gt;&#xD;&#xA; &lt;div class=&#34;sample_answers&#34; id=&#34;sample_answers&#34; style=&#34;visibility:hidden&#34;&gt;&#xD;&#xA;   &lt;p&gt;좋은 생각이에요! 이 외에도 다른 방법들이 있어요:&lt;/p&gt;</description>
    </item>
    <item>
      <title>피싱의 기본</title>
      <link>/kr/security-phishing/phishing-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-phishing/phishing-basics/</guid>
      <description>&lt;p&gt;비밀 요원 앨리스가 밥에게 피싱에 대해 설명해요!&lt;/p&gt;&#xA;&lt;h2 id=&#34;피싱이란-무엇일까요&#34;&gt;피싱이란 무엇일까요?&lt;/h2&gt;&#xA;&lt;p&gt;낚시에서 물고기를 잡기 위해 미끼를 사용하는 것처럼, 나쁜 &lt;strong&gt;해커&lt;/strong&gt;들도 사람들의 개인 정보를 훔치기 위해 다양한 미끼를 사용해요.&lt;/p&gt;&#xA;&lt;p&gt;피싱은 사회 공학공격(Social Engineering, 보안학적 측면에서 기술적인 방법이 아닌 사람들 간의 기본적인 신뢰를 기반으로 사람을 속여 비밀 정보를 획득하는 기법)의 한 종류로, 로그인 정보, 은행 정보, 신용카드 정보 같은 중요한 데이터를 훔치는 수법이에요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;해커&lt;/strong&gt;는 자신이 믿을만한 사람인 척하면서 이메일, 문자 메시지, 전화 등을 통해 사람을 속이죠.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 2 - Visual Studio Code 확장 프로그램 추가</title>
      <link>/kr/razor/activity-2/</link>
      <pubDate>Tue, 12 Sep 2023 11:45:38 -0700</pubDate>
      <guid>/kr/razor/activity-2/</guid>
      <description>&lt;h2 id=&#34;활동-지침&#34;&gt;활동 지침&lt;/h2&gt;&#xA;&lt;h3 id=&#34;visual-studio-code-확장-프로그램-설정&#34;&gt;Visual Studio Code 확장 프로그램 설정&lt;/h3&gt;&#xA;&lt;p&gt;이제 Visual Studio Code의 사용자 인터페이스에 익숙해졌으니, C# 코딩을 위해 환경을 설정해 보겠습니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Visual Studio Code가 열려 있는지 확인합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;액티비티 바(Activity Bar)&lt;/strong&gt; 에서 &lt;strong&gt;확장 프로그램(Extensions)&lt;/strong&gt; 아이콘을 선택합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Search Extensions in Marketplace(마켓플레이스에서 확장 프로그램 검색)&lt;/strong&gt; 상자에 &lt;strong&gt;C#&lt;/strong&gt; 을 입력합니다.&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;C#&amp;ldquo;을 입력하면 C# 코딩과 관련된 확장 프로그램만 표시되도록 필터링됩니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;필터링된 확장 프로그램 목록에서 Microsoft가 게시한 C# Dev Kit - Official C# extension from Microsoft를 선택합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. 입력을 읽고 처리하기</title>
      <link>/kr/java-tictactoe/activity-2/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/kr/java-tictactoe/activity-2/</guid>
      <description>&lt;h2 id=&#34;패키지-불러오기&#34;&gt;패키지 불러오기&lt;/h2&gt;&#xA;&lt;p&gt;자바에서 사용자 입력을 효율적으로 받는 방법은 Scanner 클래스를 사용하는 것입니다. 이 클래스를 사용하려면 파일 상단에 다음과 같은 코드를 작성하여 java.util 패키지를 불러와야 합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;java.util.Scanner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;scanner-클래스-사용하기&#34;&gt;Scanner 클래스 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;&amp;lsquo;main()&amp;lsquo;에서는 먼저 생성자를 호출하여 &amp;lsquo;sc&amp;rsquo;라는 &amp;lsquo;스캐너&amp;rsquo; 객체를 만들어야 합니다(아래에 표시됨).&lt;/p&gt;&#xA;&lt;p&gt;우리는 표준 입력 스트림에서 우리의 입력을 읽기 위해 &amp;lsquo;스캐너&amp;rsquo;를 사용하고자 합니다. 이를 위해서는 &amp;lsquo;System.in &amp;lsquo;(표준 입력 스트림 객체)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Create a Scanner object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;Scanner&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Scanner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;사용자-입력-받기&#34;&gt;사용자 입력 받기&lt;/h2&gt;&#xA;&lt;p&gt;이전 활동에서는 사용자에게 1에서 9까지의 숫자를 입력하도록 요청했습니다. 따라서 입력 스트림에서 &amp;lsquo;int&amp;rsquo;를 기대할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>선형 최적화 - 기초</title>
      <link>/kr/supply-chain-analytics/linearoptimizationbasics/</link>
      <pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate>
      <guid>/kr/supply-chain-analytics/linearoptimizationbasics/</guid>
      <description>&lt;h2 id=&#34;최적화란-무엇일까&#34;&gt;최적화란 무엇일까?&lt;/h2&gt;&#xA;&lt;p&gt;공식 정의: 수학적 최적화 모델은 목표 함수와 제약 조건으로 이루어진 방정식이나 부등식의 시스템이에요.&lt;/p&gt;&#xA;&lt;p&gt;선형 최적화는 복잡하게 들릴 수 있어요. 하지만 시작할 때는 몇 가지 기본 개념만 이해하면 돼요.&lt;/p&gt;&#xA;&lt;h2 id=&#34;최적화란&#34;&gt;최적화란?&lt;/h2&gt;&#xA;&lt;p&gt;최적화는 제한된 자원을 가지고 가장 효율적인 결정을 내리는 방법이에요. 예를 들어, Xbox를 할 수 있는 시간이 제한되어 있다면, 가장 좋아하는 게임을 최대한 오래 하도록 시간을 쓰는 것이 최적화된 선택이겠죠.&lt;/p&gt;&#xA;&lt;p&gt;최적화 문제에서는 컴퓨터 사용 시간이나 계란의 수처럼 현실의 제약을 수학 공식으로 나타내요. (보세요, 결국 우리는 대수학을 사용하는 거예요!)&lt;/p&gt;</description>
    </item>
    <item>
      <title>새가 점프하도록 만들고 중력 적용하기</title>
      <link>/kr/jsappybird/jump/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/kr/jsappybird/jump/</guid>
      <description>&lt;h3 id=&#34;새에게-어떤-동작을-추가할까요&#34;&gt;새에게 어떤 동작을 추가할까요?&lt;/h3&gt;&#xA;&lt;p&gt;새가 점프하도록 만들어 봅시다:&lt;/p&gt;&#xA;&lt;p&gt;파일 [File: create-game.js] 에 다음 명령을 추가하세요:&#xA;spaceKey.onDown.add(jump, this);&lt;/p&gt;&#xA;&lt;h3 id=&#34;함께-해보기&#34;&gt;함께 해보기&lt;/h3&gt;&#xA;&lt;p&gt;아래 Replit 창에서 코드는 &lt;code&gt;spaceKey.onDown.add(jump, this);&lt;/code&gt;로 시작합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/jump.png&#34; alt=&#34;alt text&#34; title=&#34;image to add jump down&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;run&lt;/strong&gt; 을 누르고 스페이스 바를 누르면, 콘솔에 새가 점프하는 모습이 나타납니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/jump_output.png&#34; alt=&#34;alt text&#34; title=&#34;Image of jumping bird&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;중력-추가하기&#34;&gt;중력 추가하기&lt;/h2&gt;&#xA;&lt;h3 id=&#34;함께-해보기-1&#34;&gt;함께 해보기&lt;/h3&gt;&#xA;&lt;p&gt;아래 Replit 창에서 코드는 &lt;code&gt;bird.body.gravity.y = 900;&lt;/code&gt;로 시작합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/gravity.png&#34; alt=&#34;alt text&#34; title=&#34;image to add gravity to the bird&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;run&lt;/strong&gt; 을 누르고 스페이스 바를 누르면, 콘솔에 중력이 적용된 상태로 새가 점프하는 모습이 나타납니다.:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activity 2 - 변수와 입력</title>
      <link>/kr/secret-messages/activity-2/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/activity-2/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/umCdJDmdf3s&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;멋져요! 이제 한 단계 더 나아가 봅시다. 이번에는 메시지를 출력하는 것뿐만 아니라, 수신자의 이름을 입력 받아 프로그램이 &amp;ldquo;Hello&amp;quot;라고 말하도록 만들어 보겠습니다.&lt;/p&gt;&#xA;&lt;p&gt;이를 위해, 우리는 **변수(Variable)**가 필요합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h3 id=&#34;변수variable&#34;&gt;변수(Variable)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;변수&lt;/strong&gt;는 정보를 저장하는 컨테이너입니다. 변수에는 다양한 종류가 있으며, 각 변수는 서로 다른 유형의 정보를 저장합니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;string&lt;/strong&gt;: :  문자, 숫자, 기호의 연속적인 데이터(문자열)를 나타냅니다. 문자열은 항상 따옴표(&amp;quot;&amp;quot;)로 감싸야 합니다.&#xA;예시: &amp;ldquo;hello&amp;rdquo;, &amp;ldquo;1,2,3&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;int&lt;/strong&gt;: 양수 또는 음수의 정수를 나타냅니다.&#xA;예시: 1, 100, -250&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;char&lt;/strong&gt;: 단일 문자를 나타냅니다. 문자는 항상 작은따옴표(&amp;rsquo;&amp;rsquo;)로 감싸야 합니다.&#xA;예시: &amp;lsquo;A&amp;rsquo;, &amp;rsquo;e&amp;rsquo;, &amp;lsquo;I&amp;rsquo;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;bool&lt;/strong&gt;: true(참) 또는 false(거짓)의 값을 나타냅니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;변수를 생성하려면 다음과 같이 선언합니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>메시지 수신하기</title>
      <link>/kr/microbit-distance-checker/receiving/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/microbit-distance-checker/receiving/</guid>
      <description>&lt;p&gt;이제 메시지를 보내고 청취할 준비가 되었으니, 받은 정보를 사용해 마이크로빗 간 거리를 계산할 준비를 해야 합니다. 이를 위해, 수신 신호의 강도를 알아야 합니다. “Radio” 섹션으로 돌아가 이번에는 “on radio received (receivedNumber)” 블록을 작업 영역의 빈 공간으로 끌어다 놓으세요.&lt;/p&gt;&#xA;&lt;p&gt;이 블록은 다른 마이크로빗에서 전송된 숫자를 받을 때 마이크로빗이 수행할 동작을 지정합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/onRadioReceived.png&#34; alt=&#34;“On radio received” block added to the workspace&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;다음으로, 빨간색 “Variables” 섹션을 클릭하고 “Make a Variable…”을 선택합니다. 텍스트 상자에 “strength”라는 이름을 입력하고 “Ok ✔”를 클릭하세요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 1 - 템포 설정 및 사운드 추가</title>
      <link>/kr/javascript-blocks-earsketch/activity-1-set-tempo-add-sounds/</link>
      <pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate>
      <guid>/kr/javascript-blocks-earsketch/activity-1-set-tempo-add-sounds/</guid>
      <description>&lt;p&gt;기존 코드의 내용을 자세히 살펴보고 그 의미를 이해해 봅시다.&lt;/p&gt;&#xA;&lt;img src=&#34;../img/screenshot-setup-complete.png&#34; height=&#34;400&#34;/&gt;&#xD;&#xA;&lt;p&gt;&lt;code&gt;setTempo()&lt;/code&gt; 함수는 프로젝트 전체의 템포(음악이 연주되는 속도)를 설정할 수 있도록 합니다. 프로젝트의 템포를 변경하면 다양한 스타일의 음악을 만들 수 있습니다. &lt;code&gt;setTempo&lt;/code&gt; 함수의 숫자를 변경하여 템포를 조정해 보세요! 숫자는 45에서 220 사이여야 합니다. 아래는 사용할 수 있는 몇 가지 템포 예시입니다.&lt;/p&gt;&#xA;&lt;img src=&#34;../img/img-tempo1.png&#34; height=&#34;200&#34;/&gt;&#xD;&#xA;&lt;p&gt;이제 템포가 설정되었으니 사운드를 추가할 시간입니다. 이를 위해 우리는 &lt;code&gt;fitMedia()&lt;/code&gt; 함수를 사용해야 합니다. 새로운 코드를 &lt;code&gt;setTempo()&lt;/code&gt; 함수 블록 아래에 추가할 것입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Step 3: 데이터셋 불러오기</title>
      <link>/kr/machine-learning/load-dataset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/machine-learning/load-dataset/</guid>
      <description>&lt;p&gt;&lt;code&gt;mypath&lt;/code&gt;를 데이터셋 파일을 추출한 폴더 경로로 변경하세요(예: C:\fifa_dataset). 데이터가 성공적으로 불러와졌는지 확인하기 위해 &lt;code&gt;describe()&lt;/code&gt; 함수를 사용하여 통계 정보를 출력합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터셋 불러오기&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;mypath&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;C:/Users/ruilliu/Documents/nuevo_lr_fifa/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 자신의 경로로 변경하세요&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;fifa_data&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pd&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;read_csv&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;mypath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;data.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;fifa_data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;describe&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력 결과:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;NameError                                 Traceback (most recent call last)&#xD;&#xA;&#xD;&#xA;&amp;lt;ipython-input-3-f099c0f24a52&amp;gt; in &amp;lt;module&amp;gt;()&#xD;&#xA;      1 # load datasets&#xD;&#xA;      2 mypath = &amp;quot;C:/Users/ruilliu/Documents/nuevo_lr_fifa/&amp;quot; # change it to your own path&#xD;&#xA;----&amp;gt; 3 fifa_data = pd.read_csv(mypath+&amp;quot;data.csv&amp;quot;)&#xD;&#xA;      4 fifa_data.describe()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;NameError: name &#39;pd&#39; is not defined&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>더 깊이 알아보기</title>
      <link>/kr/security-phishing/a-closer-look/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-phishing/a-closer-look/</guid>
      <description>&lt;p&gt;밥이 받은 이메일은 다음과 같은 내용이었어요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../media/email.png?classes=border,shadow&#34; alt=&#34;Bob’s Email&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;이 이메일에서 수상한 점이 무엇일까요? 함께 분석해 봅시다.&#xA;&lt;img src=&#34;../media/from_address.JPG?classes=border,shadow&#34; alt=&#34;Email address&#34;&gt;&lt;/p&gt;&#xA;&lt;div style=&#34;text-align: center;&#34;&gt;&#xD;&#xA;&lt;p style=&#34;color:red&#34;&gt;&#xD;&#xA;&lt;em&gt;발신자의 이메일 주소가 수상하고, 이 발신자를 개인적으로 알지 못해요.&lt;/em&gt;&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../media/subject.JPG?classes=border,shadow&#34; alt=&#34;Email Subject&#34;&gt;&lt;/p&gt;&#xA;&lt;div style=&#34;text-align: center;&#34;&gt;&#xD;&#xA;&lt;p style=&#34;color:red&#34;&gt;&#xD;&#xA;&lt;em&gt;제목에 &#34;Free Trip&#34;처럼 너무 좋은 기회라고 끌리는 내용이 들어 있어요. 보통 이런 제안은 의심해 봐야 해요.&lt;/em&gt;&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../media/date.JPG?classes=border,shadow&#34; alt=&#34;Email Date&#34;&gt;&lt;/p&gt;&#xA;&lt;div style=&#34;text-align: center;&#34;&gt;&#xD;&#xA;&lt;p style=&#34;color:red&#34;&gt;&#xD;&#xA;&lt;em&gt; 보통 업무 시간대가 아닌 이상한 시간에 이메일을 받았어요.&lt;/em&gt;&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../media/urgency.JPG?classes=border,shadow&#34; alt=&#34;Urgency in language&#34;&gt;&lt;/p&gt;&#xA;&lt;div style=&#34;text-align: center;&#34;&gt;&#xD;&#xA;&lt;p style=&#34;color:red&#34;&gt;&#xD;&#xA;&lt;em&gt;이메일 내용이 급하게 행동하도록 재촉하는 말투를 사용하고 있어요.&lt;/em&gt;&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../media/url.JPG?classes=border,shadow&#34; alt=&#34;URLs in Email&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>보안 vs 개인정보 보호</title>
      <link>/kr/security-fundamentals/security-vs-privacy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-fundamentals/security-vs-privacy/</guid>
      <description>&lt;p&gt;사람들은 종종 보안과 개인정보 보호를 혼동하지만, 이 두 가지 개념은 다릅니다. 이러한 차이를 이해하는 것이 중요합니다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;보안&#34;&gt;보안&lt;/h3&gt;&#xA;&lt;p&gt;보안은 데이터를 무단으로 접근하지 못하게 보호하는 것입니다. 누군가가 허락 없이 데이터를 접근하지 못하게 하는 모든 조치를 보안이라고 합니다. 예를 들어:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;컴퓨터를 사용하지 않을 때 잠금 설정하기&lt;/li&gt;&#xA;&lt;li&gt;소프트웨어 공격을 막는 프로그래밍 기술사용하기&lt;/li&gt;&#xA;&lt;li&gt;이중 인증(2FA) 설정하기&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;개인정보-보호&#34;&gt;개인정보 보호&lt;/h3&gt;&#xA;&lt;p&gt;개인정보 보호는 사용자가 원하지 않는 관심이나 감시에서 벗어날 권리를 말합니다. 주로 개인식별정보(PII)를 보호하는 것에 중점을 둡니다. 개인식별정보의 예는 다음과 같습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>신뢰 구간(Confidence Interval)</title>
      <link>/kr/ml-machine-learning/03-confidence-intervals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/ml-machine-learning/03-confidence-intervals/</guid>
      <description>&lt;p&gt;이전 섹션에서, 무작위로 선택한 직원 30명의 샘플 데이터를 사용하여 선형 방정식의 기울기(Coefficient)와 절편(Intercept) 값을 구할 수 있었습니다.&lt;/p&gt;&#xA;&lt;h3&gt;&#xD;&#xA;\[&#xD;&#xA;    절편=25792.20&#xD;&#xA;\]&#xD;&#xA;\[&#xD;&#xA;    기울기=9449.96&#xD;&#xA;\]&#xD;&#xA;\[&#xD;&#xA;    급여=9449.96(경력)+25792.20+ε&#xD;&#xA;\]&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;하지만 여기서 또 다른 질문이 생깁니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;급여는 정말로 직원의 경력과 관련이 있을까요?&lt;/li&gt;&#xA;&lt;li&gt;두 변수 간의 관계가 실제로 연관성이 있다고 주장할 만큼 강한가요?&lt;/li&gt;&#xA;&lt;li&gt;무작위로 선택한 직원 30명의 데이터만으로 이를 판단하기에 충분할까요?&lt;/li&gt;&#xA;&lt;li&gt;이 값들이 정말로 올바른 지 어떻게 확인할 수 있을까요?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;여러분은 훨씬 더 많은 직원들로 구성된 데이터에서 작은 샘플을 추출해 값을 계산했다는 것을 기억해야 합니다. 하나의 샘플만 사용했기 때문에, 기울기와 계수 값에는 불확실성이 더 클 수 있습니다. 그렇다면 이 값들이 올바른 지 확인하려면 무엇을 해야 할까요?&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로그램 작성하기</title>
      <link>/kr/adafruit/creating-the-program/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/adafruit/creating-the-program/</guid>
      <description>&lt;p&gt;가장 선호하는 인터넷 브라우저(예: Edge, Firefox, Google Chrome, Internet Explorer)를 열고 &lt;a href=&#34;https://aka.ms/oranges&#34; target=&#34;_blank&#34;&gt;https://aka.ms/oranges&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; 로 이동합니다. 화면이 아래와 같이 보여야 합니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/adafruit.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;변수-정의하기&#34;&gt;변수 정의하기&lt;/h2&gt;&#xA;&lt;p&gt;오늘 우리는 오렌지를 사용하여 아다프루트가 언제 소리를 낼지 설정할 것입니다.&#xA;첫 번째 단계는 각 오렌지에 이름을 부여하고, 오렌지가 어떤 값을 전달하는지 확인할 위치를 컴퓨터에 알려주는 것입니다. 이를 위해 변수를 정의합니다. VARIABLES 섹션(담홍색, 상단에서 일곱 번째)을 클릭합니다. Make a Variable 버튼을 클릭하여 변수를 생성합니다. 두 개의 변수를 정의합니다. (예: analog1과 analog2) 원한다면 다른 이름을 사용할 수도 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동</title>
      <link>/kr/security/activity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security/activity/</guid>
      <description>&lt;p&gt;게임을 해봅시다!&lt;/p&gt;&#xA;&lt;form accept-charset=&#34;UTF-8&#34; action=&#34;https://formkeep.com/f/exampletoken&#34; method=&#34;POST&#34;&gt;&#xD;&#xA;  &lt;input type=&#34;hidden&#34; name=&#34;utf8&#34; value=&#34;✓&#34;&gt;&#xD;&#xA;  아래 텍스트 상자에 당신의 가장 좋아하는 문장을 적어보세요. 반드시 다섯 단어 이상이어야 합니다.(예: I like playing volleyball at the beach.)&lt;input type=&#34;email&#34;  name=&#34;email&#34; placeholder=&#34;Your Favorite sentence.&#34;&gt;&#xD;&#xA;&lt;/br&gt;&#xD;&#xA;   이제 위 문장의 각 단어의 첫 글자를 가져와서 텍스트 상자에 적어보세요.&#xD;&#xA;(예: ilpvatb)&#xD;&#xA;  &lt;input type=&#34;text&#34; name=&#34;name&#34; placeholder=&#34;The first letter of each word&#34;&gt;&#xD;&#xA;&lt;/br&gt;&#xD;&#xA;   텍스트에 숫자를 추가해보세요. 숫자의 위치를 기억하세요.&#xD;&#xA;(예: 1ilpvatb6)&#xD;&#xA;  &lt;input type=&#34;tel&#34; name=&#34;phone&#34; placeholder=&#34;Add some numbers&#34;&gt;&#xD;&#xA;&lt;/br&gt;&#xD;&#xA;마지막으로, 텍스트에 특수 문자를 추가해보세요.&#xD;&#xA;(예: 1ilpv$atb6)&#xD;&#xA;  &lt;input type=&#34;tel&#34; name=&#34;phone&#34; placeholder=&#34;Add a special character&#34;&gt;&#xD;&#xA;&lt;/br&gt;&#xD;&#xA;&lt;/form&gt;&#xD;&#xA;&lt;h3 id=&#34;voilà감탄-당신의-새로운-비밀번호가-완성되었습니다-보안을-뚫기-어려워-보이지-않나요&#34;&gt;Voilà(감탄), 당신의 새로운 비밀번호가 완성되었습니다! 보안을 뚫기 어려워 보이지 않나요?&lt;/h3&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;button class=&#34;btn  btn-success&#34; type=&#34;button&#34;  onclick=&#34;location.href=&#39;\/security\/4-spy-game\/&#39;&#34; &gt; 성공! &lt;/button&gt;</description>
    </item>
    <item>
      <title>Razor 기초1</title>
      <link>/kr/razor/razor-explained/</link>
      <pubDate>Tue, 12 Sep 2023 11:45:38 -0700</pubDate>
      <guid>/kr/razor/razor-explained/</guid>
      <description>&lt;h2 id=&#34;razor를-사용하는-때와-이유-알아보기&#34;&gt;Razor를 사용하는 때와 이유 알아보기&lt;/h2&gt;&#xA;&lt;h3 id=&#34;razor-pages의-장점&#34;&gt;Razor Pages의 장점&lt;/h3&gt;&#xA;&lt;p&gt;Razor는 서버 기반 코드(C#)를 웹 페이지에 포함할 수 있게 해주는 마크업  구문입니다.&lt;/p&gt;&#xA;&lt;p&gt;서버 기반 코드는 웹 페이지가 브라우저에 쓰여지는 동안 동적인 웹 콘텐츠를 생성할 수 있습니다. 웹 페이지가 호출되면 서버는 페이지 내의 서버 기반 코드를 실행한 뒤 결과를 브라우저에 반환합니다. 서버에서 실행되므로, 데이터베이스 접근과 같은 복잡한 작업을 수행할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;Razor는 ASP.NET을 기반으로 설계되었으며, 웹 애플리케이션을 만들기 위한 도구입니다. 기존 ASP.NET 마크업의 강력함을 유지하면서도 더 쉽고 간단하게 사용할 수 있도록 설계되었습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. 게임판 업데이트하기</title>
      <link>/kr/java-tictactoe/activity-3/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/kr/java-tictactoe/activity-3/</guid>
      <description>&lt;p&gt;이전 단계에서는 사용자의 유효한 입력을 받아 게임판을 출력하는 프로그램을 만들었습니다. 하지만 게임판은 여전히 비어 있습니다. 이번 단계에서는 사용자의 입력을 받아 게임판을 업데이트하고, 컴퓨터의 랜덤한 움직임도 추가하는 방법을 배웁니다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;~ 틱택토~&amp;gt;&amp;gt;&#xD;&#xA;* 1번 - 9번을 선택하여 이동합니다&#xD;&#xA;* 플레이어: &amp;#39;X&amp;#39; 컴퓨터: &amp;#39;O&amp;#39;&#xD;&#xA;&#xD;&#xA;1 | 2 | 3&#xD;&#xA;---+---+---&#xD;&#xA;4 | 5 | 6&#xD;&#xA;---+---+---&#xD;&#xA;7 | 8 | 9&#xD;&#xA;당신의 이동을 입력하세요 (1-9): 1&#xD;&#xA;| |&#xD;&#xA;---+---+---&#xD;&#xA;| | &amp;lt;--------------------- 보드에 플레이어/컴퓨터 이동이 없습니다&#xD;&#xA;---+---+---&#xD;&#xA;| |&#xD;&#xA;당신의 이동을 입력하세요 (1-9): d&#xD;&#xA;잘못된 입력; 이동을 다시 입력합니다 (1-9): 3&#xD;&#xA;| |&#xD;&#xA;---+---+---&#xD;&#xA;| | &amp;lt;--------------------- 보드에 플레이어/컴퓨터 이동이 없습니다&#xD;&#xA;---+---+---&#xD;&#xA;| |&#xD;&#xA;당신의 이동을 입력하세요 (1-9):&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;사용자-움직임-표시하기&#34;&gt;사용자 움직임 표시하기&lt;/h2&gt;&#xA;&lt;p&gt;hasNextInt() 조건문 안에서, printBoard(board) 메서드를 호출하기 전에 사용자가 입력한 값을 기반으로 board 배열을 업데이트합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>문제 해결하기</title>
      <link>/kr/supply-chain-analytics/solverandsolving/</link>
      <pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate>
      <guid>/kr/supply-chain-analytics/solverandsolving/</guid>
      <description>&lt;p&gt;Excel에서 최적화 문제를 실행하려면 “Solver”라는 추가 기능을 활성화해야 해요. 자세한 내용은 아래 링크나 이미지를 참조하세요.&lt;/p&gt;&#xA; &lt;img src= ../img/Download_Excel_solver.jpg alt=&#34;Screenshot of steps to download Excel solver&#34; width=&#34;800&#34; height=&#34;600&#34;&gt;&#xD;&#xA;&lt;p&gt;문제를 해결하는 방법이 어려우면, &lt;a href=&#34;https://support.microsoft.com/en-us/office/load-the-solver-add-in-in-excel-612926fc-d53b-46b4-872c-e24772f078ca&#34; target=&#34;_blank&#34;&gt;이곳&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;에서 도움을 받을 수 있어요.&lt;/p&gt;&#xA;&lt;p&gt;Solver 추가 기능은 Excel의 “Data” 탭에서 “Solver”를 클릭하면 사용할 수 있어요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/solver.jpg&#34; alt=&#34;Screenshot of where to find “Solver” add in on the header bar&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;다음 &lt;a href=&#34;../Cookie_Bakery_Optimization_Template.xlsx&#34;&gt;템플릿&lt;/a&gt;&#xD;&#xA;을 다운로드하여 문제 설정을 따라가 보세요.&lt;/p&gt;&#xA;&lt;p&gt;Solver를 사용할 때는 셀 번호와 셀 간의 관계만 선택하면 돼요. Excel 사용이 익숙하지 않은 경우, 선생님께 도움을 요청하세요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>새가 힘차게 점프하고 회전하면서 떨어지도록 만들기</title>
      <link>/kr/jsappybird/jump-force/</link>
      <pubDate>Wed, 29 Jul 2020 13:24:17 -0700</pubDate>
      <guid>/kr/jsappybird/jump-force/</guid>
      <description>&lt;p&gt;이번에는 새가 더 힘차게 점프할 수 있게 해 봅시다.&lt;/p&gt;&#xA;&lt;p&gt;파일 [File: create-game.js] 에 다음 명령을 추가하세요.&#xA;bird.body.velocity.y = -350;&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h2 id=&#34;함께-해보기&#34;&gt;함께 해보기&lt;/h2&gt;&#xA;&lt;p&gt;아래 Replit 창에서 코드는 &lt;code&gt;bird.body.velocity.y = -350;&lt;/code&gt;로 시작합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/jump_force.png&#34; alt=&#34;alt text&#34; title=&#34;image to add gravity to the bird&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;run&lt;/strong&gt; 을 누르면, 콘솔에 새가 힘차게 점프하는 모습이 나타납니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/jump_output.png&#34; alt=&#34;alt text&#34; title=&#34;bird jumping with gravity&#34;&gt;&lt;/p&gt;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;h2 id=&#34;보너스-활동&#34;&gt;보너스 활동&lt;/h2&gt;&#xA;&lt;p&gt;새가 위로 점프하면서 앞으로 나아가도록 만들어 봅시다:&lt;/p&gt;&#xA;&lt;p&gt;파일 [File: create-game.js] 에 다음 명령을 추가하세요.&#xA;bird.body.velocity.x = 100;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activity 3 - 반복문 (Loops)</title>
      <link>/kr/secret-messages/activity-3/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/activity-3/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zEQkGgS779g&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;좋아요!&lt;/p&gt;&#xA;&lt;p&gt;이제 왕께서 메시지를 문자를 통해 입력하도록 요청하셨습니다. 나중에 메시지를 수정할 수 있도록 하기 위함입니다.&lt;/p&gt;&#xA;&lt;p&gt;이를 위해 **반복문(Loop)**이라는 것을 사용해야 합니다. 반복문은 특정 코드 블록을 여러 번 실행할 수 있게 합니다. 아래의 예제를 살펴보세요. 이 코드는 반복문을 사용하여 숫자를 출력합니다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;for(int i=0; i&amp;lt;3; i++){&#xD;&#xA;  cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let&amp;rsquo;s try to understand what this line of code does.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h3 id=&#34;반복문loops&#34;&gt;반복문(Loops)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;for(int i=0; i&amp;lt;3; i++) { }&lt;/code&gt;&#xA;이 코드는 중괄호 {} 안에 있는 명령어를 반복문(loop)으로 실행하도록 프로그램에 지시합니다. 이 명령어에는 세 가지 주요 부분이 있습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>신호 강도 해석하기</title>
      <link>/kr/microbit-distance-checker/signal-strength/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/microbit-distance-checker/signal-strength/</guid>
      <description>&lt;p&gt;이제 마이크로빗이 수신한 신호 강도를 알게 되었으니, 이를 사용하여 거리를 계산해 봅시다. Logic 섹션을 클릭한 뒤 “if true then / else” 블록을 가져와 radio received 블록 안으로 끌어다 놓습니다. 그런 다음 Logic 섹션으로 돌아가 “0 = 0” 비교 블록을 가져와 “if true then” 라인의 true 부분 위에 드롭하세요. 이 단계가 끝나면 코드가 아래와 같이 보여야 합니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/addedLogic.png&#34; alt=&#34;Workspace with if/then/else statement added to event block&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;이제 마이크로빗이 우리가 6피트(약 2미터) 이상 떨어져 있는지 확인하는 방법을 설정해 봅시다. Variables 메뉴를 열고 strength 버블을 선택한 뒤, 이를 if 블록의 첫 번째 0 위에 드롭하여 &lt;code&gt;if strength = 0 then&lt;/code&gt;로 변경하세요. 그런 다음, 등호(=) 기호를 클릭하여 다른 기호들의 목록을 표시합니다. 여기에서 “&amp;gt;” 기호를 선택하세요. 마지막으로, if 문 안의 마지막 0을 클릭하여 `-67로 바꿔줍니다. 완성된 “on radio received” 블록은 다음과 같이 보여야 합니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 2 - 곡 만들기!</title>
      <link>/kr/javascript-blocks-earsketch/activity-2-make-a-song/</link>
      <pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate>
      <guid>/kr/javascript-blocks-earsketch/activity-2-make-a-song/</guid>
      <description>&lt;p&gt;이제 EarSketch에 사운드를 추가하는 방법을 배웠으니, 곡을 만들어봅시다! 이미 EarSketch에 하나의 오디오 클립이 추가된 상태일 것입니다. 하지만 곡은 여러 악기로 구성되므로, 더 많은 오디오 클립을 추가해야 합니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;fitMedia()&lt;/code&gt; 블록을 하나 더 추가하세요.&lt;/li&gt;&#xA;&lt;li&gt;현재 곡에 추가할 오디오 클립을 찾아서 &lt;code&gt;sound&lt;/code&gt; 매개변수에 넣으세요.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;track&lt;/code&gt; 매개변수는 고유한 숫자여야 합니다. 이렇게 하면 다른 트랙에 사운드를 배치할 수 있습니다. 다른 트랙에 사운드를 배치하면 각 사운드를 체계적으로 관리할 수 있으며, 동시에 다양한 사운드를 재생할 수 있습니다. 예시: 첫 번째 &lt;code&gt;fitMedia()&lt;/code&gt; 호출이 1번 트랙에 있다면, 두 번째 &lt;code&gt;fitMedia()&lt;/code&gt; 호출은 2번 트랙에 있어야 합니다.&lt;/li&gt;&#xA;&lt;li&gt;나머지 매개변수들도 완성하세요.&lt;/li&gt;&#xA;&lt;li&gt;이 단계를 반복하여 네 개의 서로 다른 오디오 사운드를 곡에 추가하세요.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;이제 코드가 아래와 같이 보일 것입니다::&lt;/p&gt;</description>
    </item>
    <item>
      <title>웹 개발자 가이드라인(Web Developer Guidelines)</title>
      <link>/kr/guidelines/web-developer/</link>
      <pubDate>Mon, 22 Jul 2019 14:08:32 -0700</pubDate>
      <guid>/kr/guidelines/web-developer/</guid>
      <description>&lt;p&gt;이 문서는 &lt;a href=&#34;https://github.com/nuevoFoundation/workshops&#34; target=&#34;_blank&#34;&gt;Nuevo Foundation 워크숍 프로젝트&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;의 템플릿과 스타일을 변경하려는 &lt;strong&gt;웹사이트 개발자 전용&lt;/strong&gt;입니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;시작하기-전에&#34;&gt;시작하기 전에&lt;/h2&gt;&#xA;&lt;p&gt;웹사이트를 추가하거나 업데이트하기 전에 프로젝트 팀과 동기화를 맞추고 &lt;a href=&#34;https://github.com/NuevoFoundation/workshops/projects/1&#34; target=&#34;_blank&#34;&gt;프로젝트 백로그(Project Backlog)&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; 내 기존 작업을 확인하세요.&lt;/p&gt;&#xA;&lt;h2 id=&#34;설치&#34;&gt;설치&lt;/h2&gt;&#xA;&lt;p&gt;프로젝트를 로컬에서 테스트하기 위해 &lt;a href=&#34;../getting-started/&#34;&gt;시작하기(Getting Started)&lt;/a&gt;&#xD;&#xA; 페이지의 지침에 따라 Git과 Hugo를 설치하세요.&lt;/p&gt;&#xA;&lt;h2 id=&#34;웹-디자인-스타일과-구조&#34;&gt;웹 디자인 스타일과 구조&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;이미지(images)&lt;/strong&gt; 웹사이트 이미지 파일은 &lt;code&gt;themes/images&lt;/code&gt;에 저장해야 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CSS&lt;/strong&gt; SCSS 파일은 무시하고 &lt;code&gt;/themes/docdock/static/css/&lt;/code&gt;파일만 사용하세요.  필요한 CSS를 &lt;code&gt;head.html&lt;/code&gt;파일 안 &lt;code&gt;/themes/docdock/layouts/partials/flex/head.html&lt;/code&gt; 파일의 태그에 참조로 추가하세요.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;워크숍-페이지-분석&#34;&gt;워크숍 페이지 분석&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;전체 페이지 템플릿(Full page template)&lt;/strong&gt;: 헤더, 메뉴, 본문, 푸터를 포함한 페이지의 모든 구성 요소를 확인하려면 &lt;code&gt;/themes/docdock/layouts/_default/baseof.html&lt;/code&gt; 파일을 참조하세요.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;헤드(Head)&lt;/strong&gt;: 메타 정보, CSS, 및 JS 파일은 &lt;code&gt;/themes/docdock/layouts/partials/flex/head.html&lt;/code&gt; 파일에서 확인하세요.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;상단/메뉴 내비게이션(Top/Menu Navigation)&lt;/strong&gt;: docDock config.toml 값을 사용하지 마세요., 대신 &lt;code&gt;/themes/docdock/layouts/partials/flex/body-before-content.html&lt;/code&gt; 파일에서 HTML을 추가하거나 수정하세요.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;왼쪽 메뉴(Left Menu)&lt;/strong&gt;: &lt;code&gt;/themes/docdock/layouts/partials/flex/menu.html&lt;/code&gt; 파일을 참조하세요.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;푸터 내비게이션(Footer Navigation)&lt;/strong&gt;: &lt;code&gt;/themes/docdock/layouts/partials/flex/body-after-content.html&lt;/code&gt; 파일을 참조하세요.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;메타데이터 박스(Metadata Box)&lt;/strong&gt;: &lt;code&gt;/themes/docdock/layouts/partials/flex/body-after-content.html&lt;/code&gt; 파일을 참조하세요.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;도움말-css가-사라졌어요&#34;&gt;도움말: CSS가 사라졌어요!&lt;/h2&gt;&#xA;&lt;p&gt;Hugo의 주요 매개변수 중 하나는 &lt;code&gt;baseURL&lt;/code&gt; 변수입니다. 콘텐츠는 로드되지만 CSS가 로드되지 않는다면 &lt;code&gt;baseURL&lt;/code&gt; 설정의 문제일 가능성이 큽니다. 콘텐츠를 빌드할 때 config.toml 파일을 변경하는 대신 &lt;code&gt;baseURL&lt;/code&gt;을 설정할 수 있습니다. 아래 예시는 CSS와 JS를 최적화하고 &lt;code&gt;baseURL&lt;/code&gt;을 프로덕션 URL로 설정하여 public 디렉터리에 결과를 복사하는 방법입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Step 4: 데이터 전처리하기</title>
      <link>/kr/machine-learning/preprocess-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/machine-learning/preprocess-data/</guid>
      <description>&lt;p&gt;이전 스텝을 통해 데이터셋을 불러왔습니다. 실제 상황에서는 각 축구 선수는 특정한 포지션을 가지고 있으며, 각 포지션마다 필요한 능력치가 다릅니다. 그래서 우리는 이제 분석 범위를 스트라이커(ST)로 좁혀보겠습니다.&lt;/p&gt;&#xA;&lt;p&gt;먼저, 모든 포지션을 나열해 봅시다. 명령어가 조금 길긴 합니다. 하지만 잘 따라해주세요. &lt;code&gt;fifa_data[&#39;Position&#39;]&lt;/code&gt;은 &lt;code&gt;fifa_data&lt;/code&gt;의 포지션 열을 선택하고, &lt;code&gt;dropna()&lt;/code&gt;는 빈 셀을 제거하며, &lt;code&gt;unique()&lt;/code&gt;는 모든 중복 항목을 제거해 줍니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 포지션이 몇 개인지 확인하기&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fifa_data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;dropna&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;unique&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;())&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력 결과는 다음과 같습니다:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;[&#39;RF&#39; &#39;ST&#39; &#39;LW&#39; &#39;GK&#39; &#39;RCM&#39; &#39;LF&#39; &#39;RS&#39; &#39;RCB&#39; &#39;LCM&#39; &#39;CB&#39; &#39;LDM&#39; &#39;CAM&#39; &#39;CDM&#39;&#xD;&#xA; &#39;LS&#39; &#39;LCB&#39; &#39;RM&#39; &#39;LAM&#39; &#39;LM&#39; &#39;LB&#39; &#39;RDM&#39; &#39;RW&#39; &#39;CM&#39; &#39;RB&#39; &#39;RAM&#39; &#39;CF&#39; &#39;RWB&#39;&#xD;&#xA; &#39;LWB&#39;]&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;이제 &amp;ldquo;ST&amp;rdquo; 포지션을 기준으로 데이터를 필터링 해보겠습니다. 여러분은 다른 포지션을 선택해서 차이를 확인해 보길 권장합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>모델 적합도</title>
      <link>/kr/ml-machine-learning/04-model-fit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/ml-machine-learning/04-model-fit/</guid>
      <description>&lt;h1 id=&#34;우리가-만든-모델이-데이터를-잘-설명할까요&#34;&gt;우리가 만든 모델이 데이터를 잘 설명할까요?&lt;/h1&gt;&#xA;&lt;p&gt;우리가 만든 선형 방정식은 랜덤 오류 값(&lt;strong&gt;ε&lt;/strong&gt;)을 포함하고 있습니다:&lt;/p&gt;&#xA;&lt;h3&gt;&#xD;&#xA;\[&#xD;&#xA;    급여 = 9449.96(경력) + 25792.20 + ε&#xD;&#xA;\]&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;ε&lt;/strong&gt;는 우리가 정확히 알 수 없는 오류 값입니다. 그래서 다음과 같은 질문을 해봐야 합니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;우리의 모델이 현실을 얼마나 잘 반영하나요? 또는 모델이 우리가 가진 데이터를 얼마나 잘 설명하나요?&lt;/li&gt;&#xA;&lt;li&gt;경력이 정말로 급여에 영향을 미치는지 어떻게 알 수 있을까요?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;이를 알아내는 방법은 여러 가지가 있지만, 머신 러닝과 통계의 세계에서는 이를 평가할 수 있는 &lt;code&gt;R-제곱(R-Squared 또는 R^2)&lt;/code&gt;이라는 값을 사용합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>사이버 보안의 원인과 결과</title>
      <link>/kr/security-fundamentals/cyber-security-cause--effect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-fundamentals/cyber-security-cause--effect/</guid>
      <description>&lt;p&gt;사이버 보안 실천은 단순히 온라인 사기에 넘어가지 않는 것 이상입니다. 사용자가 흔히 간과하고 해커들이 악용하는 일반적인 위험 요소들은 무엇일까요?&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;이중 인증(2FA)을 설정하지 않음&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;소셜 미디어, 은행, 게임 계정 등에 로그인할 때 이중 인증을 활성화하지 않으면 해커들이 쉽게 비밀번호를 알아채서 나도 모르게 로그인할 수 있습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h3 id=&#34;이중-인증2fa-설정하기&#34;&gt;이중 인증(2FA) 설정하기&lt;/h3&gt;&#xA;&lt;p&gt;이중 인증(2FA)은 로그인할 때 두 가지 방법으로 본인을 증명하는 절차를 말합니다. 이 기능은 누군가가 여러분의 비밀번호를 훔치거나 추측하더라도 계정에 로그인할 수 없도록 보호해줍니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>스파이 게임</title>
      <link>/kr/security/spy-game/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security/spy-game/</guid>
      <description>&lt;p&gt;지난 활동에서 우리는 강력한 비밀번호가 무작위 문자 조합(대문자와 소문자, 숫자 및 일부 특수 문자가 포함될 수 있음)으로 이루어져 있다는 것을 배웠습니다. 이제 &amp;ldquo;해킹 가능&amp;rdquo; 또는 &amp;ldquo;안전&amp;rdquo; 게임을 해볼 시간입니다!&#xA;우리 누비의 비밀번호 목록에서 이브가 해킹할 수 없는 가장 강력한 비밀번호를 선택하세요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/pwd1.png?height=450px&amp;amp;classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;fieldset&gt;  &#xD;&#xA;  &lt;legend&gt;이 비밀번호는 해킹될 수 있습니까?&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-on1&#34; name=&#34;notify1&#34; value=&#34;on&#34; &gt;&#xD;&#xA;    &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-off1&#34; name=&#34;notify1&#34; value=&#34;off&#34;&gt;&#xD;&#xA;    &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;  &lt;/legend&gt;&#xD;&#xA;&lt;/fieldset&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../img/pwd2.png?height=450px&amp;amp;classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;fieldset&gt;  &#xD;&#xA;  &lt;legend&gt;이 비밀번호는 해킹될 수 있습니까?&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-on2&#34; name=&#34;notify2&#34; value=&#34;on&#34; &gt;&#xD;&#xA;    &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-off2&#34; name=&#34;notify2&#34; value=&#34;off&#34;&gt;&#xD;&#xA;    &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;  &lt;/legend&gt;&#xD;&#xA;&lt;/fieldset&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../img/pwd3.png?height=450px&amp;amp;classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;fieldset&gt;  &#xD;&#xA;  &lt;legend&gt;이 비밀번호는 해킹될 수 있습니까?&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-on3&#34; name=&#34;notify3&#34; value=&#34;on&#34; &gt;&#xD;&#xA;    &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-off3&#34; name=&#34;notify3&#34; value=&#34;off&#34;&gt;&#xD;&#xA;    &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;  &lt;/legend&gt;&#xD;&#xA;&lt;/fieldset&gt; &#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../img/pwd4.png?height=450px&amp;amp;classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;fieldset&gt;  &#xD;&#xA;  &lt;legend&gt;이 비밀번호는 해킹될 수 있습니까?&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-on4&#34; name=&#34;notify4&#34; value=&#34;on&#34; &gt;&#xD;&#xA;    &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-off4&#34; name=&#34;notify4&#34; value=&#34;off&#34;&gt;&#xD;&#xA;    &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;  &lt;/legend&gt;&#xD;&#xA;&lt;/fieldset&gt;&#xD;&#xA;&lt;h4 id=&#34;축하합니다-해내셨어요-아래-버튼을-클릭하여-정답을-확인하세요&#34;&gt;축하합니다! 해내셨어요! 아래 버튼을 클릭하여 정답을 확인하세요.&lt;/h4&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;button class=&#34;btn  btn-success&#34; type=&#34;button&#34;  onclick=&#34;location.href=&#39;..\/summary&#39;&#34; &gt; 정답 &lt;/button&gt;</description>
    </item>
    <item>
      <title>요약</title>
      <link>/kr/security/summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security/summary/</guid>
      <description>&lt;h2 id=&#34;강력한-비밀번호의-특징은-다음과-같습니다&#34;&gt;강력한 비밀번호의 특징은 다음과 같습니다:&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;최소 8자 이상 - 문자가 많을수록 좋습니다.&lt;/li&gt;&#xA;&lt;li&gt;문자와 숫자의 혼합&lt;/li&gt;&#xA;&lt;li&gt;적어도 하나의 특수 문자를 포함해야 합니다. 예: ! @ # ? ]&#xA;&lt;em&gt;주의: 비밀번호에 &amp;lt; 또는 &amp;gt;를 사용하지 마세요. 이 두 기호는 웹 브라우저에서 문제를 일으킬 수 있습니다.&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;보안이 강력한 비밀번호는 추측하기 어렵지만, 당신이 기억하기 쉬워야 합니다. 적어 두어야 하는 비밀번호는 강력하지 않습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;해답&#34;&gt;해답&lt;/h2&gt;&#xA;&lt;p&gt;우리의 스파이 게임에서 “Ilovemypet” 비밀번호는 숫자와 특수 문자가 포함되어 있지 않으며, “12345678”은 숫자의 시퀀스입니다. 따라서 두 비밀번호 모두 약하며 해킹 될 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로그램 다운로드하기</title>
      <link>/kr/adafruit/downloading-your-program/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/adafruit/downloading-your-program/</guid>
      <description>&lt;p&gt;작업 공간 하단에서 프로그램 이름 옆에 있는 밝은 분홍색 [Download] 버튼을 찾을 수 있습니다. 프로그램 이름을 지정하세요. 여기서는 예시로 adafruit_musicalfruit라고 이름을 붙였습니다. [Download] 버튼을 클릭합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/download1.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;파일 저장 위치를 묻는 창이 나타나면 Downloads 폴더를 선택하세요. 기본적으로 Downloads 폴더로 설정되어 있을 것입니다. 그렇지 않은 경우, Downloads 폴더로 이동하여 저장하세요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/download2.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;이제 컴퓨터에 USB 케이블을 연결하세요. 연결하면 무지개색 조명이 나타날 것입니다. 이는 보드가 기본 프로그램을 실행 중임을 의미합니다. 이 기본 프로그램을 우리 프로그램으로 교체할 것입니다. 보드 중앙의 작은 리셋 버튼을 누르세요. 조명이 빨간색으로 바뀐 후 초록색으로 바뀌면 준비 완료입니다. 만약 조명이 초록색으로 바뀌지 않는다면, 리셋 버튼을 빠르게 두 번 클릭한 후 몇 초 동안 기다려 보세요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>피싱에 대해 더 배우기</title>
      <link>/kr/security-phishing/other-phishing-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-phishing/other-phishing-types/</guid>
      <description>&lt;p&gt;앨리스는 이메일 피싱 외에도 다른 종류의 피싱 사기들을 밥에게 설명해 주었어요.&lt;/p&gt;&#xA;&lt;h2 id=&#34;스미싱sms-피싱&#34;&gt;스미싱(SMS 피싱)&lt;/h2&gt;&#xA;&lt;p&gt;스미싱은 문자 메시지를 이용한 피싱이에요. 해커가 문자 메시지(SMS)를 통해 링크를 보내서, 사용자가 클릭하도록 유도해 개인 정보를 빼앗으려 해요. 예를 들어, 무료 iPad 제공 같은 메시지로 유혹하여 사용자가 링크를 누르게 만들죠.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../media/SMS.JPG?classes=border,shadow&#34; alt=&#34;An example of SMS Phishing&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;위의 이미지에서 알 수 있듯이, 모르는 사람이 iPad 무료 제공에 관한 메시지를 보내 클릭하도록 유도하고 있어요.&lt;/p&gt;&#xA;&lt;h2 id=&#34;멀버타이징malvertising&#34;&gt;멀버타이징(Malvertising)&lt;/h2&gt;&#xA;&lt;p&gt;멀버타이징은 악성 광고로, 컴퓨터에 원하지 않는 콘텐츠를 강제로 띄우거나 악성 프로그램을 설치하도록 유도하는 광고예요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 1: ALICE 만나기</title>
      <link>/kr/chatbot/activity-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/activity-1/</guid>
      <description>&lt;h2 id=&#34;alice-만나기&#34;&gt;ALICE 만나기&lt;/h2&gt;&#xA;&lt;p&gt;챗봇만들기를 시작하기 전에, ALICE와 만나서 몇 가지 질문을 해보겠습니다. 이 웹페이지를 열어둔 채로 진행해 주세요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://www.pandorabots.com/pandora/talk?botid=b8d616e35e36e881&#34; target=&#34;_blank&#34;&gt;ALICE 사용해보기&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ALICE에 대해 어떻게 생각하시나요?&lt;/p&gt;&#xA;&lt;p&gt;ALICE가 대답할 수 있었던 질문은 무엇인가요?&lt;/p&gt;&#xA;&lt;p&gt;ALICE가 대답하지 못했던 질문은 무엇인가요?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Razor 기초2</title>
      <link>/kr/razor/razor-syntax/</link>
      <pubDate>Tue, 12 Sep 2023 11:45:38 -0700</pubDate>
      <guid>/kr/razor/razor-syntax/</guid>
      <description>&lt;h2 id=&#34;razor-구문&#34;&gt;Razor 구문&lt;/h2&gt;&#xA;&lt;h3 id=&#34;razor-구문의-주요-규칙&#34;&gt;Razor 구문의 주요 규칙&lt;/h3&gt;&#xA;&lt;p&gt;Razor는 C#을 지원하며, HTML에서 C#으로 전환하기 위해 @ 기호를 사용합니다. Razor는 C# 표현식을 평가한 후, 이를 HTML 출력에 렌더링 합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;@ 기호와 Razor 전환&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;@ 기호 뒤에 Razor 예약 키워드가 올 경우: Razor 전용 마크업으로 전환됩니다.&lt;/li&gt;&#xA;&lt;li&gt;그렇지 않은 경우: 일반 HTML로 간주됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;@ 기호 이스케이프 처리&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Razor 마크업에서 @ 기호를 출력하려면 한 번 더 @를 사용합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;@Username&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 코드의 HTML 출력은 다음과 같이 렌더링됩니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. 승자를 확인하기</title>
      <link>/kr/java-tictactoe/activity-4/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/kr/java-tictactoe/activity-4/</guid>
      <description>&lt;h2 id=&#34;승자를-확인하기&#34;&gt;승자를 확인하기&lt;/h2&gt;&#xA;&lt;p&gt;현재 게임 보드의 &lt;code&gt;array&lt;/code&gt; 입력으로 &lt;code&gt;String&lt;/code&gt;에서 승자를 반환하는 방법 &amp;lsquo;getWinner(String[] curBoard)&amp;lsquo;를 작성합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;플레이어가 이기면 &amp;lsquo;&amp;ldquo;축하합니다!\n당신은 게임에서 이겼습니다 :)&amp;rsquo;.(&lt;code&gt;&amp;quot;Congratulations! \nYou won the Game :)&amp;quot;&lt;/code&gt;)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;컴퓨터가 이기면 &amp;lsquo;&amp;ldquo;게임 오버!&amp;ldquo;를 반환하세요당신은 게임에서 졌습니다 :(&amp;rsquo;).(&lt;code&gt;&amp;quot;Game Over! \nYou lost the Game :(&amp;quot;&lt;/code&gt;.)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;동점일 경우 &amp;lsquo;It&amp;rsquo;s TIE! 다시 시도해 보세요&amp;rsquo;라고 답하세요.(&lt;code&gt;&amp;quot;It&#39;s a TIE! Try again&amp;quot;&lt;/code&gt;.)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;아직 우승자가 없다면 &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;.를 반환하세요.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;이 방법을 작성하는 방법에는 여러 가지가 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;다음 리플릿에서 먼저 시도해 보세요. 방법이 올바르게 작성되었는지 알려줄 것입니다!&#xA;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://replit.com/@nuevofoundation/JavaTicTacToegetWinner&#34; target=&#34;_blank&#34;&gt;Replit 실행하기&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>추가 도전 과제</title>
      <link>/kr/supply-chain-analytics/challenge/</link>
      <pubDate>Sat, 13 Mar 2021 14:17:07 -0700</pubDate>
      <guid>/kr/supply-chain-analytics/challenge/</guid>
      <description>&lt;p&gt;농장의 울타리 하나가 부서져 닭과 암탉들이 모두 도망갔어요! 그래서 계란이 부족해졌고, 계란의 최대 사용 가능 수량을 24개에서 15개로 변경해야 해요. ☹&lt;/p&gt;&#xA;&lt;p&gt;새로운 최적의 쿠키 생산량을 계산할 수 있나요? 계란 부족으로 인해 수익이 얼마나 변했는지 확인해 보세요.&lt;/p&gt;&#xA;&lt;div class=&#34;notices hint&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;힌트&#34;&gt;계란 수량 제한이 설정된 셀을 24에서 15로 변경한 다음, Solver를 다시 실행해 보세요! 공식을 제대로 설정했다면 Solver에서 셀 값만 변경해도 다른 설정을 바꿀 필요는 없어요.&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>포맷팅(Formatting)</title>
      <link>/kr/guidelines/formatting/</link>
      <pubDate>Wed, 29 Jul 2020 14:08:32 -0700</pubDate>
      <guid>/kr/guidelines/formatting/</guid>
      <description>&lt;p&gt;워크숍을 새로 만들거나 수정할 때는 표준 마크다운(Markdown) 신텍스(syntax)와 일부 맞춤 신텍스(syntax)를 사용하여 작성합니다. 이 페이지는 워크숍에 특정 형식을 추가하기 위해 사용할 신텍스(syntax)를 설명합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;포맷-참조formatting-reference&#34;&gt;포맷 참조(Formatting Reference)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34; target=&#34;_blank&#34;&gt;표준 마크다운(Markdown) 치트시트(Cheatsheet)&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/guidelines/shortcodes/&#34;&gt;쇼트코드를 사용한 맞춤 형식 옵션(Custom Formatting Options using shortcodes)&lt;/a&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;포맷-예제formatting-examples&#34;&gt;포맷 예제(Formatting Examples)&lt;/h2&gt;&#xA;&lt;p&gt;이 테마에는 사이트의 모양과 느낌을 사용자 지정할 수 있는 다양한 옵션이 포함되어 있습니다. 아래에 신텍스(syntax) 예제와 해당 신텍스를 사용하게 되면 페이지에 실제로 표시되는 결과를 확인할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>새가 점프할 때 소리 추가하기 &amp; 보너스</title>
      <link>/kr/jsappybird/add-jump-sound/</link>
      <pubDate>Wed, 29 Jul 2020 13:24:17 -0700</pubDate>
      <guid>/kr/jsappybird/add-jump-sound/</guid>
      <description>&lt;p&gt;새가 점프할 때 소리가 나도록 만들어 봅시다.&lt;/p&gt;&#xA;&lt;p&gt;파일 [File: create-game.js] 에 다음 명령을 추가하세요.&#xA;jumpSound.play();&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h2 id=&#34;함께-해보기&#34;&gt;함께 해보기&lt;/h2&gt;&#xA;&lt;p&gt;아래 Replit 창에서 &lt;code&gt;jumpSound.play();&lt;/code&gt;로 코드를 시작했습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/jump_sound.png&#34; alt=&#34;alt text&#34; title=&#34;image to add sound to the bird&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;run&lt;/strong&gt; 을 누르면, 여러분의 콘솔에 새가 점프하면서 소리를 내는 모습을 확인할 수 있습니다.&lt;/p&gt;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;h1 id=&#34;보너스-활동&#34;&gt;보너스 활동&lt;/h1&gt;&#xA;&lt;div class=&#34;notices note&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;주석&#34;&gt;&lt;ul&gt;&#xA;&lt;li&gt;중력의 값을 더 높이면 어떻게 될까요?&lt;/li&gt;&#xA;&lt;li&gt;중력 값을 음수로 만들면 무슨 일이 일어날까요?&lt;/li&gt;&#xA;&lt;li&gt;새가 다른 재미있는 방법으로 점프하게 하려면 어떻게 해야 할까요?&lt;/li&gt;&#xA;&lt;li&gt;새가 더 빠르게 회전하게 만들려면 어떻게 해야 할까요?&lt;/li&gt;&#xA;&lt;li&gt;회전을 명령하는 “if(조건명령어)”를 제거하면 어떤 변화가 생길까요?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activity 4 - 조건문 (Conditions)</title>
      <link>/kr/secret-messages/activity-4/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/activity-4/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/eweOJoWtuwg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;좋아요!&lt;/p&gt;&#xA;&lt;p&gt;우리는 점점 비밀 메시지를 완성하는 데 가까워지고 있습니다. 하지만 이 메시지를 해독(decrypt)할 수 있어야 한다는 점도 잊지 마세요!&lt;/p&gt;&#xA;&lt;p&gt;이를 위해 콘솔에서 입력 값을 받을 것입니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1을 입력하면 메시지를 암호화(encrypt)합니다.&lt;/li&gt;&#xA;&lt;li&gt;2를 입력하면 메시지를 해독(decrypt)합니다.&#xA;이 작업을 위해 **조건문(Condition)**이 필요합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h3 id=&#34;조건문-ifelse&#34;&gt;조건문 if/else&lt;/h3&gt;&#xA;&lt;p&gt;프로그래밍에서 조건문이란 특정 조건이 참(true)인지에 따라 명령어 또는 명령어 그룹을 실행하거나 실행하지 않도록 지시하는 것입니다. 이는 다음과 같이 동작합니다:&#xA;만약(if) 특정 조건이 충족되면, 이 명령어를 실행합니다. &lt;strong&gt;그렇지 않다면(if not)(else)&lt;/strong&gt; 다른 명령어를 실행합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>시각적 표시</title>
      <link>/kr/microbit-distance-checker/light-it-up/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/microbit-distance-checker/light-it-up/</guid>
      <description>&lt;p&gt;이제 논리적 코드를 작성했으니, 6피트 이상 떨어졌는지 확인할 수 있도록 시각적 표시를 추가해 봅시다. Basic 섹션을 클릭하여 “show icon” 블록을 가져와 논리 블록의 if 부분 안에 넣습니다. 아이콘을 클릭하여 다른 아이콘 목록을 표시한 뒤, 슬픈 찡그린 얼굴을 선택하세요. 다시 Basic 메뉴로 돌아가 “show icon” 블록을 하나 더 가져온 뒤, 논리 블록의 else 부분 안에 배치합니다. 이번에는 웃는 얼굴 아이콘으로 변경하세요. 작업이 완료되면 코드가 다음과 같이 보여야 합니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/finalCode.png&#34; alt=&#34;The final, completed code for the project&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 3 - 곡에 효과 추가하기</title>
      <link>/kr/javascript-blocks-earsketch/activity-3-add-effects-to-your-songs/</link>
      <pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate>
      <guid>/kr/javascript-blocks-earsketch/activity-3-add-effects-to-your-songs/</guid>
      <description>&lt;h2 id=&#34;earsketch에서의-효과&#34;&gt;EarSketch에서의 효과&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;효과&lt;/strong&gt; 프로듀서가 오디오 클립의 소리를 독특하게 변형할 수 있게 합니다. 새로운 오디오 클립을 추가할 때 &lt;code&gt;fitMedia()&lt;/code&gt; 함수를 사용한 것처럼, 우리는 특정 오디오 클립에 효과를 적용하기 위해 &lt;code&gt;setEffect()&lt;/code&gt; 함수를 사용해야 합니다. 한 트랙에 여러 효과를 적용할 수 있다는 점이 중요합니다. 이는 여러 효과를 결합하여 독특한 사운드를 만들 수 있음을 의미합니다. EarSketch에는 다양한 효과가 내장되어 있습니다. 모든 효과를 참고하려면 이 &lt;a href=&#34;https://earsketch.gatech.edu/earsketch2/#?curriculum=5-1-0&amp;amp;language=python&#34; target=&#34;_blank&#34;&gt;링크&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; 를 방문하고 탐색 바에서 &lt;em&gt;커리큘럼&lt;/em&gt; 창을 선택하세요.&lt;/p&gt;&#xA;&lt;p&gt;효과를 추가하기 전에 &lt;code&gt;setEffect&lt;/code&gt; 함수의 각 요소를 살펴봅시다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Step 5: 특징 선택하기(Feature selection)</title>
      <link>/kr/machine-learning/feature-selection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/machine-learning/feature-selection/</guid>
      <description>&lt;p&gt;다음 단계는 적절한 특징(feature)을 선택하는 것입니다. 특징 선택은 머신러닝에서 모델을 학습하는 데 중요한 특징을 선택하는 방법과 과정을 설명하는 용어입니다. 특징(feature)이란 공식에서 사용되는 하나의 변수, 즉 &lt;code&gt;x&lt;/code&gt;입니다. 이번 프로젝트에서 특징은 축구 선수의 속성 중 하나입니다. &lt;br&gt;&#xA;우리는 선형 회귀(Linear Regression) 모델을 사용하고 있으므로, 각 속성이 목표값(즉, 종합 능력치(overall ratings))과 얼마나 상관관계가 있는지가 적절한 특징을 선택하는 기준이 됩니다. &lt;br&gt;&#xA;우리는 피어슨 상관계수(Pearson correlation coefficient)를 사용하여 각 열의 상관관계를 계산할 것입니다. 사용할 수 있는 세 가지 방법은 다음과 같습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>답안 - 보안</title>
      <link>/kr/security/answer-key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security/answer-key/</guid>
      <description>&lt;h3 id=&#34;해답&#34;&gt;해답&lt;/h3&gt;&#xA;&lt;p&gt;우리의 스파이 게임에서, 비밀번호 &amp;ldquo;Ilovemypet&amp;quot;은 숫자나 특수 문자가 포함되지 않았고, &amp;ldquo;12345678&amp;quot;은 숫자로 이루어진 단순한 순서입니다. 따라서 두 비밀번호 모두 약하며, 악의적인 사람이 쉽게 해킹하거나 추측할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>답안지 - 아다프루트</title>
      <link>/kr/adafruit/answer-key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/adafruit/answer-key/</guid>
      <description>&lt;h3 id=&#34;설정&#34;&gt;설정&lt;/h3&gt;&#xA;&lt;p&gt;요약:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;두 개의 악어 클립을 각각 오렌지 표면에 고정합니다.&lt;/li&gt;&#xA;&lt;li&gt;클립의 양 끝 쪽을 아다프루트의 A1과 A2 입력 단자에 연결합니다.&lt;/li&gt;&#xA;&lt;li&gt;USB 케이블을 아다프루트에 연결하되, 아직 컴퓨터에는 연결하지 마세요.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;설정이 완료되면, 오렌지와 아다프루트의 모습은 다음과 같아야 합니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/setupOverview.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;해결-방법&#34;&gt;해결 방법&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/adafruit-basic-solution.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;고급-해결-방법조명-포함&#34;&gt;고급 해결 방법(조명 포함)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/adafruit-complex-solution.png?classes=border,shadow&#34; alt=&#34;Cannot load image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;작동-원리&#34;&gt;작동 원리&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/musicalFruitDiagram.png?classes=border,shadow&#34; alt=&#34;뮤지컬 프루트(musical fruit) 프로젝트의 회로도. 두 개의 오렌지가 저항기로 작동하며, 아다프루트 CircuitPlayground Express의 A1과 A2 아날로그 핀에 연결됩니다. 두 손이 오렌지를 만짐으로써 회로에서 풀다운 저항기의 역할을 수행합니다.&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>어떤 게 피싱일까?</title>
      <link>/kr/security-phishing/whats-phishy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-phishing/whats-phishy/</guid>
      <description>&lt;p&gt;지난 부분에서 다양한 피싱 방법과 이를 인식하는 법을 배웠어요. 이제 &lt;code&gt;어떤 게 피싱일까?&lt;/code&gt;라는 게임을 해볼 시간이에요!&lt;/p&gt;&#xA;&lt;p&gt;아래에 나오는 이미지들 중 어떤 것이 피싱처럼 보이는지 생각해 보세요.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../media/Spotify_email.jpg?classes=border,shadow&#34; alt=&#34;Spotify email&#34;&gt;&lt;/p&gt;&#xA;&lt;fieldset&gt;  &#xD;&#xA;  &lt;legend&gt;이 이메일이 피싱 같나요?&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-on1&#34; name=&#34;notify1&#34; value=&#34;on&#34; &gt;&#xD;&#xA;    &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-off1&#34; name=&#34;notify1&#34; value=&#34;off&#34;&gt;&#xD;&#xA;    &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;  &lt;/legend&gt;&#xD;&#xA;&lt;/fieldset&gt;&#xD;&#xA;&lt;!--&#xD;&#xA;&#xD;&#xA;![Cannot load image](legit_email_1.png?classes=border,shadow)&#xD;&#xA;&#xD;&#xA;&lt;fieldset&gt;  &#xD;&#xA;&lt;legend&gt;Does this email look phishy?&lt;/legend&gt;&#xD;&#xA;  &lt;input type=&#34;radio&#34; id=&#34;notify-on1&#34; name=&#34;notify1&#34; value=&#34;on&#34; &gt;&#xD;&#xA;  &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;  &lt;input type=&#34;radio&#34; id=&#34;notify-off1&#34; name=&#34;notify1&#34; value=&#34;off&#34;&gt;&#xD;&#xA;  &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;&lt;/fieldset&gt;&#xD;&#xA;--&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../media/linkedIn.png&#34; alt=&#34;LinkedIn learning&#34;&gt;&lt;/p&gt;&#xA;&lt;fieldset&gt;  &#xD;&#xA;  &lt;legend&gt;이 배너 광고가 피싱 같나요?&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-on1&#34; name=&#34;notify1&#34; value=&#34;on&#34; &gt;&#xD;&#xA;    &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-off1&#34; name=&#34;notify1&#34; value=&#34;off&#34;&gt;&#xD;&#xA;    &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;  &lt;/legend&gt;&#xD;&#xA;&lt;/fieldset&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../media/Legit_text.jpeg?classes=border,shadow&#34; alt=&#34;A legitimate text message&#34;&gt;&lt;/p&gt;&#xA;&lt;fieldset&gt;  &#xD;&#xA;  &lt;legend&gt;이 문자 메시지가 피싱 같나요?&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-on1&#34; name=&#34;notify1&#34; value=&#34;on&#34; &gt;&#xD;&#xA;    &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-off1&#34; name=&#34;notify1&#34; value=&#34;off&#34;&gt;&#xD;&#xA;    &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;  &lt;/legend&gt;&#xD;&#xA;&lt;/fieldset&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../media/sus_text.JPG?classes=border,shadow&#34; alt=&#34;A suspicious text message&#34;&gt;&lt;/p&gt;&#xA;&lt;fieldset&gt;  &#xD;&#xA;  &lt;legend&gt;이 문자 메시지가 피싱 같나요?&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-on1&#34; name=&#34;notify1&#34; value=&#34;on&#34; &gt;&#xD;&#xA;    &lt;label for=&#34;notify-on&#34;&gt;Yes&lt;/label&gt;&#xD;&#xA;    &lt;input type=&#34;radio&#34; id=&#34;notify-off1&#34; name=&#34;notify1&#34; value=&#34;off&#34;&gt;&#xD;&#xA;    &lt;label for=&#34;notify-off&#34;&gt;No&lt;/label&gt;&#xD;&#xA;  &lt;/legend&gt;&#xD;&#xA;&lt;/fieldset&gt;&#xD;&#xA;&lt;p&gt;&lt;img src=&#34;../media/sus_email.JPG?classes=border,shadow&#34; alt=&#34;A suspicious email&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>예측하기</title>
      <link>/kr/ml-machine-learning/05-making-predictions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/ml-machine-learning/05-making-predictions/</guid>
      <description>&lt;h1 id=&#34;모델-학습시키기&#34;&gt;모델 학습시키기&lt;/h1&gt;&#xA;&lt;p&gt;모델이 값을 예측하려면 학습이 필요합니다. 그런데, 어떻게 학습을 시킬까요? 사실, 우리는 이미 이 작업을 하고 있었답니다!😉&lt;/p&gt;&#xA;&lt;p&gt;모델을 학습시키는 과정은 데이터와 모델 간의 관계가 적절한지 확인하는 것을 말합니다. 우리는 R&lt;sup&gt;2&lt;/sup&gt; 값이 1에 가까운지 확인함으로써 이를 수행했습니다. 이제, 10,000개 이상의 데이터셋을 사용해 훈련 데이터와 테스트 데이터를 만들어야 합니다. 훈련 데이터는 초기 샘플 30개 대신 무작위 샘플을 사용합니다. 텍사스 엘파소 대학교에 따르면, 데이터의 30%를 샘플로 사용하는 것이 정확한 모델을 만드는 이상적인 방법이라고 합니다. (&lt;a href=&#34;https://scholarworks.utep.edu/cs_techrep/1209/&#34; target=&#34;_blank&#34;&gt;70/30 또는 80/20 훈련과 테스트 데이터 비율에 대한 자세한 내용은 여기를 참고하세요.&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;) 직원 수가 증가하면 데이터셋도 함께 늘어나고 R&lt;sup&gt;2&lt;/sup&gt;값도 변하게 됩니다. 따라서, 직원 데이터셋이 10,000개 이상으로 업데이트될 때마다 이 과정을 반복해야 가장 최신의 상태로 모델을 유지할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 2: PandoraBots 설정</title>
      <link>/kr/chatbot/activity-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/activity-2/</guid>
      <description>&lt;h2 id=&#34;aiml&#34;&gt;AIML&lt;/h2&gt;&#xA;&lt;p&gt;이제 AIML을 사용하여 챗봇을 만들 것입니다. AIML은 &lt;strong&gt;인공지능 마크업 언어&lt;/strong&gt;(Artificial Intelligence Markup Language)의 약자로, 웹사이트를 만들 때 사용하는 HTML과 매우 유사하게 보일 것입니다. AIML을 작성하기 전에, Pandorabots에 가입해야 합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;pandorabots&#34;&gt;Pandorabots&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.pandorabots.com/&#34; target=&#34;_blank&#34;&gt;https://www.pandorabots.com/&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; 에 접속하여 &lt;strong&gt;Sign Up&lt;/strong&gt;을 클릭하세요. 메일과 비밀번호를 입력하여 계정을 만드세요. 또는 Google, Facebook, Twitter, Github 계정으로 가입할 수도 있습니다. 프롬프트가 나타나면 무료 체험(free trial) 옵션을 선택하세요.&lt;/p&gt;&#xA;&lt;h2 id=&#34;새로운-봇-만들기&#34;&gt;새로운 봇 만들기&lt;/h2&gt;&#xA;&lt;p&gt;가입이 완료되면, 다음과 같은 페이지가 표시 됩니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Razor 지시문</title>
      <link>/kr/razor/directives/</link>
      <pubDate>Wed, 13 Sep 2023 11:45:38 -0700</pubDate>
      <guid>/kr/razor/directives/</guid>
      <description>&lt;h2 id=&#34;지시문&#34;&gt;지시문&lt;/h2&gt;&#xA;&lt;p&gt;Razor 지시문은 @ 기호 뒤에 예약된 키워드가 따라오는 암묵적 표현식으로 표현됩니다.&#xA;지시문은 일반적으로 뷰(View)가 해석되는 방식을 변경하거나, 다양한 기능을 활성화합니다.&lt;/p&gt;&#xA;&lt;p&gt;Razor가 뷰에 대한 코드를 생성하는 방식을 이해하면 지시문의 동작을 더 쉽게 이해할 수 있습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;quote&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Getting old ain&amp;#39;t for wimps! - Anonymous&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Quote&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Day&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;@quote&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 코드는 다음과 유사한 클래스를 생성합니다:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;_Views_Something_cshtml&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;RazorPage&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;dynamic&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Task&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ExecuteAsync&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;output&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Getting old ain&amp;#39;t for wimps! - Anonymous&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;WriteLiteral&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;/r/n&amp;lt;div&amp;gt;Quote of the Day: &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;Write&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;WriteLiteral&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;lt;/div&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;attribute&#34;&gt;&lt;code&gt;@attribute&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;@attribute&lt;/code&gt; 지시문은 생성된 페이지나 뷰 클래스에 지정된 속성을 추가합니다. 다음 예제는 [Authorize] 속성을 추가하는 방법을 보여줍니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>5. (선택 사항) AI 움직임</title>
      <link>/kr/java-tictactoe/activity-5/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/kr/java-tictactoe/activity-5/</guid>
      <description>&lt;h3 id=&#34;컴퓨터가-생각하게-만들기&#34;&gt;컴퓨터가 생각하게 만들기&lt;/h3&gt;&#xA;&lt;p&gt;이전 단계에서는 컴퓨터가 랜덤으로 움직임을 선택하도록 만들었습니다. 그러나 이 방법으로는 컴퓨터의 경쟁력이 낮습니다.&lt;/p&gt;&#xA;&lt;p&gt;이 단계에서는 Minimax 알고리즘을 사용하여 인공지능을 프로그램에 추가함으로써 게임의 난이도를 높이겠습니다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;minimax-알고리즘&#34;&gt;Minimax 알고리즘&lt;/h3&gt;&#xA;&lt;p&gt;Minimax 알고리즘은 두 플레이어가 있는 게임에서 각 플레이어가 최선의 결정을 내리도록 도와줍니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;두 플레이어는 각각 &lt;b&gt;maximizer&lt;/b&gt;와 &lt;b&gt;minimizer&lt;/b&gt;로 분류됩니다. maximizer는 승리할 확률을 극대화하는 반면, minimizer는 패배를 최소화하려고 노력합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;알고리즘은 현재 게임 보드를 기반으로 가능한 모든 미래 게임 상태를 검토하며, maximizer와 minimizer가 자신에게 가장 유리한 선택을 할 것이라고 가정합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activity 5 - ASCII 코드</title>
      <link>/kr/secret-messages/activity-5/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/activity-5/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MeOQFpey0pA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;좋아요!&#xA;이번 활동에서는 수신자의 이름을 암호화(Encrypt)해 보겠습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;ASCII Code&lt;/strong&gt; 써 봅시다!&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h3 id=&#34;ascii-코드&#34;&gt;ASCII 코드&lt;/h3&gt;&#xA;&lt;p&gt;ASCII 코드는 각 문자에 숫자 값이 있음을 보여줍니다. 예를 들어 &amp;lsquo;A&amp;rsquo; 문자는 숫자 65, &amp;lsquo;B&amp;rsquo;는 66, &amp;lsquo;C&amp;rsquo;는 67 등입니다.&lt;/p&gt;&#xA;&lt;p&gt;다음 목록은 가장 일반적으로 사용되는 문자의 값을 보여줍니다:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../media/ascii-english.png&#34; alt=&#34;ASCII 코드 목록&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;각 문자에는 숫자 값이 있으므로 이를 사용하여 이 문자에 값을 더하거나 뺄 수 있으므로 특정 방식으로 문자의 순서를 변경할 수 있습니다. 문자(&amp;lsquo;char&amp;rsquo;)를 숫자(&amp;lsquo;int&amp;rsquo;)로 변환하거나 그 반대로 변환할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>코드 다운로드 및 테스트</title>
      <link>/kr/microbit-distance-checker/running-code/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/microbit-distance-checker/running-code/</guid>
      <description>&lt;p&gt;코드를 작성했으니 이제 실행해 보겠습니다. 먼저 마이크로빗을 컴퓨터와 연결해야 합니다. USB 케이블을 찾아 마이크로빗 상단의 은색 USB 포트에 작은 쪽을 연결하고, 다른 큰 쪽은 컴퓨터의 USB 포트에 연결하세요. MakeCode 작업 공간에서 Download 버튼 옆의 작은 … 아이콘을 클릭하여 메뉴를 엽니다. 이 메뉴에서 “Pair device”를 선택하세요.&lt;/p&gt;&#xA;&lt;p&gt;새로 뜨는 창에서 오른쪽 하단의 보라색 “Pair device” 버튼을 클릭합니다. 마지막으로 또 다른 창이 나타나면 “BBC micro:bit CMSIS-DAP”를 클릭한 뒤 하단의 “Connect” 버튼을 선택하세요. 이제 마이크로빗이 연결되었으며 코드를 다운로드할 준비가 되었습니다. 이 연결 과정은 한 번만 수행하면 됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 4 - 페이드 인 효과 사용하기</title>
      <link>/kr/javascript-blocks-earsketch/activity-4-use-effects-to-fade-in/</link>
      <pubDate>Tue, 23 Jul 2019 11:45:38 -0700</pubDate>
      <guid>/kr/javascript-blocks-earsketch/activity-4-use-effects-to-fade-in/</guid>
      <description>&lt;p&gt;이제 곡에 하나의 효과를 추가했으니, 이번에는 곡의 도입부에 페이드 인 효과를 적용해 보겠습니다.&lt;/p&gt;&#xA;&lt;p&gt;활동 3에서는 &lt;code&gt;setEffect&lt;/code&gt; 함수를 사용하여 특정 트랙에 곡 전체에 걸쳐 효과를 적용했습니다. 그러나 곡의 특정 부분에만 효과를 적용하고 싶다면 어떻게 해야 할까요? 이때는 매개변수를 더 많이 사용하는 &lt;code&gt;setEffect&lt;/code&gt; 함수를 사용해야 합니다.&lt;/p&gt;&#xA;&lt;img src=&#34;../img/screenshot-seteffect2.png&#34; height=&#34;30&#34;/&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;startValue&lt;/code&gt;: 매개변수에 적용되는 시작 값&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;start&lt;/code&gt;: 시작 값을 설정할 마디&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;endValue&lt;/code&gt;: 매개변수에 적용되는 끝 값&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;end&lt;/code&gt;: 끝 값을 설정할 마디&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;이 &lt;code&gt;setEffect&lt;/code&gt;함수 버전을 사용하면 곡의 특정 부분에서 자동화를 실행할 수 있습니다. 자동화란 효과의 값을 시간이 지남에 따라 변경하는 방법입니다. 자동화의 한 가지 예로 곡을 페이드 인 또는 페이드 아웃하는 방법이 있습니다. 이를 위해서는 &lt;strong&gt;VOLUME&lt;/strong&gt; &lt;code&gt;effectType&lt;/code&gt;에서 &lt;strong&gt;GAIN&lt;/strong&gt;&lt;code&gt;매개변수(parameter)&lt;/code&gt;를 사용하여 음량을 시간에 따라 조절할 수 있습니다. 예를 들어, &lt;code&gt;startValue&lt;/code&gt; 를 -60db로, &lt;code&gt;endValue&lt;/code&gt; 를 0db로 정의하면, 시간이 지나면서 곡이 점점 커지는 페이드 인 효과가 나타납니다. 시작 지점과 효과의 길이를 조정하려면 &lt;code&gt;start&lt;/code&gt; 와 &lt;code&gt;end&lt;/code&gt;매개변수를 설정하세요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Step 6: 모델 훈련하기(Train the model)</title>
      <link>/kr/machine-learning/train-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/machine-learning/train-model/</guid>
      <description>&lt;p&gt;이제 모델을 훈련시킬 준비가 되었습니다. 우리는 LinearRegression().fit()을 사용하여 모델을 훈련할 것입니다. 이 모델은 &lt;code&gt;score()&lt;/code&gt;라는 함수를 가지고 있으며, 이는 예측의 결정 계수 &lt;code&gt;R²&lt;/code&gt;를 반환합니다. 지금은 &lt;code&gt;R²&lt;/code&gt; 값이 높을수록 더 좋은 모델이라는 것만 기억하면 됩니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 훈련 데이터 준비&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;x_train&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;train_data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;features&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;y_train&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;train_data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 선형 회귀 적용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# fit()는 모델을 훈련하는 함수입니다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;LinearRegression&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fit&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x_train&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;y_train&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 모델의 점수 출력&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Score: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x_train&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;y_train&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력 결과:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Score: 0.9875123836174596&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>요약</title>
      <link>/kr/security-phishing/summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/security-phishing/summary/</guid>
      <description>&lt;h2 id=&#34;결론&#34;&gt;결론&lt;/h2&gt;&#xA;&lt;p&gt;다음은 피싱 사기의 일반적인 특징이에요:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;너무 좋은 제안이나 관심을 끌 만한 문구.&lt;/li&gt;&#xA;&lt;li&gt;평소와 다른 발신자이거나 예상치 못한 메시지.&lt;/li&gt;&#xA;&lt;li&gt;시간을 제한하며 빨리 행동하라고 재촉하는 문구.  예: &amp;ldquo;비밀번호가 곧 만료됩니다. 즉시 변경하려면 여기를 클릭하세요.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;수상한 하이퍼링크. 링크 위에 마우스를 올려두면 실제로 연결될 URL을 볼 수 있어요.&lt;/li&gt;&#xA;&lt;li&gt;맞춤법 오류나 문법적 실수. 예: &lt;a href=&#34;mailto:mail@g00gle.com&#34;&gt;mail@g00gle.com&lt;/a&gt;&#xD;&#xA; (g00gle 대신 google).&lt;/li&gt;&#xA;&lt;li&gt;알 수 없는 파일 이름이나 확장자를 가진 이메일 첨부 파일.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;해결-방법&#34;&gt;해결 방법&lt;/h2&gt;&#xA;&lt;p&gt;&amp;ldquo;어떤 게 피싱일까?&amp;rdquo; 활동에서 다음 이메일과 문자가 피싱일 가능성이 높았어요:&lt;/p&gt;</description>
    </item>
    <item>
      <title>카테고리</title>
      <link>/kr/chatbot/categories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/categories/</guid>
      <description>&lt;h2 id=&#34;aiml-기초&#34;&gt;AIML 기초&lt;/h2&gt;&#xA;&lt;p&gt;AIML의 기본 단위는 &lt;strong&gt;카테고리&lt;/strong&gt;입니다. 카테고리는 **패턴(pattern)**과 **템플릿(template)**으로 구성됩니다. 패턴은 사용자가 봇에게 말하는 내용이고, 템플릿은 봇이 사용자에게 제공하는 응답입니다.&lt;/p&gt;&#xA;&lt;p&gt;다음 예시를 보면, 패턴은 &amp;ldquo;HELLO&amp;quot;이고 템플릿은 &amp;ldquo;Hello, World!&amp;ldquo;입니다. 사용자가 &amp;ldquo;HELLO&amp;quot;라고 말하면, 봇은 &amp;ldquo;Hello, World!&amp;ldquo;라고 응답합니다. 패턴 매칭은 대소문자를 구분하지 않으므로, &amp;ldquo;hello&amp;rdquo;, &amp;ldquo;HELLO&amp;rdquo;, &amp;ldquo;Hello&amp;rdquo;, &amp;ldquo;HeLlo&amp;rdquo; 등 다양한 형태의 입력에도 동일한 응답이 나옵니다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;category&amp;gt;&#xD;&#xA;    &amp;lt;pattern&amp;gt;HELLO&amp;lt;/pattern&amp;gt;&#xD;&#xA;    &amp;lt;template&amp;gt;&#xD;&#xA;        Hello, World!&#xD;&#xA;    &amp;lt;/template&amp;gt;&#xD;&#xA;&amp;lt;/category&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;notices info&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;패턴을 작성할 때는 모든 문자를 대문자로 작성하고, 구두점 사용을 피하는 것이 좋습니다. 예를 들어, &amp;ldquo;What is your name?&amp;ldquo;이라는 패턴을 만들고 싶다면 &amp;ldquo;WHAT IS YOUR NAME&amp;quot;으로 작성해야 합니다. Pandora는 패턴 매칭을 수행하기 전에 사용자 입력에서 구두점을 제거합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 3 - 웹 애플리케이션 만들기</title>
      <link>/kr/razor/activity-3/</link>
      <pubDate>Tue, 12 Sep 2023 11:45:38 -0700</pubDate>
      <guid>/kr/razor/activity-3/</guid>
      <description>&lt;h2 id=&#34;활동-지침&#34;&gt;활동 지침&lt;/h2&gt;&#xA;&lt;h3 id=&#34;프로젝트-생성&#34;&gt;프로젝트 생성&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Visual Studio Code가 열려 있는지 확인합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;액티비티 바(Activity Bar)에서 &lt;strong&gt;Explorer&lt;/strong&gt; 아이콘을 선택합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create .NET Project&lt;/strong&gt; 버튼을 클릭합니다.&lt;/p&gt;&#xA;&lt;p&gt;명령 팔레트(Command Palette)가 드롭다운 형태로 나타나며 프로젝트 유형 목록이 표시됩니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;제공된 목록에서 &lt;strong&gt;Blazor Server App을 선택합니다.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;새 애플리케이션을 저장할 폴더를 선택합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;애플리케이션에 이름을 지정합니다.&lt;/p&gt;&#xA;&lt;p&gt;애플리케이션이 생성되며, 탐색기(Explorer)에서 &lt;strong&gt;Solution&lt;/strong&gt; 메뉴가 표시됩니다.&lt;/p&gt;&#xA; &lt;img src=&#34;../media/solution-explorer.png&#34; alt=&#34;Screenshot of Solution Explorer in VS Code&#34; /&gt;&#xD;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;이제 여러분이 직접 만든 페이지가 생겼습니다!&lt;/p&gt;&#xA;&lt;h3 id=&#34;razor-pages-프로젝트-구조-검토&#34;&gt;Razor Pages 프로젝트 구조 검토&lt;/h3&gt;&#xA;&lt;p&gt;아래 표는 생성된 Razor Pages 프로젝트 구조를 설명합니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activity 6 - 함수 (Functions)</title>
      <link>/kr/secret-messages/activity-6/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/activity-6/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/hSsqsvhyYAA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;좋아요!&lt;/p&gt;&#xA;&lt;p&gt;여러분은 이미 프로그램의 많은 부분을 완성했습니다!&lt;/p&gt;&#xA;&lt;p&gt;이번 활동에서는 **함수(Function)**를 사용하여 코드를 섹션 별로 그룹화합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;&lt;h3 id=&#34;함수function&#34;&gt;함수(Function)&lt;/h3&gt;&#xA;&lt;p&gt;함수를 사용하면 프로그램의 작업을 작은 작업 단위로 나누어 메인 함수(main function)와 분리할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;함수를 하나의 기계로 생각할 수 있습니다.&#xA;•&#x9;기계를 켜면 명령어가 실행되어 최종 결과를 반환합니다.&#xA;•&#x9;서로 다른 프로세스를 수행하는 여러 기계를 만들 수 있으며, 각각의 기계는 이름과 반환 결과 유형으로 구별됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Step 7: 테스트 데이터로 모델 평가하기</title>
      <link>/kr/machine-learning/model-testing-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/machine-learning/model-testing-data/</guid>
      <description>&lt;p&gt;이제 훈련된 모델을 사용하여 테스트 데이터에 있는 선수들의 종합 능력치를 예측해보겠습니다. 훈련 데이터와 동일한 방식으로 &lt;code&gt;x_test&lt;/code&gt;와 &lt;code&gt;y_test&lt;/code&gt;를 생성합니다. &lt;br&gt;&#xA;&lt;code&gt;model.predict()&lt;/code&gt;는 예측 결과 목록을 생성합니다. 예측된 결과와 실제 종합 능력치를 비교해봅시다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 목표값(종합 능력치)을 기준으로 테스트 데이터를 정렬&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;test_data&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;test_data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;sort_values&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ascending&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;x_test&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;test_data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;features&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;y_test&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;test_data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 예측된 결과 생성&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;y_pred&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;predict&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x_test&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 예측된 종합 능력치 열을 테스트 데이터에 추가&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;test_data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Predicted Overall&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;y_pred&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;copy&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 예측 차이 비율을 계산하여 테스트 데이터에 추가&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;difference&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;y_pred&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;y_test&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;y_test&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;test_data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;Difference (%)&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;difference&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 결과 출력&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;test_data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Nationality&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Club&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Overall&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Predicted Overall&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Difference (%)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&#xD;&#xA;&lt;style scoped&gt;&#xD;&#xA;    .dataframe tbody tr th:only-of-type {&#xD;&#xA;        vertical-align: middle;&#xD;&#xA;    }&#xD;&#xA;&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {&#xD;&#xA;    vertical-align: top;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;.dataframe thead th {&#xD;&#xA;    text-align: right;&#xD;&#xA;}&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;/style&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 3: 나만의 카테고리 추가</title>
      <link>/kr/chatbot/activity-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/activity-3/</guid>
      <description>&lt;h2 id=&#34;카테고리-추가하기&#34;&gt;카테고리 추가하기&lt;/h2&gt;&#xA;&lt;p&gt;지금까지는 봇이 &amp;ldquo;Hello&amp;quot;라는 말에만 응답할 수 있었습니다. 이제 더 많은 카테고리를 추가하여 봇이 더 많은 질문에 응답할 수 있도록 해봅시다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;여러분이 &amp;ldquo;What is your name?&amp;ldquo;이라고 입력하면, 봇이 &amp;ldquo;My name is Chatbot&amp;quot;이라고 응답합니다.&lt;/li&gt;&#xA;&lt;li&gt;여러분이 &amp;ldquo;What is your favorite color?&amp;ldquo;라고 입력하면, 봇이 &amp;ldquo;My favorite color is blue&amp;quot;라고 응답합니다.&lt;/li&gt;&#xA;&lt;li&gt;여러분이 &amp;ldquo;What is your favorite food?&amp;ldquo;라고 입력하면, 봇이 &amp;ldquo;My favorite food is pizza&amp;quot;라고 응답합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;카테고리의 기본 구조는 다음과 같습니다:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;category&amp;gt;&#xD;&#xA;    &amp;lt;pattern&amp;gt;HELLO&amp;lt;/pattern&amp;gt;&#xD;&#xA;    &amp;lt;template&amp;gt;&#xD;&#xA;        Hello, World!&#xD;&#xA;    &amp;lt;/template&amp;gt;&#xD;&#xA;&amp;lt;/category&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;패턴을 작성할 때는 항상 대문자로 작성하고, 구두점은 사용하지 마세요. 예를 들어, &amp;ldquo;What is your name?&amp;ldquo;이라는 패턴을 작성할 때는 &amp;ldquo;WHAT IS YOUR NAME&amp;quot;으로 작성해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 4 - 새로운 Razor 페이지 추가</title>
      <link>/kr/razor/activity-4/</link>
      <pubDate>Tue, 12 Sep 2023 11:45:38 -0700</pubDate>
      <guid>/kr/razor/activity-4/</guid>
      <description>&lt;h2 id=&#34;활동-지침&#34;&gt;활동 지침&lt;/h2&gt;&#xA;&lt;h3 id=&#34;새-페이지-생성하기&#34;&gt;새 페이지 생성하기&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Visual Studio Code가 열려 있는지 확인합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;액티비티 바(Activity bar)&lt;/strong&gt; 에서 &lt;strong&gt;탐색기(Explorer)&lt;/strong&gt; 가 선택되어 있는지 확인합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;솔루션 탐색기(Solution Explorer)&lt;/strong&gt; 에서 Pages 디렉터리 옆에 있는 Add new file… 버튼을 선택합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;../media/add-new-file.png&#34; width=&#34;300&#34; alt=&#34;Screen shot of Add new file button&#34; /&gt;&#xD;&#xA;&lt;p&gt;그럼 파일 유형을 선택할 수 있습니다.&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;나타나는 파일 유형 목록에서 &lt;strong&gt;Razor component&lt;/strong&gt; 를 선택합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;../media/select-razor-component.png&#34; width=&#34;300&#34; alt=&#34;Screen shot of command pallette for create new file&#34; /&gt;&#xD;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;새 파일의 이름을 &lt;code&gt;todo&lt;/code&gt; 로 지정하고 &lt;strong&gt;Enter&lt;/strong&gt;를 누릅니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activity 7 - 입력 줄 (Input Line)</title>
      <link>/kr/secret-messages/activity-7/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/activity-7/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/xLAq5HggT6E&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;축하합니다!&lt;/p&gt;&#xA;&lt;p&gt;여러분은 이제 왕국을 완전히 구해내는 것에 아주 가까워졌습니다. 이제 남은 것은 전체 문장을 입력할 수 있는 기능을 추가하는 것뿐입니다! 이를 위해 몇 가지만이 필요합니다.&#xA;먼저, &lt;code&gt;string:getline()&lt;/code&gt; 문장을 사용하여 입력을 받아야 합니다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;string phrase;&#xD;&#xA;getline(cin, phrase);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 방법을 사용하면 콘솔에서 한 단어만이 아니라 전체 메시지를 입력할 수 있게 됩니다.&lt;/p&gt;&#xA;&lt;p&gt;다음 단계를 따라 프로그램을 완성하여 왕국을 구하세요:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;main&lt;/code&gt; 함수에서  &lt;code&gt;cin &amp;gt;&amp;gt; name;&lt;/code&gt; 문장을 &lt;code&gt;getline(cin, name);&lt;/code&gt;으로 변경하세요.&lt;/p&gt;</description>
    </item>
    <item>
      <title>마무리하기</title>
      <link>/kr/machine-learning/closing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/machine-learning/closing/</guid>
      <description>&lt;p&gt;잘하셨습니다! 여러분이 해냈습니다!&lt;/p&gt;&#xA;&lt;p&gt;이제 이 데이터셋을 조금 더 다뤄볼 수 있습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;다른 포지션의 선수들, 예를 들어 골키퍼(GK)를 선택해 보세요. 상위 상관관계가 높은 특징들은 무엇일까요? 여러분이 선택한 특징들은 어떤 것인가요?&lt;/li&gt;&#xA;&lt;li&gt;선택한 특징을 변경해보세요. 그러면 모델 예측 결과가 달라질까요?&lt;/li&gt;&#xA;&lt;li&gt;훈련/테스트 데이터 비율을 변경해보세요. 어떤 변화가 생기나요?&lt;/li&gt;&#xA;&lt;li&gt;목표 변수를 변경해보세요. 예를 들어, 가치(Value)나 임금(Wage)을 예측해보세요. 숫자로 변환하는 방법을 알아내야 할 것입니다.&#xA;힌트: 50k = 50 * 1000, 10M = 10 * 1000 * 1000.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;오늘 수업에서는 축구 선수의 종합 능력치를 예측하기 위해 선형 회귀 모델을 훈련하는 방법을 배웠습니다. 이 과정을 즐겼고, 조금이라도 영감을 받았길 바랍니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>와일드카드(Wildcard)</title>
      <link>/kr/chatbot/wildcards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/wildcards/</guid>
      <description>&lt;h2 id=&#34;와일드카드&#34;&gt;와일드카드&lt;/h2&gt;&#xA;&lt;p&gt;지금쯤이면 사용자가 질문하는 모든 방식에 대해 카테고리를 작성하는 것에 상당히 많은 작업이 필요하다는 것을 느꼈을 것입니다. 예를 들어, 현재 봇은 &amp;ldquo;Hello&amp;quot;에 &amp;ldquo;Hello, world&amp;quot;로 응답합니다. 하지만 사용자가 &amp;ldquo;Hello there&amp;rdquo; 또는 &amp;ldquo;Hello chatbot&amp;quot;이라고 말한다면 어떻게 될까요? 이런 경우마다 새로운 카테고리를 작성해야 합니다. 다행히도, 봇을 좀 더 유연하게 만들기 위해 사용할 수 있는 추가 도구들이 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;그중 하나가 &lt;strong&gt;와일드카드&lt;/strong&gt;입니다. 와일드카드는 어떤 단어나 구도에 맞출 수 있는 특별한 문자입니다. 어떻게 작동하는지 살펴봅시다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;category&amp;gt;&#xD;&#xA;    &amp;lt;pattern&amp;gt;HELLO *&amp;lt;/pattern&amp;gt;&#xD;&#xA;    &amp;lt;template&amp;gt;&#xD;&#xA;        Hi!&#xD;&#xA;    &amp;lt;/template&amp;gt;&#xD;&#xA;&amp;lt;/category&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;*&lt;/code&gt; 기호는 사용자 입력에서 하나 이상의 단어를 캡처할 수 있습니다. 이 새로운 카테고리로 인해 챗봇은 이제 &amp;ldquo;Hello&amp;quot;로 시작하는 모든 입력에 대해 &amp;ldquo;Hi!&amp;ldquo;라고 응답할 것입니다. 따라서 &amp;ldquo;HELLO *&amp;rdquo; 패턴은 &amp;ldquo;HELLO THERE&amp;rdquo;, &amp;ldquo;HELLO CHATBOT&amp;rdquo;, &amp;ldquo;HELLO WORLD&amp;rdquo;, &amp;ldquo;HELLO EVERYONE&amp;rdquo; 등 다양한 입력에 대응합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>결론</title>
      <link>/kr/secret-messages/activity-8/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/kr/secret-messages/activity-8/</guid>
      <description>&lt;p&gt;축하합니다!&lt;/p&gt;&#xA;&lt;p&gt;정말 멋진 일을 해냈어요. 왕국을 구했고, 그 과정에서 C++ 프로그래밍도 배웠습니다! :)&lt;/p&gt;&#xA;&lt;p&gt;배운 내용을 복습해 보겠습니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;콘솔&lt;/strong&gt;을 사용하여 암호화되거나 복호화된 메시지를 입력하고 전송했습니다.&lt;/li&gt;&#xA;&lt;li&gt;발송될 메시지를 저장하기 위해 &lt;strong&gt;변수&lt;/strong&gt;를 사용했습니다.&lt;/li&gt;&#xA;&lt;li&gt;메시지의 각 글자를 분석하기 위해 &lt;strong&gt;루프&lt;/strong&gt;를 사용했습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;조건&lt;/strong&gt;를 사용하여 암호화 또는 복호화가 필요한지 확인했습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ASCII 코드&lt;/strong&gt;는 메시지를 암호화하거나 복호화할 수 있도록 각 문자의 값을 알려주는 데 도움이 되었습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;왕께서 특별한 암호화된 감사 메시지를 보내주셨습니다. C++ 프로그램의 도움으로 해독하고 읽을 수 있습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>와일드카드 활용(Echoing Wildcards)</title>
      <link>/kr/chatbot/echoing-wildcards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/echoing-wildcards/</guid>
      <description>&lt;h2 id=&#34;star-태그-소개&#34;&gt;&lt;code&gt;&amp;lt;star /&amp;gt;&lt;/code&gt;태그 소개&lt;/h2&gt;&#xA;&lt;p&gt;이번에는 봇의 응답이 더 흥미로워지도록 할 수 있는 방법을 하나 더 배워보겠습니다. 이전에 배운 것처럼, 우리는 와일드카드  &lt;code&gt;*&lt;/code&gt; 를 사용해 사용자의 다양한 입력을 대응할 수 있었습니다. 그런데, 만약 사용자가 입력한 단어나 구를 그대로 응답에 포함하고 싶다면 어떻게 해야 할까요? 예를 들어, 사용자가 좋아하는 색을 말했을 때, 그 색을 응답에 포함하도록 만들고 싶을 수 있습니다. 이 경우 &lt;code&gt;&amp;lt;star /&amp;gt;&lt;/code&gt; 태그를 사용할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;&amp;lt;star /&amp;gt;&lt;/code&gt; 태그는 사용자가 입력한 단어나 구를 응답에 그대로 반영해 주는 특별한 태그입니다. 그 작동 방식을 살펴봅시다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 4: 와일드카드 사용하기</title>
      <link>/kr/chatbot/activity-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/activity-4/</guid>
      <description>&lt;h2 id=&#34;와일드카드-사용하기&#34;&gt;와일드카드 사용하기&lt;/h2&gt;&#xA;&lt;p&gt;와일드카드를 사용하여 사용자가 질문하는 모든 방식에 대해 새로운 카테고리를 작성하지 않고도 봇이 더 많은 질문에 답변할 수 있도록 해봅시다. 현재의 카테고리들을 확장하여 챗봇이 &amp;ldquo;food&amp;rdquo;, &amp;ldquo;color&amp;rdquo;, &amp;ldquo;name&amp;quot;으로 끝나는 질문에 응답할 수 있도록 만들어 보겠습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;정보&#34;&gt;패턴의 시작에 와일드카드를 사용하세요.&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사용자가 &amp;ldquo;food&amp;quot;로 끝나는 질문을 입력하면(예: &amp;ldquo;What is your favorite food?&amp;rdquo;, &amp;ldquo;Do you like food?&amp;rdquo;, &amp;ldquo;Do chatbots eat food?&amp;rdquo;), 봇은 &amp;ldquo;My favorite food is pizza&amp;quot;라고 응답해야 합니다..&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사용자가 &amp;ldquo;color&amp;quot;로 끝나는 질문을 입력하면(예: &amp;ldquo;What is your favorite color?&amp;rdquo;, &amp;ldquo;What’s your favorite color?&amp;rdquo;), 봇은 &amp;ldquo;My favorite color is blue&amp;quot;라고 응답해야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>활동 5: 와일드카드 활용(Echoing Wildcards)</title>
      <link>/kr/chatbot/activity-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/activity-5/</guid>
      <description>&lt;h2 id=&#34;와일드카드-활용echoing-wildcards&#34;&gt;와일드카드 활용(Echoing Wildcards)&lt;/h2&gt;&#xA;&lt;p&gt;이제 와일드카드 &lt;code&gt;*&lt;/code&gt;와 &lt;code&gt;&amp;lt;star /&amp;gt;&lt;/code&gt;태그를 함께 사용하여 사용자의 입력을 응답에 포함시킬 수 있도록 해봅시다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사용자가 &amp;ldquo;My name is [name]&amp;ldquo;이라고 입력하면, 봇이 &amp;ldquo;Nice to meet you, [name]!&amp;ldquo;이라고 응답해야 합니다.&#xA;예시&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;입력&lt;/th&gt;&#xA;          &lt;th&gt;출력&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;My name is John&lt;/td&gt;&#xA;          &lt;td&gt;Nice to meet you, John!&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;My name is Jane&lt;/td&gt;&#xA;          &lt;td&gt;Nice to meet you, Jane!&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;My name is Bob&lt;/td&gt;&#xA;          &lt;td&gt;Nice to meet you, Bob!&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사용자가 &amp;ldquo;My favorite color is [color]&amp;ldquo;라고 입력하면, 봇이 &amp;ldquo;I also like [color]!&amp;ldquo;라고 응답해야 합니다.&#xA;예시:&lt;/p&gt;</description>
    </item>
    <item>
      <title>결론</title>
      <link>/kr/chatbot/conclusion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/kr/chatbot/conclusion/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img src=&#34;../img/robot.png&#34; alt=&#34;image of a robot saying hi&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;&#xD;&#xA;&lt;h2 id=&#34;마무리&#34;&gt;마무리&lt;/h2&gt;&#xA;&lt;p&gt;지금까지 몇 가지 카테고리를 사용하여 간단한 챗봇을 만들어 보았습니다. 이제 여러분은 챗봇과 짧은 대화를 나눌 수 있을 것입니다! &amp;ldquo;hi&amp;quot;라고 인사해 보고, 좋아하는 음식이나 색, 이름에 대해 이야기해보세요. 그리고 봇에게 몇 가지 질문도 해보세요.&lt;/p&gt;&#xA;&lt;p&gt;더 탐구해 보고 싶다면, 봇이 더 많은 질문에 응답할 수 있도록 카테고리를 추가해보세요.&lt;/p&gt;&#xA;&lt;p&gt;ALICE 기억하시나요? ALICE는 50,000개의 카테고리로 만들어졌습니다! 일부 대형 챗봇은 100만 개 이상의 카테고리를 가지고 있습니다. 카테고리를 추가하는 일이 얼마나 더 복잡해질 수 있는지 상상이 되시죠?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java: TicTacToe - Answer Key</title>
      <link>/kr/java-tictactoe/answer-key/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/kr/java-tictactoe/answer-key/</guid>
      <description>&lt;h1 id=&#34;activity-1-게임판-설정하기&#34;&gt;activity-1: 게임판 설정하기&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;TicTacToe_Nuevo&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// the board that stores moves&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// starting board that labeled position(only printed once)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;startBoard&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;4&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;6&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;7&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;9&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;lt;&amp;lt;&amp;lt;~  Tic  Tac  Toe  ~&amp;gt;&amp;gt;&amp;gt;\n* Choose number 1 - 9 to place your move\n* Player: &amp;#39;X&amp;#39; Computer: &amp;#39;O&amp;#39;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;startBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Enter your move (1-9): &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// method that prints the board with the board input&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;---+---+---&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;---+---+---&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;activity-2-읽기-및-처리-입력&#34;&gt;activity-2: 읽기 및 처리 입력&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;java.util.Scanner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;TicTacToe_Nuevo&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;Scanner&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Scanner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;/*String[] board = {&amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        String[] startBoard = {&amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;6&amp;#34;, &amp;#34;7&amp;#34;, &amp;#34;8&amp;#34;, &amp;#34;9&amp;#34;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;&amp;lt;&amp;lt;&amp;lt;~  Tic  Tac  Toe  ~&amp;gt;&amp;gt;&amp;gt;\n* Choose number 1 - 9 to place your move\n* Player: &amp;#39;X&amp;#39; Computer: &amp;#39;O&amp;#39;\n&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        printBoard(startBoard);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.print(&amp;#34;Enter your move (1-9): &amp;#34;); */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;hasNextInt&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// get integer input&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;nextInt&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// check if the integer is between 1, 9. check if the position is empty&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Invalid Position; re-enter your move (1-9): &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#00a8c8&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// clear the Scanner&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Invalid Input; re-enter your move (1-9): &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#00a8c8&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// reprompt the board&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Enter your move (1-9): &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/*public static void printBoard(String[] curBoard){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[0] + &amp;#34; | &amp;#34; + curBoard[1] + &amp;#34; | &amp;#34; + curBoard[2] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;---+---+---&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[3] + &amp;#34; | &amp;#34; + curBoard[4] + &amp;#34; | &amp;#34; + curBoard[5] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;---+---+---&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[6] + &amp;#34; | &amp;#34; + curBoard[7] + &amp;#34; | &amp;#34; + curBoard[8] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    }*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;activity-3-게임판-업데이트하기&#34;&gt;activity-3: 게임판 업데이트하기&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// import java.util.Scanner;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;java.util.Random&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;TicTacToe_Nuevo&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;/*Scanner sc = new Scanner(System.in);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        String[] board = {&amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        String[] startBoard = {&amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;6&amp;#34;, &amp;#34;7&amp;#34;, &amp;#34;8&amp;#34;, &amp;#34;9&amp;#34;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;&amp;lt;&amp;lt;&amp;lt;~  Tic  Tac  Toe  ~&amp;gt;&amp;gt;&amp;gt;\n* Choose number 1 - 9 to place your move\n* Player: &amp;#39;X&amp;#39; Computer: &amp;#39;O&amp;#39;\n&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        printBoard(startBoard);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.print(&amp;#34;Enter your move (1-9): &amp;#34;); */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/*int move;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            if (sc.hasNextInt()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                move = sc.nextInt();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;if (!(move &amp;gt; 0 &amp;amp;&amp;amp; move &amp;lt;= 9) || ! board[move -1].equals(&amp;#34; &amp;#34;)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.print(&amp;#34;Invalid Position; re-enter your move (1-9): &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            } else {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                sc.next();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;System.out.print(&amp;#34;Invalid Input; re-enter your move (1-9): &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;continue;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// update the board with user&amp;#39;s move&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// update the board with a random move for computer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;getComputerMove&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;O&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/*printBoard(board);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            System.out.print(&amp;#34;Enter your move (1-9): &amp;#34;); */&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;s&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/*public static void printBoard(String[] curBoard){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[0] + &amp;#34; | &amp;#34; + curBoard[1] + &amp;#34; | &amp;#34; + curBoard[2] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;---+---+---&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[3] + &amp;#34; | &amp;#34; + curBoard[4] + &amp;#34; | &amp;#34; + curBoard[5] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;---+---+---&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[6] + &amp;#34; | &amp;#34; + curBoard[7] + &amp;#34; | &amp;#34; + curBoard[8] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    }*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// method that generate a valid random move&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;getComputerMove&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;Random&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;rand&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Random&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;rand&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;nextInt&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;rand&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;nextInt&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;activity-4-승자-확인&#34;&gt;activity-4: 승자 확인&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// import java.util.Scanner;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// import java.util.Random;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;TicTacToe_Nuevo&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;/*Scanner sc = new Scanner(System.in);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        String[] board = {&amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;, &amp;#34; &amp;#34;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        String[] startBoard = {&amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;6&amp;#34;, &amp;#34;7&amp;#34;, &amp;#34;8&amp;#34;, &amp;#34;9&amp;#34;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;&amp;lt;&amp;lt;&amp;lt;~  Tic  Tac  Toe  ~&amp;gt;&amp;gt;&amp;gt;\n* Choose number 1 - 9 to place your move\n* Player: &amp;#39;X&amp;#39; Computer: &amp;#39;O&amp;#39;\n&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        printBoard(startBoard);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.print(&amp;#34;Enter your move (1-9): &amp;#34;); */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/*int move;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;if (sc.hasNextInt()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                move = sc.nextInt();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;if (!(move &amp;gt; 0 &amp;amp;&amp;amp; move &amp;lt;= 9) || ! board[move -1].equals(&amp;#34; &amp;#34;)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.print(&amp;#34;Invalid Position; re-enter your move (1-9): &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            } else {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                sc.next();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;System.out.print(&amp;#34;Invalid Input; re-enter your move (1-9): &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#x9;&#x9;&#x9;&#x9;continue;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            }*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// board[move - 1] = &amp;#34;X&amp;#34;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getWinner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// if there is a winner or a tie&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// board[getComputerMove(board) - 1] = &amp;#34;O&amp;#34;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getWinner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/*printBoard(board);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            System.out.print(&amp;#34;Enter your move (1-9): &amp;#34;); */&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;s&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/*public static void printBoard(String[] curBoard){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[0] + &amp;#34; | &amp;#34; + curBoard[1] + &amp;#34; | &amp;#34; + curBoard[2] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;---+---+---&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[3] + &amp;#34; | &amp;#34; + curBoard[4] + &amp;#34; | &amp;#34; + curBoard[5] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34;---+---+---&amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        System.out.println(&amp;#34; &amp;#34; + curBoard[6] + &amp;#34; | &amp;#34; + curBoard[7] + &amp;#34; | &amp;#34; + curBoard[8] + &amp;#34; &amp;#34;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    public static int getComputerMove(String[] curBoard){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        Random rand = new Random();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        int pos = rand.nextInt(9) + 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        while(! curBoard[pos - 1].equals(&amp;#34; &amp;#34;)){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            pos = rand.nextInt(9) + 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        return pos;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    }*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// NOTE: this is one possible way to write this method. &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;getWinner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// conactenate all possible winning positions&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// check if any player wins&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;XXX&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Congratulations! \nYou won the Game :)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;OOO&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Game Over! \nYou lost the Game :(&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;It&amp;#39;s a TIE! Try again&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;activity-5-ai-컴퓨터-이동&#34;&gt;activity-5: AI 컴퓨터 이동&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;getComputerMoveAI&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;MIN_VALUE&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// go through all empty slots&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;// put computer&amp;#39;s move there&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;O&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;// get the score&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;minimax&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;// change it back&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;// keep track of the position that gives the best score&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;minimax&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// check if the board has a winner or a tie yet&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getWinner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// factor = number of empty slots + 1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;factor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getFactor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// terminating state return score &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;contains&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;TIE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;contains&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;won&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;factor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;contains&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;lost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;factor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// the follow code is similiar as getComputerMoveAI() but it swaps based on `isMaximizing` input&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;MIN_VALUE&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;MAX_VALUE&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;symbol&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;O&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;symbol&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;minimax&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Math&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;max&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Math&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// return number of spots available + 1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;getFactor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;counter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;counter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;counter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;full-code&#34;&gt;Full Code&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;java.util.Random&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;java.util.Scanner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;TicTacToe_Nuevo&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;startBoard&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;4&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;6&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;7&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;9&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;Scanner&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Scanner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;lt;&amp;lt;&amp;lt;~  Tic  Tac  Toe  ~&amp;gt;&amp;gt;&amp;gt;\n* Choose number 1 - 9 to place your move\n* Player: &amp;#39;X&amp;#39; Computer: &amp;#39;O&amp;#39;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;startBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Enter your move (1-9): &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;hasNextInt&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;nextInt&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Invalid Position; re-enter your move (1-9): &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#00a8c8&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Invalid Input; re-enter your move (1-9): &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#00a8c8&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getWinner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ran&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Math&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;random&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/*if(ran &amp;lt; 0.2){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                board[getComputerMove(board) - 1] = &amp;#34;O&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            }else{*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;getComputerMoveAI&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;O&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getWinner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;winner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;board&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Enter your move (1-9): &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;sc&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;printBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;---+---+---&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;---+---+---&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; | &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;getWinner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#00a8c8&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;XXX&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Congratulations! \nYou won the Game :)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;checkWin&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;OOO&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Game Over! \nYou lost the Game :(&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;move&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;It&amp;#39;s a TIE! Try it again&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;getComputerMove&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;Random&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;rand&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Random&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;rand&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;nextInt&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;rand&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;nextInt&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// AI: computer move&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;getComputerMoveAI&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;MIN_VALUE&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;O&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;minimax&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;pos&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;minimax&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getWinner&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;factor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getFactor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// terminating state return score&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;contains&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;TIE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;contains&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;won&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;factor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;contains&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;lost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;factor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// recurrence case&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;MIN_VALUE&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;MAX_VALUE&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;symbol&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;O&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;symbol&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;minimax&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isMaximizing&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Math&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;max&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Math&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;score&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;bestScore&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// return number of spots available + 1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;getFactor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;counter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;curBoard&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;counter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;counter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43; Secret Messages - Answer Key</title>
      <link>/kr/secret-messages/answer-key/</link>
      <pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate>
      <guid>/kr/secret-messages/answer-key/</guid>
      <description>&lt;p&gt;The following 5 lines are needed for all the activities.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  &#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;activity-1&#34;&gt;Activity 1&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cout &amp;lt;&amp;lt; &amp;#34;Hello programmer!&amp;#34; &amp;lt;&amp;lt; endl;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;activity-2&#34;&gt;Activity 2&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  string name;&#xD;&#xA;  cin &amp;gt;&amp;gt; name;&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Hello &amp;#34; &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;activity-3&#34;&gt;Activity 3&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;string name;&#xD;&#xA;cin &amp;gt;&amp;gt; name;&#xD;&#xA;for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;  cout &amp;lt;&amp;lt; name[i] &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;activity-4&#34;&gt;Activity 4&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int number;&#xD;&#xA;cin &amp;gt;&amp;gt; number;&#xD;&#xA;if(number == 1){&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Encrypt a message&amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;}else{&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Decrypt a message&amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;activity-5&#34;&gt;Activity 5&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string code;&#xD;&#xA;  string name;&#xD;&#xA;  cin &amp;gt;&amp;gt; code;&#xD;&#xA;  cin &amp;gt;&amp;gt; name;&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    int sum = name[i]+code[counter]-&amp;#39;a&amp;#39;;&#xD;&#xA;    if(sum &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;     sum-=25;&#xD;&#xA;    }&#xD;&#xA;    name[i]=sum;&#xD;&#xA;    counter+=1;&#xD;&#xA;    if(counter &amp;gt;= code.size()){&#xD;&#xA;      counter=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Encrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;  cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;activity-6&#34;&gt;Activity 6&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;void encrypt (string &amp;amp;name, string code){&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    int sum = name[i]+code[counter]-&amp;#39;a&amp;#39;;&#xD;&#xA;    if(sum &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;     sum-=25;&#xD;&#xA;    }&#xD;&#xA;    name[i]=sum;&#xD;&#xA;    counter+=1;&#xD;&#xA;    if(counter &amp;gt;= code.size()){&#xD;&#xA;      counter=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;void decrypt (string &amp;amp;name, string code){&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    int sum = name[i]-code[counter]+&amp;#39;a&amp;#39;;&#xD;&#xA;    if(sum &amp;lt; &amp;#39;a&amp;#39;){&#xD;&#xA;     sum+=25;&#xD;&#xA;    }&#xD;&#xA;    name[i]=sum;&#xD;&#xA;    counter+=1;&#xD;&#xA;    if(counter &amp;gt;= code.size()){&#xD;&#xA;      counter=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string code;&#xD;&#xA;  string name;&#xD;&#xA;  int number;&#xD;&#xA;  cin &amp;gt;&amp;gt; number;&#xD;&#xA;  cin &amp;gt;&amp;gt; code;&#xD;&#xA;  cin &amp;gt;&amp;gt; name;&#xD;&#xA;  if(number == 1){&#xD;&#xA;      cout &amp;lt;&amp;lt; &amp;#34;Encrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;      encrypt(name, code);&#xD;&#xA;      cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  }else{&#xD;&#xA;    cout &amp;lt;&amp;lt; &amp;#34;Decrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;    decrypt(name, code);&#xD;&#xA;    cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  }&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;activity-7&#34;&gt;Activity 7&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;void encrypt (string &amp;amp;name, string code){&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    if(name[i]!=&amp;#39; &amp;#39;){&#xD;&#xA;      int sum = name[i]+code[counter]-&amp;#39;a&amp;#39;;&#xD;&#xA;      if(sum &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;      sum-=25;&#xD;&#xA;      }&#xD;&#xA;      name[i]=sum;&#xD;&#xA;      counter+=1;&#xD;&#xA;      if(counter &amp;gt;= code.size()){&#xD;&#xA;        counter=0;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;void decrypt (string &amp;amp;name, string code){&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    if(name[i]!=&amp;#39; &amp;#39;){&#xD;&#xA;      int sum = name[i]-code[counter]+&amp;#39;a&amp;#39;;&#xD;&#xA;      if(sum &amp;lt; &amp;#39;a&amp;#39;){&#xD;&#xA;      sum+=25;&#xD;&#xA;      }&#xD;&#xA;      name[i]=sum;&#xD;&#xA;      counter+=1;&#xD;&#xA;      if(counter &amp;gt;= code.size()){&#xD;&#xA;        counter=0;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string code;&#xD;&#xA;  string name;&#xD;&#xA;  int number;&#xD;&#xA;  cin &amp;gt;&amp;gt; number;&#xD;&#xA;  cin &amp;gt;&amp;gt; code;&#xD;&#xA;  getline(cin, name);&#xD;&#xA;  if(number == 1){&#xD;&#xA;      cout &amp;lt;&amp;lt; &amp;#34;Encrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;      encrypt(name, code);&#xD;&#xA;      cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  }else{&#xD;&#xA;    cout &amp;lt;&amp;lt; &amp;#34;Decrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;    decrypt(name, code);&#xD;&#xA;    cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  }&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>답안 - C#: Razor를 사용한 웹 사이트 만들기</title>
      <link>/kr/razor/answer-key/</link>
      <pubDate>Tue, 12 Sep 2023 10:24:17 -0700</pubDate>
      <guid>/kr/razor/answer-key/</guid>
      <description>&lt;h3 id=&#34;활동-1&#34;&gt;활동 1:&lt;/h3&gt;&#xA;&lt;p&gt;코딩 없이 VS Code 알아보기&lt;/p&gt;&#xA;&lt;h3 id=&#34;활동-2&#34;&gt;활동 2:&lt;/h3&gt;&#xA;&lt;p&gt;코딩 없이, 시작할 준비하기 - 확장자 설치하기&lt;/p&gt;&#xA;&lt;h3 id=&#34;활동-3&#34;&gt;활동 3:&lt;/h3&gt;&#xA;&lt;h4 id=&#34;pagesindexrazor&#34;&gt;Pages/index.razor&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;@page&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;@code&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;TimeSpan&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;timeInBusiness&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;DateTime&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Now&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;DateTime&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2010&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;PageTitle&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Welcome&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;my&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;first&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;web&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;PageTitle&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Welcome&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;my&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;first&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Razor&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;web&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;lead&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;best&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;website&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;town&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;@Convert&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ToInt32&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;timeInBusiness&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;TotalDays&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;days&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;!&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;활동-4&#34;&gt;활동 4:&lt;/h3&gt;&#xA;&lt;p&gt;ToDoItems.cs&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyNewTodoListApp&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;TodoItem&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;string?&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Title&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IsDone&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;공유하기/NavMenu.razor&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;top-row ps-3 navbar navbar-dark&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;container-fluid&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;navbar-brand&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;MyNewTodoListApp&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Navigation menu&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;navbar-toggler&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;onclick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ToggleNavMenu&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;navbar-toggler-icon&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;@NavMenuCssClass nav-scrollable&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;onclick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ToggleNavMenu&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;nav&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;flex-column&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nav-item px-3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;NavLink&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nav-link&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;Match&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;NavLinkMatch.All&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;oi oi-home&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;aria-hidden&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt; Home&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;NavLink&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nav-item px-3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;NavLink&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nav-link&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;counter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;oi oi-plus&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;aria-hidden&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt; Counter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;NavLink&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nav-item px-3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;NavLink&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nav-link&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;todo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;oi oi-list-rich&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;aria-hidden&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt; To do List&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;NavLink&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nav-item px-3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;NavLink&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;nav-link&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;fetchdata&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;oi oi-list-rich&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;aria-hidden&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt; Fetch data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;NavLink&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;nav&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@code {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    private bool collapseNavMenu = true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    private string? NavMenuCssClass =&amp;gt; collapseNavMenu ? &amp;#34;collapse&amp;#34; : null;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    private void ToggleNavMenu()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        collapseNavMenu = !collapseNavMenu;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;#3&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
