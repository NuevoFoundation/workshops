<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础知识 on Nuevo Foundation Workshops</title>
    <link>/zh-hans/python-basics/basics/</link>
    <description>Recent content in 基础知识 on Nuevo Foundation Workshops</description>
    <generator>Hugo</generator>
    <language>zh-hans</language>
    <lastBuildDate>Mon, 19 Sep 2022 14:45:38 -0700</lastBuildDate>
    <atom:link href="/zh-hans/python-basics/basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从 Trinket 开始学习</title>
      <link>/zh-hans/python-basics/basics/using-trinket/</link>
      <pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate>
      <guid>/zh-hans/python-basics/basics/using-trinket/</guid>
      <description>&lt;p&gt;今天我们将用Trinket来学习Python。下面这个例子展示了我们要用的Trinket窗口：&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://trinket.io/embed/python/ce70252d93&#34; width=&#34;100%&#34; height=&#34;600&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xD;&#xA;&lt;p&gt;在开始之前，让我们首先了解这个窗口的工作原理。 &lt;code&gt;main.py&lt;/code&gt; 文件包含了使计算机运行的代码或指令。运行代码产生的结果会被显示在窗口右侧。这个显示结果的窗口叫做控制台。&lt;/p&gt;&#xA;&lt;p&gt;点击 &lt;strong&gt;运行&lt;/strong&gt; 并观看控制台在右侧屏幕上运行代码！在下面的示例中，&lt;code&gt;print&lt;/code&gt; (打印) 告诉计算机将括号 &lt;code&gt;()&lt;/code&gt; 中的句子打印到控制台（右侧的屏幕）中。在下一课中我们将了解有关&lt;code&gt;print&lt;/code&gt; (打印) 的更多信息。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../img/helloWorld.png&#34; alt=&#34;Screenshot of Trinket showing print(“Hello World”) in the main.py file and the result in the console on the right&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>写入控制台 (print打印语句)</title>
      <link>/zh-hans/python-basics/basics/writing-to-console/</link>
      <pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate>
      <guid>/zh-hans/python-basics/basics/writing-to-console/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NrbQCjlzhYc&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;h2 id=&#34;和你的程序对话&#34;&gt;和你的程序对话！&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Print&lt;/strong&gt; 语句用于将内容写入控制台。用 &lt;code&gt;print(&amp;quot;Hello World&amp;quot;)&lt;/code&gt; 在屏幕中打印 &lt;em&gt;Hello World&lt;/em&gt;。我们稍后会明白其实&lt;code&gt;print&lt;/code&gt; 是一个函数， 我们用这个函数来执行打印任务。我们输入到 &lt;code&gt;print&lt;/code&gt; 函数中的内容将会被打印在屏幕上。&lt;/p&gt;&#xA;&lt;p&gt;让我们从使用 &lt;code&gt;print&lt;/code&gt;打印语句开始吧。&lt;/p&gt;&#xA;&lt;p&gt;我们将在后面的课程中大量使用打印语句，因此在继续下一个概念之前，请确保你已经理解了上面的内容！&lt;/p&gt;&#xA;&lt;h3 id=&#34;小挑战一&#34;&gt;小挑战一&lt;/h3&gt;&#xA;&lt;p&gt;首先，将以下文本写入您的 Trinket main.py，然后单击运行。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;观察&amp;quot;Hello, World!&amp;ldquo;显示在你的右侧屏幕上！ &lt;code&gt;print&lt;/code&gt; 打印语句告诉计算机将括号 &lt;code&gt;()&lt;/code&gt; 中的句子打印到控制台窗口或右侧的屏幕中。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../img/print.png&#34; alt=&#34;alt text&#34; title=&#34;hello world in python!&#34;&gt;&lt;/p&gt;&#xA;&lt;iframe src=&#34;https://trinket.io/embed/python/ce70252d93&#34; width=&#34;100%&#34; height=&#34;600&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xD;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;技巧&#34;&gt;&lt;h3 id=&#34;在打印语句中使用-&#34;&gt;在打印语句中使用 &amp;quot;&lt;/h3&gt;&#xA;&lt;p&gt;你有没有注意到 Hello, World! 被&lt;code&gt;&amp;quot;&lt;/code&gt;包围了？你有没有试过不带 &lt;code&gt;&amp;quot;&lt;/code&gt; 符号会导致程序错误？值得注意的是，如果你尝试 &lt;code&gt;print(123)&lt;/code&gt; 你会发现程序成功运行且并没有错误产生。这是因为程序中的文本（编程语言中的str字符串）需要使用引号&#xA;括起来以指定它是文本。但数字不需要用引号来指定。&lt;/p&gt;&#xA;&lt;p&gt;继续尝试打印不同的东西！&lt;/p&gt;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;h3 id=&#34;小挑战二&#34;&gt;小挑战二&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在不删除引号的情况下，尝试将 &lt;code&gt;&amp;quot;Hello, World&amp;quot;&lt;/code&gt; 更改为另一个句子。（例如 – &lt;code&gt;&amp;quot;My name is Nuvi!&amp;quot;&lt;/code&gt;） 单击 &lt;strong&gt;运行&lt;/strong&gt; 观察是否有任何改变出现。&lt;/li&gt;&#xA;&lt;li&gt;在第一个打印语句下面添加一个新的打印语句，在第一句话下面打印第二句。&lt;/li&gt;&#xA;&lt;li&gt;单击&lt;strong&gt;运行&lt;/strong&gt;观察是否两个句子被打印了出来。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;iframe src=&#34;https://trinket.io/embed/python/ce70252d93&#34; width=&#34;100%&#34; height=&#34;600&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xD;&#xA;&lt;p&gt;我们将在后面的课程中大量使用打印语句，因此在继续之前请确保你已经理解了上面的内容！&lt;/p&gt;</description>
    </item>
    <item>
      <title>注释 (Comments)</title>
      <link>/zh-hans/python-basics/basics/comments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh-hans/python-basics/basics/comments/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NE9IEUi1Eqk&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;在写Python 程序时，我们可以用 &lt;code&gt;#&lt;/code&gt; 来添加注释。&lt;strong&gt;注释&lt;/strong&gt; 在代码中并不会对程序造成影响。 &lt;code&gt;#&lt;/code&gt; 符号之后的任何内容都是注释的一部分，会在程序执行时被忽略。我们在代码中加注释来告诉读者这些代码在做什么。它们可以使维护代码变得更容易，还可以帮助查找代码中的错误。&lt;/p&gt;&#xA;&lt;p&gt;在编写代码时，我们一直用 &lt;code&gt;#&lt;/code&gt; 来添加注释来帮助理解。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This is my first line of code&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Hello, World!)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../img/comments.png&#34; alt=&#34;Screenshot showing the comment This is my first line of code.&#34; title=&#34;a picture of how to write comments in python&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;小心，如果你删除了 &lt;code&gt;#&lt;/code&gt; 符号， 代码就无法正常运行了！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../img/comments_wrong.png&#34; alt=&#34;Screen shot of the code showing removal of the # before the comment causing an error in the code execution&#34; title=&#34;a picture of a comment done wrong&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>变量</title>
      <link>/zh-hans/python-basics/basics/variables/</link>
      <pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate>
      <guid>/zh-hans/python-basics/basics/variables/</guid>
      <description>&lt;p&gt;在前面的练习中，我们学习了使用 &lt;code&gt;print(&amp;quot;&amp;quot;)&lt;/code&gt; 语句打印不同的内容。虽然打印出一个数字或一个句子很棒，但我们还没有给这个数字和句子赋予含义。变量就是我们可以赋予字符串(str)、数字(int, float, complex)和布尔值(bool)等值的名称。以下是在 Python 中创建名为 s 的变量的方法。我们说 s 是一个字符串，它的值为 &lt;code&gt;&amp;quot;Hello, World!&amp;quot;&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;88&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;happy&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;单击运行.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../img/variables.png&#34; alt=&#34;Screenshot of what variables example looks like in replit&#34; title=&#34;image of how variables look in replit&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;请注意，变量不会被打印到控制台。相反，变量只是将字符串、数字或布尔值保存到计算机的内存中。我们可以在其他语句中使用这些变量。例如，以下代码会将 &lt;code&gt;&amp;quot;Hello Nuevo Foundation&amp;quot;&lt;/code&gt; 打印到控制台：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;str2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Nuevo Foundation&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;str2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你还可以运行以下代码将字符串打印在一起，同时在单词之间添加空格。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;str2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Nuevo Foundation&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;str1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;str2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;变量是什么类型&#34;&gt;变量是什么类型！&lt;/h2&gt;&#xA;&lt;p&gt;在学习如何创建变量之前，我们需要学习 &lt;strong&gt;类型&lt;/strong&gt; 的概念。类型描述了被存储的变量信息。&lt;/p&gt;&#xA;&lt;p&gt;Python 是一种动态类型语言，这意味着与 Java 等语言不同，在为变量赋值之前，我们不必指定它的类型。 而且，如果你原先有一个整数，但你删除了这个整数并在原先整数的地方创建了一个字符串，python 将允许你这样做。但是，你必须根据类型使用变量。&lt;/p&gt;&#xA;&lt;div class=&#34;notices note&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;注&#34;&gt;&lt;p&gt;以下是Python中重要的数据类型：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;整数&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;20&lt;/code&gt;, &lt;code&gt;30&lt;/code&gt;, &lt;code&gt;35&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;char&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;字符，例如符号或单个字母&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;&#39;A&#39;&lt;/code&gt;,&lt;code&gt;&#39;b&#39;&lt;/code&gt;, &lt;code&gt;&#39;(&#39;&lt;/code&gt;, &lt;code&gt;&#39;]&#39;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;String&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;一串字符 &lt;code&gt;char&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;&amp;quot;Hello&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;Bonjour&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;Hola&amp;quot;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;是 &lt;code&gt;true&lt;/code&gt; 或否 &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;小数&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;2.0&lt;/code&gt;, &lt;code&gt;3.14&lt;/code&gt;, &lt;code&gt;9.33&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>从控制台中读取</title>
      <link>/zh-hans/python-basics/basics/reading-from-console/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/zh-hans/python-basics/basics/reading-from-console/</guid>
      <description>&lt;p&gt;现在我们已经学习了变量的基础知识，我们可以让用户输入一些内容到我们的程序。使用以下代码告诉我们的程序等待直到用户在控制台中键入内容。然后，计算机会得到在控制台中键入的任何内容，并将其存储到名为 &lt;strong&gt;value&lt;/strong&gt; 的变量中。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下是如何使用 &lt;code&gt;input()&lt;/code&gt; 得到用户输入的例子：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;What&amp;#39;s your name?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Hello &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;试一试！当单击运行时，你会注意到下面的图像尚未出现在控制台上。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../img/end_symbol.png&#34; alt=&#34;Screenshot of the console end symbol&#34; title=&#34;image of the console end symbol&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../img/console_read_waiting.png&#34; alt=&#34;Screen shot of the console waiting for user input&#34; title=&#34;image of how the console looks waiting for user input&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这是因为程序正在等待你输入一些内容！在右侧的控制台中输入您的名字或 &amp;lsquo;Nuvi&amp;rsquo;，然后按Enter键，检查它是否正确打印出来。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../img/console_read_input.png&#34; alt=&#34;Screen shot of the console after the user has given input and the program completed&#34; title=&#34;image of how the console looks after it has read user input&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
