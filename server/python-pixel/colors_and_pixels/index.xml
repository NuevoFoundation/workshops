<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python: Colors and Pixels on Nuevo Foundation Workshops</title>
    <link>/python-pixel/colors_and_pixels/</link>
    <description>Recent content in Python: Colors and Pixels on Nuevo Foundation Workshops</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Feb 2020 13:24:17 -0700</lastBuildDate>
    <atom:link href="/python-pixel/colors_and_pixels/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Import an image module</title>
      <link>/python-pixel/colors_and_pixels/load_image_module/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/python-pixel/colors_and_pixels/load_image_module/</guid>
      <description>&lt;h3 id=&#34;setting-up-the-project&#34;&gt;Setting up the project&lt;/h3&gt;&#xA;&lt;p&gt;To do fun stuff with images, we need to unlock some useful functions. To get these functions, we need to import a module. In this case, if we import the module &lt;b&gt;Pillow&lt;/b&gt;, we can use some functions that will help us modify images.&lt;/p&gt;&#xA;&lt;p&gt;First, let’s delete everything in the main.py file. Then, add the following statements:&lt;/p&gt;&#xA;&lt;pre&gt;&#xD;&#xA;    &lt;font color=&#34;blue&#34;&gt;from&lt;/font&gt; PIL &lt;font color=&#34;blue&#34;&gt;import&lt;/font&gt; Image&#xD;&#xA;    &lt;font color=&#34;blue&#34;&gt;from&lt;/font&gt; PIL &lt;font color=&#34;blue&#34;&gt;import&lt;/font&gt; ImageFilter&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&lt;p&gt;Once you hit run, you should see the module being installed in the console:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Open an image</title>
      <link>/python-pixel/colors_and_pixels/open-image/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/python-pixel/colors_and_pixels/open-image/</guid>
      <description>&lt;p&gt;To change an image, we must open an image. We can use the &lt;code&gt;Pillow Image&lt;/code&gt; module we just imported in the setup.&#xA;Let’s first find some images to open. Find an image of your choice and download it. Once you have downloaded it, navigate back to your Replit window and upload your image by clicking on the three dots and selecting ‘upload file’.&lt;/p&gt;&#xA;&lt;p&gt;For example, to upload the cat.jpg file:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basics of colors</title>
      <link>/python-pixel/colors_and_pixels/basic-of-colors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/python-pixel/colors_and_pixels/basic-of-colors/</guid>
      <description>&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-ior2GcSYa4&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xD;&#xA;&lt;h2 id=&#34;basics-of-colors&#34;&gt;Basics of Colors&lt;/h2&gt;&#xA;&lt;p&gt;While going through all kinds of pictures online, have you ever questioned how those pictures got their colors? Actually, computers have &lt;em&gt;RGB&lt;/em&gt; &lt;em&gt;mode&lt;/em&gt; to represent colors.&lt;/p&gt;&#xA;&lt;h2 id=&#34;rgb-format&#34;&gt;RGB format&lt;/h2&gt;&#xA;&lt;p&gt;In Python, we follow a specific format when defining colors:&#xA;(R, G, B), where &amp;ldquo;R&amp;rdquo;, &amp;ldquo;G&amp;rdquo;, and &amp;ldquo;B&amp;rdquo; are all integers. &amp;ldquo;R&amp;rdquo; represents some amount of &lt;span style=&#34;color:red; font-weight:bold&#34;&gt; red&lt;/span&gt;, &amp;ldquo;G&amp;rdquo; represents some amount of &lt;span style=&#34;color:green; font-weight:bold&#34;&gt; green&lt;/span&gt;, and &amp;ldquo;B&amp;rdquo; represents some amount of &lt;span style=&#34;color:blue; font-weight:bold&#34;&gt; blue&lt;/span&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pixels on an Image</title>
      <link>/python-pixel/colors_and_pixels/pixel-on-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/python-pixel/colors_and_pixels/pixel-on-image/</guid>
      <description>&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/WvDHBwyM6_U&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xD;&#xA;&lt;h2 id=&#34;pixels&#34;&gt;Pixels&lt;/h2&gt;&#xA;&lt;p&gt;Pixels are a small area of color on a display screen. Images are formed by pixels on the screen. We can manipulate pixels by changing the &lt;strong&gt;RGB Value&lt;/strong&gt;, which are essentially changing the value of red, green and blue color on each pixels. When we see an image on a screen, it is made of a ton of tiny pixels in many colors all next to each other. However, each tiny pixel has a single color at a unique position in the image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Access pixels on image</title>
      <link>/python-pixel/colors_and_pixels/access-pixel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/python-pixel/colors_and_pixels/access-pixel/</guid>
      <description>&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ydP3GVHLGR0&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xD;&#xA;&lt;h2 id=&#34;more-about-pixels&#34;&gt;More about pixels&lt;/h2&gt;&#xA;&lt;p&gt;We have already learned how to make a pure color image using pixels and change a pixel on the image. Now, we will learn how to identify pixels in existing images.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;For information about how to use lists and tuples in Python see more on these pages:&#xA;&lt;a href=&#34;../../../python-basics/data-structures/&#34; target=&#34;blank&#34;&gt;Data Structure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;get-image-data&#34;&gt;Get image data&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Remember to import Image&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;PIL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Image&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;Image&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;size&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;Image&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;Image&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Image.size&lt;/code&gt; gives a &lt;code&gt;(width, height)&lt;/code&gt; value of an image. &lt;code&gt;Image.size[0]&lt;/code&gt; gives the width of the image and &lt;code&gt;Image.size[1]&lt;/code&gt; gives the height of the image.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
