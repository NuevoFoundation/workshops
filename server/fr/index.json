[
{
	"uri": "/fr/python-turtle/using-trinket/",
	"title": "Utilisation de Trinket",
	"tags": [],
	"description": "",
	"content": "\nPour aider Alex à vivre dans une ruche, il doit apprendre à créer un rayon de miel ! Nous utiliserons la bibliothèque turtle de Python pour dessiner un rayon de miel pour Alex.\nUtilisation de Trinket Aujourd\u0026rsquo;hui, vous utiliserez Trinket pour apprendre à coder en Python. Voici une fenêtre interactive d\u0026rsquo;exemple que vous utiliserez aujourd\u0026rsquo;hui :\nAvant de commencer, comprenons d\u0026rsquo;abord comment fonctionne la fenêtre. Le fichier main.py contient du code ou des instructions à exécuter par l\u0026rsquo;ordinateur. En appuyant sur le bouton run, vous dites à l\u0026rsquo;ordinateur de réaliser les instructions dans le code. Tous les résultats de l\u0026rsquo;exécution du code seront affichés sur l\u0026rsquo;écran blanc en bas, sous l\u0026rsquo;onglet result. Aujourd\u0026rsquo;hui, nos résultats seront une animation d\u0026rsquo;un dessin en cours de création.\nEnsuite, expliquons plus en détail une partie du code qui vous a été fourni dans le fichier main.py.\nBibliothèques et instructions d\u0026rsquo;importation Regardez en haut du code. Vous verrez la ligne suivante :\nimport turtle Cette instruction nous permet d\u0026rsquo;importer toutes les fonctionnalités de dessin fournies par la bibliothèque turtle. Une bibliothèque est un endroit où des fonctionnalités connexes sont regroupées pour être utilisées dans le langage Python. Par exemple, la bibliothèque turtle introduit une tortue artistique utile dans la fenêtre des résultats, que nous pouvons contrôler en utilisant notre code pour dessiner des images.\nCommentaires La ligne grise qui commence par # est appelée un commentaire. Ce sont des notes dans le code qui aident à expliquer ce qui se passe en anglais clair. Étant ignorés par l\u0026rsquo;ordinateur, ils sont souvent utilisés pour que, lorsque d\u0026rsquo;autres développeurs travaillent sur le même code, ils aient une meilleure compréhension de ce qui se passe.\n"
},
{
	"uri": "/fr/python-turtle/the-basics/",
	"title": "Les bases - Dessiner une ligne colorée",
	"tags": [],
	"description": "",
	"content": "Avant qu\u0026rsquo;Alex ne puisse apprendre à créer une ruche, il doit d\u0026rsquo;abord apprendre à dessiner une ligne colorée. Nous ajouterons du code à la fenêtre Trinket ci-dessous, et nous le ferons en deux parties.\nTout d\u0026rsquo;abord, nous devons dire à la tortue quelle couleur nous voulons que la ligne soit. Pour cela, tapons :\nturtle.color(\u0026#34;orange\u0026#34;) Essayons de comprendre cette ligne de code plus en détail.\nChaînes de caractères Tout ce que vous voyez entre guillemets s\u0026rsquo;appelle une chaîne de caractères. Une chaîne est simplement une séquence de caractères (qu\u0026rsquo;il s\u0026rsquo;agisse de lettres, de chiffres ou de symboles).\nDans le code ci-dessus, \u0026quot;orange\u0026quot; est une chaîne de caractères. D\u0026rsquo;autres exemples de chaînes incluent \u0026quot;123\u0026quot;, \u0026quot;abc!\u0026quot; et \u0026quot;green\u0026quot;. Attention, 123, abc! et green ne sont pas des chaînes car il manque des guillemets !\nMéthodes turtle.color() est une méthode. Nous utilisons des méthodes pour que la tortue effectue certaines actions. Dans ce cas, turtle.color() change la couleur des lignes qu\u0026rsquo;elle dessine selon la couleur que nous lui indiquons. Nous lui avons dit de changer la couleur en orange en lui envoyant la chaîne \u0026quot;orange\u0026quot; comme argument.\nArguments Les arguments sont des entrées que vous passez aux méthodes pour utiliser. Dans notre exemple, turtle.color() a besoin d\u0026rsquo;un argument de type chaîne représentant le nom de la couleur à définir pour la tortue, donc nous avons passé \u0026quot;orange\u0026quot; comme argument à la méthode. Nous aurions aussi pu lui dire de changer la couleur en quelque chose d\u0026rsquo;autre, mais il fallait que ce soit une couleur que turtle.color() comprend. Les couleurs qu\u0026rsquo;il reconnaît sont : \u0026quot;red\u0026quot;, \u0026quot;orange\u0026quot;, \u0026quot;yellow\u0026quot;, \u0026quot;green\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;purple\u0026quot;, \u0026quot;black\u0026quot;, \u0026quot;pink\u0026quot;, et \u0026quot;gray\u0026quot;. Si nous envoyons autre chose qu\u0026rsquo;une de ces chaînes de couleurs, nous obtenons la couleur par défaut, qui est le noir.\nMaintenant que nous avons choisi la couleur que nous voulons, nous pouvons maintenant dessiner une ligne ! Pour dessiner une ligne, il y a deux méthodes que nous pouvons utiliser :\nturtle.forward(50) turtle.backward(50) turtle.forward(50) fera avancer la tortue de 50 pixels et dessinera une ligne dans la direction où elle est orientée, tandis que turtle.backward(50) fera la même chose, mais dans la direction opposée.\nPixels Une image est composée de milliers, voire de millions de pixels. Un pixel est une unité de mesure pour les images numériques, similaire à la façon dont nous mesurons le poids en livres, ou les longues distances en miles.\nEntiers Un entier est simplement n\u0026rsquo;importe quel nombre entier, qu\u0026rsquo;il soit positif ou négatif. Dans cet exemple, turtle.forward() et turtle.backward() attendent tous deux un entier comme argument plutôt qu\u0026rsquo;une chaîne. C\u0026rsquo;est parce que l\u0026rsquo;argument représente le nombre de pixels que vous voulez que la tortue se déplace lors du dessin. Une chaîne ne fonctionnerait évidemment pas pour ces méthodes !\nFaisons avancer la tortue, donc tapez turtle.forward(50). Maintenant, votre code devrait ressembler à ceci :\nimport turtle turtle.color(\u0026#34;orange\u0026#34;) turtle.forward(50) Maintenant que nous avons terminé notre code, appuyez sur run. Vous devriez voir ceci dans l\u0026rsquo;écran de résultat :\nSi oui, super ! Sinon, demandez de l\u0026rsquo;aide.\nComme exercice, essayez de comprendre ce que la ligne de code suivante fait, et essayez de l\u0026rsquo;ajouter à votre code. Que fait-elle ?\nturtle.shape(\u0026#34;turtle\u0026#34;) AIDE ! Rien n\u0026rsquo;apparaît à l\u0026rsquo;écran ! Si, après avoir appuyé sur run, vous ne voyez rien à l\u0026rsquo;écran, vérifiez s\u0026rsquo;il y a un x rouge à côté de l\u0026rsquo;onglet console (l\u0026rsquo;onglet console est juste à côté de l\u0026rsquo;onglet result au milieu de l\u0026rsquo;écran). Si c\u0026rsquo;est le cas, vous avez rencontré des erreurs ! Veuillez cliquer sur l\u0026rsquo;onglet console et demander de l\u0026rsquo;aide. Méfiez-vous des éléments suivants lorsque vous codez en python :\nNe pas utiliser de lettres majuscules. Assurez-vous qu\u0026rsquo;aucune des lignes que vous avez écrites jusqu\u0026rsquo;à présent ne commence par des espaces. Assurez-vous que le nom de la couleur que vous avez choisi est entouré de guillemets et que la couleur est entre parenthèses dans turtle.color(). "
},
{
	"uri": "/fr/web-basics/basics/",
	"title": "Les bases",
	"tags": [],
	"description": "",
	"content": "Qu\u0026rsquo;est-ce qu\u0026rsquo;un site Web ? Un site Web est simplement une page que l\u0026rsquo;on peut trouver sur l\u0026rsquo;Internet. Elle est affichée par un navigateur lorsque tu tapes l\u0026rsquo;adresse (un nom unique) dans la barre d\u0026rsquo;adresse.\nParties d\u0026rsquo;un site Web Les éléments courants d\u0026rsquo;un site Web peuvent inclure les barres de navigation, les pieds de page, les barres de recherche et les formulaires de contact.\nConception de sites Web La première étape de la création d\u0026rsquo;un site Web consiste à décider des éléments qu\u0026rsquo;on veux et de leur apparence. Ce processus s\u0026rsquo;appelle la conception de la mise en page et il s\u0026rsquo;agit juste d\u0026rsquo;une ébauche de la façon dont les différentes pièces vont s\u0026rsquo;assembler. Il existe de nombreux outils pour t\u0026rsquo;aider à le faire, mais le plus ancien et l\u0026rsquo;un des plus populaires est le bon vieux papier et le crayon. Voici comment j\u0026rsquo;ai dessiné le mien :\nCette esquisse est juste une ligne directrice. Il n\u0026rsquo;y a pas de problème à modifier les choses au fur et à mesure qu\u0026rsquo;on commençe à les assembler. Une bonne règle de base est de commencer aussi simplement que possible.\n"
},
{
	"uri": "/fr/python-turtle/activity-1/",
	"title": "Activité 1 - Dessiner un carré",
	"tags": [],
	"description": "",
	"content": "\rBravo ! Vous avez aidé Alex à dessiner une ligne ! Maintenant, passons à l’étape suivante et aidons Alex à dessiner un carré. Pour dessiner un carré, nous devons suivre ces étapes :\nAllez de 50 pas en avant. Tournez de 90 degrés vers la droite. Allez de 50 pas en avant. Tournez de 90 degrés vers la droite. Allez de 50 pas en avant. Tournez de 90 degrés vers la droite. Allez de 50 pas en avant. N\u0026rsquo;oubliez pas d\u0026rsquo;utiliser turtle.forward() pour dessiner les lignes. Pour tourner à 90 degrés à gauche, vous devez passer 90 comme argument à la méthode turtle.left() :\nturtle.left(90) "
},
{
	"uri": "/fr/web-basics/putting-together/",
	"title": "Mise en place",
	"tags": [],
	"description": "",
	"content": "Pour que ton navigateur comprenne ce qu\u0026rsquo;est chaque élément de ton site, on doit les étiqueter avec des tags (balises) HTML. HTML est l\u0026rsquo;abréviation de \u0026ldquo;Hypertext Markup Language\u0026rdquo; (Langage de Balisage d\u0026rsquo;Hypertexte). Les tags sont des mots entourés des symboles \u0026lt; et \u0026gt;. Par exemple, la tag \u0026lt;img\u0026gt; indique à ton navigateur \u0026ldquo;ceci est une image\u0026rdquo;. La tag \u0026lt;button\u0026gt; lui indique \u0026ldquo;ceci est un bouton\u0026rdquo;.\nLes tags peuvent également être utilisées pour organiser ton page Web ! L\u0026rsquo;image ci-dessous présente la structure d\u0026rsquo;une page Web de base. Le \u0026ldquo;head\u0026rdquo; (tête) contient généralement les libraries (bibliothèques) supplémentaires utilisées et le titre de la page, tandis que le corps contient la majeure partie du contenu affiché.\nLa plupart des tags nécessitent une tag d\u0026rsquo;ouverture et une tag de fermeture. Par exemple, tu vois que toutes les pages ont une tag d\u0026rsquo;ouverture \u0026lt;html\u0026gt; au début et une tag de fermeture \u0026lt;/html\u0026gt; à la fin. Cela indique au navigateur où les éléments HTML commencent et où ils se terminent. Pensez aux tags comme à des guillemets ; par exemple, l\u0026rsquo;ordinateur comprendra que tout ce qui se trouve entre les tags \u0026lt;html\u0026gt; et \u0026lt;/html\u0026gt; fait partie d\u0026rsquo;un site Web de HTML.\nIl existe également quelques tags, comme la tag d\u0026rsquo;image \u0026lt;img\u0026gt;, qui se ferment automatiquement, ce qui signifie qu\u0026rsquo;elles ne nécessitent qu\u0026rsquo;une tag d\u0026rsquo;ouverture et non une tag de fermeture.\nVoici un exemple :\nSee the Pen HTML Basics by Deliana Escobari (@Sunny-Dee)\ron CodePen.\r"
},
{
	"uri": "/fr/python-turtle/activity-2/",
	"title": "Activité 2 - Simplifier le code avec des boucles",
	"tags": [],
	"description": "",
	"content": "\nSuper ! Vous avez dessiné un carré. Mais remarquez que nous écrivons les mêmes lignes encore et encore ! Nous avons dû répéter les instructions pour dessiner une ligne et tourner à gauche 4 fois. Ne serait-ce pas génial si nous pouvions donner les instructions une fois et dire au programme de les répéter 4 fois ? Ne vous inquiétez pas, nous pouvons le faire !\nPour cela, nous devons utiliser des boucles. Les boucles exécutent un ensemble d\u0026rsquo;instructions plusieurs fois. Pour voir cela en action, voici un exemple de code qui dessine un triangle :\nfor i in range(3): turtle.forward(50) turtle.left(120) Comprenons ce que fait ce code. for i in range(3): Cette instruction dit au programme d\u0026rsquo;exécuter les instructions dans une boucle. range(3) fixe une limite au nombre de fois où la boucle s\u0026rsquo;exécute (dans ce cas, 3 fois). La lettre i est appelée une variable. Elle est utilisée pour suivre combien de fois nous avons exécuté le contenu de la boucle.\nSyntaxe Python délicate - Partie 1 La syntaxe est la façon dont nous écrivons les langages pour qu\u0026rsquo;ils soient compréhensibles. En anglais, nous avons des règles d\u0026rsquo;orthographe et de grammaire pour nous aider à nous comprendre. De même, le langage Python a des règles de syntaxe pour que l\u0026rsquo;ordinateur comprenne notre code.\nTout d\u0026rsquo;abord, remarquez qu\u0026rsquo;à la fin de la ligne avec for, nous avons ajouté deux-points (:); ceci signale que la ligne suivante fera partie de la boucle for. L\u0026rsquo;ordinateur se plaindra si vous oubliez les : !\nDe plus, nous avons ajouté une tabulation devant certaines lignes de code dans l\u0026rsquo;exemple ci-dessus. La tabulation indique à l\u0026rsquo;ordinateur que ces instructions font partie de la boucle for.\nPour voir la différence que cela fait, jetez un coup d\u0026rsquo;œil au code ci-dessous. Parce que nous avons enlevé la tabulation devant turtle.left(120), le code ne fonctionnera plus comme prévu. Maintenant, nous ne répétons turtle.forward(50) que trois fois, et nous obtenons une ligne droite à la place !\nfor i in range(3): turtle.forward(50) turtle.left(120) Maintenant, regardez l\u0026rsquo;exemple de code que nous avons fourni et modifiez-le légèrement pour qu\u0026rsquo;il dessine un carré au lieu d\u0026rsquo;un triangle. Vous pouvez regarder ce que vous avez fait dans l\u0026rsquo;Activité 1 comme indice.\n"
},
{
	"uri": "/fr/web-basics/activity-1/",
	"title": "Activité 1 - Se familiariser avec l&#39;éditeur en ligne",
	"tags": [],
	"description": "",
	"content": "Activité 1 - Créer un site Web de base Il est maintenant le temps de commencer à créer un site Web de base. Pour réaliser cette activité, tu dois suivre les étapes suivantes :\nOuvrez l\u0026rsquo;éditeur Web (cliquez sur le bouton \u0026ldquo;Essaie toi-même !\u0026rdquo; ci-dessous). Utilisez les tags de header pour ajouter un titre, et les tags de paragraphe pour écrire un paragraphe à propos de Benji. Si tu as le temps, écris une liste des friandises préférées de Benji : du dinde, du beurre de cacahuètes et du fromage à effilocher. Essaie toi-même !\nUtilise ce tableau de référence pour essayer toi-même quelques tags HTML.\nTag Déscription Exemple \u0026lt;html\u0026gt;\u0026lt;/html\u0026gt; Décrit un document HTML. Tous les sites Web doit commencer par la tag d\u0026rsquo;ouverture \u0026lt;html\u0026gt; et se terminer par la tag de fermeture \u0026lt;/html\u0026gt;. Voir l\u0026rsquo;exemple CodePen ci-dessus. \u0026lt;!-- --\u0026gt; Décrit un comment (commentaire). Les comments sont destinés à être vus par les autres codeurs, mais ils ne sont pas affichés sur le site web. \u0026lt;!-- This line will not show in the browser --\u0026gt; \u0026lt;head\u0026gt;\u0026lt;/head\u0026gt; Contient tous les éléments HTML qui donnent des informations au navigateur pour afficher correctement le site web. Les éléments HTML situés entre les tags \u0026lt;head\u0026gt; et \u0026lt;/head\u0026gt; ne sont pas affichés. Voir l\u0026rsquo;exemple CodePen ci-dessus. \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; Contient le titre du site Web à utiliser pour nommer l\u0026rsquo;onglet du navigateur. \u0026lt;head\u0026gt;\n\u0026lt;title\u0026gt; Mon site Web \u0026lt;/title\u0026gt;\n\u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;/body\u0026gt; Contient tous les éléments HTML qui sont affichés dans la page, comme le texte et les images. Voir l\u0026rsquo;exemple CodePen ci-dessus. \u0026lt;h1\u0026gt;\u0026lt;/h1\u0026gt;\n\u0026hellip; \u0026lt;h6\u0026gt;\u0026lt;/h6\u0026gt; Décrit un titre. \u0026lt;h1\u0026gt; définit le titre le plus important (le plus grand), tandis que \u0026lt;h6\u0026gt; définit le titre le moins important (le plus petit). \u0026lt;h1\u0026gt;Ce sera un titre important\u0026lt;/h1\u0026gt;\n\u0026lt;h4\u0026gt;Ce sera un titre moins important\u0026lt;/h4\u0026gt; \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; Décrit un paragraphe. \u0026lt;p\u0026gt;Les chiens ont évolué pour aimer les humains. En conclusion, les chiens sont le meilleur ami de l\u0026rsquo;homme.\u0026lt;/p\u0026gt; \u0026lt;div\u0026gt;\u0026lt;/div\u0026gt; Décrit une division ou une section du site. \u0026lt;div\u0026gt;\n\u0026lt;h1\u0026gt;Tout sur moi\u0026lt;/h1\u0026gt;\n\u0026lt;/div\u0026gt; \u0026lt;img\u0026gt; Une image. Il s\u0026rsquo;agit d\u0026rsquo;une tag à fermeture automatique, mais tu dois spécifier la source de l\u0026rsquo;image pour que le navigateur sache où trouver l\u0026rsquo;image. \u0026lt;img src=\u0026ldquo;aka.ms/Benji-the-dog\u0026rdquo;\u0026gt; \u0026lt;hr\u0026gt; Dessine une ligne horizontale. Il s\u0026rsquo;agit d\u0026rsquo;une autre tag à fermeture automatique, utile si tu souhaites séparer le contenu de la page. \u0026hellip; \u0026lt;hr\u0026gt; \u0026hellip; \u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;\n\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; Une liste. Pour commencer la liste, utilisez une tag \u0026lt;ul?\u0026gt;. Pour chaque élément à ajouter à la liste, entourez-le en utilisant des tags \u0026lt;li\u0026gt; et \u0026lt;/li\u0026gt;. Terminez la liste avec la tag \u0026lt;/ul\u0026gt;. \u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;Ceci est un élément de liste.\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; "
},
{
	"uri": "/fr/python-turtle/activity-3/",
	"title": "Activité 3 - Dessiner un hexagone",
	"tags": [],
	"description": "",
	"content": "\nBon travail ! Vous venez de dessiner votre première forme en Python avec Turtle ! Maintenant, changeons légèrement le code que nous avons déjà écrit pour dessiner un carré afin de dessiner un hexagone. Après tout, Alex est une abeille et il a besoin de dessiner des hexagones pour construire son premier rayon de miel.\nPour vous aider à dessiner un hexagone, pensez au nombre de côtés qu\u0026rsquo;un hexagone possède. Combien de degrés y a-t-il dans chaque angle intérieur d\u0026rsquo;un hexagone ?\nIndice:\rRappelez-vous que dans n\u0026rsquo;importe quelle forme, tous les angles intérieurs s\u0026rsquo;additionnent à 360°. Par exemple, il y a 4 côtés dans un carré, donc chaque angle intérieur d\u0026rsquo;un carré est de 360 ÷ 4 = 90°.\nMontrer la réponse :\rComme un hexagone a 6 côtés, chaque angle intérieur d\u0026rsquo;un hexagone est de 360 ÷ 6 = 60°.\nPour rappel, voici le code utilisé pour créer un triangle :\nfor i in range(3): turtle.forward(50) turtle.left(120) "
},
{
	"uri": "/fr/web-basics/html-attributes/",
	"title": "Les attributs de HTML",
	"tags": [],
	"description": "",
	"content": "Chaque tag peut également contenir des informations supplémentaires, comme des attributs de style qui permettent de modifier les propriétés d\u0026rsquo;un élément. Il existe des attributs qu\u0026rsquo;on peut utiliser pour modifier l\u0026rsquo;aspect visuel d\u0026rsquo;un élément, comme la taille, la couleur et la police du texte.\nTous les attributs sont formatés comme : attribut-name=\u0026quot;valeur entre guillemets\u0026quot;. Par exemple, on peut changer la couleur d\u0026rsquo;un paragraphe en rouge avec ce code : \u0026lt;p style=\u0026quot;color:red\u0026quot;\u0026gt;Ce texte est rouge\u0026lt;/p\u0026gt;.\nLes tags d\u0026rsquo;image ont besoin d\u0026rsquo;une source, on a donc besoin d\u0026rsquo;un attribut dans la balise pour indiquer au navigateur où aller chercher l\u0026rsquo;image.\nVoici un exemple : Et voici le résultat : "
},
{
	"uri": "/fr/python-turtle/activity-4/",
	"title": "Activité 4 - Simplifier le code avec des fonctions",
	"tags": [],
	"description": "",
	"content": "Nous avons dessiné un hexagone. Mais ce n\u0026rsquo;est qu\u0026rsquo;un des nombreux hexagones qu\u0026rsquo;Alex doit construire pour sa ruche. Encore une fois, il semble que nous devrions répéter le code plusieurs fois pour dessiner plusieurs hexagones. Heureusement, nous n’avons pas à le faire ! Les fonctions à la rescousse !\nFonctions Une fonction est un moyen de regrouper des lignes de code pour faire quelque chose. Par exemple, turtle.forward(50) déplace la tortue de 50 pas en avant, et turtle.left(120) tourne la tortue de 120 degrés à gauche. Que faire si nous voulons toujours effectuer ces deux actions ensemble ? Nous pouvons les mettre dans une fonction appelée draw_line(), de sorte que chaque fois que cette fonction est appelée, ces deux actions se produisent simultanément. Pensez-y comme une recette :nous regroupons toutes les instructions ensemble, et le nom de la recette est la nourriture que nous préparons.\nVoici un exemple de définition de fonction, et comment nous l\u0026rsquo;utiliserions :\ndef draw_line(): turtle.forward(50) turtle.left(120) La première ligne est appelée ** the function definition header **. Le mot-clé def indique à l\u0026rsquo;ordinateur que nous définissons une nouvelle fonction. Ensuite, nous donnons un nom à la fonction, dans ce cas draw_line. Enfin, n\u0026rsquo;oubliez pas le (): à la fin de la ligne, qui indique à l\u0026rsquo;ordinateur que nous commençons le corps de la fonction.\nMatériel supplémentaire - paramètres Dans les parenthèses () nous définirions normalement des paramètres pour la fonction. Les paramètres sont des entrées que nous pouvons donner à la fonction, que la fonction peut utiliser pour produire sa sortie. Par exemple, nous devons avoir deux nombres pour les additionner et produire un résultat - les deux nombres que nous utilisons peuvent être considérés comme des paramètres. Aujourd\u0026rsquo;hui, nous n\u0026rsquo;utiliserons pas de paramètres, et nous laisserons comme ().\nSemblable à une boucle for, tout ce que nous souhaitons définir dans la fonction doit être précédé d\u0026rsquo;une tabulation.\nSi vous appuyez sur run avec juste ce code, vous remarquerez que vous ne verrez aucune sortie ! Nous avons seulement créé les fonctions, mais nous devons les utiliser. Pour utiliser la fonction que nous avons créée, tapez à nouveau draw_line() sans le def.\ndef draw_line(): # Définition de fonction turtle.forward(50) turtle.left(120) draw_line() # Appel de fonction Ceci est appelé un appel de fonction pour la fonction draw_line(). Un appel de fonction exécute le code défini dans la fonction portant le même nom. Avec l\u0026rsquo;analogie de la recette, pensez à cela comme à la réalisation de la recette.\nConseils Assurez-vous toujours que les noms de vos fonctions sont suffisamment descriptifs pour expliquer ce que le code dans la fonction fait. Votre appel de fonction doit être en dessous de la définition de la fonction. Syntaxe Python délicate - Partie 2 Remarquez que les fonctions utilisent des règles de syntaxe similaires aux boucles for - vous devez avoir un : à la fin de la déclaration de fonction, et tout dans le corps de la fonction doit commencer par une tabulation.\nQue se passe-t-il lorsque vous avez besoin d\u0026rsquo;une boucle for à l\u0026rsquo;intérieur d\u0026rsquo;une fonction ? Ensuite, vous devez combiner les règles ensemble ! Voici un exemple de la façon de mettre correctement une boucle for à l\u0026rsquo;intérieur d\u0026rsquo;une fonction.\ndef draw_line(): for i in range(3): turtle.forward(50) Remarquez que turtle.forward(50) a 2 tabulations devant lui, car il est à la fois dans une définition de fonction et dans une boucle for !\nAlors, essayons cela en créant notre propre fonction draw_hexagon() ! N\u0026rsquo;oubliez pas d\u0026rsquo;inclure l\u0026rsquo;en-tête de définition de fonction, le nombre de côtés d\u0026rsquo;un hexagone: 60 dégrées et l\u0026rsquo;angle associé à un hexagone :\n"
},
{
	"uri": "/fr/web-basics/activity-2/",
	"title": "Activité 2 - CSS",
	"tags": [],
	"description": "",
	"content": "Style avec CSS Les tags indiquent au navigateur les éléments du site Web à utiliser. Mais on doit également lui indiquer comment afficher les éléments et où les placer. Le titre peut être placé au centre ou sur le côté droit. On peut vouloir une image sur la droite et un paragraphe sur la gauche. Il y a deux façons de le faire : par les attributs HTML ou les Cascading Style Sheets (les Feuilles de Style en Cascade).\nCascading Style Sheets (CSS) Les attributs HTML sont simples, mais ils peuvent rapidement devenir désordonnés. Si on veux ajouter beaucoup de style, chaque élément de HTML peut devenir long et difficile à lire. En outre, que se passe-t-il si on veux donner le même style à plusieurs éléments ? On devrait copier tous les attributs à chaque élément; ceci n\u0026rsquo;est pas efficace et donne lieu à des erreurs. Pour la plupart des styles, il est préférable d\u0026rsquo;utiliser les CSS.\nLes fichiers CSS travaillent ensemble avec les tags HTML. Chaque tag HTML peut avoir un attribut class et/ou un attribut id qui aide à identifier chaque élément. Plusieurs éléments peuvent avoir la même classe, et un élément peut avoir plusieurs classes. Toutefois, un élément ne peut avoir qu\u0026rsquo;un seul identifiant et ce identifiant ne peut pas être partagé entre plusieurs éléments. Le fichier CSS utilise ces attributs pour afficher un style spécifique à chaque class ou id.\nVois l\u0026rsquo;exemple ci-dessous :\nSee the Pen Styling it up by Deliana Escobari (@Sunny-Dee) on CodePen.\nCliquez sur l'onglet \"HTML\" à la gauche pour voir le code HTML, et sur l'onglet \"CSS\" pour voir le code CSS.\rJetons un coup d\u0026rsquo;œil au code de HTML. Essaie de trouver une tag \u0026lt;div\u0026gt; avec l\u0026rsquo;attribut \u0026quot;info\u0026quot;. Cela ressemble à \u0026lt;div id=\u0026ldquo;info\u0026rdquo;\u0026gt;. En donnant un id à cet élement \u0026lt;div\u0026gt;, on peut ensuite utiliser le CSS pour spécifier le style de cet élément spécifique.\nPassez au fichier CSS. On peut également donner un style à tous les éléments d\u0026rsquo;un type spécifique - par exemple, on peut utiliser le CSS pour donner le même style à tous les éléments \u0026lt;p\u0026gt;. Dans le bloc header, on indique au navigateur de colorer tous les headers avec la couleur #0097A7 (qui est la couleur sarcelle).\nParlons de la syntaxe (ou de la façon d\u0026rsquo;écrire) de CSS. Tout d\u0026rsquo;abord, tu commences par l\u0026rsquo;élément que tu veux styliser. Si tu veux styliser tous les éléments ayant la même tag (comme \u0026lt;header\u0026gt;), écrivez simplement le nom. Si tu veux donner un style à un élément avec une class ou un id, mettez . ou # devant le nom de la class ou de l\u0026rsquo;id respectivement. Ensuite, pour chaque propriété que tu souhaites modifier, utilisez le format nom-d\u0026rsquo;attribut: valeur;. N\u0026rsquo;oubliez pas de terminer chaque ligne avec ;. Tous ces styles doivent être entourés des accolades { et }.\nIl y a beaucoup trop d\u0026rsquo;éléments de style pour les couvrir tous dans ce tutoriel. Si tu ne sais pas comment utiliser les CSS pour obtenir le style souhaité, essayez de faire une recherche en ligne.\nBien que CSS comprenne 140 noms de couleurs tels que \u0026ldquo;green\u0026rdquo; (vert), \u0026ldquo;red\u0026rdquo; (rouge) et \u0026ldquo;blue\u0026rdquo; (bleu), cela peut encore être limitatif. Que fait-on si on veut un vert foncé ou un vert légèrement plus clair ? Pour y parvenir, on peut également faire référence aux couleurs sous forme hexadécimale ou RVB. Consulte ce lien pour voir les couleurs et leur forme hexadécimale correspondante.\nAjout d\u0026rsquo;une nouvelle police Comme tu le sais peut-être, il existe de nombreuses polices de caractères que tu peux utiliser. Cette partie te montrera comment importer différentes polices sur tu site.\nImportons la police Heebo depuis l\u0026rsquo;Internet. Tout d\u0026rsquo;abord, on importe la police en haut du fichier CSS avec cette déclaration : @import url('https://fonts.googleapis.com/css?family=Heebo|Open+Sans'); Attachons ce style à la tag body. Comme cette tag contiendra tous les autres éléments de HTML, notre choix de police sera utilisé pour tous les éléments. Remarquez que le format à l\u0026rsquo;intérieur des accolades est : nom: valeur; @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Roboto+Mono');\rfont-family: 'Roboto Mono', monospace; @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Indie+Flower');\rfont-family: 'Indie Flower', cursive; @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Pacifico');\rfont-family: 'Pacifico', cursive; @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Permanent+Marker');\rfont-family: 'Permanent Marker', cursive; Activité 2 - Ajouter des attributs et du style Il est maintenant temps de rendre notre site Web joli ! Pour réaliser cette activité, tu dois suivre les étapes suivantes :\nOuvre l\u0026rsquo;éditeur Web (cliquez sur le bouton \u0026ldquo;Essaie toi-même !\u0026rdquo; ci-dessous).\nAjoute un attribut id à l\u0026rsquo;une des tags de header. Par exemple, \u0026lt;header id=\u0026quot;page-title\u0026quot;\u0026gt;\nPasse à l\u0026rsquo;onglet CSS #page-title\r{\rstyling here...\r} Change la couleur du titre en ajoutant color: yellow; à l\u0026rsquo;intérieur des accolades\nModifie la police en ajoutant font-family: 'Roboto Mono', monospace; à l\u0026rsquo;intérieur des accolades et en ajoutant \u0026lt;span style=\u0026quot;color:purple\u0026quot;\u0026gt;@import url('https://fonts.googleapis.com/css?family=Roboto+Mono');\u0026lt;/span\u0026gt; en haut du fichier CSS.\nEssaie toi-même !\n"
},
{
	"uri": "/fr/python-turtle/activity-5/",
	"title": "Activité 5 - Dessiner un nid d&#39;abeilles",
	"tags": [],
	"description": "",
	"content": "\rC\u0026rsquo;est le final ! Créons le nid d\u0026rsquo;abeilles dans lequel Alex va vivre. Heureusement, un nid d\u0026rsquo;abeilles est simplement composé de 6 hexagones, alors combinons nos connaissances des fonctions et des boucles pour réaliser notre nid d\u0026rsquo;abeilles !\nDans cette activité, créez une nouvelle fonction appelée draw_honeycomb(). À l\u0026rsquo;intérieur du corps de la fonction, créez une boucle qui se répète 6 fois. À l\u0026rsquo;intérieur de la boucle, nous devons d\u0026rsquo;abord dessiner un hexagone en utilisant notre fonction draw_hexagon() que nous avons précédemment définie. Ensuite, déplacez la tortue pour qu\u0026rsquo;elle puisse dessiner l\u0026rsquo;hexagone suivant. Pour cela, après que la tortue ait dessiné chaque hexagone, nous devons lui dire d\u0026rsquo;avancer de 50 pixels puis de tourner à droite de 60 degrés.\nNotez que le dessin du nid d\u0026rsquo;abeilles peut prendre un certain temps. Vous pouvez changer la vitesse à laquelle la tortue dessine le nid d\u0026rsquo;abeilles en réglant la vitesse de la tortue à un nombre entre 1 et 10, 1 étant le plus lent et 10 le plus rapide. Placez ce code près de l\u0026rsquo;endroit où nous changeons la couleur de la tortue.\nturtle.speed(8) "
},
{
	"uri": "/fr/web-basics/media-elements/",
	"title": "Les éléments de média",
	"tags": [],
	"description": "",
	"content": "Ajouter un GIF GIF signifie Graphic Interchange Format (Format d\u0026rsquo;échange graphique), mais tout ce que tu dois savoir, c\u0026rsquo;est qu\u0026rsquo;il s\u0026rsquo;agit d\u0026rsquo;un autre type de fichier d\u0026rsquo;image. La seule différence est que le fichier comporte de nombreuses images. Lorsqu\u0026rsquo;elles sont affichées dans le navigateur, les images sont lues en séquence, comme les images d\u0026rsquo;un film. Pense-y comme à l\u0026rsquo;un de ces livres à feuillets qui donnent l\u0026rsquo;impression d\u0026rsquo;une image animée lorsque tu le feuilletes.\nAjouter une vidéo Outre le texte et les images, les vidéos sont l\u0026rsquo;un des éléments les plus courants qu\u0026rsquo;on aime ajouter aux sites Web. Les fichiers vidéo étant très volumineux, il est préférable d\u0026rsquo;utiliser un service pour télécharger et afficher la vidéo, tel que YouTube. Une fois téléchargée sur YouTube, comment faire pour qu\u0026rsquo;elle soit diffusée sur notre site web ? On utilise une tag spéciale appelée iframe.\nLes iframes affichent le HTML d\u0026rsquo;autres sites Web à l\u0026rsquo;intérieur du nôtre. C\u0026rsquo;est comme une fenêtre, où tu peux voir ce qui se passe à l\u0026rsquo;extérieur sur Internet à partir du site Web actuel. Ce processus s\u0026rsquo;appelle \u0026ldquo;embedding\u0026rdquo; (l\u0026rsquo;incorporation).\nPar exemple, la vidéo ci-dessous est une iframe provenant de l\u0026rsquo;Instragram de Benji :\nView this post on Instagram Push yourself to try new things! 🍉 I stick to the paleo diet most days (usually just the meat part) but on occasion I go for something crazy\nA post shared by Benji Escobari Marquez (@benjimite_thegudboi) on Aug 25, 2018 at 10:05pm PDT\nDe nombreux sites proposent des iframes à intégrer dans votre site Web. Par exemple, voici comment trouver le code iframe d\u0026rsquo;une vidéo YouTube :\nVoici un exemple d\u0026rsquo;iframe Copie le code suivant : \u0026lt;iframe width=\u0026quot;560\u0026quot; height=\u0026quot;315\u0026quot; src=\u0026quot;https://www.youtube.com/embed/lQsqEBSGdyc\u0026quot; frameborder=\u0026quot;0\u0026quot; allow=\u0026quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\u0026quot; allowfullscreen\u0026gt; \u0026lt;/iframe\u0026gt;\nColle-le dans ton CodePen et il ressemblera à ceci :\n"
},
{
	"uri": "/fr/python-turtle/part-2/",
	"title": "Partie 2 - Construire une Fleur Mandala",
	"tags": [],
	"description": "",
	"content": "\rBravo ! Vous avez terminé la construction d\u0026rsquo;un rayon de miel pour la ruche d\u0026rsquo;Alex, mais Alex a aussi besoin de pollen provenant des fleurs ! Ne serait-il pas agréable d\u0026rsquo;ajouter une fleur à l\u0026rsquo;image également ? Dans la partie 2, nous allons créer une fleur mandala !\n(Restez à l\u0026rsquo;écoute - nous vous montrerons à quoi ressemble une fleur mandala.)\n"
},
{
	"uri": "/fr/web-basics/activity-3/",
	"title": "Activité 3 - Ajout d&#39;un GIF de Nuvi",
	"tags": [],
	"description": "",
	"content": "Pour réaliser cette activité, tu dois suivre les étapes suivantes :\nSuive ce lien pour voir les GIFs disponibles Clique sur celui qui te plaît et sélectionnez \u0026ldquo;Embed\u0026rdquo; (intégrer). Copie le code de la boîte blanche en dessous de \u0026ldquo;GIF Embed Code\u0026rdquo; (Code d\u0026rsquo;intégration de GIF)\nColle le code n\u0026rsquo;importe où dans ta page, à condition qu\u0026rsquo;il se trouve entre les tags \u0026lt;body\u0026gt;.\nEssaie toi-même ! "
},
{
	"uri": "/fr/python-turtle/activity-6/",
	"title": "Activité 6 - Déplacer la tortue",
	"tags": [],
	"description": "",
	"content": "\rNotre première étape est de dessiner une ruche plus petite afin que nous puissions dessiner à la fois la ruche et la fleur à l\u0026rsquo;écran. Nous l\u0026rsquo;avons déjà fait pour vous - voyez-vous ce que nous avons changé pour dessiner une ruche plus petite ?\ndef draw_hexagon(): for i in range(6): turtle.forward(20) turtle.left(60) def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.forward(20) turtle.right(60) Ensuite, nous devons déplacer la tortue vers un nouvel emplacement pour dessiner la fleur (nous ne voulons pas dessiner la fleur par-dessus la ruche !). Pour ce faire, nous devons d\u0026rsquo;abord utiliser les méthodes suivantes :\nturtle.penup() turtle.goto(x,y) turtle.pendown() turtle.penup() dit à la tortue de lever son stylo pour ne pas dessiner pendant qu\u0026rsquo;elle se déplace. Ensuite, avec turtle.goto(x,y), nous indiquons à la tortue la position où se déplacer. Après cela, nous disons à la tortue de reposer son stylo avec turtle.pendown() pour qu\u0026rsquo;elle puisse recommencer à dessiner.\nConseil Les x et y dans la méthode turtle.goto() sont les coordonnées x et y de la tortue. Nous voulons changer les coordonnées x et y de la tortue de (0, 0), qui est le centre de l\u0026rsquo;image, à un endroit un peu plus éloigné pour que la fleur mandala ne couvre pas une partie de la ruche.\nPour compléter cette activité, déplacez la tortue à la position (100, 100) sur la toile. Cela la déplacera vers le coin supérieur droit.\n"
},
{
	"uri": "/fr/web-basics/activity-4/",
	"title": "Activité 4 - Essayez le formulaire et modifiez le style",
	"tags": [],
	"description": "",
	"content": "Ajouter d\u0026rsquo;un formulaire de contact Enfin, on va ajouter un formulaire de contact pour permettre aux gens de nous joindre s\u0026rsquo;ils sont intéressés par Benji.\nLa plupart des navigateurs ne prennent pas en charge l\u0026rsquo;envoi d\u0026rsquo;e-mails directement à partir du formulaire de contact, car c\u0026rsquo;est un moyen facile pour les fauteurs de troubles d\u0026rsquo;envoyer du spam aux utilisateurs. Le spam est un message non pertinent ou inapproprié envoyé sur Internet. Par conséquent, pour envoyer un formulaire, on utilisera un service gratuit appelé [FormSpree] (https://formspree.io/)\r. Si on veut que les messages du formulaire de contact soient envoyés à notre adresse électronique, on doit d\u0026rsquo;abord le confirmer avec FormSpree. Cette méthode de confirmation empêche les mauvais acteurs d\u0026rsquo;inscrire l\u0026rsquo;adresse électronique de n\u0026rsquo;importe qui dans un formulaire de contact et de spammer la victime.\nSee the Pen Contact Form by Deliana Escobari (@Sunny-Dee)\ron CodePen.\nActivité 4 Pour réaliser cette activité, tu dois suivre les étapes suivantes :\nClique sur le bouton Essaie toi-même ! pour ouvrir l\u0026rsquo;éditeur. Change la partie qui dit \u0026lt;YOUR EMAIL HERE!\u0026gt; à votre e-mail personnel si tu en as un, Si tu n\u0026rsquo;en as pas, utilise email@nuevofoundation.org. Si tu as un e-mail, essaie d\u0026rsquo;envoyer un message de test et voit si cela fonctionne. Ajoute du style au formulaire. Par exemple, essaie de changer la police ou la couleur du formulaire. Essaie toi-même !\n"
},
{
	"uri": "/fr/python-turtle/activity-7/",
	"title": "Activité 7 - Dessiner un chiffre 8",
	"tags": [],
	"description": "",
	"content": "\rSuper ! Maintenant, faisons un chiffre 8 comme première étape pour créer une fleur mandala ! Un chiffre 8 est simplement deux cercles opposés l\u0026rsquo;un à l\u0026rsquo;autre. Pour ce faire, nous pouvons utiliser la méthode turtle.circle(x), qui prend un entier x comme rayon du cercle. (Vous vous souvenez peut-être que 2 * rayon est la largeur du cercle.) Avoir le rayon comme argument signifie que nous pouvons décider de la taille du cercle.\nimport turtle turtle.circle(20) Dans cet exemple, le cercle fait 40 pixels de large et il est tracé dans le sens antihoraire. Si l\u0026rsquo;argument de turtle.circle() est négatif, alors le cercle est tracé dans le sens horaire et il est opposé à la version originale.\nEn utilisant ces informations, créez une nouvelle fonction appelée figure_8() qui dessine un chiffre 8.\n"
},
{
	"uri": "/fr/web-basics/activity-5/",
	"title": "Activité 5 - L&#39;exercice final",
	"tags": [],
	"description": "",
	"content": "En utilisant ce que tu as appris, essayez de créer un site Web qui te décrit ! Essaie d\u0026rsquo;utiliser tout ou un partie de ces éléments suivants :\nUne tag de header et de paragraphe Des polices de caractères différentes Des couleurs différentes Ajoute une image à ta site Une liste Intégre un GIF ou une vidéo Montre ton style !\n"
},
{
	"uri": "/fr/python-turtle/activity-8/",
	"title": "Activité 8 - Créer une fleur mandala",
	"tags": [],
	"description": "",
	"content": "\rNous avons terminé de créer notre premier chiffre 8 ! Nous pouvons maintenant utiliser la fonction figure_8() pour créer une fleur mandala ! Une fleur mandala est composée de nombreux chiffres 8 superposés à différents angles. Pour cela, nous devons utiliser un\u0026hellip; vous l\u0026rsquo;avez deviné, une boucle !\nCréez une nouvelle fonction appelée mandala_flower(). Dans la boucle, nous appellerons la fonction figure_8() que nous avons écrite précédemment pour créer un chiffre 8. Ensuite, faites tourner la tortue soit à gauche soit à droite d\u0026rsquo;un certain nombre de degrés (par exemple, 10 degrés). Répétez ces étapes plusieurs fois pour former une fleur mandala ; il est conseillé de créer une boucle qui se répète au moins 25 fois.\n"
},
{
	"uri": "/fr/web-basics/hosting/",
	"title": "Hébergement de votre site web",
	"tags": [],
	"description": "",
	"content": "Hébergez votre site sur Internet ! Maintenant que tu as créé votre site web personnel, hébergeons-le sur Internet pour que tout le monde puisse y accéder ! Pour faire ceci, tu aurasez besoin d\u0026rsquo;un compte GitHub. Si tu n\u0026rsquo;en as pas, crée-en un ici\r.\nUne fois que tu as créé votre compte et vérifié votre adresse électronique, tu arriveras sur cette page.\nMaintenant, tu dois créer un nouveau \u0026ldquo;repository\u0026rdquo; (dépôt) pour stocker le contenu de votre site ! Pense à un repository comme un dossier géant qui peut stocker beaucoup d\u0026rsquo;autres fichiers et dossiers pour un projet donné. Tu peux en créer un en sélectionnant Start a project (démarrer un projet) ou Create a new repository (Créer un nouveau dépôt). Deux choses très importantes à garder à l\u0026rsquo;esprit :\nNomme votre repo sans aucun espace. Mais tu peux utiliser des tirets ou des majuscules pour reproduire les espaces. Cochez la case Initialize this repository with a README (Initialiser ce dépôt avec un README). Félicitations ! Tu as créé ton premier repository ! Télécharge tous tes fichiers et dossiers qui appartiennent à ton site ici. Maintenant, lorsque tu vas sur ton page de profil, ton nouveau repository apparaîtra sous \u0026ldquo;Repositories\u0026rdquo;.\nUne fois que tu as téléchargé tout ce que tu as créé pour ton site, reviens au repository et sélectionne Paramètres.\nFais défiler l\u0026rsquo;écran jusqu\u0026rsquo;à la section \u0026ldquo;Pages GitHub\u0026rdquo;.\nChange la Source de \u0026lsquo;None\u0026rsquo; (aucun) à \u0026lsquo;main branch\u0026rsquo; (branche principale). Enregistres ces modifications et clique sur le lien en haut de la section Pages GitHub (dans l\u0026rsquo;exemple ci-dessous, ce serait https://exampleaccount1234.github.io/myFirstSite/)\r. Maintenant, n\u0026rsquo;importe qui peut accéder à ton site avec ce lien !\n"
},
{
	"uri": "/fr/python-turtle/activity-9/",
	"title": "Activité 9 - Colorer votre fleur mandala",
	"tags": [],
	"description": "",
	"content": "\nMaintenant que nous avons la forme d\u0026rsquo;une fleur mandala, il est temps de la colorier ! Nous allons toujours utiliser la méthode turtle.color() ; cependant, cette fois, nous allons utiliser une valeur RGB au lieu d\u0026rsquo;une valeur de couleur en chaîne, afin de produire une plus grande variété de couleurs.\nCouleurs RGB (Rouge-Vert-Bleu) À l\u0026rsquo;école primaire, vous vous souvenez peut-être qu\u0026rsquo;en mélangeant des couleurs, vous pouvez en produire de nouvelles. Par exemple, en combinant le rouge et le bleu, on obtient du violet. Nous pouvons également modifier la quantité de rouge et de bleu mélangés pour créer différentes nuances de violet. L\u0026rsquo;ordinateur fait quelque chose de similaire pour produire des couleurs. En combinant diverses intensités de rouge, de vert et de bleu, nous pouvons créer différentes couleurs, comme le bleu céleste, le jaune doré et le rose saumon. Cliquez ici\rpour voir les couleurs et leur forme hexadécimale correspondante.\nDans la méthode turtle.color(), nous pouvons spécifier trois arguments entiers correspondant à la quantité de rouge, de vert et de bleu à mélanger. Chaque entier doit être compris entre 0 et 255 inclus. Un exemple peut être turtle.color(30, 100, 238), qui produit une nuance de bleu foncé.\nMettez à jour votre fleur mandala pour utiliser une couleur de votre choix. N\u0026rsquo;hésitez pas à expérimenter avec différentes couleurs !\n"
},
{
	"uri": "/fr/web-basics/conclusion/",
	"title": "Au cas où tu te demanderais",
	"tags": [],
	"description": "",
	"content": "\nTu es peut-être inquiet/ète au sujet de Benji, mais on est heureux de te dire qu\u0026rsquo;il a trouvé son foyer grâce à un site Web comme celui que tu as construit. Benji est maintenant un bon chien à plein temps qui travaille dur sur ses tours pour gagner des friandises.\n"
},
{
	"uri": "/fr/python-turtle/activity-10/",
	"title": "Activité 10 - Randomiser la couleur des pétales de votre fleur mandala",
	"tags": [],
	"description": "",
	"content": "\nNous avons réussi à définir la couleur de la fleur mandala sur une valeur RGB. Maintenant, explorons le changement de couleur des pétales individuels de la fleur mandala !\nNous allons utiliser la bibliothèque random de python. La méthode random.randint() nous permet de choisir une valeur aléatoire pour chacune des valeurs rouge, vert ou bleu. Pour choisir une valeur qui est comprise entre 0 inclus et 256 exclus (en d\u0026rsquo;autres termes, entre 0 et 255 inclus), nous devons utiliser random.randint(0, 256).\nUtilisez random.randint(0, 256) trois fois pour produire trois valeurs aléatoires, et intégrez-les dans la méthode turtle.color(). Vous devriez maintenant pouvoir voir une fleur mandala multicolore ! C\u0026rsquo;est certainement une fleur dont Alex serait intéressé à collecter le nectar !\nFélicitations ! Vous avez aidé Alex à fabriquer un nid d\u0026rsquo;abeilles et une fleur ! Il peut maintenant vivre heureux dans sa ruche et faire beaucoup de miel ! Votre image finale devrait ressembler à ceci :\n"
},
{
	"uri": "/fr/python-turtle/activity-11/",
	"title": "activité 11 - À vous de jouer !",
	"tags": [],
	"description": "",
	"content": "S\u0026rsquo;il vous reste du temps, essayez de dessiner vos propres formes et motifs ! Rendez votre image intéressante en utilisant diverses formes et couleurs.\nCliquez sur le bouton ci-dessous pour ouvrir une nouvelle fenêtre Trinket vide et commencez votre création.\nCliquez ici\nAide, je suis bloqué ! Bloqué ? Consultez la clé de réponse\rpour l\u0026rsquo;activité sur laquelle vous êtes bloqué !\n"
},
{
	"uri": "/fr/python-turtle/answer-key/",
	"title": "Python Turtle - Clé de réponse",
	"tags": [],
	"description": "",
	"content": "Les 3 lignes ci-dessous sont nécessaires pour l\u0026rsquo;activité d\u0026rsquo;introduction et toutes les autres activités aussi.\nimport turtle turtle.color(\u0026#34;orange\u0026#34;) turtle.shape(\u0026#34;turtle\u0026#34;) Activité d\u0026rsquo;introduction turtle.color(\u0026#34;orange\u0026#34;) turtle.forward(50) Activité 1 turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) Activité 2 for i in range(4): turtle.forward(50) turtle.left(90) Activité 3 for i in range(6): turtle.forward(50) turtle.left(60) Activité 4 def draw_hexagon(): for i in range(6): turtle.forward(50) turtle.left(60) draw_hexagon() Activité 5 def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.forward(50) turtle.right(60) draw_honeycomb() Activité 6 turtle.penup() turtle.goto(300, 300) turtle.pendown() Activité 7 def figure_8(): turtle.circle(50) turtle.circle(-50) figure_8() Activité 8 def mandala_flower(): for i in range(35): figure_8() turtle.right(10) mandala_flower() Activité 9 def mandala_flower(): turtle.color(30, 100, 160) for i in range(35): figure_8() turtle.right(10) mandala_flower() Activité 10 def mandala_flower(): for i in range(35): turtle.color(random.randint(0, 256),random.randint(0, 256), random.randint(0, 256)) figure_8() turtle.right(10) mandala_flower() "
},
{
	"uri": "/fr/web-basics/answer-key/",
	"title": "Answer Key - Web Basics",
	"tags": [],
	"description": "",
	"content": "Special note: This curriculum allows students to be creative. The below is just an example of what they can do, please use your best judgement and ask for guidance if needed. The answer key provided here is fairly long because we are including snippets of full HTML for context.\nWhen a student clicks on the \u0026lsquo;Try it yourself!\u0026rsquo; it\u0026rsquo;ll open a new tab with some of the HTML code (and CSS code) already scaffolded.\nChallenge 1 Solution should have:\nHeader tags to add a title and the paragraph tags to write a paragraph about Benji. (optional) A list of Benji’s favorite treats: turkey, peanut butter, and string cheese \u0026lt;head\u0026gt; \u0026lt;!-- Challenge 1: Add title and header tags. --\u0026gt; \u0026lt;title\u0026gt;My exciting title!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- Content goes inside the body --\u0026gt; \u0026lt;!-- Challenge 1: Add a header, a paragraph. --\u0026gt; \u0026lt;h1\u0026gt;About benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Benji is a cute pup. His favorite sport is fetch. He likes long walks in the woods. Once he found a big stick.\u0026lt;/p\u0026gt; \u0026lt;!-- Challenge 1 (optional) Add a list. --\u0026gt; \u0026lt;h5\u0026gt; Benji\u0026#39;s favorite snacks \u0026lt;/h5\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Turkey\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Peanut Butter\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;String Cheese\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/body\u0026gt; Challenge 2 Solution should have:\nHTML: An id attribute to one of the header tag. For example, \u0026lt;header id=\u0026quot;page-title\u0026quot;\u0026gt; CSS: A different title color by adding color: yellow; inside the curly braces CSS: A different font by adding font-family: ‘Roboto Mono’, monospace; inside the curly braces and adding @import url(‘https://fonts.googleapis.com/css?family=Roboto+Mono\u0026rsquo;); at the top of the CSS tab \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Required meta tags --\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;This will show in the browser tab!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- Challenge 2: page-title id attribute --\u0026gt; \u0026lt;header id=\u0026#34;page-title\u0026#34;\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;My name is Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;I\u0026#39;m looking for my family.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Information:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m a Lab/Great Pyreneese mix\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m 1 year old\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I eat peanut butter you don\u0026#39;t want\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I will protect you from squirrels\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;I hope we get to play soon!\u0026lt;/h3\u0026gt; \u0026lt;img id=\u0026#34;dog\u0026#34; src=\u0026#34;https://aka.ms/Benji-the-dog\u0026#34;\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; @import url(\u0026#39;https://fonts.googleapis.com/css?family=Roboto+Mono\u0026#39;); #page-title { color: yellow; font-family: \u0026#39;Roboto Mono\u0026#39;, monospace; } Challenge 3 Nuevo Foundation GIFs: https://giphy.com/nuevofoundation\rClick on \u0026rsquo;embed\u0026rsquo; and copy the GIF embed code. Paste the GIF embed code anywhere in the \u0026lt;body\u0026gt; tag Example iframe code:\n\u0026lt;iframe src=\u0026#34;https://giphy.com/embed/oywrR92C9YBlrSuUKP\u0026#34; width=\u0026#34;480\u0026#34; height=\u0026#34;480\u0026#34; frameBorder=\u0026#34;0\u0026#34; class=\u0026#34;giphy-embed\u0026#34; allowFullScreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://giphy.com/gifs/nuevofoundation-rockstar-nuvi-oywrR92C9YBlrSuUKP\u0026#34;\u0026gt;via GIPHY\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; Integrated into sample \u0026lsquo;Try it yourself code!\u0026rsquo;:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Required meta tags --\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;This will show in the browser tab!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;My name is Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;I\u0026#39;m looking for my family.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Information:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m a Lab/Great Pyreneese mix\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m 1 year old\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I eat peanut butter you don\u0026#39;t want\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I will protect you from squirrels\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;I hope we get to play soon!\u0026lt;/h3\u0026gt; \u0026lt;!-- Challenge 3: Paste your code here! --\u0026gt; \u0026lt;iframe src=\u0026#34;https://giphy.com/embed/oywrR92C9YBlrSuUKP\u0026#34; width=\u0026#34;480\u0026#34; height=\u0026#34;480\u0026#34; frameBorder=\u0026#34;0\u0026#34; class=\u0026#34;giphy-embed\u0026#34; allowFullScreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://giphy.com/gifs/nuevofoundation-rockstar-nuvi-oywrR92C9YBlrSuUKP\u0026#34;\u0026gt;via GIPHY\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Challenge 4 The contact form is already added for the students. They will simply need to modify their email in the email section and then alter any styling they want!\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;This will show in the browser tab!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;My name is Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;I\u0026#39;m looking for my family.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Information:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m a Lab/Great Pyreneese mix\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m 1 year old\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I eat peanut butter you don\u0026#39;t want\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I will protect you from squirrels\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- Challenge 4: Contact Form --\u0026gt; \u0026lt;div class=\u0026#34;contact-section\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;Contact me\u0026lt;/h3\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;!-- Change the following line --\u0026gt; \u0026lt;form action=\u0026#34;https://formspree.io/email@nuevofoundation.com\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;name\u0026#34;\u0026gt;Name: \u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;name\u0026#34; placeholder=\u0026#34;Tell Benji who you are\u0026#34;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;label for=\u0026#34;message\u0026#34;\u0026gt;Your message: \u0026lt;/label\u0026gt; \u0026lt;textarea name=\u0026#34;message\u0026#34; placeholder=\u0026#34;Tell me about you\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Hi!\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;I hope we get to play soon!\u0026lt;/h3\u0026gt; \u0026lt;img id=\u0026#34;dog\u0026#34; src=\u0026#34;https://aka.ms/Benji-the-dog\u0026#34;\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; .contact-section { width: 250px; margin: 10px; padding: 10px; background-color: #FCFC69; /* Challenge 4: change the color here for styling */ } Challenge 5 No solution here - the students are creating their own sites based on what they learned. A few notes:\nEncourage students to use all of the different things they learned (ie. CSS, form, GIF) Encourage students to create something they would want to show other people. Have fun!\n"
},
{
	"uri": "/fr/python-turtle/",
	"title": "Python : Coder avec Turtle",
	"tags": [],
	"description": "Apprenez à dessiner sur un canevas avec Python et Turtle",
	"content": "Introduction Bienvenue à la Nouvelle Ruche ! Vous arrivez juste à temps pour aider notre nouvelle abeille Alex.\nAlex vit dans un pays nommé les Îles Tortues. Les habitants des Îles Tortues parlent une langue appelée Python. Nous allons utiliser Python pour enseigner à Alex comment vivre dans une ruche.. Prêt pour le défi ? Dans ce tutoriel, nous apprendrons à utiliser le langage Python pour aider Alex à devenir une abeille bien occupée !\nTable des Matières Rubriques\rUtilisation de Trinket Les bases - Dessiner une ligne colorée Activité 1 - Dessiner un carré Activité 2 - Simplifier le code avec des boucles Activité 3 - Dessiner un hexagone Activité 4 - Simplifier le code avec des fonctions Activité 5 - Dessiner un nid d'abeilles Partie 2 - Construire une Fleur Mandala Activité 6 - Déplacer la tortue Activité 7 - Dessiner un chiffre 8 Activité 8 - Créer une fleur mandala Activité 9 - Colorer votre fleur mandala Activité 10 - Randomiser la couleur des pétales de votre fleur mandala activité 11 - À vous de jouer ! "
},
{
	"uri": "/fr/web-basics/",
	"title": "HTML &amp; CSS: Les bases du Web",
	"tags": [],
	"description": "Un guide d&#39;introduction sur la façon de créer un site web simple à partir de zéro",
	"content": "Construisons un site web ! Benji est né à Houston, au Texas. Peu après la naissance de Benji, un ouragan dévastateur a frappé Houston. L\u0026rsquo;ouragan Harvey a déplacé plus de 30 000 personnes, dont la famille de Benji. Benji ne peut pas parler la langue humain donc on ne connaït pas les détails. Tout ce qu\u0026rsquo;on sait, c\u0026rsquo;est que Benji cherche un foyer et s\u0026rsquo;engage à être un bon chien où qu\u0026rsquo;il aille. Créons un site Web pour partager ses informations et lui trouver un foyer pour toujours !\nTable des matières Section\rLes bases Mise en place Activité 1 - Se familiariser avec l'éditeur en ligne Les attributs de HTML Activité 2 - CSS Les éléments de média Activité 3 - Ajout d'un GIF de Nuvi Activité 4 - Essayez le formulaire et modifiez le style Activité 5 - L'exercice final Hébergement de votre site web Au cas où tu te demanderais "
},
{
	"uri": "/fr/",
	"title": "Ateliers de Nuevo Foundation",
	"tags": [],
	"description": "",
	"content": "Projets d\u0026rsquo;Ateliers HTML \u0026amp; CSS: Les bases du Web\rUn guide d\u0026#39;introduction sur la façon de créer un site web simple à partir de zéro\nPython : Coder avec Turtle\rApprenez à dessiner sur un canevas avec Python et Turtle\n"
},
{
	"uri": "/fr/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/fr/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]