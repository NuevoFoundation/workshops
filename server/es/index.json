[
{
	"uri": "/es/java-basics/activity-0/",
	"title": "Usando Repl.It",
	"tags": [],
	"description": "",
	"content": "Usando Replit Hoy estaremos usando Replit para aprender como programar en Java. Aqu√≠ est√° un ejemplo del portal interactivo que estaremos usando hoy:\nLanza Replit\nAntes de empezar, primero vamos a repasar y entender c√≥mo funciona el portal. El archivo Main.java tiene el codigo, o instrucciones que ejecutar√° la computadora. Al presionar el bot√≥n de run, le dir√°s a la computadora que ejecute las instrucciones que est√°n en el codigo. Los resultados de la ejecuci√≥n del codigo se pueden ber al final de la pantalla blanca, debajo de la pesta√±a de result.\nPresiona el bot√≥n de run. Si puedes ver el resultado Let\u0026rsquo;s learn Java!, est√°s listo. Empecemos.\n"
},
{
	"uri": "/es/secret-messages/using-repl-it/",
	"title": "Usando Repl.It",
	"tags": [],
	"description": "",
	"content": "\nPara ayudar a los reyes, vamos a crear un programa en el lenguaje llamado C++, donde podamos ingresar un mensaje, y el programa lo modifique de una manera determinada para hacerlo secreto.\nUsando Replit Vamos a utilizar la herramienta Replit, con la cual vamos a poder correr nuestro c√≥digos de C++. Este es un ejemplo de una ventana interactiva como las que usaremos durante todo el tutorial:\nLanza Replit\nAntes de empezar, entendamos como funciona esta ventana. El programa main.cpp contiene las instrucciones que la computadora va a ejecutar o \u0026ldquo;correr\u0026rdquo; (Run en ingl√©s). Al presionar el bot√≥n Run, le est√°s diciendo a la computadora que ejecute las instrucciones que est√°n en el programa. Los resultados del programa los puedes ver en la pantalla negra que est√° debajo, en la pesta√±a console.\nAhora explicaremos el c√≥digo que tenemos en el archivo main.cpp\nBibliotecas (Library) e instrucciones \u0026ldquo;#include\u0026rdquo; Mira el inicio del c√≥digo. Ah√≠ puedes ver la siguiente l√≠nea:\n#include \u0026lt;iostream\u0026gt; Esta instrucci√≥n nos permite agregar la biblioteca iostream a nuestro programa. Una biblioteca es un lugar donde se agrupan funciones de C++ (o instrucciones) relacionadas, a un tema en particular. Hay bibliotecas para dibujar, otras para conectarse a internet, otras para hacer operaciones matem√°ticas. iostream es una biblioteca b√°sica para ingresar datos a nuestro programa y generar mensajes de salida.\nComentarios (Comments) La l√≠nea gris que empieza con // se llama comentario. Estas son notas en el c√≥digo que nos ayudan a explicar qu√© est√° pasando. Como los comentarios son ignorados por la computadora, suelen ser usados para que otros puedan entender lo que nuestro c√≥digo est√° haciendo.\nNamespace std using namespace std; Esta linea nos da acceso a algunas palabras reservadas de C++. Una palabra reservada es una palabra que tiene un significado espec√≠fico en el lenguaje de programaci√≥n, por lo que no podemos usar esa misma palabra para identificar o nombrar otra cosa. En este caso, estamos usando las palabras reservadas std, que quiere decir las palabras reservadas est√°ndar, que son las que casi todo programa usa, por lo que es importante incluir esta instrucci√≥n. using indica que estamos usando el namespace (el espacio en el que se guardan las palabras reservadas) llamado std (est√°ndar).\nFunci√≥n Main (funci√≥n principal) int main(){\rreturn 0;\r} main es la funci√≥n que tiene que estar siempre en los programas de C++ y el punto de entrada a nuestro programa. Adentro de sus llaves { \u0026hellip; } estar√° el c√≥digo que se correr√° al poner run.\nreturn 0; indica el fin exitoso del programa. Si escribi√©semos instrucciones despu√©s de esta l√≠nea, el programa no las ejecutar√≠a.\nToda instrucci√≥n de C++ debe terminar con un punto y coma ;\r"
},
{
	"uri": "/es/python-turtle/using-trinket/",
	"title": "Usando Trinket",
	"tags": [],
	"description": "",
	"content": "Para que Alex pueda vivir en una colmena, necesita aprender a construir un panal. Vamos a usar una biblioteca de Python que se llama turtle (tortuga) para dibujar el panal.\nUsando Trinket Vamos a utilizar la herramienta Trinket para jugar con nuestros c√≥digos Python. Este es un ejemplo de una ventana interactiva como las que usaremos en todo el tutorial:\nAntes de empezar, entendamos como funciona esta ventana. El programa main.py contiene las intrucciones que la computadora va a ejecutar o \u0026ldquo;correr\u0026rdquo; (Run en ingl√©s). Al presionar el bot√≥n Run, le est√°s diciendo a la computadora que ejecute las instrucciones que est√°n en el programa. Los resultados del programa los puedes ver en la pantalla blanca que est√° debajo, en la pesta√±a result\nAhora explicaremos parte del c√≥digo que tenemos en el archivo main.py\nBibliotecas (Library) e instrucciones \u0026ldquo;import\u0026rdquo; Mira el inicio del c√≥digo. Ah√≠ puedes ver la siguiente l√≠nea:\nimport turtle Esta instrucci√≥n nos permite toda la funcionalidad para dibujar que proporciona la biblioteca turtle. Una biblioteca es el lugar donde se agrupan en Python las instrucciones relacionadas a un tema en particular. Hay bibliotecas para hacer documentos, otras para conectarse a internet, otras para hacer operaciones matem√°ticas. turtle es una biblioteca para dibujar y que podemos controlar a trav√©s de las instrucciones que le demos.\nComentarios (Comments) La l√≠nea gris que empieza con # se llama comentario. Estos son notas en el c√≥digo que nos ayudan a explicar qu√© est√° pasando. Como los comentarios son ignorados por la computadora, suelen ser usados para que otros puedan entender lo que nuestro c√≥digo est√° haciendo.\n"
},
{
	"uri": "/es/javascript-blocks-earsketch/music-basics/",
	"title": "Los b√°sicos de la m√∫sica",
	"tags": [],
	"description": "",
	"content": "Lo b√°sico primero. Algunas cosas sobre la m√∫sica. ¬øQu√© es la m√∫sica? La m√∫sica\res la organizaci√≥n cronol√≥gica de sonidos; es decir, hacer ciertos sonidos en ciertos momentos, lo que tiene sentido mel√≥dico, r√≠tmico y arm√≥nico. El primer y m√°s b√°sico concepto es mantener los sonidos \u0026ldquo;en tiempo\u0026rdquo;. Esto nos lleva a algunos de los primeros conceptos musicales: ritmo, duraci√≥n y tempo.\nRitmo es esencialmente patrones repetidos de sonidos largos o cortos, acentuados o no acentuados, o silencios que se ajustan al ritmo principal. Duraci√≥n es la duraci√≥n de las notas o sonidos o silencios que facilitan el ritmo. Tempo es la velocidad a la que se reproduce una pieza de m√∫sica. "
},
{
	"uri": "/es/security-phishing/phishing-basics/",
	"title": "Conceptos b√°sicos de phishing",
	"tags": [],
	"description": "",
	"content": "¬°Nuestra agente secreta Alice le explica a Bob sobre el phishing!!!\n¬øQu√© es el phishing? Al igual que cuando se pesca, uno usa un carnada para atrapar peces en una ca√±a de pescar, los hackers maliciosos usan diferentes tipos de carnadas para robar o atrapar informaci√≥n personal de personas desprevenidas.\nEl phishing es un tipo de ataque de ingenier√≠a social que se utiliza para robar datos confidenciales. Como por ejemplo: credenciales de inicio de sesi√≥n, detalles bancarios y n√∫meros tarjetas de cr√©dito.\nEsto ocurre cuando un hacker, haci√©ndose pasar por una alguien mas o por una entidad de confianza, atrae a un individuo usando un correo electr√≥nico, un mensaje de texto o un tel√©fono.\nLuego, se enga√±a al destinatario para que haga click en un enlace malicioso, lo que puede conducir a la instalaci√≥n de un software malicioso o a la revelaci√≥n de datos confidenciales.\n¬øQu√© sali√≥ mal? Bob fue incitado por un correo electr√≥nico de un hacker llamado Eve que le ofrec√≠a un viaje gratis a Bahamas para robar su informaci√≥n personal.\nMiremos mas cerca. ¬°Alice ayuda a Bob a entender las banderas rojas üö© (en ingles red flags) en su correo electr√≥nico echando un vistazo con mas detalle!\nHay ocasiones en las que necesitas proporcionar informaci√≥n personal a un destinatario de confianza.\nSin embargo, proporcionar informaci√≥n personal tambi√©n puede conducir al phishing. En este taller entenderemos c√≥mo diferenciar entre un correo electr√≥nico leg√≠timo y un correo electr√≥nico fraudulento.\n"
},
{
	"uri": "/es/security/meeting-alice-bob-eve/",
	"title": "Conociendo a Alicia, Bob y Eva",
	"tags": [],
	"description": "",
	"content": "\nConoce a nuestro amigo Bob. Bob tiene un secreto que no quiere compartir, le gustar√≠a mantenerlo a salvo. Tiene el secreto guardado en un lugar seguro. Solo Bob tiene la clave de la cerradura para asegurarse de que nadie m√°s que √©l pueda llegar a su secreto.\nConoce a nuestra no tan buena amiga Eva. Eva quiere acceder al secreto de Bob.\nEva se da cuenta de que para llegar al secreto de Bob, primero debe pasar la cerradura. Eva no puede romper la cerradura, pero tal vez pueda descubrir la clave. Despu√©s de espiar a Bob por un tiempo, Eva se da cuenta de que Bob realmente ama a su perro, Max. Esto le da a Eva una idea.\nEva piensa que, como Bob ama a su mascota tanto, tal vez decidio hacerlo la clave de su cerradura. Decide intentarlo y ¬°viol√†! Eva pudo abrir la cerradura de Bob y ver su secreto.\n¬°Esto no es bueno para Bob! Quiere saber qu√© podr√≠a haber hecho diferente para que Eva no pudiera superar su cerradura tan f√°cilmente, pero no tiene ni idea como empezar.\nAfortunadamente para Bob, su buena amiga, agente secreta Alicia, llega para ayudarle con su situaci√≥n. Veamos qu√© tiene que decir Alicia\u0026hellip;\n"
},
{
	"uri": "/es/csharp-guess-the-word/starting-up/",
	"title": "Empezando",
	"tags": [],
	"description": "",
	"content": "Empezando La meta de la actividad de hoy es aprender C# y usar tus nuevas habilidades a crear un juego de Adivina la palabra. Empezamos a configurar el juego.\nAbre tu browser favorito (como Edge, Firefox, Google Chrome, Internet Explorer), y navega a https://aka.ms/nuevoguesstheword\r. Tu pantalla debe aparecer as√≠:\nVamos a ignorar unos de los detalles en esta pantalla, pero examinemos unos elementos b√°sicos que se ven aqu√≠. El archivo principal main.cs contiene c√≥digo, o instrucciones para la computadora. Presionando el bot√≥n ‚Äòrun‚Äô, t√∫ le dices a la computadora que debe ejecutar las instrucciones en el c√≥digo. Cualquier resultado de ejecutar el c√≥digo se ver√° al lado derecho, llamado la consola.\nSi presionas ‚Äòrun‚Äô en este momento, ¬°ver√°s que nada pasa! Tu trabajo es ayudarle a Nuvi terminar el c√≥digo de este juego.\nPresiona el bot√≥n ‚Äòfork‚Äô para crear una copia tuya de este c√≥digo. Har√°s estas actividades sol@, pero siempre har√° ayuda disponible si la necesitas.\n"
},
{
	"uri": "/es/python-guess-number/generate-random-number/",
	"title": "Generar un n√∫mero aleatorio",
	"tags": [],
	"description": "",
	"content": "Python incluye una biblioteca llamada random que te ayuda a generar n√∫meros aleatorios. Puedes usarla en tu programa escribiendo import random en la parte superior de tu programa y usando la funci√≥n randint para generar un n√∫mero dentro de un rango.\nEsto generar√≠a un n√∫mero aleatorio entre 1 y 10.\nrandom.randint(1,10) ¬°Intenta ejecutar el c√≥digo de abajo varias veces para ver qu√© obtienes!\nTambi√©n puedes experimentar cambiando el rango de estos n√∫meros aleatorios.\n"
},
{
	"uri": "/es/adventure/time-to-create/",
	"title": "Hora de crear",
	"tags": [],
	"description": "",
	"content": "¬°Es hora de empezar a crear nuestras propias historias con todas las habilidades que hemos aprendido hoy! ¬°La pregunta que estamos abordando hoy es c√≥mo involucrar a la audiencia con la historia, y la respuesta es con c√≥digo!\n"
},
{
	"uri": "/es/adafruit/the-components/",
	"title": "Los Componentes",
	"tags": [],
	"description": "",
	"content": "Los componentes que utilizaremos para el proyecto se listan a continuaci√≥n. Aseg√∫rate de tener todo esto antes de comenzar:\nUna Adafruit Un cable Micro USB a USB Dos cables de pinza cocodrilo de cualquier color Dos naranjas "
},
{
	"uri": "/es/web-basics/basics/",
	"title": "Conceptos B√°sicos",
	"tags": [],
	"description": "",
	"content": "¬øQu√© es un sitio web? Un sitio web es solo una p√°gina que se puede encontrar en Internet. Se ve a trav√©s de un navegador cuando introduces la direcci√≥n (o nombre √∫nico) en la barra de direcciones.\nPartes de un sitio web Existen varios elementos comunes para un sitio web incluyendo barras de navegaci√≥n, pie de p√°gina, barras de b√∫squeda y formularios de contacto.\nDise√±o de una p√°gina web El primer para crear una p√°gina web es decidir qu√© elementos queremos y c√≥mo queremos que se vean. Este proceso se llama esquema de dise√±o y es un esquema aproximado de c√≥mo las diferentes piezas van a quedar todas juntas. Existen muchas herramientas para ayudarte a hacer esto, pero una de las m√°s antiguas y populares son el papel y l√°piz de toda la vida. Aqu√≠ puedes ver como lo hago yo:\nEl boceto es solo una gu√≠a. Puedes cambiar cosas seg√∫n vay√°moslas poniendo todas juntas. Una buena regla de oro es siempre empezar lo m√°s simple posible.\n"
},
{
	"uri": "/es/python-earsketch/music-basics/",
	"title": "M√∫sica Basica",
	"tags": [],
	"description": "M√∫sica Basica",
	"content": "Lo b√°sico primero. Algunas cosas sobre la m√∫sica.\n¬øQu√© es la m√∫sica? La m√∫sica\res la organizaci√≥n cronol√≥gica de los sonidos; es decir, hacer ciertos sonidos en ciertos momentos, que hacen sentido mel√≥dico, r√≠tmico y arm√≥nico. El primer concepto, m√°s b√°sico, es mantener los sonidos \u0026ldquo;en el tiempo\u0026rdquo;. Esto nos lleva a algunos de los primeros conceptos musicales: beat, ritmo, duraci√≥n y tempo.\nEl beat es el pulso regular que proporciona una l√≠nea de tiempo (o timeline) para que el ritmo se ancle a s√≠ mismo. El ritmo es esencialmente patrones repetidos de sonidos o silencios largos o cortos, estresados o sin tensi√≥n que encajan en el beat principal. La duraci√≥n es la longitud de notas o sonidos o silencios que facilitan el ritmo. El tempo es la velocidad a la que se reproduce una pieza de m√∫sica. "
},
{
	"uri": "/es/java-basics/activity-1/",
	"title": "Imprimir Declaraciones y A√±adir Comentarios",
	"tags": [],
	"description": "Gu√≠a introductoria al m√©todo println() y comentarios en Java.",
	"content": "1. Deja que el programa hable! Vamos a escribir un programa que diga Hello World luego de escribir la siguiente l√≠nea de c√≥digo System.out.print(\u0026quot;Hello World\u0026quot;);\nEl programa imprimir√° lo que escribas entre los par√©ntesis de System.out.print(. Cada l√≠nea de c√≥digo termina con ;.\nA√±ada m√°s declaraciones para imprimir n√∫meros, escribiendo los n√∫meros entre los par√©ntesis (i.e. System.out.print(2020)) o cualquier s√≠mbolo, escribiendo el s√≠mbolo entre 2 comillas simples ' (i.e. System.out.print('@')).\nLanza Replit\nTe fijaste que todas las declaraciones que escribistes fueron impreses en una l√≠nea? Aveces queremos a√±adir una l√≠nea entre medio cuando escribimos. Para lograr eso, tenemos que usar el siguiente c√≥digo System.out.println();\n(Nota: escribimos println en vez de print para crear una l√≠nea nueva)\nA√±ada una l√≠nea nueva a todas las declaraciones que hemos hecho hasta ahora.\nC√≥mo imprimir multiples s√≠mbolos en una l√≠nea de c√≥digo? Apredimos que para imprimir s√≠mbolos, los escribimos entre 2 comillas sencillas ', pero c√≥mo podemos imprimir multiples s√≠mbolos en una l√≠nea?\nPara lograrlo, ponemos escribir los multiples s√≠mbolos entre 2 comillas dobles \u0026quot; (i.e. System.out.print(\u0026quot;@ , - h A #\u0026quot;);)\n!! Importante !! Aveces no se puede escribir caracteres entre las comillas dobles \u0026quot; \u0026quot; Cuando quieres poner caracteres entre medio de \u0026quot; \u0026quot; en una declaraci√≥n de imprimir, es f√°cil confundir a la computadora en cuanto a qu√© caracteres deber√≠a imprimir.\nPor ejemplo, c√≥mo le dejas saber a la computadora que debe imprimir \u0026quot;?\nSi escribes System.out.print(\u0026quot;\u0026quot;\u0026quot;);, causar√°s un error, por que la computadora no puede identificar d√≥nde acaba el texto.\nHay ciertos caracteres que necesitan ser escaped a√±adiendo \\ en frente de ellos.\nSystem.out.print(\u0026quot;\\\u0026quot;\u0026quot;); // esto imprime \u0026quot;\rOtros caracteres que necesitad ser escaped en Java son: ', \u0026quot;, \\.\n2. Imprima un B√∫ho Vamos a conocer el primer amigo de üê• Patrick, el b√∫ho Minerva ü¶â!\nCon lo que has aprendido, re crea la im√°gen del b√∫ho con solo 4 l√≠neas de c√≥digo (Art credit: asciiart.eu/animals/birds-land)\n, ___ / ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ \\\r`\\/{o,o} \u0026lt; Hola, yo soy Minerva. Amiga de Patrick |\r/ /) ) \\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ /\r/,--\u0026quot;-\u0026quot;- Lanza Replit\nTuve un error Main.java:4: error: reached end of file while parsing\rSi llegas a un error como este, es posible que se te haya olvidado escape caraceteres como \u0026quot; o \\.\nRepasa el tercer tip para ver como escape caracteres en el m√©todo de print.\n3. Make a Comment Cuando creamos un programa de Java, podemos dejar anotcaciones y comentarios en una l√≠nea a√±adiendo // o para multiples l√≠neas usando /* y */ (Note: Las instrucciones en las actividades previas estaban escritas como comentarios).\nA√±adir comentarios no afecta tu programa de ninguna manera. Puedes a√±adir cualquier cantidad de comentarios en tu programa.\n// ejemplo de comentario en una l√≠nea\r/* ejemplo\r* de comentarios\r* en multiples l√≠neas */\r"
},
{
	"uri": "/es/secret-messages/activity-1/",
	"title": "Actividad 1 - Output",
	"tags": [],
	"description": "",
	"content": "Para que nuestro programa cree mensajes secretos, primero debemos ingresar un mensaje.\nLanza Replit\nPara eso, vamos a comenzar diciendole a la computadora que muestre en la consola para quien es ese mensaje. Esta es la instrucci√≥n que necesitaremos:\ncout \u0026lt;\u0026lt; \u0026#34;Hola programador!\u0026#34; \u0026lt;\u0026lt; endl; Intentemos entender esta l√≠nea de c√≥digo en m√°s detalle.\nCadenas (Strings) Todo lo que veas entre comillas \u0026ldquo;\u0026rdquo; se llama cadena o string. Un string es solo una secuencia de caracteres, es decir, de n√∫meros, letras o s√≠mbolos.\nEn el c√≥digo que escribimos arriba \u0026quot;Hola programador!\u0026quot; es un string. Otros ejemplos de string pueden ser \u0026quot;123\u0026quot;, \u0026quot;abc!\u0026quot; o \u0026quot;Hola\u0026quot;. ¬°Ojo!, 123, abc! y buen d√≠a NO son strings ¬°porque no tienen comillas!\nImprimir en consola cout lo usamos para mostrar algo en la consola. En este caso, si apretamos Run, mostrar√° Hola programador!, ya que es el string que le indicamos. Siempre la instrucci√≥n cout est√° acompa√±ado de los signos \u0026lt;\u0026lt;. Luego del string, los volvemos a poner acompa√±ado de endl, que significa que es el fin de la linea, por lo que la computadora va a hacer un salto de linea (enter) en la consola.\nCopia la l√≠nea de arriba, p√©gala en el archivo main.cpp que ten√≠amos al inicio, y dale click en Run. Prueba cambiar el contenido del string. Por ejemplo \u0026quot;Hola mundo\u0026quot;, \u0026quot;Para la Reina\u0026quot;, etc.\n¬°AYUDA! Si despu√©s de presionar el bot√≥n Run, est√° la palabra error en rojo en la pesta√±a console, es porque tienes errores en el c√≥digo. P√≠dele ayuda al instructor para revisar tu c√≥digo.\nMientas tanto puedes revisar lo siguiente:\nNo uses letras may√∫sculas. Aseg√∫rate que las l√≠neas que escribiste tengan al final un punto y coma ;. "
},
{
	"uri": "/es/python-turtle/the-basics/",
	"title": "Los basicos - Dibujando una l√≠nea de color",
	"tags": [],
	"description": "",
	"content": "Ante de que Alex pueda aprender a crear una colmena, √©l debe aprender primero c√≥mo dibujar una l√≠nea. Haremos esto en dos partes.\nPrimero, necesitamos decirle a la tortuga qu√© color queremos usar para dibujar la l√≠nea. Para hacerlo de color naranja (orange in ingl√©s) esta es la instrucci√≥n:\nturtle.color(\u0026#34;orange\u0026#34;) Intentemos entender esta l√≠nea de c√≥digo en m√°s detalle.\nCadenas (Strings) Todo lo que veas entre comillas \u0026ldquo;\u0026rdquo; se llama cadena o string. Un string es solo una secuencia de caracteres, es decir, de n√∫meros, letras o s√≠mbolos.\nEn el c√≥digo que escribimos arriba \u0026quot;orange\u0026quot; es un string. Otros ejemplos de string pueden ser \u0026quot;123\u0026quot;, \u0026quot;abc!\u0026quot; o \u0026quot;green\u0026quot;. ¬°Ojo!, 123, abc! and green NO son strings ¬°porque no tienen comillas!arks!\nM√©todos turtle.color() es un m√©todo. Usamos los m√©todos para hacer que la tortuga haga ciertas acciones. En este caso, turtle.color() est√° cambiando el color con el que va a dibujar. Nosotros le dijimos que cambiara su color original por naranja (orange) cuando mandamos el string \u0026quot;orange\u0026quot; como un argument.\nArgumentos Los argumentos son los valores que le pasamos a los m√©todos. En nuestro ejemplo, turtle.color() necesita un argumento que represente el nombre del color que va a usar la tortuga, as√≠ que pasamos \u0026quot;orange\u0026quot; como un argument al m√©todo. Podr√≠amos usar otro color pero tiene que ser un color que el m√©todo entienda. Los colores que reconoce son \u0026quot;red\u0026quot;, \u0026quot;orange\u0026quot;, \u0026quot;yellow\u0026quot;, \u0026quot;green\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;purple\u0026quot;, \u0026quot;black\u0026quot;, \u0026quot;pink\u0026quot;, y \u0026quot;gray\u0026quot;. Si mandamos alg√∫n color diferente, el m√©todo no lo reconocer√° y usar√° el color que ten√≠a al inicio: negro.\nAhora que ya escogimos el color que queremos, ¬°ya podemos dibujar la l√≠nea! Para dibujar la l√≠nea tenemos dos m√©todos que podemos usar:\nturtle.forward(50) turtle.backward(50) turtle.forward(50) har√° que la tortuga se mueva hacia adelante 50 pixeles y dibujar√° la l√≠nea en esa direcci√≥n mientras que turtle.backward(50) har√° lo mismo pero hacia atr√°s.\nPixeles Una imagen est√° compuesta por miles o millones de pixeles. Un pixel es una unidad de medida para las imagenes digitales. Imag√≠nalo como cada uno de los peque√±os puntos de los que est√° hecha una imagen.\nEnteros (Integers) Un integer es s√≥lo un n√∫mero, ya sea negativo o positivo. En nuestro ejemplo, tanto turtle.forward() como turtle.backward() necesitan un entero como argumento. Cuando escogimos el color necesitabamos un string pero esta vez necesitamos un entero. Esto es porque el argumento representa el n√∫mero de pixeles que se mover√° la tortuga en la direcci√≥n que le indicamos. No tendr√≠a sentido decirle que se mueva \u0026quot;orange\u0026quot; pixeles, ¬øo s√≠?\nPara que la tortuga se mueva hacia adelante el c√≥digo deber√≠a verse as√≠:\nimport turtle turtle.color(\u0026#34;orange\u0026#34;) turtle.forward(50) Copia las l√≠neas de arriba, p√©galas en el archivo main.py que ten√≠amos al inicio, y dale click en Run.\nComo ejercicio, trata de entender que hace la siguiente l√≠nea de c√≥digo. Despu√©s p√©gala al final del archivo main.py y vu√©lvelo a correr.\nturtle.shape(\u0026#34;turtle\u0026#34;) ¬°AYUDA! No se ve nada en la pantalla Si, despu√©s de presionar el bot√≥n Run, no logras ver nada en la pesta√±a result, revisa si hay una x roja en la pesta√±a console. Si la ves, es porque tienes errores en el c√≥digo. P√≠dele ayuda al instructor par revisar tu c√≥digo.\nMientas tanto puedes revisar lo siguiente:\nNo uses letras may√∫sculas. Aseg√∫rate que ninguna l√≠nea que hayas escrito tenga espacios al inicio. Revisa que el color que hayas escogido est√© entre comillas y que est√© entre os par√©ntesis del commando turtle.color(). "
},
{
	"uri": "/es/javascript-blocks-earsketch/getting-started-earsketch/",
	"title": "Empezando con Earsketch",
	"tags": [],
	"description": "",
	"content": "EarSketch\res un entorno de programaci√≥n educativo gratuito desarrollado en el Instituto de Tecnolog√≠a de Georgia. Hoy vamos a componer m√∫sica usando EarSketch.\nPara hacer m√∫sica, haz clic en el bot√≥n de abajo para abrir Earsketch en una nueva pesta√±a. Lanzar Earsketch\nDespu√©s de abrir la p√°gina web, es posible que veas la siguiente pantalla de bienvenida. Haz clic en \u0026ldquo;saltar\u0026rdquo; para omitir el recorrido - repasaremos todos los pasos necesarios a continuaci√≥n. Ahora, empecemos. Haz clic en el icono Scripts en la barra de men√∫ de la izquierda y selecciona + Nuevo Script. Ingresa myjam (o cualquier otro nombre que desees) como el nombre de tu script, y cambia el lenguaje de programaci√≥n a JavaScript. Haz clic en el bot√≥n Crear para crear tu script (el archivo donde se colocar√° tu c√≥digo). Finalmente, haz clic en el icono de engranaje y selecciona \u0026ldquo;Modo de bloques\u0026rdquo;. Tu pantalla deber√≠a verse as√≠. Recomendado para profesores - Resumen de EarSketch Por favor, echa un vistazo al resumen de EarSketch antes de empezar con la clase. Es importante saber c√≥mo navegar hacia adelante y hacia atr√°s en la interfaz de usuario.\nEl Administrador de contenido en el lado izquierdo de la pantalla es tu base de operaciones para navegar a trav√©s de todo lo que EarSketch tiene para ofrecer.\nEl primer elemento de la barra de navegaci√≥n es la colecci√≥n Sonidos. Es la ubicaci√≥n central para todos los sonidos precargados que ofrece Earsketch. En el navegador de sonidos, puedes filtrar qu√© sonidos aparecen seg√∫n los artistas, el g√©nero o los instrumentos. El siguiente icono en la barra de navegaci√≥n es el panel de Scripts. Aqu√≠ es donde escribiremos nuestro c√≥digo. Los √∫ltimos iconos en la barra de navegaci√≥n es el panel de Navegador de API. ¬°Una Interfaz de Programaci√≥n de Aplicaciones o API es un conjunto de c√≥digo que est√° listo para que lo uses de inmediato! Cuando lo abres, se proporciona una explicaci√≥n detallada de cada API. En el lado derecho, ver√°s la gu√≠a de Curr√≠culo. Si quieres saber m√°s sobre EarSketch, puedes explorar la secci√≥n que aparece en el lado derecho de la ventana cuando haces clic en ella. Saltaremos esta secci√≥n.\n"
},
{
	"uri": "/es/security/password-basics/",
	"title": "Conceptos B√°sicos de la Contrase√±a",
	"tags": [],
	"description": "",
	"content": "¬°Nuestra agente secreta Alicia resuelve el caso explic√°ndole a Bob sobre las contrase√±as!\n¬øQu√© es una Contrase√±a? Las contrase√±as son la clave para la cerradura de su mundo virtual. Al igual que su secreto se mantiene a salvo en un lugar seguro usando una llave y un candado, su informaci√≥n personal en Internet est√° protegida por su contrase√±a y nombre de usuario.\nEl lugar seguro solamente es tan seguro como la llave para el candado de la puerta. Necesitamos contrase√±as m√°s seguras para proteger nuestra identidad e informacion en linea de personas malas conocidas como Hackers.\n¬øQu√© Sali√≥ Mal? Contrase√±as necesitan ser privadas y solo usted debe saberlas. Una contrase√±a segura es segura en virtud de que es dif√≠cil de adivinar para una computadora o un humano.\nEjemplos de Contrase√±as D√©biles Cualquier palabra com√∫n en el diccionario, en cualquier idioma (p. Ej., \u0026ldquo;libro\u0026rdquo; o \u0026ldquo;password\u0026rdquo;). Una palabra de diccionario en la que las letras se reemplazan por n√∫meros (p. Ej., \u0026ldquo;l1br0\u0026rdquo; o \u0026ldquo;P4ssw0rd\u0026rdquo;). Un conjunto repetido de caracteres (p. Ej., \u0026ldquo;AAAAA\u0026rdquo; o \u0026ldquo;12345\u0026rdquo;). Una serie de caracteres del teclado (p. Ej., \u0026ldquo;Qwerty\u0026rdquo; o \u0026ldquo;poiuy\u0026rdquo;). Informaci√≥n personal (p. Ej., cumplea√±os, nombres de mascotas o amigos, n√∫mero de seguro social, direcciones). Todo lo que est√© escrito y almacenado en alg√∫n lugar cerca de su computadora. La clave de Bob (su contrase√±a) era su informaci√≥n personal y, por lo tanto, Eva pod√≠a adivinarla.\n¬øComo Arreglarlo? Utilizando contrase√±as m√°s seguras. Aprendamos a hacer una contrase√±a segura y f√°cil de recordar. ¬°No queremos olvidarla!\n"
},
{
	"uri": "/es/adafruit/building-the-dj-station/",
	"title": "Construyendo la estaci√≥n de DJ",
	"tags": [],
	"description": "",
	"content": "Conectando las naranjas Toma una naranja y uno de tus cables. Abre una de las pinzas de cocodrilo e inserta la mitad inferior en la naranja, dejando la parte superior de la pinza en el exterior. Esto es m√°s f√°cil de hacer si lo insertas a la mitad de la parte inferior de la naranja. En ll mismo lugar donde comenzar√≠as a pelar si fueras a comer la naranja.\nRepite la operacion con la segunda naranja y tu otro cable.\nConecta una naranja a A1 y la otra a A2 As√≠ es como tiene que verse cuando termines. Usando tu cable USB, conecta el lado peque√±o al chip. Entrar√° en el puerto plateado.\n¬°Ahora creemos el programa antes de conectar nuestro chip a la computadora! Aseg√∫rate de que tu computadora est√© silenciada antes de comenzar.\n"
},
{
	"uri": "/es/python-guess-number/create-game/",
	"title": "Crea el juego",
	"tags": [],
	"description": "",
	"content": "Aceptar la entrada del usuario Este juego utilizar√° algunos de los conceptos que aprendiste en la secci√≥n de Conceptos B√°sicos de Python. Necesitar√°s saber c√≥mo usar los siguientes conceptos. Si no est√°s familiarizado con alguno de estos, por favor revisa la secci√≥n correspondiente.\nBucles While Escribir en la consola Leer desde la consola Declaraciones condicionales N√∫meros aleatorios Necesitar√°s programar este juego para que genere un n√∫mero aleatoriamente.\nLuego el programa pedir√° repetidamente al usuario un n√∫mero desde la consola, y tendr√°s que comparar esta entrada con el n√∫mero que se gener√≥ aleatoriamente.\n¬øCu√°l es la mejor manera de realizar tareas repetitivas? ¬°Lo adivinaste, bucles! Puedes usar un bucle while para lograr esta tarea.\nDentro del bucle while, puedes usar condicionales para verificar si el jugador ha adivinado correctamente. Si no, puedes darles pistas √∫tiles sobre si deber√≠an intentar adivinar con un n√∫mero m√°s bajo o m√°s alto.\n¬°Intenta crear tu propio juego! Recuerda usar los comentarios como gu√≠a; o intenta eliminar los comentarios e intenta resolverlo por tu cuenta. :)\n"
},
{
	"uri": "/es/csharp-guess-the-word/writing-to-console/",
	"title": "Escribiendo a la consola",
	"tags": [],
	"description": "",
	"content": "Escribiendo a la consola Console.WriteLine le dice a la computadora que debe imprimir la frase dentro de los par√©ntesis () a la consola..\nTrabajando junt@s En el programa de Replit abajo, presiona ‚Äòrun‚Äô. Vea que Hello World se imprimi√≥ en la ventana a la derecha. Sin quitar las comillas, intenta a cambiar Hello World a otra frase. Presiona ‚Äòrun‚Äô a ver si algo cambia. A√±ade otra l√≠nea de Console.WriteLine debajo de la primera l√≠nea para imprimir una segunda frase debajo de la primera frase. Presiona ‚Äòrun‚Äô a ver si las dos frases se imprimen. Si ves cualquier texto rojo, pide ayuda. Lanza Replit\nVamos a usar la habilidad de imprimir a la consola much√≠simo en las siguientes secciones, ¬°entonces aseg√∫rate que entiendes como hacerlo antes de continuar!\n¬°Auxilio! ¬°Me sali√≥ un mont√≥n de texto rojo! Si ves cualquier texto rojo, ¬°has encontrado unos errores! Por favor pide ayuda o f√≠jate en la p√°gina de ‚Äòdebugging‚Äô al final de este taller. Tenga cuidado con los pr√≥ximos errores comunes mientras que escribes c√≥digo en C#:\nLa c en Console, la w y la l en WriteLine se escriben en may√∫scula. Hay un punto y comilla ; al final de cada l√≠nea. Aseg√∫rate que la frase que quieres imprimir est√° dentro de comillas, y que la frase est√° entre par√©ntesis. No borrar ning√∫n par√©ntesis { o }. "
},
{
	"uri": "/es/adventure/story-boarding/",
	"title": "Secci√≥n 1: Dise√±ando del Guion (Story Boarding)",
	"tags": [],
	"description": "",
	"content": "Para empezar, saque un pedazo de un papel y comience a \u0026ldquo;dise√±ar el guion\u0026rdquo;. ¬øQu√© significa eso? Con el fin de desarrollar una gran historia que permite al lector elegir entre opciones, uno puede esbozar el flujo de su historia. ¬°Este es un gran paso de planificaci√≥n, que le ayudar√° tremendamente una vez que comience a codificar! Empezar√≠a con las 3 o 4 decisiones principales que tu protagonista va a tomar en la historia. A partir de ah√≠ dibuja flechas para saber c√≥mo las diferentes elecciones que hace tu protagonista afectan la historia.\nEjemplo de Nuvi ¬°Aqu√≠ un ejemplo de c√≥mo dise√±ar el guion! Las 4 opciones principales que tomar√° el protagonista son:\n¬øCaminar√° a casa desde la pr√°ctica de rob√≥tica? ¬øVa a andar en bicicleta a casa de la pr√°ctica de rob√≥tica? ¬øJugar√° al f√∫tbol con sus amigos en casa? ¬øIr√° a nadar con sus amigos a casa? Aqu√≠ est√° el tablero de historias:\nAhora, es genial marcar la secci√≥n diferente del tablero de historias para que coincida con diferentes conceptos de codificaci√≥n que hemos aprendido. Si nuestra historia necesita tomar una decisi√≥n, nuestro c√≥digo usamos declaraciones if-else. Si estamos pidiendo a la audiencia que nos d√© informaci√≥n para tomar decisiones en nuestra historia, utilizaremos la entrada del usuario (user input). ¬°La historia real que la audiencia leer√° sera basada en las variables del usuario!\nEsto es lo que parece:\n¬°Es muy √∫til anotar tu dise√±o del guion para que sepas qu√© temas relacionados con el c√≥digo podemos usar! Vemos que la l√≠nea de la historia se compone de variables de texto o string. La entrada del usuario puede ser el lector que escribe si desea \u0026ldquo;caminar\u0026rdquo; o \u0026ldquo;bicicleta\u0026rdquo; o elegir \u0026ldquo;f√∫tbol\u0026rdquo; o \u0026ldquo;nadar\u0026rdquo;. ¬°El usuario puede elegir su historia basada en la entrada que dan a la computadora! Los diferentes caminos que Nuevi puede tomar son una serie de decisiones. Por suerte, aprendimos a usar declaraciones if‚Äìelse, por lo que el Nuevi puede elegir f√°cilmente diferentes caminos que la historia puede tomar!\n"
},
{
	"uri": "/es/web-basics/putting-together/",
	"title": "Poniendo todo junto",
	"tags": [],
	"description": "",
	"content": "Poniendo todo junto Para que el navegador entienda lo que es cada elemento de tu sitio web, necesitamos etiquetarlos con etiquetas HTML. HTML significa Hypertext Markup Language. Las etiquetas son palabras rodeadas por los s√≠mbolos \u0026lt; y \u0026gt;. Por ejemplo, la etiqueta \u0026lt;img\u0026gt; le indica al navegador que ‚Äúesto es una imagen‚Äù. La etiqueta \u0026lt;button\u0026gt; le indica que ‚Äúesto es un bot√≥n‚Äù.\n¬°Las etiquetas (o Tags) tambi√©n se pueden usar para organizar tu p√°gina web! La imagen de abajo muestra la estructura de una p√°gina web b√°sica. La cabecera (etiqueta \u0026lt;head\u0026gt;) generalmente contiene las bibliotecas adicionales y el t√≠tulo de la p√°gina, mientras que el cuerpo (la etiqueta \u0026lt;body\u0026gt;) contiene la mayor parte del contenido que se muestra en la p√°gina.\nLa mayor√≠a de las etiquetas (o Tags) necesitan una etiqueta de apertura y otra de cierre. Por ejemplo, ver√°s que todas las p√°ginas contienen una etiqueta de apertura \u0026lt;html\u0026gt; al principio, y una etiqueta de cierre \u0026lt;/html\u0026gt; al final. Esto le dice al navegador d√≥nde empiezan los elementos HTML y d√≥nde acaban. Puedes pensar en las etiquetas como en unas comillas; por ejemplo, la computadora entender√° que todo lo que est√© entre la etiqueta \u0026lt;html\u0026gt; y la etiqueta \u0026lt;/html\u0026gt; es parte de un sitio web HTML.\nExisten tambi√©n algunas etiquetas, como la etiqueta \u0026lt;img\u0026gt;, que se cierran ellas solas, es decir, que solo necesitan una etiqueta de aprtura pero no necesitan una etiqueta de cierre.\nAqu√≠ tienes un ejemplo:\nSee the Pen HTML Basics by Deliana Escobari (@Sunny-Dee)\ron CodePen.\r"
},
{
	"uri": "/es/java-basics/activity-2/",
	"title": "Variables and Types",
	"tags": [],
	"description": "Introducci√≥n a types y variables en Java.",
	"content": "1. Variables: Define el nombre En el √∫ltimo ejercicio, aprendimos como imprimir distintas delcaraciones con el m√©todo System.out.print().\nEst√° genial saber como imprimir n√∫meros y oraciones. Pero todav√≠a no les hemos dado un significado m√°s profundo.\nEn Java, ahora vamos a introducir el concepto de una variable. Una variable es como una caja donde guardas un pedazo de data o informaci√≥n con un nombre.\nPor ejemplo, puede haber una variable llamada myName que guarda la informaci√≥n \u0026quot;Patrick\u0026quot;, y otra variable llamada loveMusic que guarda el valor de true, y otra variable llamada age que guarda el valor 3. Como puedes ver en la siguiente imagen:\n2. Tipos de variables Entonces, c√≥mo podemos crear estas cajas o variables en Java para guardar data?\nAntes de aprender c√≥mo, tenemos que aprender sobre el concepto de un type en Java. Cada variable tiene su propio type que especifica el tipo de data que se puede guardar en esa variable.\nPor ejemplo, la variable llamada age guarda el n√∫mero 3 deber√≠a contener integers, y no oraciones ni s√≠mbolos.\nCuando usamos Java, para que una variable pueda guardar n√∫meros enteros, la variable tiene que ser type int. As√≠ podemos declarar una variable int llamada age con data 3 para guardar, con la siguiente l√≠nea the c√≥digo:\nint age = 3; Por lo general, para declarar una variable, se utiliza el siguiente formato: [data type] [variable name] = [data];.\nLos siguientes son distintos tipos de variables ya disponibles en Java:\nint type: un n√∫mero entero (i.e. 20, 30, 35).\nchar type: un caracter, ya sea s√≠mbolo or letra individual del abecedario (i.e. 'A', 'b', '(', ']').\nString type: una secuencia de caracteres de tipo char (i.e. \u0026quot;Hello\u0026quot;, \u0026quot;Bonjour\u0026quot;, \u0026quot;Hola\u0026quot;).\nboolean type: una variable que solo puede tener valor de cierto o falso true or false.\ndouble type: un n√∫mero que puede guardar fraciones (i.e. 2.0, 3.14, 9.33).\nRepasemos las tr√©s variables que aprendimos.\nPara declarar estas variables en Java, escribimos lo siguiente:\nString name = \u0026#34;Patrick\u0026#34;; int age = 10; boolean loveMusic = true; 3. Cu√°l es el Type o Tipo de variable \u0026ndash; Ayuda a Patrick Patrick üê• no es un experto en tipos de data. Frecuentemente los confunde cuando intenta declarar una variable. Vamos a ayudarlo a corregir sus errores: Lanza Replit\nLuego de Guardar data en una variable, uno puede usar la data guardada en esa variable o modificarla al asignarle un nuevo valor del mismo tipo. Por ejemplo:\nint age = 10; // crea una variable age con el valor de 11 System.out.println(age); // imprime 10 age = 11; // asigna el valor de 11 a la variable age System.out.println(age); // imprime 11 4. Cu√°l es el Tipo \u0026ndash; Imrpime los Valores Primero considera el siguiente c√≥digo. Qu√© crees que ser√° su resultado? Imprime los valores de cada variable\ndouble x = 2.3; double y = 10.0; int z = 4; x = y; y = x; z = 0; z = z; System.out.println(\u0026#34;x: \u0026#34; + x + \u0026#34; y: \u0026#34; + y + \u0026#34; z: \u0026#34; + z ); Lanza Replit\n"
},
{
	"uri": "/es/python-turtle/activity-1/",
	"title": "Actividad 1 - Dibujando un cuadrado",
	"tags": [],
	"description": "",
	"content": "\r¬°Muy bien! Has ayudado a Alex a dibujar una l√≠nea. Ahora demos un paso m√°s y dibujemos un cuadrado. Para dibujarlo, necesitamos seguir los siguientes pasos:\nIr hacia adelante 50 pixeles. Girar a la izquierda 90 grados. Ir hacia adelante 50 pixeles. Girar a la izquierda 90 grados. Ir hacia adelante 50 pixeles. Girar a la izquierda 90 grados. Ir hacia adelante 50 pixeles. Recuerda que debes usar turtle.forward() para dibujar l√≠neas. Para girar 90 grados necesitas pasar 90 como argumento al m√©todo turtle.left():\nturtle.left(90) "
},
{
	"uri": "/es/secret-messages/activity-2/",
	"title": "Actividad 2 - Input y Variables",
	"tags": [],
	"description": "",
	"content": "¬°Muy bien! Ahora demos un paso m√°s. No solo vamos a imprimir para qui√©n es el mensaje, sino que vamos a ingresar el nombre del destinatario, y haremos que nuestro programa lo salude.\nPara eso necesitaremos de las variables.\nVariables Una variable es un contenedor que guarda informaci√≥n. Hay distintos tipos de variables que dependen en que informaci√≥n guarda. Pueden ser del tipo:\nstring: guarda una secuencia de caracteres, es decir, de n√∫meros, letras o s√≠mbolos. Por ejemplo \u0026quot;hola\u0026quot;, \u0026quot;1, 2, 3\u0026quot; son strings. int: guarda n√∫meros enteros (sin decimales) ya sea negativo o positivo, como 1, 100 y -250. char: sirve para contener un solo caracter. Por ejemplo 'A' , 'e', 'I', etc. Un char siempre va entre comillas simples ''. bool: solo guarda true (verdadero) o false (falso). Para crear una variable, necesitamos declararla de la siguiente manera:\nint numero = 10; Observemos en detalle esa instrucci√≥n:\nPrimero debemos indicar el tipo de informaci√≥n que va a guardar la variable. En este caso es del tipo int. Luego tenemos que escribir el nombre del contenedor, en el ejemplo el nombre es numero. Por √∫ltimo, indicamos que es lo que va a guardar. Para eso escribimos el signo igual =, luego el contenido (10) y como toda instrucci√≥n en C++, termina con un punto y coma ;\nAhora, podemos usar la variable numero en el programa para hacer referencia al n√∫mero que guarda esa variable, que ser√≠a el 10. Por ejemplo si queremos imprimir la variable, tenemos que usar la siguiente instrucci√≥n:\ncout \u0026lt;\u0026lt; \u0026#34;El numero es: \u0026#34; \u0026lt;\u0026lt; numero \u0026lt;\u0026lt; endl; En la consola veremos:\nEl numero es: 10 Al usar cout, podemos imprimir palabras, n√∫meros, y variables. Para imprimir m√°s de una cosa, debemos separar cada termino con los signos \u0026lt;\u0026lt;. Ejemplo:\nint hora = 13;\rcout \u0026lt;\u0026lt; \u0026#34;Son las \u0026#34; \u0026lt;\u0026lt; hora \u0026lt;\u0026lt; \u0026#34; del mediod√≠a\u0026#34; \u0026lt;\u0026lt; endl; Esto imprimir√°:\nSon las 13 del mediod√≠a Lo siguiente que necesitaremos, es ingresar en la consola el nombre del destinatario (que guardaremos en una variable), y que el programa lo salude.\nPara ingresar el nombre, vamos a usar la siguiente instrucci√≥n:\nstring nombre;\rcin \u0026gt;\u0026gt; nombre; Entendamos esta l√≠nea:\nEntrada en la consola Al igual que podemos imprimir en la consola con la instrucci√≥n cout, podemos ingresar datos escribiendo en la consola con la instrucci√≥n cin.\nLo que se escribe en la consola tiene que ser guardado en una variable.\nEntonces para ingresar datos escribimos cin, seguidos de dos operadores mayor \u0026gt;\u0026gt; (los contrarios a los que se usan con cout), y luego la variable que queremos ingresar.\nEn el ejemplo, estamos diciendo que lo que se escriba en la consola, va a ser el contenido de la variable nombre.\nEntonces, si en la consola se escribiese:\nReina La variable nombre automaticamente representar√° el string \u0026ldquo;Reina\u0026rdquo;.\nPara ingresar datos en la consola, luego de apretar Run, debemos escribir en la pesta√±a console (la pantalla negra) y apretar la tecla enter al terminar.\n¬°Ahora si!\nVamos a empezar con nuestro programa.\nPasos a seguir para esta actividad:\nDeclara una variable del tipo string Usa la instrucci√≥n cin para ingresar en la consola el contenido de esa variable. Imprime en la consola \u0026ldquo;Hola \u0026quot; y la variable ingresada anteriormente. Apreta Run. Escribie en la pesta√±a console el nombre del destinatario y presiona enter. Lanza Replit\n¬°AYUDA! Si despu√©s de presionar el bot√≥n Run, est√° la palabra error en rojo en la pesta√±a console, es porque tienes errores en el c√≥digo. P√≠dele ayuda al instructor para revisar tu c√≥digo.\nMientas tanto puedes revisar lo siguiente:\nNo uses letras may√∫sculas. Asegurate que las lineas que escribiste tengan al final un punto y coma ;. Recuerda que solo los strings tiene que ir entre comillas \u0026ldquo;\u0026rdquo;. Por ahora, todo el c√≥digo que escribas tiene que ir dentro de las llaves { } de la funcion int main. "
},
{
	"uri": "/es/javascript-blocks-earsketch/activity-1-set-tempo-add-sounds/",
	"title": "Actividad 1 - Establecer tempo y agregar sonidos",
	"tags": [],
	"description": "",
	"content": "Veamos de cerca el c√≥digo preexistente y comprendamos lo que significa.\nLa funci√≥n setTempo() le permite establecer el tempo general del proyecto. El tempo es la velocidad a la que se reproduce una pieza de m√∫sica. Cambiar el tempo de un proyecto permite crear diferentes estilos de m√∫sica. ¬°Intenta cambiar el tempo de tu funci√≥n setTempo cambiando el n√∫mero en el bloque y observa qu√© sucede! Aseg√∫rate de que sea un n√∫mero entre 45 y 220. A continuaci√≥n se presentan algunas sugerencias de tempos que puedes usar.\nAhora que hemos establecido nuestro tempo, es hora de agregar sonidos. Para hacerlo, debemos utilizar la funci√≥n fitMedia(). Colocaremos un nuevo c√≥digo debajo del bloque de funci√≥n setTempo().\nActividad 1 Busca el bloque de funci√≥n morado fitMedia() en el lado izquierdo del editor de c√≥digo. Arrastra el bloque fitMedia() para insertarlo debajo del bloque setTempo. Puede que notes que cuando se agrega el bloque, Earsketch produce algunos textos de marcador de posici√≥n que tendremos que reemplazar m√°s adelante. Estos textos de marcador de posici√≥n tambi√©n se conocen como par√°metros. Reemplazaremos cada uno de estos textos con un valor v√°lido.\nsound - Navega hasta el panel \u0026ldquo;Sonidos\u0026rdquo; y encuentra un sonido que te guste. Haz clic en \u0026ldquo;sound\u0026rdquo; en el bloque de funci√≥n fitMedia(), luego presiona el bot√≥n \u0026ldquo;Pegar\u0026rdquo; al lado del sonido que deseas agregar. El nombre del sonido deber√≠a aparecer dentro del bloque fitMedia(). trackNumber - Usa el men√∫ desplegable para seleccionar cualquier n√∫mero entero positivo como n√∫mero de pista. Para este ejemplo, selecciona 1. start/end - Estos par√°metros son n√∫meros enteros positivos cuantificados en compases. Un comp√°s es un segmento de tiempo que se correlaciona con un n√∫mero espec√≠fico de tiempos. Intenta establecer start en 1 y end en 9. Tu c√≥digo deber√≠a verse algo as√≠:\nAseg√∫rate de que los bloques de funci√≥n y el texto est√©n colocados correctamente.\nUna vez que hayas ingresado tus propios par√°metros, presiona \u0026ldquo;run\u0026rdquo; y luego haz clic en \u0026ldquo;play\u0026rdquo; para escuchar tu clip de audio.\nSi ves alg√∫n texto rojo, ¬°has encontrado algunos errores! Por favor, pide ayuda. La funci√≥n fitMedia() es la columna vertebral para hacer m√∫sica en Earsketch. Usaremos esta funci√≥n mucho, as√≠ que si tienes alguna pregunta sobre su uso, ¬°por favor preg√∫ntanos! La estaci√≥n de trabajo de audio digital (DAW) es el √°rea donde aparecen los sonidos. Se encuentra en la parte superior central de tu ventana.\n"
},
{
	"uri": "/es/security/activity/",
	"title": "Actividad",
	"tags": [],
	"description": "",
	"content": "¬°Juguemos un juego!\nEscriba su oraci√≥n favorita en el cuadro de texto a continuaci√≥n. Aseg√∫rese de que tenga al menos cinco palabras. (p. Ej., Me gusta jugar al voleibol en la playa.) Ahora tome la primer letra de cada palabra de su oraci√≥n y escribalas en el cuadro de texto. (p. Ej.,\rmgjavelp)\rAgregue algunos n√∫meros al texto. Recuerde la posici√≥n de los n√∫meros. (p. Ej., 1mgjavelp8)\rFinalmente, agreguemos algunos caracteres especiales al texto. (p. Ej., 1mgjavel$p8)\r¬°Voil√†, esa es su nueva contrase√±a! ¬øNo parece dif√≠cil de romper? ¬°√âxito! "
},
{
	"uri": "/es/csharp-guess-the-word/comments/",
	"title": "Comentarios",
	"tags": [],
	"description": "",
	"content": "Comentarios Desarrollador@s frecuentemente tienen que colaborar con otr@s desarrollador@s. Escribiendo comentarios es una manera f√°cil que desarrollador@s usan para comunicarse. La computadora ignora los comentarios, entonces comentarios tambi√©n son una manera f√°cil para decirle a la computadora que no debe ejecutar alguna l√≠nea de c√≥digo. Hay dos maneras de crear comentarios:\nPara comentar una l√≠nea, a√±ade // al inicio de la l√≠nea. Por ejemplo: // Esto es una sola l√≠nea de comentario. Para comentar varias l√≠neas de c√≥digo a la vez, indica el inicio del comentario con /* y a√±ade */ al final del comentario. Por ejemplo: /* Esto es un comentario que ocupa varias l√≠neas. Esta l√≠nea tambi√©n es parte del mismo comentario. */ Para quitar un comentario (o cambiar el comentario a c√≥digo que la computadora s√≠ ejecutar√°), simplemente borra el // de un comentario de una sola l√≠nea, o el /* y */ de un comentario de varias l√≠neas.\nTrabajando junt@s A√±ade // al inicio de Console.WriteLine(\u0026quot;Hello World\u0026quot;);. Despu√©s de presionar run, aseg√∫rate que Hello World no se imprimi√≥ a la consola. Borra el // y a√±ade /* y */ a cada lado de Console.WriteLine(\u0026quot;Hello World\u0026quot;);. Aseg√∫rate que Hello World todav√≠a no se imprime a la consola cuando presionas run. Borra /* , */ y presiona run. Hello World debe imprimirse en la consola. Lanza Replit\nDurante las actividades de hoy vas a ver varios comentarios que ocupan varias l√≠neas y unos comentarios // TODO comments. Estos comentarios nos guiar√°n a completar el juego de Adivina la palabra, entonces aseg√∫rate que entiendes como cambiar c√≥digo a un comentario y vise versa.\n"
},
{
	"uri": "/es/python-earsketch/python-basics/",
	"title": "Conceptos b√°sicos de Python",
	"tags": [],
	"description": "Conceptos b√°sicos de Python",
	"content": "Python basico Para codificar m√∫sica, necesitamos aprender un poco de Python. No te preocupes, no te morder√° üòä. Python es uno de los lenguajes que usamos para decirle a las computadoras qu√© hacer. Estos lenguajes se conocen como \u0026ldquo;lenguajes de programaci√≥n\u0026rdquo;. Aprenderemos conceptos de Python en toda la clase, pero comencemos con una simple instrucci√≥n print.\nSi desea saltar a una secci√≥n espec√≠fica de Python, haga clic en el siguiente tema:\nPython Console Comments Functions "
},
{
	"uri": "/es/adafruit/creating-the-program/",
	"title": "Creando el programa",
	"tags": [],
	"description": "",
	"content": "Abre tu navegador de internet favorito (como Edge, Firefox, Google Chrome, Internet Explorer) y entra a https://aka.ms/oranges\r.\nTu pantalla deber√≠a verse as√≠:\nDefiniendo las variables Hoy vamos a usar naranjas para decirle a nuestra Adafruit cu√°ndo hacer ruido. Lo primero que debemos hacer es darle a la computadora un nombre para cada naranja y d√≥nde buscar lo que est√°n diciendo. Hacemos la primera parte definiendo una variable. Haz clic en la secci√≥n que dice VARIABLES, es de color salm√≥n y es el s√©ptimo si cuentas desde la parte superior. Luego define una variable haciendo clic en Make a variable y dale un nombre. Haz esto dos veces. En estas im√°genes de ejemplo puedes ver como nosotros nombramos las nuestras como analog1 y analog2, pero puedes llamarlas como quieras.\nInterpretando las entradas Ahora que tenemos un nombre que nuestra computadora conoce para nuestras naranjas, debemos dejar que Adafruit sepa c√≥mo entenderlas. Hay dos tipos de entradas: digitales y anal√≥gicas. Los interruptores de luz y los botones de encendido son ejemplos de entradas digitales. Est√°n activados o desactivados, son 1 o 0. Las entradas anal√≥gicas son como un atenuador de luz o un bot√≥n de volumen. Tienen m√°s opciones para los valores. Nuestras naranjas ser√°n entradas anal√≥gicas y cu√°nto las toquemos o exprimiremos cambiar√° el valor que mandan al Adafruit.\nHaz clic nuevamente en la secci√≥n Variables. Esta vez deber√≠as poder ver m√°s opciones ya que hemos definido nuestras dos variables. Arrastra uno de los bloques \u0026ldquo;set ___ to __\u0026rdquo; hacia bloque verde \u0026ldquo;forever\u0026rdquo; en nuestro espacio de trabajo. Usando la flecha blanca hacia abajo, cambia el primer espacio en blanco a \u0026ldquo;analog1\u0026rdquo; o al nombre que hayas escogido para tu primer variable.\nAhora haz clic en la opci√≥n \u0026ldquo;ADVANCED\u0026rdquo; y luego haz clic en PINS. Busca el bloque \u0026ldquo;analog read pin __\u0026rdquo;, es el tercero desde la parte superior e ins√©rtalo donde est√° el 0 en nuestro bloque \u0026ldquo;set analog1 to 0\u0026rdquo;. Para insertarlo en esa ranura, arr√°stralo para que se mueva sobre el cero, verifica que el 0 est√© resaltado en amarillo y luego suelte el mouse (o el panel t√°ctil). Deber√≠as ver que el bloque se extiende para acomodar el bloque. Si no ves esto, intenta nuevamente.\nUna vez que hayas hecho eso, tu espacio de trabajo deber√≠a verse como en la imagen de arriba. Repite este proceso nuevamente pero esta vez usa las flechas blancas hacia abajo para seleccionar analog2 y A2. En la siguiente imagen est√° como debe de quedar tu espacio de trabajo.\nCreando nuestros bucles, ciclos, iteraciones o como se traduzca \u0026ldquo;loop\u0026rdquo; en tu pa√≠s Ahora que nuestra computadora sabe c√≥mo llamar a nuestras naranjas y c√≥mo entender lo que est√°n diciendo, creemos un bucle que verifique cu√°ndo estamos sosteniendo nuestra naranja. Haz clic en la secci√≥n LOGIC y arrastra el bloque \u0026ldquo;If ____ then\u0026rdquo; para colocarlo debajo de tus bloques de variables.\nVolvamos al ejemplo de la perilla de volumen para comprender la comparaci√≥n que vamos a hacer en nuestro bucle. Cada persona tiene un punto en el que le gusta escuchar su m√∫sica para poder disfrutarla. Este punto tambi√©n es cierto para nuestras naranjas. Le dir√°n a la computadora un n√∫mero cuando nadie las toque y un n√∫mero m√°s bajo cuando las toquemos. El truco es encontrar el punto intermedio para que solo hagamos ruido cuando queramos.\nPara configurar lo anterior, ve a la secci√≥n LOGIC nuevamente y toma el bloque hexagonal \u0026ldquo;__ \u0026lt;__\u0026rdquo; que es el segundo en la subsecci√≥n \u0026ldquo;Comparison\u0026rdquo;. Coloca el bloque sobre el \u0026ldquo;true\u0026rdquo; en el bloque \u0026ldquo;if __ then\u0026rdquo;. Aseg√∫rate de ver el resaltado amarillo antes de colocarlo all√≠. Revisa la imagen a continuaci√≥n para verificar tu espacio de trabajo\nAhora vamos a poner lo que estamos comparando. Vuelve a la secci√≥n VARIABLES, toma la variable analog1 y col√≥quela en la primer espacio. Luego haz clic en el segundo espacio y escribe 40. Este 40 deber√≠a ser un buen punto adecuado para la mayor√≠a de las personas. Si al final, la naranja hace ruido sin que la toques, puedes volver a este paso y aumentar el n√∫mero. Si tu naranja no hace ruido cuando la toques, puedes regresar y aumentar el n√∫mero. Por ahora, vamos a dejarlo en 40.\n¬°Ahora podemos elegir nuestra m√∫sica! Haz clic en la secci√≥n MUSIC y arrastra el segundo bloque \u0026ldquo;play _____ until done\u0026rdquo; en nuestro bloque If-Then. Puedes hacer click en la flecha hacia abajo para probar otros sonidos.\nAhora queremos repetir estos √∫ltimos pasos para la variable analog2. Una vez que hagas esto, tu espacio de trabajo se ver√° como la imagen de abajo (con tus opciones de m√∫sica).\nDiviti√©ndonos con Luces (Time Permitting) ¬°El chip Adafruit tiene muchas luces! Son s√∫per divertidos para jugar, as√≠ que agreguemos un poco de color a nuestros sonidos para que podamos ver y escuchar la diferencia cuando tocamos nuestras naranjas. Haz clic en la secci√≥n LIGHT y arrastre el bloque \u0026ldquo;Set all Pixels to ___\u0026rdquo; en nuestros dos bloques If-Then. Deber√°s colocarlos justo antes de que reproduzcamos un sonido. Puedes hacer clic en la porci√≥n de color para cambiar el color que desea mostrar. "
},
{
	"uri": "/es/security-phishing/a-closer-look/",
	"title": "Miremos mas cerca que pasa.",
	"tags": [],
	"description": "",
	"content": "Bob recibi√≥ el siguiente correo electr√≥nico la otra noche.\nQue crees que esta sospechoso en este correo? Analicemos: La direcci√≥n de correo electr√≥nico del remitente es sospechosa y tu no conoces personalmente a este remitente de correo electr√≥nico.\nLa oferta lucrativa en la l√≠nea de asunto sugiere que es demasiado buena para ser verdad.\nRecibi√≥ un correo electr√≥nico fuera de horario comercial.\nLa urgencia del mensaje.\nEl remitente le pide que haga click en un enlace o que abra un archivo adjunto que no conoce. La URL o el enlace tiene un error ortogr√°fico que es dif√≠cil de notar.\nDespu√©s de explicar todo esto, Alice le pidi√≥ a Bob que cambiara todas sus contrase√±as y credenciales de inicio de sesi√≥n de la cuenta bancaria para estar seguro. Afortunadamente para Bob, la atacante Eve a√∫n no hab√≠a actuado sobre la informaci√≥n proporcionada por Bob y no paso a mayores consecuencias.\n"
},
{
	"uri": "/es/adventure/story-board-code/",
	"title": "Secci√≥n 2: ¬°Pasar del dise√±o del guion (Story Board) al c√≥digo!",
	"tags": [],
	"description": "",
	"content": "Es hora de abrir Trinket. ¬°Ahora es el momento de crear, vamos a ser creativos!\nPuedes seguir trabajando en la historia de Nuvi:\nAhora tu puedes trabajar en tu propio codigo para elegir tu propio juego de \u0026lsquo;Elegir tu aventura\u0026rsquo;:\n¬°O puede empezar de cero y hacerlo suyo! ¬°Solo ve a Trinket y empieza a contar historias!\n"
},
{
	"uri": "/es/web-basics/activity-1/",
	"title": "Actividad  1 - Familiarizarse con editor en linea",
	"tags": [],
	"description": "",
	"content": "Instrucciones Abre el editor del navegador (clica en el bot√≥n de abajo ‚ÄúInt√©ntalo tu mism@!‚Äù) Usa etiquetas de cabecera para a√±adir el t√≠tulo y las etiquetas de p√°rrafo para escribir un p√°rrafo sobre Benji Si tienes tiempo: escribe una lista de las golosinas favoritas de Benji: pavo, mantequilla de cacahuetes y queso en hebras Int√©ntalo tu mism@!\nUsa este gr√°fico de referencia para probar algunas etiquetas HTML t√∫ mism@.\nTag Descripci√≥n Ejemplo \u0026lt;html\u0026gt;\u0026lt;/html\u0026gt; Describen un documento HTML. Cualquier sitio web tiene que comenzar con la etiqueta de apertura y terminar con la etiqueta de cierre. Puedes ver un ejemplo en Code Pen. \u0026lt;!-- --\u0026gt; Describen un comentario. Los comentarios se utilizan para que otros desarrolladores los puedan ver, pero no se muestran en la p√°gina web. \u0026lt;!-- Esta l√≠nea no es visible en el buscador/browser --\u0026gt; \u0026lt;head\u0026gt;\u0026lt;/head\u0026gt; Contienen todos los elementos HTML que proporcionan informaci√≥n al navegador para que muestre la p√°gina web correctamente. Los elementos HTML entre y la etiqueta no se muestran. Puedes ver un ejemplo en Code Pen. \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; Contienen el t√≠tulo del sitio web que se utilizar√° para nombrar la pesta√±a en el navegador. \u0026lt;head\u0026gt;\n\u0026lt;title\u0026gt; Mi sitio web \u0026lt;/title\u0026gt;\n\u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;/body\u0026gt; Contiene todos los elementos HTML que se muestran en la p√°gina como por ejemplo texto e im√°genes. Puedes ver un ejemplo en Code Pen. \u0026lt;h1\u0026gt;\u0026lt;/h1\u0026gt;\n\u0026hellip; \u0026lt;h6\u0026gt;\u0026lt;/h6\u0026gt; Definen un titular/t√≠tulo. \u0026lt;h1\u0026gt; define el t√≠tulo m√°s importante (m√°s grande), mientras que \u0026lt;h6\u0026gt; define el t√≠tulo menos importante (m√°s peque√±o). \u0026lt;h1\u0026gt;Este ser√° el t√≠tulo grande\u0026lt;/h1\u0026gt;\n\u0026lt;h4\u0026gt;Este ser√° un t√≠tulo m√°s peque√±o\u0026lt;/h4\u0026gt; \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; Describe un p√°rrafo. \u0026lt;p\u0026gt;Los perros han evolucionado para querer a los humanos. En conclusi√≥n, los perros son los mejores amigos de los humanos.\u0026lt;/p\u0026gt; \u0026lt;div\u0026gt;\u0026lt;/div\u0026gt; Definen una divisi√≥n o secci√≥n en la p√°gina. \u0026lt;div\u0026gt;\n\u0026lt;h1\u0026gt;Todo sobre mi\u0026lt;/h1\u0026gt;\n\u0026lt;/div\u0026gt; \u0026lt;img\u0026gt; Una imagen. Es una etiqueta que se Cierra sola per hay que especificar el origen de la imagen para que el navegador sepa de donde tiene que tomar la imagen. \u0026lt;img src=\u0026ldquo;aka.ms/Benji-the-dog\u0026rdquo;\u0026gt; \u0026lt;hr\u0026gt; Dibuja una l√≠nea horizontal. Es otra etiqueta que se cierra sola y que es √∫til si quieres partir el contenido de la p√°gina. \u0026hellip; \u0026lt;hr\u0026gt; \u0026hellip; \u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;\n\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; Una lista. Para comenzar la lista, usa la etiqueta \u0026lt;ul\u0026gt;. Para cada art√≠culo que hay que agregar a la lista, rod√©alo con las etiquetas \u0026lt;li\u0026gt; y \u0026lt;/li\u0026gt;. Acaba la lista con la etiqueta \u0026lt;/ul\u0026gt;. \u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;Este es uno de los art√≠culos de la lista.\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; "
},
{
	"uri": "/es/java-basics/activity-3/",
	"title": "Operadores",
	"tags": [],
	"description": "Introducc√≠on de operadores y c√≥mo realizar operaciones con variables en Java.",
	"content": "1. Matem√°tica : Operadores de Artim√©tic En el √∫ltimo ejercicio, aprendimos sobre distintos tipos de variables y c√≥mo podemos aignarles un valor. Por ejemplo:\nint age = 3; // declara la variable age de type int con valor de 3 age = 4; // asingnale el valor de 4 a la variable age El c√≥digo de arriba le suma 1 a la variable age.\nY en Java, podemos realizar operaciones matem√°ticas directamente en las variables y con los siguientes opereadores aritm√©ticos: +, -, *, /, %. Por ejemplo, podemos usar el operator de suma + para sumarle 1 a la variable age:\nint age = 3; // declara la variable age de type int con valor de 3 age = age + 1;// suma 1 a la variable age Lista de operadores de aritm√©tica en Java:\n+: suma.\n-: resta.\n*: multiplicaci√≥n.\n/: (regural) divisi√≥n. Note: 10 / 4 resulta 2, en vez de 2.5 ya que se descarta el resto de la divisi√≥n.\n%: modulo. Note: 10 / 4 resulta 2. Esta operaci√≥n resulta en el resto de una divisi√≥n.\nSuma (+) se usa en String como uno operador de unificaci√≥n. Por ejemplo:\nString name = \u0026quot;Patric\u0026quot; + \u0026quot;k\u0026quot;; es igual que String name = \u0026quot;Patrick\u0026quot;;\n2. Comparaci√≥n: Operador Relacional Ahora vamos aprender como compara n√∫meros. Para eso necesitaremos el operador relacional.\nAl igual que en matem√°ticas, podemos comparar variables usando estos operadores \u0026gt;, \u0026lt;, \u0026gt;=, \u0026lt;=. Por ejemplo: (3 \u0026gt; 2) resulta en el valor true, un valor boolean.\nEstos son los operadores relacionale en Java:\n==: igual a. (i.e. (3 == 3) is true)\n!=: no igual a. (i.e. (3 != 3) is false)\n\u0026gt;: mayor a.\n\u0026lt;: menor a.\n\u0026gt;=: mayor a o igual a.\n\u0026lt;=: menor a o igual a.\nNote: puedes usar == y != en dos variables con data del mismo tipo.\n3. Examen de estad√≠stica Patrick üê• y 4 alumnos acaban de tener un examen de m√∫sica. Los resultados de sus ex√°menes: Patrick(88), Tom(89), Mary(95), Chris(84), Jen(92).\nQueremos producir un reporte de est√°disticas de la clase de m√∫sica.\nEste reporte contiene los resultados de cada estudiante, el promedio de la clase, y si el promedio de la clase est√° sobre 60, 70, 80, 90 (true or false):\n---------------------------\rMusic Grade Report ---------------------------\rStudent Grades: - Patrick: ...\r- Tom: ...\r...\rClass Average: ...\r- Average Over 60: ...\r- Average Over 70: ...\r- Average Over 80: ...\r- Average Over 90: ... Ahora vamos a escribir el programa usando operadores relacionales üéµ\nInstrucciones: Identifique todas las variables en las declaraciones de print y declaralas empezando en la l√≠nea 12 con el valor y tipo de data correcto. (Note que hay 10 variables en total, y la variable average ya ha sido declarada). Hint: Por ejemplo, la variable patrickGrade deber√≠a ser declarada y asignada en la l√≠nea 13 como int patrickGrade = 88;.\nCalcule el promedio correcto para la clase y asignale el valor a la variable average usando operadores aritm√©ticos como +, -, *, /, %.\nNote que el promedio es (total points)/(number of students).\nAsigna las variables over60, over70, over80, over90 con los valores correctos usando operadores relacionales como \u0026gt;, \u0026lt;, \u0026gt;=, \u0026lt;=.\nEjecuta el c√≥digo de tu programa y be el reported impreso.\nLanza Replit\n"
},
{
	"uri": "/es/python-turtle/activity-2/",
	"title": "Actividad 2 - Simplificando el c√≥digo con ciclos (loops)",
	"tags": [],
	"description": "",
	"content": "¬°Genial! Dibujaste un cuadrado. ¬øPero notas c√≥mo estamos escribiendo las mismas l√≠neas una y otra vez? Tuvimos que repetir las instrucciones para dibujar una l√≠nea y dar la vuelta cuatro veces. ¬øNo ser√≠a genial que en vez de dar todas las instrucciones le dijeramos al programa que repita cuatro veces lo qu ele dijimos? ¬°Intent√©moslo!\nPara hacer esto tenemos que usar CICLOS. Un ciclo ejecuta un grupo de instrucciones varias veces. Miremos este ejemplo donde se hace un tri√°ngulo:\nfor i in range(3): turtle.forward(50) turtle.left(120) Intentemos entender lo que hace este c√≥digo. for i in range(3): esta sentencia le dice al programa que las intrucciones que est√°n debajo deben correrse dentro de un ciclo. range(3) dice cu√°ntas veces va a repetirse el c√≥digo (3 veces en este caso). La letra i es una variable y la usamos para llevar la cuenta de cu√°ntas veces hemos corrido el ciclo.\nLa sintaxis \u0026ldquo;tricky\u0026rdquo; de Python - Parte 1 La Sintaxis es la forma en que escribimos los programas para hacerlos entendibles. Cuando hablamos espa√±ol tenemos reglas (ortograf√≠a, gram√°tica, etc) para podernos entender. El lenguaje Python tiene algo parecido para que la computadora pueda entender el c√≥digo que escribimos.\nPrimero, notemos que al final de la l√≠nea que empieza con for agregamos dos punts (:); esto significa que la siguiente l√≠nea ser√° parte del ciclo for. Si no ponemos los dos puntos, la computadora no sabr√° qu√© hacer.\nF√≠jate que la siguiente l√≠nea tiene unos espacios en blanco, un \u0026ldquo;tab\u0026rdquo; le llamamos. Este tab le dice a la computadora que considere que forma parte del for loop y que no.\nPara dar en ejemplo de lo improtante que es poner el tab, veamos el siguiente c√≥digo. Podemos ver que le quitamos el tab a la l√≠nea turtle.left(120) as√≠ que el c√≥digo no funcionar√° como esperamos. El c√≥digo repetir√° la l√≠nea turtle.forward(50) tres veces y obteneremos una larga l√≠nea recta.\nfor i in range(3): turtle.forward(50) turtle.left(120) Bueno, ahora tomemos el c√≥digo que ten√≠amos y modifiquemoslo un poco para dibujar un cuadrado en vez de un tri√°ngulo. Como pista, puedes volver a revisar lo que hicimos en la Avtividad 2.\n"
},
{
	"uri": "/es/secret-messages/activity-3/",
	"title": "Actividad 3 - Ciclos",
	"tags": [],
	"description": "",
	"content": "¬°Genial!\nEl rey nos ha pedido que escribamos letra por letra el nombre del destinatario para luego poder cambiarlas mediante alguna forma y as√≠ hacer secreto nuestro mensaje.\nPara hacer esto tenemos que usar CICLOS (o loops en ingl√©s). Un ciclo ejecuta un grupo de instrucciones varias veces. Veamos este ejemplo donde imprimimos n√∫meros:\nfor(int i=0; i\u0026lt;3; i++){\rcout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; endl;\r} Intentemos entender lo que hace ese c√≥digo:\nCiclos for(int i=0; i\u0026lt;3; i++) { }. Esta l√≠nea le dice al programa que las instrucciones que est√°n dentro de sus llaves { } deben correrse dentro de un ciclo. Podemos diferenciar 3 partes dentro de los par√©ntesis:\nint i=0; est√° declarando una variable del tipo int (numero entero) llamada i y esta inicializada en 0. Esta variable llevar√° la cuenta de cu√°ntas veces hemos recorrido el ciclo. i\u0026lt;3; es la condici√≥n que se tiene que cumplir para que el ciclo se siga repitiendo. Entonces, mientras la variable i sea menor a 3 (\u0026lt;), el ciclo se repetir√°. i++ le suma 1 a la variable i cada vez que el ciclo termina. Una propiedad que tienen las variables strings, es que podemos acceder a cada car√°cter que lo compone y a la cantidad de estos.\nAcceder a cada car√°cter de un string Cada car√°cter de una variable string, es un char. Podemos acceder a cada char de un string mediante el n√∫mero de su posici√≥n dentro del string. Imagin√©moslo como una fila de caracteres. El primer car√°cter va a ser el n√∫mero 0, el que le sigue el 1, el que le sigue el 2, y as√≠ sucesivamente.\nEntonces, para acceder a cada uno de ellos, debemos usar esta instrucci√≥n:\nstring palabra = \u0026#34;hola\u0026#34;;\rchar letra = palabra[0];\rcout \u0026lt;\u0026lt; \u0026#34;La primera letra es: \u0026#34; \u0026lt;\u0026lt; letra \u0026lt;\u0026lt; endl; Esto imprimir√°:\nLa primera letra es: h Para obtener un caracter, debemos usar el nombre de la variable seguidas de corchetes [ ], y dentro de ellos, la posici√≥n de la letra que queremos.\nTama√±o de un string Adem√°s de poder acceder a cada caracter de un string, con la siguiente instrucci√≥n podemos saber cu√°l es la cantidad de caracteres que tiene.\nstring palabra = \u0026#34;hola\u0026#34;;\rint tama√±o = palabra.size();\rcout \u0026lt;\u0026lt; \u0026#34;El tama√±o es: \u0026#34; \u0026lt;\u0026lt; tama√±o \u0026lt;\u0026lt; endl; Imprimir√°:\nEl tama√±o es: 4 Debemos escribir el nombre de la variable, seguidos de .size() para obtener el tama√±o. Esto devolver√° un n√∫mero entero, por lo que lo podemos guardar en una variable del tipo int.\nBueno, ahora tomemos el c√≥digo que ten√≠amos y modifiqu√©moslo un poco para imprimir cada letra del nombre en vez de un \u0026ldquo;Hola\u0026rdquo; y el nombre.\nLanza Replit\n"
},
{
	"uri": "/es/secret-messages/activity-4/",
	"title": "Actividad 4 - Condiciones",
	"tags": [],
	"description": "",
	"content": "\n¬°Muy bien!\nCada vez estamos m√°s cerca de hacer nuestros mensajes secretos. Pero tambi√©n, ¬°no olvidemos que tenemos que poder descifrar esos mensajes!\nPara eso, vamos a ingresar en la consola un 1, si es que queremos encriptar un mensaje, o el n√∫mero 2, si queremos desencriptarlo.\nPara esto necesitaremos de las CONDICIONES.\nCondiciones if / else Una condici√≥n en programaci√≥n es una instrucci√≥n o un grupo de instrucciones, que pueden ejecutarse o no, en base a si una condici√≥n es verdadera. Ser√≠a algo as√≠: SI (if) pasa esto, ejecuta estas instrucciones, SI NO (else), ejecuta estas otras instrucciones.\nEjemplo\nif(3 \u0026gt; 1){\rcout \u0026lt;\u0026lt; \u0026#34;3 es mayor que 1\u0026#34; \u0026lt;\u0026lt; endl;\r}else{\rcout \u0026lt;\u0026lt; \u0026#34;3 no es mayor que 1\u0026#34; \u0026lt;\u0026lt; endl;\r} El programa imprimir√°:\n3 es mayor que 1 Ah√≠ estamos indicando que si if el n√∫mero 3 es mayor a 1 (3\u0026gt;1), que se ejecute lo que est√° entre sus llaves { }. Y de lo contrario, que se ejecute lo que est√° en el bloque else. En el ejemplo, el bloque else no se ejecutar√° porque la condici√≥n del if es verdadera, ya que 3 es mayor que 1.\nPara crear condiciones, usualmente usamos los siguientes operadores l√≥gicos en los par√©ntesis () de las instrucciones if:\nEjemplo: a=5 y b=3\nMenor que: a \u0026lt; b (¬ø5 es menor que 3?) Menor o igual que: a \u0026lt;= b (¬ø5 es menor o igual a 3?) Mayor que: a \u0026gt; b (¬ø5 es mayor a 3?) Mayor o igual que: a \u0026gt;= b(¬ø5 es mayor o igual a 3?) Igual que: a == b (¬ø5 es igual a 3?) distinto que : a != b (¬ø5 es distinto que 3?) Para la actividad, vamos a usar una condici√≥n para saber si lo que queremos es crear un mensaje secreto (encriptarlo) o descifrar un mensaje (desencriptarlo).\nPara eso, debemos seguir los siguientes pasos:\nCrea una variable del tipo int. Ingresa por consola el contenido de esa variable. Crea una condici√≥n if / else para saber si el n√∫mero ingresado es igual a 1, por lo tanto, queremos encriptar un mensaje, o de lo contrario, queremos desencriptarlo. Imprime por consola en cada caso que es lo que queremos hacer. Ej: \u0026ldquo;Encriptar un mensaje\u0026rdquo; o \u0026ldquo;Desencriptar un mensaje\u0026rdquo;. Como ayuda, recuerda que puedes volver a las otras actividades.\nLanza Replit\n"
},
{
	"uri": "/es/secret-messages/activity-5/",
	"title": "Actividad 5 - C√≥digo Ascii",
	"tags": [],
	"description": "",
	"content": "\n¬°Genial!\nEn esta actividad vamos a encriptar (hacer secreto) el nombre del destinatario.\nVamos a utilizar el C√≥digo Ascii\nC√≥digo Ascii El c√≥digo Ascii muestra que cada caracter tiene un valor num√©rico. Por ejemplo, el caracter A es el n√∫mero 65, el B es el 66, el C el 67, etc.\nLa siguiente lista muestra el valor de los caracteres m√°s usados:\nQue cada caracter tenga un valor, nos servir√° para sumar o restar letras, y as√≠ cambiar el orden de ellas de una manera determinada. Nos permite convertir caracteres (char) en n√∫meros (int) y viceversa.\nEjemplo\nchar letra = \u0026#39;A\u0026#39;;\rint valor_letra = letra;\rcout \u0026lt;\u0026lt; letra \u0026lt;\u0026lt; \u0026quot; = \u0026quot; \u0026lt;\u0026lt; valor_letra \u0026lt;\u0026lt; endl; Esto imprimir√°:\nA = 65 En este ejemplo, guardamos el caracter A en una variable tipo char. Luego, en una variable tipo int guardamos la variabale tipo char, pero como la segunda variable guarda n√∫meros, convertir√° el caracter en su valor num√©rico seg√∫n el c√≥digo ascii.\nDe esta manera, podr√≠amos hacer lo contrario, por ejemplo:\nint valor_letra = 67;\rchar letra = valor_letra;\rcout \u0026lt;\u0026lt; valor_letra \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; letra \u0026lt;\u0026lt; endl; Esto imprimir√°:\n67 = C Para crear el mensaje secreto usaremos una palabra clave, a partir de la cual codificaremos el nombre. La idea es recorrer cada caracter del nombre con una instrucci√≥n for, y al mismo tiempo recorrer cada caracter de la palabra clave. Entonces sumaremos el valor del caracter del nombre y de la palabra clave, y el resultado ser√° un caracter nuevo, que har√° que el mensaje est√© encriptado.\nPor ejemplo, si mi palabra clave es reina y el nombre que quiero encriptar es programador, el programa tiene que sumar primero la 'r' y la 'p', y el resultado guardarlo en lugar de la \u0026lsquo;p\u0026rsquo; en el string \u0026ldquo;programador\u0026rdquo;. Luego sumar√≠a la 'r' y la 'e', la 'o' y la 'i', etc. Cuando estemos en el caracter 5 del string programador (contado el primero como 0), tendremos que dar la vuelta en el string reina y comenzar en el caracter 0 devuelta, es decir, la letra 'r', ya que el string reina no tiene m√°s caracteres.\nPara eso, vamos a reunir parte de lo que ya hicimos, y debemos seguir los siguientes pasos:\nCrea una variable del tipo string para que sea la palabra clave. Ingresa su valor por consola. Declara una variable tipo int e inicializarla en 0. A esta variable, le sumaremos 1 en cada ciclo del for para recorrer la palabra clave. En la instrucci√≥n for, crea una variable tipo int que sea igual a la suma del caracter del nombre (nombre[i]) y el caracter de la palabra clave en la posici√≥n del contador (clave[contador]). A esta suma le debemos restar una letra min√∫scula 'a' para que la suma corresponda a una letra y no otro caracter del c√≥digo ascii. Utiliza una instrucci√≥n if para determinar si la suma de caracteres corresponde a un caracter mayor a 'z'. Si es as√≠, a este n√∫mero se le debe restar 25 (la cantidad de letras del abecedario) para que el n√∫mero de la vuelta, y comience por la letra 'a'. Iguala el caracter nombre[i] a la variable int con la suma. Esto cambiar√° la letra original por el carcater nuevo. Suma 1 al contador que llevamos de la palabra clave. Programa una condici√≥n donde si el contador de la palabra clave, es mayor o igual al largo del string clave, el contador volver√° a valer 0. Por √∫ltimo, luego de la instrucci√≥n for, imprime por consola la variabale nombre. Como ayuda, recuerda que puedes volver a las otras actividades.\nUna vez completado los pasos, ¬°comienza a jugar y a encriptar tus palabras! Apret√° Run y escribe en la consola la palabra clave seguida por la tecla enter, y luego el nombre o palabra a encriptar, seguido tambi√©n de un enter. Por ejemplo, puedes copiar y pegar lo siguiente en la consola:\nprogramador\rreina Ten cuidado, en este programa siempre debemos escribir los strings y caracteres en letra min√∫scula.\rLanza Replit\nCuidado. Para pegar algo en la consola, haz click derecho pegar. De otra forma puede no funcionar.\r"
},
{
	"uri": "/es/secret-messages/activity-6/",
	"title": "Actividad 6 - Funciones",
	"tags": [],
	"description": "",
	"content": "\n¬°Muy bien!\n¬°Ya hiciste gran parte del programa!\nEn esta actividad vamos a utilizar las funciones para agrupar partes del c√≥digo.\nFunciones Las funciones nos permiten dividir el trabajo que hace un programa en tareas m√°s peque√±as separadas de la parte principal, es decir, de la funci√≥n main.\nPodemos entender a las funciones como una m√°quina que cuando la prendemos, ejecuta unas instrucciones y procesos, que me devuelven un resultado final. Se pueden tener varias m√°quinas que realizan distintos procesos, e identificamos a cada una con el tipo de resultado que devuelve y un nombre.\nEn esta actividad usaremos las funciones tipo void (vac√≠o), que no devuelven nada, sino que solo procesan instrucciones.\nPara declarar (crear) una funci√≥n, debemos usar la siguiente estructura fuera de la funci√≥n main:\nvoid nombre_funcion(){\r//Ac√° va el c√≥digo\r} En este c√≥digo podemos distinguir:\nEl tipo de variable. Primero que todo debemos indicar qu√© devolver√° la funci√≥n. En este caso es void por lo que no devolver√° nada. El nombre que queremos darle a la funci√≥n. En el ejemplo es: nombre_funcion. Los par√©ntesis () que se a√±aden al nombre para identificar que es una funci√≥n. Las llaves {} que determinan el bloque de c√≥digo que ejecutar√° la funci√≥n. Llamar a una funci√≥n Como dijimos, las funciones van fuera de la funci√≥n main(). Por lo tanto, cuando apretemos Run, el bloque de c√≥digo de las funciones no se ejecutar√°n. Por eso, dentro de la funci√≥n main() debemos llamar a la funci√≥n. Debemos indicarle al programa cuando queremos que se ejecute ese bloque de c√≥digo. Para llamar a una funci√≥n, debemos usar la siguiente instrucci√≥n:\nnombre_funcion(); Solo debemos escribir el nombre que le dimos a la funci√≥n, seguidos de los par√©ntesis, y por supuesto un punto y coma ; Esto har√° que se ejecuten las instrucciones que est√°n dentro de la funci√≥n nombre_funcion().\nPar√°metros de una funci√≥n Cuando declaramos una funci√≥n, le podemos pasar par√°metros. Estas son variables que le damos a la funci√≥n para usar, porque, la funci√≥n al no estar en la funci√≥n main, no puede acceder a las variables que declaramos all√≠. Los par√°metros van dentro de los par√©ntesis de la funci√≥n. Ejemplo:\nvoid nombre_funcion(int suma, int \u0026amp;numero){\rnumero += suma;\r} Y en la funci√≥n main deber√≠amos tener lo siguiente:\nint main(){\rint x = 25;\rint y = 5;\rnombre_funcion(y, x);\r} Entendamos en detalle lo que hicimos:\nEn la funci√≥n, escribimos dentro de los par√©ntesis que variables le vamos a pasar. Luego, dentro de la funci√≥n podemos usar esas variables. En main, ten√≠amos dos variables ya declaradas, que luego le pasamos como par√°metro a la funci√≥n creada. Al hacer esto, la variable suma se iguala a la variable y. La variable numero tiene este s√≠mbolo adelante \u0026amp;. Esto significa que si modificamos la variable numero dentro de la funci√≥n, tambi√©n se modificar√° la variable que le pasemos en la funci√≥n main. Es decir, la variable x ser√° modificada por la funci√≥n ya que la pasamos por referencia al escribir ese s√≠mbolo delante. Cuando no ponemos este s√≠mbolo, aunque modifiquemos su valor en la funci√≥n, en main no veremos ese cambio. ¬°Genial! Vamos a crear 2 funciones. Una para encriptar el mensaje, y la otra para desencriptarlo. Para esto, vamos a usar c√≥digo que ya ten√≠amos, y programaremos algo nuevo tambi√©n.\nDeclara una funci√≥n void, igual que la de encriptar, pero para desencriptar el nombre.\nCopia el contenido de la funci√≥n encriptar() en la nueva funci√≥n.\nEn la variable suma, en vez de sumar, realiza una resta del car√°cter del nombre y del car√°cter de la palabra clave, y suma una letra \u0026lsquo;a\u0026rsquo; (no resta) para que el car√°cter final sea una letra del abecedario y no cualquier car√°cter.\nCambia la condici√≥n para dar vuelta en el abecedario. En vez de ver si la suma es mayor al car√°cter \u0026lsquo;z\u0026rsquo;, escribe si la suma es menor a \u0026lsquo;a\u0026rsquo;, y luego si se cumple esa condici√≥n, suma 25 a la variable suma (no resta).\nEn la funci√≥n main, llama a la funci√≥n correspondiente en la condici√≥n si es para encriptar o desencriptar un mensaje.\nCuando termines, puedes apretar Run y probar con los siguientes ejemplos:\nprogramador\r1\rreina witvczxipigrmg\r2\rreina ¬°Tambi√©n inventa tus propias palabras secretas!\nTen cuidado, en este programa siempre debemos escribir los strings y caracteres en letra min√∫scula.\rRecuerda que siempre puedes volver a las actividades anteriores para recordar algo.\nLanza Replit\nCuidado. Para pegar algo en la consola, haz click derecho pegar. De otra forma puede no funcionar.\r"
},
{
	"uri": "/es/secret-messages/activity-7/",
	"title": "Actividad 7 - Input line",
	"tags": [],
	"description": "",
	"content": "\n¬°Felicitaciones!\nEst√°s muy cerca de salvar por completo a la naci√≥n.\n¬°Solo falta poder ingresar una frase completa!\nPara esto solo tenemos que hacer unos peque√±os cambios.\nPrimero, debes usar la instrucci√≥n getline() para ingresar el string:\nstring frase;\rgetline(cin, frase); De esta manera, en la consola podemos ingresar un mensaje completo, no una sola palabra.\nSigue estos pasos, y finaliza el programa para salvar al Reino:\nEn la funci√≥n main, cambia la instrucci√≥n cin \u0026gt;\u0026gt; nombre; por getline(cin, nombre).\nEn ambas funciones, agrega una condici√≥n if en el ciclo for, para que si el caracter que estamos visitando es mayor o igual \u0026gt;= al caracter a y menor o igual\u0026lt;= al caracter 'z', entonces que se ejecute todo lo que ten√≠amos dentro del ciclo. Esto servir√° para no encriptar signos de admiraci√≥n, comas, o espacios.\nComo ejemplo recuerda la estructura de la entrada: Primero debe ir el mensaje encriptado o a encriptar, luego un 1, si queremos encriptar el mensaje, o 2, si queremos desencriptarlo. Por √∫ltimo, debe ir la palabra clave.\n¬°Crea tus propios mensajes secretos, o desencripta la de tus compa√±eros!\nTen cuidado, en este programa siempre debemos escribir los strings y caracteres en letra min√∫scula.\r¬°Recuerda que siempre puedes volver a las actividades anteriores para recordar algo!\nLanza Replit\n"
},
{
	"uri": "/es/secret-messages/activity-8/",
	"title": "Fin",
	"tags": [],
	"description": "",
	"content": "¬°Muchas Felicitaciones!\nHas hecho un gran trabajo para llegar hasta ac√°. Lo lograste. Has salvado al reino y adem√°s aprendiste a programar.\nUsaste la consola para ingresar y enviar mensajes encriptados o desencriptados. Las variables te fueron de gran ayuda para guardar los mensajes que se quer√≠an enviar. Usaste los ciclos para analizar letra por letra del mensaje. Las condiciones fueron √∫tiles para saber si se quer√≠a encriptar o desencriptar, y tomar una decisi√≥n en base a ello. Y por √∫ltimo, el c√≥digo ascii te permiti√≥ saber el valor de cada caracter, y as√≠ poder hacer secretos los mensajes.\nEl rey te ha enviado un mensaje encriptado de especial agradecimiento. Aqu√≠ te lo dejamos para que utilices tu programa para desencriptarlo y poder leerlo:\ntkioeapo sggvjosrdbr, hz jtzcu ke qnfdfjjohr ez guof fvzoxrb. lrh hxjozrs cugwvhgc rvee mxqyek bkfsmjhh vdlgk da eelcr o qd, vvrb guotxrh g lu srdc romrg, vl eelcg tkig r smlyd. wkzhzv ex sxevhysxge pe hhlp foizoz. txh ypswrzdmdhh teed vjosrdbrsgg ygn nrlzdpfikk, sun gjup ls kkpqrd jf vjot wuguud, uefrk kesuuoetfik ryhddgri r bbthbs pok tf hbk peoezvcrh. zmvusws md xggf y pevirrrprv dqshbht√±g. zg wayiowr hvor q tbdr sd fmshdo qswo vjvgtrmqnws rvjojvcudr qgd ndy. wexifwlptwufef. hrn lxvckk qhe iskjvxgj, pbrtjv pussrs pe vodlrgtgs, tav ohhvcjzdb uqo ypswrzdmd lbhejigft√≠fipo ikv ik keevlgr cmqng, hms dejtfrouo m pudxhrbgj. efphgg lgzcvr m eqqgdlggjnbs hc vb wjzmrb. qxsue r hb uifprhzrz√≥c. gleztdbvdls, kd rqy.\r2\rprogramador Lanza Replit\nCuidado. Para pegar algo en la consola, haz click derecho pegar. De otra forma puede no funcionar.\r"
},
{
	"uri": "/es/javascript-blocks-earsketch/activity-2-make-a-song/",
	"title": "Actividad 2 - Hagamos una canci√≥n!",
	"tags": [],
	"description": "",
	"content": "Ahora que has aprendido c√≥mo agregar sonidos a Earsketch, ¬°intentemos hacer una canci√≥n! Ya deber√≠as tener un clip de audio en Earsketch, pero las canciones est√°n compuestas por varios instrumentos, as√≠ que necesitamos agregar m√°s clips de audio.\nAgrega otro bloque fitMedia(). Encuentra un clip de audio que te gustar√≠a agregar a tu canci√≥n actual e ins√©rtalo en el par√°metro sound. El par√°metro track debe ser un n√∫mero √∫nico. Esto nos permitir√° colocar nuestros sonidos en diferentes pistas. Tener diferentes sonidos en diferentes pistas nos permite mantener la organizaci√≥n de nuestros sonidos y reproducir diferentes sonidos al mismo tiempo. Ejemplo: si la primera llamada de fitMedia() est√° en la pista 1, la segunda llamada de fitMedia() debe estar en la pista 2. Completa el resto de los par√°metros. Repite estos pasos hasta que tengas cuatro sonidos de audio diferentes en tu canci√≥n. Tu c√≥digo deber√≠a verse algo as√≠:\n"
},
{
	"uri": "/es/csharp-guess-the-word/activity-1/",
	"title": "Activitdad 1 - Escribe en la consola",
	"tags": [],
	"description": "",
	"content": "Actividad 1 Navega al c√≥digo que contiene el juego GuessTheWord o Adivina la Palabra. F√≠jate que Press 'run' on the top of the screen to play again. es la √∫nica cosa que se imprime a la consola. Agreguemos un mensaje de bienvenido para que el jugador sepa que est√© jugando GuessTheWord o Adivina la Palabra.\nEncuentra // TODO (ACTIVITY 1) en el c√≥digo. A√±ade una l√≠nea de c√≥digo para imprimir Welcome to C# GuessTheWord o \u0026quot;Bienvenido al juego de C# AdivinaLaPalabra\u0026quot; a la consola. Si lo hiciste correctamente, veras el texto impreso en la consola despu√©s de presionar ‚Äòrun‚Äô.\n"
},
{
	"uri": "/es/adafruit/downloading-your-program/",
	"title": "Descargando el Programa",
	"tags": [],
	"description": "",
	"content": "En la parte inferior de tu espacio de trabajo, deber√≠a ver este bot√≥n rosado de descarga al lado del nombre de tu programa. Puedes asignarle un nombre a tu programa, aqu√≠ se llama adafruit_musicalfruit. Haz clic en el bot√≥n de descarga.\nDebe apareceruna ventana emergente, preguntando d√≥nde guardar tu archivo. Lo usual es que abra apuntando a la carpeta Descargas; de lo contrario, ve a tu carpeta de descargas y guarda el archivo all√≠.\nAhora puedes conectar tu cable USB a la computadora. ¬°Deber√≠as poder ver algunas luces que prenden! Esto significa que tu chip est√° encendido y ejecuta el programa predeterminado. Vamos a reemplazar eso con nuestro programa. Haz clic en el peque√±o bot√≥n de reinicio en el centro del chip. Las luces deben volverse rojas y luego verdes. Si las luces no se pusieron verdes, haz doble clic r√°pidamente en el bot√≥n de reinicio y espera unos segundos\nUna vez que las luces est√©n verdes, abre una ventana del Explorador de Windows (puedes abrir una apretando las teclas Windows + E al mismo tiempo)si no aparece ninguna. Ahora deber√≠a ver una unidad CPLAYBOOT. Aqu√≠ se muestra como la unidad D: pero podr√≠a ser E :, F :, etc.\nUna vez que hayas verificado que puedes ver este CPLAYBOOT, ve a la carpeta Descargas y busca el archivo que guardaste all√≠. Debes hacer clic y arrastrar ese archivo hasta que pase el mouse sobre CPLAYBOOT. Deber√≠a ver un texto emergente que dice \u0026ldquo;-\u0026gt; Mover a CPLAYBOOT\u0026rdquo;. Coloque el archivo all√≠ para copiarlo en CPLAYBOOT\nUna vez que hayas dejado el archivo en el lugar correcto, las luces verdes se apagar√°n para indicar que ha programado con √©xito tu Adafruit.\n¬°FELICITACIONES! ¬°Lo lograste!. Si√©ntase libre de regresar y ajustar los sonidos o su n√∫mero m√°gico en las comparaciones "
},
{
	"uri": "/es/python-earsketch/getting-started-earsketch/",
	"title": "Introducci√≥n a EarSketch",
	"tags": [],
	"description": "Introducci√≥n a EarSketch",
	"content": "EarSketch\res un entorno de programaci√≥n educativa gratuito desarrollado en el Instituto de Tecnolog√≠a de Georgia. Hoy compondremos m√∫sica usando EarSketch.\nPara hacer m√∫sica, clic en el bot√≥n de abajo para abrir Earsketch en una nueva pesta√±a. Abrir Earsketch\nClic donde dice Scripts en el menu izquierdo y selecciona Create a new script. Cuando te salga que introduzcas el number del script, coloca myjam (mis sonidos) y dale click en el buton de Create. ¬°No borrar ning√∫n c√≥digo que ya este escrito! Colocaremos nuestro c√≥digo en estas l√≠neas. Resumen de EarSketch Es importante que entiendas como funciona EarSketch antes de que comiences la clase. De esta manera podr√°s navegar la interfaz adecuadamente.\nLa barra de navegaci√≥n en el lado izquierdo de la pantalla es su base de operaciones para navegar a trav√©s de todo lo que EarSketch tiene para ofrecer.\nEl primer elemento de la barra de navegaci√≥n es la colecci√≥n de sonidos (o Sounds). Es la ubicaci√≥n central para todos los sonidos precargados que earsketch tiene para ofrecer. En el navegador de sonido, puede filtrar qu√© sonidos aparecen en funci√≥n de los artistas, el g√©nero o los instrumentos.\nEl siguiente icono de la barra de navegaci√≥n es el panel que dice Scripts. Aqu√≠ es donde escribiremos nuestro c√≥digo.\nEl siguiente icono (tercero desde la parte superior) es la secci√≥n de Compartir (o Share). Puedes usar esto para guardar tu c√≥digo, descargarlo o compartirlo con tus amigos. Omitiremos esta secci√≥n para este ejercicio.\nLos dos √∫ltimos iconos de la barra de navegaci√≥n son el navegador API Browser y las gu√≠as de curr√≠culo (o Curriculum).\nUsaremos el API browser para hacer m√∫sica. ¬°Una interfaz de programaci√≥n de aplicaciones (por sus siglas en ingles Application Programming Interface) o API es un conjunto de c√≥digo que est√° listo para su uso de inmediato! Puede observar dos iconos a la derecha de cada API. El primer icono proporciona una descripci√≥n de la API y un ejemplo sobre c√≥mo utilizar la API. ¬°El segundo icono copia y pega la API en el editor de c√≥digo, por lo que ni siquiera es necesario escribirlo! Usaremos un par de estos en las pr√≥ximas secciones.\nEl √∫ltimo icono de la imagen anterior muestra la gu√≠a de gu√≠as de curr√≠culo (o Curriculum) plan de estudios. Si desea saber m√°s sobre EarSketch, puede explorar la secci√≥n que aparece en el lado derecho de la ventana al hacer clic en ella. Omitiremos esta secci√≥n para este ejercicio.\n"
},
{
	"uri": "/es/security/spy-game/",
	"title": "Juego de Esp√≠as",
	"tags": [],
	"description": "",
	"content": "De nuestra √∫ltima actividad aprendimos que una contrase√±a segura es una combinaci√≥n de caracteres aleatorios (posiblemente con letras may√∫sculas y min√∫sculas), n√∫meros y caracteres especiales. ¬°Ahora es el momento de jugar Hacked o Seguro!\nDe una lista de contrase√±as utilizadas por nuestro Nuvi, seleccione la contrase√±a m√°s segura que no pueda ser hacked (o rota) por Eva.\n¬øSe puede romper esta contrase√±a?\rS√≠\rNo\r¬øSe puede romper esta contrase√±a?\rS√≠\rNo\r¬øSe puede romper esta contrase√±a?\rS√≠\rNo\r¬øSe puede romper esta contrase√±a?\rS√≠\rNo\r¬°FELICITACIONES! Lo hiciste. Vea las respuestas haciendo clic en el bot√≥n de abajo. Hecho "
},
{
	"uri": "/es/security-phishing/other-phishing-types/",
	"title": "Otros tipos de phishing",
	"tags": [],
	"description": "",
	"content": "Alice contin√∫a explicando los diferentes tipos de estafas/phishing que existen adem√°s del phishing por correo electr√≥nico.\nSmishing (SMS Phishing) Smishing es phishing realizado a trav√©s de Short Message Service (SMS) o mensaje de texto. Un texto smishing, por ejemplo, intenta atraer a una v√≠ctima para que revele informaci√≥n personal a trav√©s de un enlace que conduce a un sitio web de phishing.\nEn la imagen de arriba, un remitente desconocido le env√≠a un mensaje de texto sobre ofertas gratuitas en iPads y lo atrae a hacer clic en un enlace malicioso.\nMalvertising o publicidad maliciosa La publicidad maliciosa es publicidad maliciosa que contiene scripts activos dise√±ados para descargar malware (programa maligno) o forzar contenido no deseado en tu computadora.\nEn la imagen de arriba, un malvertisment se mezcla en un sitio web genuino. Le anima a hacer clic en el bot√≥n de descarga. Esto puede llevarte a instalar un virus o un malware en tu computadora.\nPhishing en buscadores Algunas estafas de phishing involucran motores de b√∫squeda donde el usuario es dirigido a sitios de productos que pueden ofrecer productos o servicios de bajo costo. Cuando el usuario intenta comprar el producto ingresando los detalles de la tarjeta de cr√©dito, el sitio de phishing recopila esos detalles. Hay muchos sitios web bancarios falsos y anuncios de productos falsos que se utilizan para atraer a los usuarios a hacer clic en un enlace malicioso.\nMuchos buscadores como Google, Edge, Firefox colocan publicidad cada vez que haces una b√∫squeda. Aseg√∫rate de verificar bien el enlace antes de hacer clic en √©l para evitar ir a un de sitio web malicioso como se puedes ver en la imagen de arriba.\n"
},
{
	"uri": "/es/security/summary/",
	"title": "Resumen",
	"tags": [],
	"description": "",
	"content": "Recuerde que las Caracter√≠sticas de una Contrase√±a Segura son: Al menos 8 caracteres: cuantos m√°s caracteres, mejor. Una combinaci√≥n de letras y n√∫meros. Inclusi√≥n de al menos un car√°cter especial, p. Ej., ! @ # ? ] Nota: no use \u0026lt; o \u0026gt; en su contrase√±a, ya que ambos pueden causar problemas en los navegadores web. Una contrase√±a segura es dif√≠cil de adivinar, pero deber√≠a ser f√°cil de recordar - una contrase√±a que debe escribirse no es segura, sin importar cu√°ntas de las caracter√≠sticas anteriores se utilicen.\nSoluci√≥n En el juego de esp√≠as, las contrase√±as \u0026ldquo;Ilovemypet\u0026rdquo; y \u0026ldquo;12345678\u0026rdquo; son d√©biles y pueden ser rotas f√°cilmente por una persona malintencionada.\n"
},
{
	"uri": "/es/web-basics/html-attributes/",
	"title": "Atributos de HTML",
	"tags": [],
	"description": "",
	"content": "HTML y sus atributos Cada etiqueta tambi√©n puede tener informaci√≥n adicional como atributos de estilo que pueden cambiar las propiedades de un elemento. Hay atributos que podemos usar para cambiar la apariencia visual de un elemento, como el tama√±o, el color y la tipograf√≠a.\nTodos los atributos tienen un formato de este tipo: attribute-name=\u0026quot;value in quotes\u0026quot;. Por ejemplo, podemos cambiar el color de un p√°rrafo a rojo con este c√≥digo: \u0026lt;p style=\u0026quot;color:red\u0026quot;\u0026gt;Este texto es rojo\u0026lt;/p\u0026gt;.\nLas etiquetas de im√°genes necesitan un origen, as√≠ que necesitamos un atributo dentro de la etiqueta para decirle al navegador de donde tiene que tomar la imagen.\nAqu√≠ tienes un ejemplo: Y aqu√≠ est√° el resultado: "
},
{
	"uri": "/es/guidelines/formatting/",
	"title": "Aplicando formatos al texto",
	"tags": [],
	"description": "",
	"content": "Al crear o editar talleres, los redactar√°s usando sintaxis Markdown est√°ndar, adem√°s de unos pocos elementos adicionales. Esta p√°gina explica qu√© sintaxis usar para usar formatos espec√≠ficos en un taller.\nReferencia de formateo Hoja de trucos para Markdown Est√°ndar\r(en ingl√©s) Opciones de formato personalizado mediante ‚Äúshortcodes‚Äù\r(en ingl√©s) Ejemplos de formato Este tema incluye una serie de opciones para personalizar el aspecto de tu p√°gina. A continuaci√≥n, encontrar√°s varios ejemplos de uso de los mismos, los cuales incluyen la sintaxis que debe usar seguido de lo que se mostrar√° en la p√°gina al usar aquella sintaxis.\nAlertas Informaci√≥n {{\u0026lt; alert theme=\u0026quot;info\u0026quot; \u0026gt;}}**Esta** es una alerta de informaci√≥n{{\u0026lt; /alert \u0026gt;}}\rEsta es una alerta de informaci√≥n\r√âxito {{\u0026lt; alert theme=\u0026quot;success\u0026quot; \u0026gt;}}**Lo lograste!** es un ejemplo de un √©xito{{\u0026lt; /alert \u0026gt;}}\rLo lograste! es un ejemplo de un √©xito\rAdvertencia {{\u0026lt; alert theme=\u0026quot;warning\u0026quot; \u0026gt;}}***Ten cuidado** es una advertencia{{\u0026lt; /alert \u0026gt;}}\rTen cuidado es una advertencia\rPeligro {{\u0026lt; alert theme=\u0026quot;danger\u0026quot; \u0026gt;}}**Cuidado** es un ejemplo de un peligro{{\u0026lt; /alert \u0026gt;}}\rCuidado es un ejemplo de un peligro\rBotones {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; \u0026gt;}} ir a Nuevo Foundation {{\u0026lt; /button \u0026gt;}}\rir a Nuevo Foundation Bot√≥n de √âxito {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;success\u0026quot; \u0026gt;}} √âxito {{\u0026lt; /button \u0026gt;}}\r√âxito Bot√≥n de Informaci√≥n {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;info\u0026quot; \u0026gt;}} Informaci√≥n {{\u0026lt; /button \u0026gt;}}\rInformaci√≥n Bot√≥n de Advertencia {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;warning\u0026quot; \u0026gt;}} Advertencia {{\u0026lt; /button \u0026gt;}}\rAdvertencia Bot√≥n de Peligro {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;danger\u0026quot; \u0026gt;}} ¬°Peligro! {{\u0026lt; /button \u0026gt;}}\r¬°Peligro! Bot√≥n Predeterminado {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;default\u0026quot; \u0026gt;}} Predeterminado {{\u0026lt; /button \u0026gt;}}\rPredeterminado Expand {{\u0026lt; expand \u0026quot;¬°Haz click aqu√≠ para expandir!\u0026quot; \u0026gt;}}Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\rtempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\rquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\rconsequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\rcillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\rproident, sunt in culpa qui officia deserunt mollit anim id est laborum.{{\u0026lt; /expand \u0026gt;}}\r¬°Haz click aqu√≠ para expandir!\rLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nAvisos Aviso de Apunte {{\u0026lt; notice note \u0026gt;}}\rAviso de apunte\r{{\u0026lt; /notice \u0026gt;}}\rAviso de apunte\nAviso de Informaci√≥n {{\u0026lt; notice info \u0026gt;}}\rAviso de informaci√≥n\r{{\u0026lt; /notice \u0026gt;}}\rAviso de informaci√≥n\nAviso de Artima√±a {{\u0026lt; notice tip \u0026gt;}}\rAviso de artima√±a\r{{\u0026lt; /notice \u0026gt;}}\rAviso de artima√±a\nAviso de Advertencia {{\u0026lt; notice warning \u0026gt;}}\rAviso de advertencia\r{{\u0026lt; /notice \u0026gt;}}\rAviso de advertencia\nEjemplos de Iconos Disponibles Lista completa aqu√≠\r√çcono Nombre de √≠cono Ejemplo de uso asterisk {{\u0026lt;icon name=\u0026quot;asterisk\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} plus {{\u0026lt;icon name=\u0026quot;plus\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} euro {{\u0026lt;icon name=\u0026quot;euro\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} eur {{\u0026lt;icon name=\u0026quot;eur\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} minus {{\u0026lt;icon name=\u0026quot;minus\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} cloud {{\u0026lt;icon name=\u0026quot;cloud\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} envelope {{\u0026lt;icon name=\u0026quot;envelope\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} pencil {{\u0026lt;icon name=\u0026quot;pencil\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} glass {{\u0026lt;icon name=\u0026quot;glass\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} music {{\u0026lt;icon name=\u0026quot;music\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} search {{\u0026lt;icon name=\u0026quot;search\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} heart {{\u0026lt;icon name=\u0026quot;heart\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} star {{\u0026lt;icon name=\u0026quot;star\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} star-empty {{\u0026lt;icon name=\u0026quot;star-empty\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} user {{\u0026lt;icon name=\u0026quot;user\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} film {{\u0026lt;icon name=\u0026quot;film\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} th-large {{\u0026lt;icon name=\u0026quot;th-large\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} th {{\u0026lt;icon name=\u0026quot;th\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} th-list {{\u0026lt;icon name=\u0026quot;th-list\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} ok {{\u0026lt;icon name=\u0026quot;ok\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} remove {{\u0026lt;icon name=\u0026quot;remove\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} zoom-in {{\u0026lt;icon name=\u0026quot;zoom-in\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} zoom-out {{\u0026lt;icon name=\u0026quot;zoom-out\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} off {{\u0026lt;icon name=\u0026quot;off\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} signal {{\u0026lt;icon name=\u0026quot;signal\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} cog {{\u0026lt;icon name=\u0026quot;cog\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} trash {{\u0026lt;icon name=\u0026quot;trash\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} home {{\u0026lt;icon name=\u0026quot;home\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} file {{\u0026lt;icon name=\u0026quot;file\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} time {{\u0026lt;icon name=\u0026quot;time\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} road {{\u0026lt;icon name=\u0026quot;road\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} download-alt {{\u0026lt;icon name=\u0026quot;download-alt\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} download {{\u0026lt;icon name=\u0026quot;download\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} upload {{\u0026lt;icon name=\u0026quot;upload\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} inbox {{\u0026lt;icon name=\u0026quot;inbox\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} play-circle {{\u0026lt;icon name=\u0026quot;play-circle\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} repeat {{\u0026lt;icon name=\u0026quot;repeat\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} refresh {{\u0026lt;icon name=\u0026quot;refresh\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} list-alt {{\u0026lt;icon name=\u0026quot;list-alt\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} lock {{\u0026lt;icon name=\u0026quot;lock\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} flag {{\u0026lt;icon name=\u0026quot;flag\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} headphones {{\u0026lt;icon name=\u0026quot;headphones\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} volume-off {{\u0026lt;icon name=\u0026quot;volume-off\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} volume-down {{\u0026lt;icon name=\u0026quot;volume-down\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} volume-up {{\u0026lt;icon name=\u0026quot;volume-up\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} qrcode {{\u0026lt;icon name=\u0026quot;qrcode\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} barcode {{\u0026lt;icon name=\u0026quot;barcode\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} tag {{\u0026lt;icon name=\u0026quot;tag\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} tags {{\u0026lt;icon name=\u0026quot;tags\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} book {{\u0026lt;icon name=\u0026quot;book\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} bookmark {{\u0026lt;icon name=\u0026quot;bookmark\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} print {{\u0026lt;icon name=\u0026quot;print\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} camera {{\u0026lt;icon name=\u0026quot;camera\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} font {{\u0026lt;icon name=\u0026quot;font\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} bold {{\u0026lt;icon name=\u0026quot;bold\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} italic {{\u0026lt;icon name=\u0026quot;italic\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} "
},
{
	"uri": "/es/java-basics/activity-4/",
	"title": "Control Structures",
	"tags": [],
	"description": "Introducci√≥n a if-else, for, y while loops en Java.",
	"content": "1. Tomanndo Una Decision: If-Statement Patrick üê• es un pato muy cordial que le gusta saludar a todo el que conoce con \u0026ldquo;Good Morning,\u0026rdquo; \u0026ldquo;Good Afternoon,\u0026rdquo; o \u0026ldquo;Good Night\u0026rdquo; dependiendo del tiempo del d√≠a.\n(image by National Geographic: giphy.com/natgeochannel)\nComo aprendimos antes, podemos imprimir las siguientes oraciones:\nSystem.out.println(\u0026#34;Good Morning\u0026#34;); // se dice entre 0:00 - 11:59 System.out.println(\u0026#34;Good Afternoon\u0026#34;); // se dice entre 12:00 - 19:59 System.out.println(\u0026#34;Good Night\u0026#34;); // se dice entre 20:00 - 23:59 Sin embargo, tambi√©n sabemos que Patrick üê• solo puede decidir que decir dependiendo la hora.\nEn otras palabras, tenemos que escribir c√≥digo que tome la decisi√≥n sobre que imprimir dependiendo la situaci√≥n.\nEn Java, podemos tomar una decisi√≥n usando el if statement o if\u0026hellip;else statement:\nIf Statement if(boolean expression){\rstatement(s)\r} Un if statement tiene la siguiente esctructura mostrada arriba. Este m√©todo ejecutar√° el c√≥digo dentro del bloque solo si la expresi√≥n boolean iguala a true. Si no, el programa salta el bloque de c√≥digo.\nIf-Else Statement if(boolean expression){\rstatement(s) A\r}else{\rstatement(s) B\r} Un if-else statement tiene la siguiente esctructura mostrada arriba. Este m√©todo ejecutar√° el c√≥digo de statement(s) A del bloque solo si la expresi√≥n boolean iguala a true. Si no, el programa ejecutar√° el c√≥digo de statement(s) B dentro del else-block.\nEjemplo boolean likeMusic = true; if(likeMusic == true){ System.out.println(\u0026#34;I like Music\u0026#34;); }else{ System.out.println(\u0026#34;I don\u0026#39;t like Music\u0026#34;); } El c√≥digo imprimir√° I like Music (o \u0026lsquo;me gusta la musica\u0026rsquo;) porque la expresi√≥n boolean, likeMusic == true, es igual al valor de true.\nRepasa el ejemplo de arriba, y toma una decisi√≥n si Patrick debe decir \u0026ldquo;Good Morning,\u0026rdquo; \u0026ldquo;Good Afternoon,\u0026rdquo; o \u0026ldquo;Good Night\u0026rdquo;.\nPatrick deber√≠a decir \u0026ldquo;Good Morning\u0026rdquo; entre 0:00 - 11:59, \u0026ldquo;Good Afternoon\u0026rdquo; entre 12:00 - 19:59, y \u0026ldquo;Good Night\u0026rdquo; entre 20:00 - 23:59.\nTenemos la variable currentHour que guarda la hora actual. Llene la correcta boolean expression A y boolean expression B para completar su programa. Pruebe su resultado asignando la variable currentHour a un n√∫mero entre 0 y 23: Lanza Replit\n2. Rep√≠talo de nuevo: For-Loop, While-Loop En clase de matem√°ticas, la maestra de Patrick üê• le pregunta a la clase que solucione un problema, y tal vez Patrick necesite ayuda:\nLa maestra les pide que encuentren la suma de sum of 1, 2, 3, \u0026hellip;., 100. Es decir, que sumen 1 + 2 + 3 + 4 \u0026hellip; + 99 + 100?\nMeintras se puede usar la calculadora, eso tomar√≠a demasiado tiempro. Por suerte, en Java, podemos facilmente calcular esta suma con solo 3 l√≠neas de c√≥digo usando un for loop o while loop.\nFor loop u While loop son estructuras de control en Java que te permitem ejecutar bloques de c√≥digo multiples veces.\nWhile Loop while(boolean expression){\rstatement(s)\r} statement(s) en el bloque de while ser√°n ejecutados siempre y cuando el valor de el boolean expression sea true.\nEl siguiente ejemplo imprime los n√∫meros del 1 al 10:\nint number = 1; while(number \u0026lt;= 10){ System.out.println(number); number = number + 1; // n√∫mero incrementado por 1 } En el while loop del ejemplo arriba, el programa imprimir√° el valor de number e incrementa el valor de number. Este paso ser√° ejecutado siempre y cuando la variable number \u0026lt;= 10, y en este caso el loop termina cuando number sea 11.\nFor Loop for(initialization; termination condition; update statement){\rstatement(s)\r} En un for loop, hay tres partes en el bloque de condiciones: initialization, termination condition, y update statement.\nCuando se ejecuta un for loop, el programa primero corre la parte de initialization. Un ejemplo es, int number = 1. Luego, el programa chequea termination condition. Un ejemplo es number \u0026lt;= 10. Si es igual a true, ejecuta los statement(s) y el update statement (un ejemplo es number = number + 1) despu√©s repite el paso 2. Si es false, se termina el for loop. Lo siguiente es un ejemplo que imprime los n√∫meros entre el 1 y el 10:\nfor(int number = 1; number \u0026lt;= 10; number = number + 1){ System.out.println(number); } Luego de aprender sobre el for loop y el while loop, vamos a ver si Patrick üê• puede calcular 1 + 2 + 3 + 4 \u0026hellip; + 99 + 100 f√°cilmente?\nAhora intenetemos lograr la sumatoria usando un while loop:\nTenemos una variable llamada total que guarda el total de la sumatoria. Tenemos una variable llamada num que guarda el pr√≥ximo n√∫mero que ser√° sumado a total. Declara un boolean expression e imprimelo dentro del while loop. Luego de seguir estos pasos, terminamos con el siguiente c√≥digo:\nint total = 0; int num = 1; while(num \u0026lt;= 100){ total = total + num; num = num + 1; } System.out.println(\u0026#34;Answer calculated in a while loop: \u0026#34; + total); Pruebe esto presionando Run y escribe una versi√≥n del programa usando for loop que calcule lo mismo. Ambos programas deber√≠an resultar en el mismo valor.\nLanza Replit\n"
},
{
	"uri": "/es/python-turtle/activity-3/",
	"title": "Actividad 3 - Dibujar un hex√°gono",
	"tags": [],
	"description": "",
	"content": "\n¬°Buen trabajo! Acabas de dibujar tu primera figura con Python y Turtle. Hagamos otros peque√±os cambios al c√≥digo que escribimos para hacer el cuadrado e intentemos hacer un hex√°gono. Alex es una abeja as√≠ que despu√©s de todo, √©l necesita dibujar hex√°gonos para crear su colmena.\nPiensa en cu√°ntos lados tiene un hex√°gono. Si divides los 360¬∞ que tiene un c√≠rculo entre el n√∫mero de lados del hex√°gono, tendr√°s los grados del √°ngulo para hacer tu nueva figura.\n"
},
{
	"uri": "/es/javascript-blocks-earsketch/activity-3-add-effects-to-your-songs/",
	"title": "Actividad 3 - Agregar efectos a nuestra canci√≥n",
	"tags": [],
	"description": "",
	"content": "Efectos en EarSketch Los efectos permiten al productor alterar el sonido del clip de audio en su propio sonido √∫nico. Similar a c√≥mo usamos fitMedia() para agregar nuevos clips de audio, debemos usar la funci√≥n setEffect() para definir efectos espec√≠ficos para cada clip de audio. Es importante tener en cuenta que se pueden colocar m√∫ltiples efectos en la misma pista. Esto permite al productor combinar varios efectos juntos. EarSketch tiene muchos efectos incorporados. Para hacer referencia a todos los efectos, visite este enlace\ry aseg√∫rese de que el panel Curriculum est√© seleccionado en la barra de navegaci√≥n.\nAntes de comenzar a agregar efectos a nuestra canci√≥n, desglosemos las piezas de las dos funciones setEffect:\ntrack: El n√∫mero de pista al que se aplica el efecto. Nota: Para aplicar un efecto a la pista Master, use 0 como valor para la pista. La pista maestra es donde se reproducen colectivamente todos los audios. Esta es una manera f√°cil de aplicar un efecto a todos los sonidos que se est√°n procesando. effectType: El efecto espec√≠fico que se est√° utilizando. effectParameter: La configuraci√≥n para el efecto que se est√° utilizando. effectValue: El valor aplicado al efectoParameter. Agregar la funci√≥n setEffect a su canci√≥n Ahora que estamos m√°s familiarizados con el uso de efectos, agreguemos un efecto a nuestra canci√≥n.\nEncuentre el bloque de funci√≥n setEffect. Hay dos bloques setEffect; elija el primero en la parte superior. Arrastre el bloque al script debajo de sus bloques de c√≥digo existentes. Necesitamos reemplazar los par√°metros con nuestros propios valores. Use el men√∫ desplegable para reemplazar track con 2 (o cualquier n√∫mero que desee). Use el men√∫ desplegable para ver los diferentes efectos que se pueden seleccionar para el par√°metro effectType. Seleccione DELAY como effectType. Ahora que hemos elegido nuestro effectType, necesitamos un parameter. Seleccione DELAY_FEEDBACK para parameter. Para el √∫ltimo par√°metro, ingrese un valor v√°lido. Dado que hemos elegido DELAY_FEEDBACK, debemos especificar un n√∫mero entre -120,0 y -1,0. Ejemplo: Use -6,0 como valor de efecto para DELAY_FEEDBACK. Su c√≥digo ahora deber√≠a verse algo as√≠:\n"
},
{
	"uri": "/es/security-phishing/whats-phishy/",
	"title": "¬øQu√© es phishy?",
	"tags": [],
	"description": "",
	"content": "En nuestra √∫ltima secci√≥n aprendimos sobre diferentes tipos de m√©todos de phishing y c√≥mo reconocerlos. Ahora es el momento de probar tu conocimiento a trav√©s de un juego llamado ¬øQu√© es phishy??\n¬øQu√© im√°genes de la lista que se da a continuaci√≥n crees que son phishy?\n¬øTe parece que este correo es phishy?\rSi\rNo\r¬øTe parece que este banner es phishy?\rSi\rNo\r¬øTe parece que este mensaje es phishy?\rYes\rNo\r¬øTe parece que este mensaje es phishy?\rSi\rNo\r¬øTe parece que este correo es phishy?\rSi\rNo\rCheck answers! "
},
{
	"uri": "/es/python-earsketch/activity-1-set-tempo-add-sounds/",
	"title": "Actividad 1 - Establecer tempo y a√±adir sonidos",
	"tags": [],
	"description": "Actividad 1 - Establecer tempo y a√±adir sonidos",
	"content": "Echemos un vistazo m√°s de cerca al c√≥digo preexistente y entendamos lo que significa.\nColocaremos nuestro nuevo c√≥digo entre las funciones setTempo() y finish(). La funci√≥n setTempo() le permite establecer el tempo general del proyecto.\nDato r√°pido: Tempo es la velocidad a la que se reproduce una pieza de m√∫sica. Cambiar el tempo de un proyecto permite crear diferentes estilos de m√∫sica. ¬°Trata de cambiar el tempo de su funci√≥n setTempo y ver lo que sucede! Por favor, aseg√∫rese de que es un n√∫mero entre 45-220.\nActividad 1 Ahora que nuestro tempo est√° ajustado, es hora de a√±adir sonidos. Para ello, debemos utilizar la funci√≥n fitMedia(). Aseg√∫rese de que el cursor del programa est√° entre las funciones setTempo() y finish(). Navegue hasta el icono en el men√∫ del lado izquierdo donde dice Api Browser. Despl√°cese por la lista hasta la funci√≥n fitMedia(). Haga clic en pegar (copy/paste) en el icono de la esquina derecha de fitMedia() para insertar la funci√≥n entre las funciones setTempo y finish. Usted puede notar que cuando pega la funci√≥n, Earsketch produce algunos textos de marcador de posici√≥n que necesitaremos reemplazar m√°s adelante. Estos textos de marcador de posici√≥n tambi√©n se conocen como par√°metros (o parameters). Puede especificar sus propios valores para lo siguiente:\nfileName - navegue hasta el panel 'Sounds' (o sonidos) y encuentre un sonido que le guste. trackNumber - seleccione cualquier n√∫mero entero positivo como el n√∫mero de pista. startLocation/endLocation - estos par√°metros se cuantifican en medidas. Una medida es un segmento de tiempo que se correlaciona con un n√∫mero espec√≠fico de latidos. Sino estas seguro que valores colocar, intenta estos:\nfitMedia(YG_TRAP_ELECTRIC_PIANO_FILTERED_1, 3, 1, 17) Tu c√≥digo ahora debe parecerse a esto: from earsketch import * init() setTempo(120) fitMedia(YG_TRAP_ELECTRIC_PIANO_FILTERED_1, 3, 1, 17) finish() Tenga cuidado: aseg√∫rese de que la may√∫scula de la llamada al m√©todo es correcta. La mayor√≠a de los lenguajes de programaci√≥n, incluidos Python, distinguen entre may√∫sculas y min√∫sculas. Esto significa que agregar letras may√∫sculas puede llamar a una funci√≥n diferente de la esperada. Por ejemplo: fitMedia() no es lo mismo que FitMedia().\nUna vez que haya introducido sus propios par√°metros, pulse ejecutar. Luego haga clic en la reproducci√≥n para escuchar su clip de audio.\nSi ve alg√∫n texto rojo, ¬°haz encontrado algunos errores! Pide ayuda o intenta reconocer que puede estar faltando en tu c√≥digo puede ser un espacio o una palabra mal escrita. La funci√≥n fitMedia() es la columna vertebral para hacer m√∫sica en Earsketch. Vamos a utilizar esta funci√≥n mucho, as√≠ que, si tienes alguna pregunta con respecto a su uso, pregunta. Digital Audio Workstation (DAW) o estacion digital de audio es el area donde el sonido aparece. Esta en el centro en la parde de arriba de EarSketch. El siguiente ejemplo te muestra las diferentes secciones que una cancion puede tener en el DAW.\n"
},
{
	"uri": "/es/csharp-guess-the-word/strings/",
	"title": "Strings",
	"tags": [],
	"description": "",
	"content": "Strings Cualquier cosa que est√© entre comillas se llama un string. As√≠ se representan palabras o frases en las computadoras. Por ejemplo,\u0026quot;a\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;banana!\u0026quot;, y \u0026quot;Hello World\u0026quot; son strings, pero Hello World y 2 no son strings, porque no est√°n entre comillas.\nPuedes combinar varios strings usando el operador de +. Por ejemplo::\n\u0026quot;Manzana\u0026quot; + \u0026quot;Pi√±a\u0026quot; produce el string \u0026quot;ManzanaPi√±a\u0026quot;. \u0026quot;Nuevo\u0026quot; + \u0026quot; \u0026quot; + \u0026quot;Foundation\u0026quot; produce el string \u0026quot;Nuevo Foundation\u0026quot;. Console.WriteLine(\u0026#34;Manzana\u0026#34; + \u0026#34;Pi√±a\u0026#34;); Console.WriteLine(\u0026#34;Nuevo\u0026#34; + \u0026#34; \u0026#34; + \u0026#34;Foundation\u0026#34;); Trabajando junt@s En el programa de Replit debajo, empezamos el c√≥digo con la l√≠nea Console.WriteLine(\u0026quot;Nuevo\u0026quot; + \u0026quot; \u0026quot; + \u0026quot;Foundation\u0026quot;);.\nHay muchas maneras de combinar strings. Por ejemplo, otra manera de imprimir Nuevo Foundation podr√≠a ser Console.WriteLine(\u0026quot;Nue\u0026quot; + \u0026quot;vo Fou\u0026quot; + \u0026quot;ndation\u0026quot;);.\nPensaremos de, por lo m√≠nimo, una manera m√°s de imprimir \u0026quot;Nuevo Foundation\u0026quot; usando dos + s√≠mbolos en cada declaraci√≥n de Console.WriteLine. Verifica que Nuevo Foundation se imprima 3 veces. En otras palabras, tu consola debe aparecer as√≠:\nNuevo Foundation\rNuevo Foundation\rNuevo Foundation Lanza Replit\n"
},
{
	"uri": "/es/web-basics/activity-2/",
	"title": "Activity 2 - CSS",
	"tags": [],
	"description": "",
	"content": "Dale estilo con CSS Las etiquetas le indican al navegador qu√© elementos tiene que utilizar. Pero tambi√©n le tenemos que decir como mostrar esos elementos, y d√≥nde ponerlos. Puede que queramos el t√≠tulo en el centro o en el lado derecho. Puede que queramos una foto a la derecha y el p√°rrafo a la izquierda. Hay dos formas de hacer esto: usando atributos HTML u hojas de estilo en cascada ( en ingl√©s Cascading Style Sheets).\nCascading Style Sheets (CSS) Los atributos HTML son sencillos, pero pueden convertirse en algo complicado muy r√°pidamente. Si queremos utilizar muchos estilos, cada elemento HTML se puede volver muy largo y complicado de leer. Adem√°s, ¬øqu√© pasa si queremos usar el mismo estilo para varios elementos? Tendr√≠amos que copiar todos los atributos de cada elemento, eso no es eficiente y puede dar pie a errores. Para la mayor√≠a de los estilos, es mejor usar CSS.\nLos archivos CSS trabajan juntamente con las etiquetas HTML. Cada etiqueta HTML puede tener un atributo del tipo class y/o un atributo id que ayude a identificar a cada elemento. Varios elementos pueden tener la misma clase y un √∫nico elemento puede tener m√∫ltiples clases. Sin embargo, un elemento puede tener solo un √∫nico id y ese id no puede ser compartido con otros elementos. El archivo CSS usa estos atributos para mostrar estilos espec√≠ficos para cada class o id.\nMira este ejemplo de abajo:\nSee the Pen Styling it up by Deliana Escobari (@Sunny-Dee) on CodePen.\nHaz clic sobre la pesta√±a \"HTML\" en la esquina de arriba a la izquierda para ver el c√≥digo HTML, y en la pesta√±a \"CSS\" para ver el c√≥digo CSS.\rEchemos un vistazo al c√≥digo HTML. Intenta encontrar una etiqueta \u003c\u0026lt;div\u0026gt;\u003e con el atributo \"info\". Se ve as√≠ \u003c div id=\"info‚Äù \u003e. Al darle este \u003c\u0026lt;div\u0026gt;\u003e e id, podemos usar CSS para especificar estilos para este elemento espec√≠fico.\rCambia al archivo CSS. Tambi√©n le podemos dar estilo a todos los elementos de un tipo espec√≠fico, por ejemplo, podemos usar CSS para darles el mismo estilo a todos los elementos \u0026lt;p\u0026gt;. En el bloque header, le estamos diciendo al navegador que coloree todas las cabeceras (headers) con el color #0097A7 (que es el color verde azulado).\nHablemos ahora de la sintaxis (o la forma de escribir) para CSS. Primero, tienes que empezar con el elemento al que le quieres dar estilo. Si quieres darle estilo a todos los elementos que tengan la misma etiqueta (como por ejemplo \u0026lt;header\u0026gt;), s√≥lo tienes que escribir el nombre. Si quieres darle estilo a un elemento con una clase (class) o id, pon un . o un # delante del nombre de la clase o id respectivo. Luego, para cada propiedad que quieras cambiar, usa el formato attribute-name: value;. No olvides terminar cada l√≠nea con un ;. Todos estos estilos tienen que estar entre llaves { y }.\nHay muchos elementos de estilo para verlos todos en este tutorial. Si, en el boceto que has hecho anteriormente, no est√°s seguro de c√≥mo usar CSS para conseguir el estilo deseado, intenta hacer una b√∫squeda online.\nSi bien CSS entiende 140 nombres de colores tales como \u0026ldquo;green\u0026rdquo;, \u0026ldquo;red\u0026rdquo; y \u0026ldquo;blue\u0026rdquo;, esto puede ser todav√≠a poco. ¬øQu√© pasa si queremos usar un verde oscuro o un verde un poco m√°s claro? Para conseguir esto, podemos referirnos a los colores en su forma hexadecimal o RGB. Mira este link\rpara ver los colores y sus formas hexadecimales correspondientes.\nAgregar una nueva tipograf√≠a (o tipo de letra) Hay varios tipos de tipograf√≠a o letra. Esta parte del taller te muestra como importar varios tipos de letras a tu sitio web.\nVamos a importar la tipograf√≠a Heebo de internet. Primero importamos la tipograf√≠a en la parte superior del archivo CSS con esta sentencia: @import url('https://fonts.googleapis.com/css?family=Heebo|Open+Sans'); Luego la asignamos a la etiqueta body. Como esta etiqueta va a contener todos los dem√°s elementos HTML, nuestra selecci√≥n de tipograf√≠a se va a usar en todos los elementos. F√≠jate que el formato dentro de las llaves es: name: value; @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Roboto+Mono');\rfont-family: 'Roboto Mono', monospace; @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Indie+Flower');\rfont-family: 'Indie Flower', cursive; @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Pacifico');\rfont-family: 'Pacifico', cursive; @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Permanent+Marker');\rfont-family: 'Permanent Marker', cursive; Actividad 2 - A√±adir atributos y estilo Abre el editor web (clic en el bot√≥n ‚ÄúInt√©ntalo tu mism@!‚Äù de abajo) Agrega un atributo id a una de las etiquetas header. Por ejemplo, \u0026lt;header id=\u0026quot;page-title (o T√≠tulo de tu pagina)\u0026quot;\u0026gt; Cambia a la pesta√±a CSS #page-title\r{\rstyling here...\r} Cambia el color del t√≠tulo agreg√°ndole color: yellow (o amarillo); dentro de las llaves {} Cambia el color de la tipograf√≠a a√±adiendo font-family: \u0026lsquo;Roboto Mono\u0026rsquo;, monospace; dentro de las llaves y agregando @import url(\u0026lsquo;https://fonts.googleapis.com/css?family=Roboto+Mono');\ren la parte de arriba de la pesta√±a CSS Int√©ntalo tu mism@!\n"
},
{
	"uri": "/es/java-basics/activity-5/",
	"title": "M√©todos",
	"tags": [],
	"description": "Introducci√≥n a m√©todos en Java.",
	"content": "1. Qu√© son los m√©todos? Ya aprendimos como guardar data en variables, imprimir data, imprimir oraciones, y como tomar decisiones con los if-statement, for-loop, y while-loop.\nEn nuestro √∫ltimo ejemplo, aprendimos que el siguiente c√≥digo calcula la suma del 1 al 100:\nint total = 0; int num = 1; while(num \u0026lt;= 100){ total = total + num; num = num + 1; } System.out.println(\u0026#34;Sum: \u0026#34; + total); Pero si en vez queremos calcular la suma del 1 al 77? C√≥mo podemos lograr eso sin tener que reescribir el mismo c√≥digo?\nQueremos crear un ‚ú® magic box ‚ú® ( o caja magica) en el c√≥digo sin importar los dos n√∫meros que queremos sumar. En Java, un method es como un magic box que ejecuta ciertos pasos al ejecutar un c√≥digo usando los valores que ingrese un usuario.\nHay 2 partes en un method: header y body:\nHeader (o cabecero) de un M√©todo Para definir un method, primero escribimos el method header. Un method header tiene cuatro partes:\naccess specifier. public le deja saber a la computadora que cualquira puede usar ese method. private si solamente se puede accesar dentro de la misma clase donde se declara.\nreturn type. void significa que el m√©todo no retorna nada.\nmethod name.\nlist of parameters/ formate de input del usuario (type input name, type input name, \u0026hellip; ).\n// an example\rpublic void sing (String songName)\r1. 2. 3. 4. Composici√≥n de un M√©todo Ahora ponemos el bloque de c√≥digo asociado con el m√©todo en el method body, que es entre medio de { and } despu√©s del method header.\nPara retornar data, usamos la palabra clave return seguida por la variable name o un valor para ser retornado.\nEsto es un ejemplo de como definir un m√©todo que suma n√∫meros del numA al numB:\n/* Method Name: sumNum * Input/Parameter: 2 numbers of type int * Funtionality: return the sum from numA through numB */ public int sumNum(int numA, int numB){ int total = 0; int num = numA; // accesamos la primera entrada llamada numA while(num \u0026lt;= numB){ // accesamos la primera entrada llamada numB total = total + num; num = num + 1; } return total; // valor de la variable llamada total } Llamado de un M√©todo Por √∫ltimo, para ejecutar un m√©todo in tu c√≥digo, tenemos que asegura llamar el m√©todo via un method call. Lo gramos este escribiendo el nombr√© del m√©todo con las entrada requeridas. Por ejemplo:\nsumNum(1, 3); // una l√≠nea que llama el m√©todo sumNum() resultando en el valor de 6 Sabiendo que sumNum(1, 3) resulta en int con la suma del 1 al 3, podemos guardar el valor resultanteen una variable:\nint sum1to3 = sumNum(1, 3); 2. Cuenta la Pir√°mide!üî∫ (photo credit: aliexpress.com/item/32306945847.html)\nLa imagen de arriba es de una pir√°mide de n√∫meros cuadrados donde cada nivel es una ra√≠z cuadrada perfecta del n√∫mero del nivel actual desde el tope.\nEs decir, el nivel del tope tiene 1 * 1 beads, el segundo nivel tiene 2 * 2 beads.\nVamos a escribir un m√©todo que toma el n√∫mero total de niveles y resulta el n√∫mero total de beads (o pepitas) en la pir√°mide!\rLuego de finalizar el ejercicio, ver√°s el siguiente mensaje:\nFelicidades! Haz resuelto el desaf√≠o! Lanza Replit\n"
},
{
	"uri": "/es/python-turtle/activity-4/",
	"title": "Actividad 4 - Simplificando el c√≥digo con funciones",
	"tags": [],
	"description": "",
	"content": "Ya dibujamos un hex√°gono. Pero es s√≥lo uno de los muchos que necesita para construir su colmena. Una vez m√°s parece we tendr√≠amos que repetir el c√≥digo varias veces para dibujar muchos hex√°gonos. Afortunadamente no tenemos qu√© hacerlo. ¬°Las funciones vienen a nuestro rescate!\nFunciones Una funci√≥n es una manera de agrupar l√≠neas de c√≥digo para hacer algo. Por ejemplo, turtle.forward(50) mueve la tortuga hacia delante 50 paso y turtle.left(120) gira la tortuga 120 grados hacia la izquierda. ¬øY qu√© pasar√≠a si siempre quisieramos hacer esas dos cosas juntas? Podr√≠amos ponerlas en una funci√≥n que se llame draw_line() para que cada que mandemos llamar a esa funci√≥n esas dos acciones juntas sucedan.\nEste es un ejemplo de la definici√≥n de funcion y c√≥mo se usa\ndef draw_line(): turtle.forward(50) turtle.left(120) La primera l√≠nea se llama cabecera o header. La palabra def le dice a la computadora que estamos definiendo una funci√≥n. Despu√©s le pone a la funci√≥n un nombre, en este caso draw_line. Finalmente, no olvidemos esto que va al final: ():, que le dice a la computadora que estamos empezando el cuerpo de la funci√≥n.\nMaterial extra : Par√°metros Dentro de los par√©ntesis () solemos poner los par√°metros de la funci√≥n. Un par√°metro es un dato de entrada que le damos a la funci√≥n para que esta la use para generar una salida. Por ejemplo, para hacer una suma necesitamos dos d√≠gitos. Cada uno de estos d√≠gitos ser√≠a un par√°metro. En nuestro ejemplo no vamos a usar par√°metros as√≠ que vamos a dejar los par√©ntesis en blanco.\nSimilar a un ciclo for, lo que sea que queramos que la funci√≥n ejecute debe tener un tab el inicio.\nPero no basta s√≥lo con crearla sino que hay que mandarla llamar. Esto se hace escribiendo el nombre de la funci√≥n seguido de par√©ntesis:\ndef draw_line(): turtle.forward(50) turtle.left(120) draw_line() # Aqu√≠ llamamos a la funci√≥n A esto se le llama una llamada de la funci√≥n draw_line(). Una llamada corre el c√≥digo que tiene dentro la funci√≥n que estamos invocando.\nSi nos imaginamos la funci√≥n como una recete, una llamada a una funci√≥n es como hacer la receta.\nTips Siempre aseg√∫rate de que los nombres de tus funciones sean descriptivos. Es decir que digan qu√© hace la funci√≥n. Las llamadas a tu funci√≥n siempre deben estar escritas m√°s abajo que la definici√≥n de tu funci√≥n. La sintaxis \u0026ldquo;tricky\u0026rdquo; de Python - Parte 2 Notemos que las funciones usan una sintaxis similar a la que usan los ciclos for: tienes que poner el s√≠mbolo : al final de la l√≠nea donde se declara la funci√≥n y todas las l√≠neas que est√©n dentro de la funci√≥n deben empezar con dos espacios.\n¬øPero qu√© pasar√≠a si necesitaramos un ciclo for dentro de nuestra funci√≥n? Entonces hay que combinar las reglas. A continuaci√≥n hay un ejemplo de c√≥mo poner un ciclo for dentro de una funci√≥n:\ndef draw_line(): for i in range(3): turtle.forward(50) ¬øTe fijas c√≥mo la l√≠nea turtle.forward(50) tiene dos tabs al inicio? Esto es porque ocupa un tab por estar dentro del ciclo for y otro tab por estar dentro de la funci√≥n.\nIntentemos ahora crear nuestra propia funci√≥n y llam√©mosla draw_hexagon(). Recuerda incluir la cabecera o header dela funci√≥n, el n√∫mero de lados que tiene un hex√°gono y el √°ngulo que debes usar: 60 grados.\n"
},
{
	"uri": "/es/csharp-guess-the-word/activity-2/",
	"title": "Actividad 2 - Agregar al banco de palabras",
	"tags": [],
	"description": "",
	"content": "Actividad 2 Encuentra // TODO (ACTIVITY 2) en el c√≥digo de GuessTheWord. Para el juego de Guess the Word game o Adivina la palabra, , vamos a dar la computadora un banco de palabras, y la computadora va a escoger una palabra al azar para el juego. Aunque ya hemos a√±adido las palabras \u0026quot;Hello\u0026quot; y \u0026quot;World\u0026quot; tal banco de palabras, ¬°un juego de Adivina la palabra no es divertido con solo dos palabras! Tenemos que a√±adir por lo menos 3 strings m√°s al banco de palabras.\nOjo: El producto en la consola no ha cambiado desde la actividad pasada. ¬°No queremos revelar las palabras en el banco a los jugadores mientras que juegan! Para esta actividad, aseg√∫rate que no recibiste ning√∫n mensaje de error en la consola despu√©s de presionar run.\n"
},
{
	"uri": "/es/python-earsketch/activity-2-make-a-song/",
	"title": "Actividad 2 ‚Äì Haz tu propia canci√≥n!",
	"tags": [],
	"description": "Actividad 2 ‚Äì Haz tu propia canci√≥n",
	"content": "Ahora que has aprendido a a√±adir sonidos a Earsketch, vamos a tratar de hacer una canci√≥n. Ya deber√≠a tener un clip de audio en Earsketch, pero las canciones se componen de varios instrumentos, por lo que necesitamos a√±adir m√°s clips de audio.\nA√±ade otra llamada a fitMedia(). Busca un clip de audio que quieras a√±adir a tu canci√≥n actual e ins√©rtalo bajo el par√°metro de fileName. El par√°metro trackNumber debe ser un n√∫mero √∫nico. Esto nos permitir√° colocar nuestros sonidos en diferentes pistas/canciones. Tener diferentes sonidos en diferentes pistas/canciones nos permite mantener la organizaci√≥n de nuestros sonidos y reproducir diferentes sonidos al mismo tiempo. Ejemplo: Si la primera llamada fitMedia() est√° en la pista 1, la segunda llamada fitMedia() debe estar en la pista 2. Completa el resto de los par√°metros. Repite estos pasos hasta que tenga cuatro sonidos de audio diferentes en su canci√≥n Tu c√≥digo debe parecerse a este:: from earsketch import *\ninit() setTempo(120)\nfitMedia(RD_TRAP_BELLLEAD_1, 1, 5, 9) fitMedia(YG_TRAP_STRINGS_2, 2, 1, 17) fitMedia(YG_TRAP_ELECTRIC_PIANO_FILTERED_1, 3, 1, 17) fitMedia(YG_TRAP_BASS_9, 4, 1, 9)\nfinish() "
},
{
	"uri": "/es/javascript-blocks-earsketch/activity-4-use-effects-to-fade-in/",
	"title": "Actividad 4 - Usar efectos para fundir",
	"tags": [],
	"description": "",
	"content": "Ahora que tienes un efecto en tu canci√≥n, intentemos hacer que la introducci√≥n de nuestra canci√≥n se desvanezca.\nEn la actividad 3, usamos la funci√≥n setEffect para aplicar un efecto a una pista espec√≠fica durante toda la duraci√≥n de la canci√≥n, pero ¬øqu√© sucede si solo quieres que una secci√≥n espec√≠fica de tu canci√≥n tenga un efecto? ¬°Usa la funci√≥n setEffect con m√°s par√°metros!\nstartValue: El valor inicial aplicado al par√°metro start: La medida en la que se establece el valor inicial endValue: El valor final del par√°metro end: La medida en la que se establece el valor final Esta versi√≥n de setEffect nos permite realizar automatizaci√≥n en una pieza espec√≠fica de nuestra canci√≥n. La automatizaci√≥n es una forma de cambiar el valor de un efecto con el tiempo. Una forma de utilizar la automatizaci√≥n es hacer que una canci√≥n se desvanezca. Para hacerlo, debemos ajustar el volumen del par√°metro GAIN en el tipo de efecto VOLUME con el tiempo. Por ejemplo, si definimos nuestro startValue en -60 dB y nuestro endValue en 0 dB, sonar√° como si nuestra canci√≥n se estuviera desvaneciendo con el tiempo. Para ajustar el punto de inicio y la duraci√≥n del efecto, especifica el start y el end.\nAgrega otra funci√≥n setEffect a tu canci√≥n Agrega otro bloque setEffect a tu c√≥digo, pero aseg√∫rate de que haya 7 par√°metros en el bloque. Selecciona VOLUME para effectType utilizando el men√∫ desplegable. Selecciona GAIN para parameter utilizando el men√∫ desplegable. Si queremos que algo suene como si se desvaneciera, debemos hacer que el volumen del sonido comience muy bajo y aumentarlo gradualmente. Para hacerlo, establece startValue en un valor muy bajo (como -60) y endValue en un valor m√°s alto (como 0). Pista: El volumen se mide en decibelios. En decibelios, cuanto m√°s positivo es un n√∫mero, m√°s fuerte se vuelve. Adem√°s, trata de no superar los 0 decibelios.\nEstablece valores para los par√°metros start y end para especificar cu√°ndo comenzar y detener el efecto de desvanecimiento. Tu c√≥digo deber√≠a verse algo as√≠:\n"
},
{
	"uri": "/es/security-phishing/summary/",
	"title": "Resumen",
	"tags": [],
	"description": "",
	"content": "Conclusion En conclusi√≥n, las caracter√≠sticas comunes que se encuentran en las estafas de phishing tienen al menos una de las siguientes propiedades:\nOfertas lucrativas o declaraciones que llamen la atenci√≥n. Remitente inusual de comportamiento o car√°cter inesperado. Sentido de urgencia al pedirle que act√∫e r√°pido debido a ofertas u ofertas por tiempo limitado. Ejemplo: Su contrase√±a est√° a punto de caducar, haga clic aqu√≠ para cambiarla inmediatamente. Links o hiperv√≠nculos sospechosos. Faltas de ortograf√≠a o errores gramaticales. Ejemplo: mail@g00gle.com en lugar de mail@google.com Archivos adjuntos de correo electr√≥nico con nombres de archivo o extensiones aleatorios. Soluci√≥n En la actividad \u0026ldquo;Que es Phishy\u0026rdquo; los siguientes correos electr√≥nicos y mensajes de texto fueron posibles intentos de phishing:\nEl correo electr√≥nico de spotifyaccounts. El texto de Amazon para Airpods gratis. Un correo electr√≥nico de notificaci√≥n de voz. Recuerda siempre tener cuidado con lo que cargas o descargas de Internet por tu propia seguridad.\n"
},
{
	"uri": "/es/web-basics/media-elements/",
	"title": "Elementos multimedia",
	"tags": [],
	"description": "",
	"content": "Agregar un GIF Las siglas GIF significan Graphic Interchange Format, pero todo lo que debes saber es que es un tipo de imagen. La √∫nica diferencia es que este archivo contiene varias im√°genes. Cuando se muestra en el navegador, las im√°genes se reproducen de forma secuencial, similar a los frames (o marcos) de una pel√≠cula. Piensa en ellos como uno de esos cuadernos donde se ve una imagen animada seg√∫n se van pasando las p√°ginas.\nAgregar un video Aparte de texto e im√°genes, una de las cosas m√°s comunes que nos gusta agregar a un sitio web son videos. Los archivos de video tienen tama√±os muy grandes, as√≠ que es mejor usar un servicio para subir y mostrar los videos como por ejemplo YouTube. Una vez que el video se ha subido a YouTube, ¬øc√≥mo hacemos para que se vea en nuestro sitio web? Usaremos una etiqueta especial llamada iframe\nLos iframes muestran HTML desde otras p√°ginas web dentro de la tuya propia. Es como una ventana, donde puedes ver lo que pasa afuera en Internet desde tu propio sitio web. Este proceso se llama embeber. Por ejemple, el video de abajo es un iframe del Instagram de Benji:\nView this post on Instagram Push yourself to try new things! üçâ I stick to the paleo diet most days (usually just the meat part) but on occasion I go for something crazy\nA post shared by Benji Escobari Marquez (@benjimite_thegudboi) on Aug 25, 2018 at 10:05pm PDT\nMuchos sitios ofrecen iframes para ser embebidos en tu sitio web. Por ejemplo, aqu√≠ puedes ver c√≥mo encontrar el c√≥digo iframe para un video de YouTube:\nEjemplo de iframe Copia el siguiente c√≥digo: \u0026lt;iframe width=\u0026quot;560\u0026quot; height=\u0026quot;315\u0026quot; src=\u0026quot;https://www.youtube.com/embed/lQsqEBSGdyc\u0026quot; frameborder=\u0026quot;0\u0026quot; allow=\u0026quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\u0026quot; allowfullscreen\u0026gt; \u0026lt;/iframe\u0026gt;\nP√©galo en tu Code Pen y se ver√° de la siguiente forma:\n"
},
{
	"uri": "/es/java-basics/activity-6/",
	"title": "Objetos y Clases",
	"tags": [],
	"description": "Introducci√≥n a objetos y clases en Java.",
	"content": "1. Creando una Clase Java es un lenguaje de programaci√≥n orientado a objetos, cual significa que todo en Java est√° asociado con un objeto y una clase (el plano para un objeto).\nPor ejemplo, la l√≠nea de c√≥digo que usamos en la actividad 1 es una llamada de un m√©todo de una clase pre definida llamada System.\nSystem.out.println(\u0026#34;Hello World\u0026#34;); System es una clase que se usa para manejar entradas y salidas del usuario. out es una variable en la clase System de clas/tipo PrintStream. println() es un m√©todo pre definido en la clase PrintStream. Otra clase con la cual hemos interactuados en ejercicios previos es `String`. La clase `String` define un par de reglas que determinan como una lista de caracteres deber√≠an comportarse.\rCon el siguiente c√≥digo, creamos un objeto String llamado name usando las reglas definidas en la clase String:\nString name = \u0026#34;Patrick\u0026#34;; `System`, `PrintStream`, y `String` son clases pre definidas en Java. Sin embargo, no estamos limitados a solo usar ls clases pre definidas, y podemos crear nuestros propios tipos de data creando una clase. Esto es muy √∫til para que programadores puedan crear objectos espec√≠ficos con ciertos atributos y comportamientos. Teniendo acceso a tipos de data definidos por el usuario nos permite crear distintos programas.\rVamos a aprender sobre las distintas partes de una clase:\nClase Una clase es un plano o prototipo de un objeto nuevo. Por lo general, una clase contiene tres partes importantes√ë (1) campos de data/variables de instancia (2) constructor (3) m√©todos.\ncampos de data/variables de instancia: Estas son las variables que un objeto de esta clase tiene acceso a. Por ejemplo: Una clase llamada Car puede tener variables tire de la clase Tire.\nconstructor: un m√©todo para crear un objeto de esa Clase.\nm√©todos: Los m√©todos de un objeto dentro de una clase.\nPor ejemplo:\npublic class SampleClass{ // (1) campos de data/variables de instancia private String name; // ejemplo // (2) constructor public SampleClass(){ name = \u0026#34;example\u0026#34;; } // (3) m√©todos public sampleMethod(){} } 2. Vamos a Intentarlo üê• Vamos a crea una clase Bird para representar a Patrick üê• y todos sus amigos p√°jaros siguiendo los siguientes pasos.\nLanza Replit\nPrimero, empezamos definiendo el nombre de la clase usando el formato public class name. public class Bird{} Segundo, declaremos todos los campos de data que necesitaremos para la clase Bird: species, name, hobby, age, loveMusic. Cada campo de data esta declarado en el formato: private data type name ;.\nDeclaramos los 5 campos como private en la clase Bird. Nos ayuda a asegurarnos que la data solo pueda ser accesada dentro de su misma clase.\nIdentifiquemos un tipo de data adecuado para cada campo:\nspecies deber√≠a ser String que guarde por ejemplo: \u0026ldquo;duck\u0026rdquo;, \u0026ldquo;swan\u0026rdquo;, \u0026ldquo;owl\u0026rdquo;. name deber√≠a ser String que guarde por ejemplo: \u0026ldquo;Patrick\u0026rdquo;. hobby deber√≠a ser String que guarde por ejemplo: \u0026ldquo;play basketball\u0026rdquo;. age deber√≠a ser int que guarde por ejemplo: 25. loveMusic deber√≠a ser boolean que guarde el valor true o false. Por ejemplo, para declarar species como una clase privada Bird, usar√≠amos private String species; .\nTermina de crear los 4 campos de data de la clase Bird. Tercero, vamos a crear el constructor de la clase Bird. Usualmente, un constructor es un m√©todo que inicializa el valor de todos los campos. Teine el formato public class name (parameter). Tenemos 5 campos de data en la clase, y por eso tenemos 5 parametros/entradas en el constructor.\npublic Bird(String speciesInput, String nameInput, String hobbyInput, int ageInput, boolean loveMusicInput){ // cuerpo del constructor } En el cuerpo del constructor, necesitamos inicializar todas las variables de instancia, asignandole a cada campo de data un valor inicial:\nspecies = speciesInput; name = nameInput; hobby = hobbyInput; age = ageInput; loveMusic = loveMusicinput; Por √∫ltimo, vamos a crear unos m√©todos para la clase Bird. Vamos a crear 6 m√©todos para esta clase.\ngetSpecies(); // retorna la especie de un p√°jaro getName(); // retorna el nombre de un p√°jaro getHobby(); // retorna el pasa tiempo de un p√°jaro getAge(); // retorna la edad de un p√°jaro getLoveMusic(); // retorna si al p√°jaro ama la m√∫sica toString(); // retorna la information como un string Intente escribir los primeros 5 m√©todos con lo que ha aprendido en los ejercicios previos.\nLuego, vamos a escribir el m√©todo `toString()` juntos.\rtoString() es un m√©todo que va a retornar un objeto de tipo String.\nVamos a retornar un String que incluye todos los campos de la clase Bird: name, age, species, hobby, loveMusic llamando los 5 m√©todos que implementaste.\npublic String toString(){ // inicializa la variable info a un String vac√≠o. String info = \u0026#34;\u0026#34;; // agrega informaci√≥n al objetor String en el siguiente formato: // Hi, my name is [name]. I am a [age] year old [species] who likes to [hobby]. info = info + \u0026#34;Hi, my name is \u0026#34; + getName() + \u0026#34;. I am a \u0026#34; + getAge() + \u0026#34; year old \u0026#34; + getSpecies() + \u0026#34; who likes to \u0026#34; + getHobby() + \u0026#34;. \u0026#34;; // si al p√°jaro le gusta la m√∫sica, appen the Bird likes music, append the String \u0026#34;I also like music very much!\u0026#34; to info if(getLoveMusic()){ info = info + \u0026#34;I also like music very much!\u0026#34;; }else{ info = info + \u0026#34;However, I do not like music!\u0026#34;; } // retorna el valor de la variable info return info; } Si implementaste corectamente la clase Bird, ver√°s el siguiente mensaje luego de hacer click en Run:\nFelicidades! Haz implementado la clase Bird de forma correcta :) Si hay algo incompleto o incorrecto cuando oprimas Run:\nTal vez te salga el error Main.java:3: error: cannot access Bird. O si no, el mensaje, Something is still not quite right!. 3. Usando la clase Bird üê• Felicitaciones! Haz escrito su primera clase en Java, Bird class. Ahora vamos a escribir un programa que utilice la clase para crea objectos de tipo Bird.\nDefinimos la clase Bird para tener los siguientes atributos (variables de instancia) and y comportamientos (m√©todos): Para crear un objeto nuevo de una clase en particular, llamamos al de esa clase en el siguiente formato class name variable name = new constructor call.\nRecuerda que un constructor de la clase Bird es lo siguiente:\npublic Bird(String speciesInput, String nameInput, String hobbyInput, int ageInput, boolean loveMusicInput); Por esto, podemos crear un Bird con los siguientes atributos (species - duck; name - Patrick; hobby - hangout with friends; age - 15; loveMusic - true) con esta l√≠nea de codigo.\nBird patrick = new Bird(\u0026#34;duck\u0026#34;, \u0026#34;Patrick\u0026#34;, \u0026#34;hangout with friends\u0026#34;, 15, true); Intenta crear multiples p√°jaros de distintas especies usando la clase Bird üê¶üê§üêîüêß\nPr√≥ximo, usaremos el m√©todo `toString()` en los objetos de tipo `Bird` para imprimir la informaci√≥n de nuestros amigos. Puedes hacer una de las siguientes:\rImprimir el valor que retorna el m√©todo toString(). (i.e. System.out.println(patrick.toString());) Imprimir el objecto Bird quen en cambio llama el m√©todo toString() (i.e. System.out.println(patrick);). Intenta imprimir la informac√≠on de todos sus amigos p√°jaros üê¶üê§üêîüêß\nLanza Replit\n"
},
{
	"uri": "/es/python-turtle/activity-5/",
	"title": "Actividad 5 - Dibujar una colmena",
	"tags": [],
	"description": "",
	"content": "\r¬°Llegamos a la prueba final! Vamos a crear la colmena para que Alex viva en ella. Afortunadamente una colmena es cimplemente 6 hex√°gonos as√≠ que podemos usar lo que ya aprendimos sobre funciones y ciclos para crear la colmena.\nEn esta actividad primero crearemos una funci√≥n llamada draw_honeycomb(). Dentro del cuerpo de esta funci√≥n pondremos un ciclo que se repita seis veces. Dentro del ciclo dibujaremos el primer hex√°gono con la funci√≥n draw_hexagon() que ya tenemos construida. Ahora, movamos la tortuga un poco para que pueda pintar el siguiente hex√°gono. Para hacer eso necesitamos decirle al programa que al terminar de dibujar el hex√°gono se mueva hacia adelante 50 pixeles y luego gire a la derecha 60 grados.\nDibujar la colmena puede tomar un rato. Para que la tortuga vaya m√°s r√°pido puedes modificar la velocidad a la que se mueve. Las velocidades van del 1 al 10 donde 1 es la m√°s lenta y 10 la m√°s r√°pida. Pon el siguiente c√≥digo justo debajo de donde est√° la l√≠nea que cambia el color de la tortuga.\nturtle.speed(8) "
},
{
	"uri": "/es/python-earsketch/activity-3-organize-songs-using-functions/",
	"title": "Actividad 3 - Organiza tus canciones usando funciones",
	"tags": [],
	"description": "Actividad 3 - Organiza tus canciones usando funciones",
	"content": "En Earsketch, las funciones se utilizan principalmente para organizar diferentes secciones de una canci√≥n. La forma musical m√°s com√∫n es A-B-A donde cada secci√≥n tiene cuatro medidas de longitud, y las secciones A suenan diferentes de la secci√≥n B.\nAhora que aprendimos a usar funciones, vamos a tratar de usarlas para organizar mejor nuestras canciones.\nDefina la funci√≥n con un par√°metro startMeasure y un par√°metro endMeasure. Coloque los sonidos que desea que la funci√≥n represente debajo de la definici√≥n de la funci√≥n. Trate de hacer varias secciones de una canci√≥n (verso, coro, introducci√≥n, etc.) y definirlos con sus funciones. Si no lo hace, y solo utiliza varias llamadas fitMedia, notar√° que su programa ser√° largo y dif√≠cil de entender. Para ayudar a evitar tener un archivo de proyecto grande, ¬°utilice funciones! Tu c√≥digo deber√≠a parecerse a este:\nfrom earsketch import * init() setTempo(120) fitMedia(HOUSE_DEEP_CRYSTALCHORD_001, 3, 1, 5) fitMedia(HOUSE_DEEP_CRYSTALCHORD_002, 3, 5, 9) # Section A def sectionA(startMeasure, endMeasure): fitMedia(RD_UK_HOUSE__AIRYPAD_1, 1, startMeasure, endMeasure) fitMedia(HOUSE_MAIN_BEAT_002, 4, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) # Section B def sectionB(startMeasure, endMeasure): fitMedia(Y37_ORGAN_1, 2, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) fitMedia(RD_UK_HOUSE__ARPLEAD_1, 6, startMeasure, endMeasure) sectionA(1, 9) sectionB(9, 17) sectionA(17, 25) finish() "
},
{
	"uri": "/es/csharp-guess-the-word/numbers/",
	"title": "N√∫meros",
	"tags": [],
	"description": "",
	"content": "N√∫meros La computadora tambi√©n puede hacer operaciones matem√°ticas, como las que t√∫ haces en la escuela. Usa Console.WriteLine para imprimir el resultado de las expresiones matem√°ticas. No es necesario incluir comillas para los n√∫meros.\nConsole.WriteLine(5 + 4); Console.WriteLine(6 * (9 - 7) / 3); Aqu√≠ est√° una lista de los s√≠mbolos matem√°ticos que puedes usar:\nOperador Descripci√≥n Operador Descripci√≥n + Adici√≥n \\ Divisi√≥n - Sustracci√≥n % Modulo (Remanente) * Multiplicaci√≥n (,) Par√©ntesis Ojo: Divisi√≥n en la computadora La computadora divide los n√∫meros de una manera diferente comparado con una calculadora. Division en una computadora excluye los remanentes o decimales. Por ejemplo, 15 / 4 produce 3, y no 3.75.\nTrabajando junt@s Intenta imprimir los resultados de los siguientes a la consola. Aseg√∫rate que los par√©ntesis tienen pareja. Usa una calculadora (o hazlo t√∫ sol@) para verificar que tienes el resultado correcto.\n2 - 19 (3 + 5) * 6 (13 + 5 * 8) / (6 - (3 + 7)) Lanza Replit\nOjo: N√∫meros aleatorios Aqu√≠ ensenamos como imprimir un numero aleatorio entre 1 (inclusivo) y 10 (exclusivo):\nRandom random = new Random(); Console.WriteLine(random.Next(1, 10)); Intenta adivinar d√≥nde en nuestro juego de Adivina la palabra vamos a usar Random en el juego de GuessTheWord! Los n√∫meros aleatorios son complicados, entonces omitimos los detalles sobre c√≥mo funcionan en esta secci√≥n.\n"
},
{
	"uri": "/es/web-basics/activity-3/",
	"title": "Activity 3 - Adding a GIF of Nuvi",
	"tags": [],
	"description": "",
	"content": "Instrucciones Usa este link\rpara ver los GIFs disponibles Haz clic sobre uno que te guste y selecciona ‚ÄúEmbed‚Äù Copia el c√≥digo del cuadro blanco debajo de ‚ÄúGIF Embed Code\u0026quot;\nPega el c√≥digo en cualquier sitio de tu p√°gina siempre y cuando est√© dentro de las etiquetas \u0026lt;body\u0026gt;.\nInt√©ntalo tu mism@! "
},
{
	"uri": "/es/java-basics/activity-7/",
	"title": "Data Structures (Array &amp; ArrayList)",
	"tags": [],
	"description": "Introduce basic data structures in Java.",
	"content": "En los √∫ltimos ejercicios, aprendimos sobre varilables que nos permiten accesar y guardar un pedazo de data. Pero, y si quereos guardar mucha data parecida? Habr√° una manera buena de organizarlas sin declarar multiples variables?\nEn programaci√≥n, estructuras de dato son escructuras que permiten que programadores guarden multiples pedazos de data del mismo tipo. Usando estructuras de data es una manera eficiente de guardar y accesar pedazos grandes de data. En este ejercisio, aprederemos sobre 2 estructucas de data usadas en Java: array y ArrayList.\nMientras un array es un estructura de data de tama√±o fijo, ArrayList es una estructura de data de tama√±o variable donde uno puede cambiar el tama√±o de la estructura de dato. Empecemos con arrays.\n1. Array Digamos que queremos guardar la 5 pel√≠culas favoritas de Patrick üê•. En vez de crear 5 variables, podemos guardar las 5 pedazos de data en una array, nuestra primera estructura de dato.\nPara guardar data en un array, hacemos lo siguiente:\nPrimero declaramos un array especificando el tipo de data y su tama√±o (cantidad de data que puede ser guardada). String topMovies[] = new String[5]; // crea un array de tipo Strings de tama√±o 5. Vamos a iterar por el array (pasar por todos sus espacios) y asignarlo un pedazo de data a cada espacio en el array. Note que tenemos acceso el espacio usando el nombre del array y una √≠ndice (0 para accesar el primero espacio, 1 para el segundo \u0026hellip; ).\ntopMovies[0] = \u0026#34;Birds Of Prey\u0026#34;; topMovies[1] = \u0026#34;The Birds\u0026#34;; topMovies[2] = \u0026#34;Angry Birds\u0026#34;; topMovies[3] = \u0026#34;Bird Box\u0026#34;; topMovies[4] = \u0026#34;The Secret Life of Pets\u0026#34;; // el array topMovies ahora guarda \u0026#34;Birds Of Prey\u0026#34;, \u0026#34;The Birds\u0026#34;, \u0026#34;Angry Birds\u0026#34;, \u0026#34;Bird Box\u0026#34;, \u0026#34;The Secret Life of Pets\u0026#34; en ese orden Por qu√© el √≠ndice de un array comineza en 0? Es razonable pensar que para accesar el primer espacio de un array, usar√≠amos un √≠ndice 1.\nSin embargo, cuando la computadora lee arr[1], no piensa en ver el 1er espacio de arr.\nEn realidad, de la manera que la computadora lo piensa es arr[1] significa ver el espacio a 1 distancia del principo del array.\nEn otras palabras, el √≠ndice de hecho es desplazamiento de memoria. Para accesar el primer elemento debemos conseguir el elemento que est√° a una distancia de 0 desde el principio del array (i.e. arr[0]).\nAlternativa para crear un array: Si sabemos que todos los pedazos de data para un array de por adelantado, podemos crear un array en una l√≠nea al listar la data entre { y }.\nPor ejemplo:\nString topMovies[] = {\u0026#34;Birds Of Prey\u0026#34;, \u0026#34;The Birds\u0026#34;, \u0026#34;Angry Birds\u0026#34;, \u0026#34;Bird Box\u0026#34;, \u0026#34;The Secret Life of Pets\u0026#34;}; Al giaul que podemos accesar la data con un √≠ndice, tambi√©n podemos accesar y modificar cada pedazo de data con su √≠ndice correspondiente.\nPor ejemplo:\nString movie1 = topMovies[0]; // movie1 tiene el valor de \u0026#34;Birds Of Prey\u0026#34; Es √∫til saber cuantos espacios habr√°n en un array luego de crearse (por ejemplo, para accesar el √∫ltimo espacio en un array). Tambi√©n podemos conseguir el n√∫mero de espacios en un array con length al escribir array_name.length.\nPor ejemplo:\nint numOfMovie = topMovies.length; // numOfMovie tiene un valor de 5 Ejercicio: Esriber un m√©todo printArr() que tome un array como entrada e imprima todos los elementos en el array en orden (Sugerencia: Utilice un for loop y .length).\nLuego de Run, su programa debe imprimir lo siguiente:\nBirds Of Prey, The Birds, Angry Birds, Bird Box, The Secret Life of Pets Lanza Replit\n2. ArrayList ArrayList es otra estructura e data popular en Java. ArrayList es una clase que fue implementada usando arrays. Es similar a un array en cuanto a que un usuario puede accesar, guardar y modificar data usando un √≠ndice.\nCreas un ArrayList especificando su nombre y tipo entre \u0026lt; y \u0026gt;. Por ejemplo:\nArrayList\u0026lt;String\u0026gt; topMoviesList = new ArrayList\u0026lt;String\u0026gt;(); Para a√±adir elementos nuevos, llamamos al m√©todo add() en el ArrayList. Por ejemplo:\ntopMoviesList.add(\u0026#34;Birds Of Prey\u0026#34;); topMoviesList.add(\u0026#34;The Birds\u0026#34;); topMoviesList.add(\u0026#34;Angry Birds\u0026#34;); topMoviesList.add(\u0026#34;Bird Box\u0026#34;); topMoviesList.add(\u0026#34;The Secret Life of Pets\u0026#34;); // el ArrayList ahora guarda \u0026#34;Birds Of Prey\u0026#34;, \u0026#34;The Birds\u0026#34;, \u0026#34;Angry Birds\u0026#34;, \u0026#34;Bird Box\u0026#34;, \u0026#34;The Secret Life of Pets\u0026#34; en orden Para accesar un espacio en espec√≠fico, llamamos el m√©todo get(). Note Java usa √≠ndices empezando en el n√∫mero 0, asi que para accesr el primer elemento en un ArrayList llamamos el m√©todo get(0). Por ejemplo:\nString movie1 = topMoviesList.get(0); // movie1 tiene el valor \u0026#34;Birds Of Prey\u0026#34; Y para conseguir el n√∫mero de elementos (espacios) en un ArrayList, llamamos el m√©todo size(). For example:\nint numOfMovie2 = topMoviesList.size(); // numOfMovie2 tiene el valor 5 La diferencia m√°s importante entre array y ArrayList es que necesitas saber el n√∫mero de espacios que vas a necesitar para un array desde el principio antes de crearse, pero no para un ArrayList.\nCon la l√≠nea de c√≥digo String topMovies[] = new String[5] el array topMovies siempre tendr√° un tama√±o de 5. No puedes guardar m√°s de 5 Strings en topMovies luego de crearse.\nSin embargo, con la l√≠nea de c√≥digo ArrayList\u0026lt;String\u0026gt; topMoviesList = new ArrayList\u0026lt;String\u0026gt;(), el ArrayList empieza con 0 elementos a la cual se le puede a√±adir infinitamente o remover elementos del mismo.\nPara remover un elemento de un ArrayList, llamamos el m√©todo remove(). Por ejemplo:\nSystem.out.print(topMoviesList.size()); // imprime 5 topMoviesList.remove(\u0026#34;Birds Of Prey\u0026#34;); System.out.print(topMoviesList.size()); // imprime 4 Ejercicio: Escriba un m√©todo printList() que tome un ArrayList como entrada e imprime todos los elementos del ArryList en orden (Hint: Utilize for loop y size()).\nLuego de Run, el programa debe imprimir lo siguiente:\nBirds Of Prey, The Birds, Angry Birds, Bird Box, The Secret Life of Pets Lanza Replit\nFin del Workshop üê• Patrick üê• gracias por participar. Esperamos que hayas aprendido mucho en este curso :) (image created by Molang: giphy.com/molangofficialpage)\n"
},
{
	"uri": "/es/python-turtle/part-2/",
	"title": "Parte 2: Construyendo una Flor de Mandala",
	"tags": [],
	"description": "",
	"content": "\r¬°Buen Trabajo! Terminaste de construir un panal para la colmena de Alex, pero ¬°Alex tambi√©n necesita conseguir polen de las flores! ¬øNo seria agradable tambi√©n agregar una flor a la imagen? En la parte 2, ¬°crearemos una flor de mandala! (Permanece atento - te mostraremos como luce una flor de mandala.)\n"
},
{
	"uri": "/es/python-earsketch/activity-4-add-effects-to-your-songs/",
	"title": "Actividad 4 - A√±adir efectos a tu canci√≥n",
	"tags": [],
	"description": "Actividad 4 - A√±adir efectos a tu canci√≥n",
	"content": "Efectos en EarSketch Los efectos permiten al productor alterar el sonido del clip de audio en su propio sonido √∫nico. De forma similar a como usamos fitMedia() para a√±adir nuevos clips de audio, debemos utilizar la funci√≥n setEffect() para definir efectos espec√≠ficos para cada clip de audio. Es importante tener en cuenta que se pueden colocar m√∫ltiples efectos en la misma pista. Esto permite al productor combinar m√∫ltiples efectos juntos. Earsketch tiene muchos efectos incorporados. Para hacer referencia a todos los efectos, visite este enlace\rAntes de empezar a a√±adir efectos a nuestra canci√≥n, vamos a desglosar las piezas de las dos funciones setEffect:\ntrack(o\tpista): es el n√∫mero de pista al que se aplica el efecto. Nota: Para aplicar un efecto a la pista maestra, utilice 0 como valor para la pista. La pista maestra es donde todo el audio se reproduce colectivamente juntos. Esta es una manera f√°cil de aplicar un efecto a todos los sonidos que se est√°n procesando. effectType: el efecto espec√≠fico que se utiliza effectParameter: la configuraci√≥n del efecto que se est√° utilizando effectValue: el valor aplicado a la effectParameter A√±adir la funci√≥n setEffect en tu canci√≥n Ya que estamos m√°s familiarizados con el uso de efectos, vamos a a√±adir un efecto a nuestra canci√≥n.\nEn el explorador de API de la izquierda, despl√°cese hasta setEffect API.\nInserte una llamada a la funci√≥n setEffect en el c√≥digo mediante el icono de pegar.\nNecesitamos reemplazar los par√°metros con nuestros propios valores. Coloque un valor entero para trackNumber. Pongamos 2.\nPara el resto de los par√°metros del efecto, haga clic en el ojo en la API setEffect y ver√° un enlace a \u0026ldquo;Cada efecto explicado en detalle\u0026rdquo;. Haga clic en √©l para abrir esta secci√≥n en el lado derecho de su ventana.\nUsted puede notar que Earsketch tiene muchas variaciones diferentes de efectos. De forma predeterminada, deber√≠a ver la secci√≥n 30.4 BANDPASS a la derecha. Por ahora, usaremos el DELAY de la secci√≥n 30.4 como effectType en nuestra llamada a la funci√≥n setEffect.\nAhora que hemos elegido nuestro effectType, necesitamos un effectParameter. Navegue a la secci√≥n 30.4 a la derecha para desproteger diversos par√°metros soportados para DELAY. Aqu√≠ hay una foto de esa secci√≥n. Se recomienda utilizar DELAY_FEEDBACK. Para el par√°metro final, introduzca un valor v√°lido. Puesto que hemos elegido DELAY_FEEDBACK, debemos especificar un n√∫mero entre -120.0 y -1.0 (como se muestra en la imagen de arriba). Ejemplo: Utilice -6.0 como valor de efecto para DELAY_FEEDBACK.\nTu c√≥digo deber√≠a parecerse a este:\nfrom earsketch import * init() setTempo(120) fitMedia(HOUSE_DEEP_CRYSTALCHORD_001, 3, 1, 5) fitMedia(HOUSE_DEEP_CRYSTALCHORD_002, 3, 5, 9) # Section A def sectionA(startMeasure, endMeasure): fitMedia(RD_UK_HOUSE__AIRYPAD_1, 1, startMeasure, endMeasure) fitMedia(HOUSE_MAIN_BEAT_002, 4, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) # Section B def sectionB(startMeasure, endMeasure): fitMedia(Y37_ORGAN_1, 2, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) fitMedia(RD_UK_HOUSE__ARPLEAD_1, 6, startMeasure, endMeasure) sectionA(1, 9) sectionB(9, 17) sectionA(17, 25) setEffect(2, DELAY, DELAY_FEEDBACK, -6.0) setEffect(2, DELAY, DELAY_TIME, 1200.0) finish() "
},
{
	"uri": "/es/csharp-guess-the-word/booleans/",
	"title": "Booleans",
	"tags": [],
	"description": "",
	"content": "Booleans Un boolean es una frase que puede ser true (verdadero) o false (falso). Diferente a los strings o los n√∫meros, los Booleans archivan una declaraci√≥n de la verdad: ¬øes lo que yo digo verdadero o falso? Por ejemplo, so yo pregunto, ¬ø‚ÄúEres un robot‚Äù ?, esta pregunta produce un resultado true o false, lo que llamamos un boolean. En este caso, porque t√∫ no eres un robot (¬°esperadamente!), esta pregunta produce el resultado false.\nTambi√©n podemos usar operadores de la matem√°tica para crear expresiones de Booleans. Aqu√≠ hay unos ejemplos. Ojo: nota los s√≠mbolos para ‚Äúigual a‚Äù y ‚Äúno igual a‚Äù.\nOperador Descripci√≥n Operator Description \u0026lt; Menos que \u0026gt; M√°s que \u0026lt;= Menos que o igual a \u0026gt;= M√°s que o igual a == Igual a != No igual Como siempre, usa Console.WriteLine para imprimir los resultados:\nConsole.WriteLine(10 \u0026lt; 8); Console.WriteLine((3 * 6) == (32 - 14)); Trabajando junt@s Intenta adivinar los resultados de las siguientes expresiones. Usa Console.WriteLine a verificar tus respuestas.\n54 \u0026lt; (10 + 32) (37 / 5) == 7 \u0026quot;Hello\u0026quot; + \u0026quot;World\u0026quot; == \u0026quot;Hello World\u0026quot; false == false Lanza Replit\n"
},
{
	"uri": "/es/web-basics/activity-4/",
	"title": "Actividad 4 - Formulario de contacto",
	"tags": [],
	"description": "",
	"content": "Agregar un formulario de contacto Finalmente, vamos a agregar un formulario de contacto para que la gente pueda contactarnos si est√°n interesados en Benji.\nLa mayor√≠a de los navegadores no soporta el env√≠o directo de emails desde el formulario de contacto porque es una forma f√°cil de que personas maliciosas env√≠en spam a los usuarios. El spam es un mensaje irrelevante o inapropiado que se env√≠a por Internet. Por eso, para enviar un formulario, vamos a usar un servicio gratuito llamado FormSpree\r. Si queremos que los mensajes den formulario de contacto nos lleguen a nuestro email, primero vamos a tener que confirmarlos con FormSpree. Este m√©todo de confirmaci√≥n evita que las personas con malas intenciones pongan la direcci√≥n de email de cualquier persona y evita que √©sta reciba spam.\nSee the Pen Contact Form by Deliana Escobari (@Sunny-Dee)\ron CodePen.\nActividad 4 - Prueba tu formulario Haz clic en el boton \u0026ldquo;Intentalo tu mism@!\u0026rdquo; de abajo para abrir el editor Cambia la parte que dice \u0026lt;YOUR EMAIL HERE!\u0026gt; para poner tu email personal si tienes uno. Si no tienes, utiliza email@nuevofoundation.org Si lo haces, intenta mandar un mensaje de prueba a ver si funciona Agrega alg√∫n estilo en el formulario. Por ejemplo, intenta cambiar el color de la tipograf√≠a del formulario Int√©ntalo tu mism@!\n"
},
{
	"uri": "/es/python-turtle/activity-6/",
	"title": "Actividad 6 - Moviendo la tortuga",
	"tags": [],
	"description": "",
	"content": "\rNuestro primer paso es dibujar una colmena m√°s peque√±a para poder dibujar tanto la colmena como la flor en la pantalla. Ya lo hemos hecho: ¬øves lo que hemos cambiado para dibujar una colmena m√°s peque√±a?\ndef draw_hexagon(): for i in range(6): turtle.forward(20) turtle.left(60) def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.forward(20) turtle.right(60) Despu√©s, necesitamos mover la tortuga a una nueva posici√≥n para dibujar la flor (¬°no queremos dibujar la flor encima de la colmena!). Para hacer esto, primero necesitamos usar los siguientes m√©todos:\nturtle.penup() turtle.goto(x,y) turtle.pendown() turtle.penup() le dice a la tortuga que levante su pluma para que no dibuje mientras se mueve. Entonces, con turtle.goto(x,y), le estamos diciendo a la tortuga la posici√≥n donde debe moverse. Despu√©s de eso le decimos a la tortuga que vuelva a bajar su pluma usando turtle.pendown() para que pueda comenzar a dibujar nuevamente.\nPista La x y la y en el m√©todo turtle.goto() son las coordenadas x y y de la tortuga. Queremos cambiar las coordenadas x, y de la tortuga desde (0, 0) que es el centro de la imagen, a alg√∫n lugar un poco mas lejos para que la flor de mandala no cubra parte de la colmena.\nPara completar esta actividad, mueve a la tortuga a la posici√≥n (100, 100) sobre el lienzo. Esto la mover√° a la esquina superior derecha.\n"
},
{
	"uri": "/es/python-earsketch/activity-5-use-effects-to-fade-in/",
	"title": "Actividad 5 - Usar efecto de Fade in",
	"tags": [],
	"description": "Actividad 5 - Usar efecto de Fade in",
	"content": "Ahora que tienes un efecto en tu canci√≥n, vamos a tratar de desvanecernos en la introducci√≥n de nuestra canci√≥n.\nEn la actividad 4, usamos la funci√≥n setEffect se utiliza para aplicar un efecto a una pista/canci√≥n espec√≠fica durante toda la duraci√≥n de la canci√≥n, pero ¬øqu√© pasa si solo quieres que una secci√≥n espec√≠fica de tu canci√≥n tenga un efecto? ¬°Utilice la funci√≥n setEffect con m√°s par√°metros!\neffectStartValue: el valor inicial aplicado al par√°metro effectStartLocation: la medida en la que se establece el valor inicial effectEndValue: el valor final del par√°metro effectEndLocation: la medida en la que se establece el valor final Esta versi√≥n de setEffect nos permite realizar automatizaci√≥n en una pieza espec√≠fica de nuestra canci√≥n. La automatizaci√≥n es una forma de cambiar el valor de un efecto a lo largo del tiempo. Un uso de la automatizaci√≥n es hacer que una canci√≥n se desvanezca o se desvanezca. Para ello, debemos ajustar el volumen GAIN en effectParameter en el efecto VOLUME effectType a lo largo del tiempo. Por ejemplo, si definimos nuestro effectStartValue en -60 db y nuestro effectEndValue en 0 db, sonar√° como si nuestra canci√≥n se desvaneciera con el tiempo. Para ajustar el punto inicial y la longitud del efecto, especifique effectStartLocation y effectEndLocation.\nA√±adir otra funci√≥n de setEffect a tu pista/canci√≥n Agregue otra funci√≥n de setEffect al c√≥digo, pero aseg√∫rese de que est√°n presentes los 7 par√°metros en la imagen de arriba. Establezca effectType en VOLUME. Utilice la gu√≠a de referencia \u0026ldquo;Cada efecto explicado en detalle\u0026rdquo; para ver qu√© par√°metros tiene VOLUME. Para ajustar la sonoridad de un clip de audio, utilice el effectParameter GAIN. Si queremos hacer que algo suene como si se estuviera desvaneciendo (fade in), debemos tener el volumen del sonido comenzar en nada y aumentarlo hasta alrededor de 0 decibelios. Para ello, establezca effectStartValue en un valor muy bajo y effectEndValue para que sea un valor m√°s alto. Sugerencia: El volumen se mide en decibelios. En decibelios, cuanto m√°s positivo es un n√∫mero, m√°s fuerte se pone. Adem√°s, trate de no exceder 0 decibelios.\nEstablezca valores para effectStartLocation y effectEndLocation para especificar cu√°ndo iniciar y detener el fundido en vigor. Tu c√≥digo deber√≠a parecerse a este:\nfrom earsketch import * init() setTempo(120) fitMedia(HOUSE_DEEP_CRYSTALCHORD_001, 3, 1, 5) fitMedia(HOUSE_DEEP_CRYSTALCHORD_002, 3, 5, 9) # Section A def sectionA(startMeasure, endMeasure): fitMedia(RD_UK_HOUSE__AIRYPAD_1, 1, startMeasure, endMeasure) fitMedia(HOUSE_MAIN_BEAT_002, 4, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) # Section B def sectionB(startMeasure, endMeasure): fitMedia(Y37_ORGAN_1, 2, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) fitMedia(RD_UK_HOUSE__ARPLEAD_1, 6, startMeasure, endMeasure) sectionA(1, 9) sectionB(9, 17) sectionA(17, 25) setEffect(2, DELAY, DELAY_FEEDBACK, -6.0) setEffect(2, DELAY, DELAY_TIME, 1200.0) setEffect(0, VOLUME, GAIN, -60, 1, 0, 3) finish() "
},
{
	"uri": "/es/csharp-guess-the-word/booleans-operators/",
	"title": "Operadores para booleans",
	"tags": [],
	"description": "",
	"content": "Operadores para Booleans Puedes conectar expresiones de booleans usando \u0026amp;\u0026amp; (Y) y || (O) operator. \u0026ldquo;¬øEres un ser humano, y es Nuvi un robot? La palabra ‚Äúy‚Äù conecta dos preguntas de verdadero/falso. En este caso, porque es verdad que t√∫ eres en ser humano, y tambi√©n es verdad que Nuvi es un robot, el resultado total es true (verdad).\nAqu√≠ describimos lo que pasa cuando combinas expresiones de booleans:\nExpresi√≥n Resultado Expresi√≥n Resultado true \u0026amp;\u0026amp; true true true || true true true \u0026amp;\u0026amp; false false true || false true false \u0026amp;\u0026amp; true false false || true true false \u0026amp;\u0026amp; false false false || false false Recuerda que true es verdadero y false es falso. Para resumirlo todo, \u0026amp;\u0026amp; requiere que las dos expresiones booleans a cada lado sean verdaderas, mientras que || solo requiere que una de las dos expresiones booleans a cada lado sea verdadera.\nAqu√≠ tenemos unos ejemplos m√°s:\n(5 \u0026lt; 8) \u0026amp;\u0026amp; (9 != 10) produce true (verdad) porque 5 es menos que 8 y 9 no es igual a 10. (8 \u0026lt;= 2) || (\u0026quot;h\u0026quot; + \u0026quot;e\u0026quot; == \u0026quot;he\u0026quot;) produce true (verdad) porque \u0026quot;h\u0026quot; + \u0026quot;e\u0026quot; resulta en \u0026quot;he\u0026quot;, aunque 8 no es igual a o menos que 2. (6 != 2 * 3) || (8 \u0026lt; 2 * 4) produce false (falso) porque 6 no es igual a 2 * 3, y 8 no es menos que2 * 4. Entonces, la expresi√≥n se puede simplificar a false (falso). Trabajando junt@s Intenta adivinar las respuestas a las siguientes expresiones. Usa Console.WriteLine para imprimir las respuestas.\n(9 \u0026lt; 10) \u0026amp;\u0026amp; (12 =\u0026gt; 11) (15 - 2 == 11) || (4 % 3 != 2) Lanza Replit\n"
},
{
	"uri": "/es/web-basics/activity-5/",
	"title": "Activity 5 - La gran actividad",
	"tags": [],
	"description": "",
	"content": "Instrucciones Usando todo lo que has aprendido, vamos a intentar crear un sitio que te describa a ti. Prueba y usa algunas o todas de las siguientes opciones:\nUna etiqueta de cabecera (head) y una de p√°rrafo Diferentes tipograf√≠as Diferentes colores Agrega una imagen a tu sitio Una lista Embeber un gif o un video Muestra tu estilo!\n"
},
{
	"uri": "/es/python-turtle/activity-7/",
	"title": "Actividad 7 - Dibujando una figura 8",
	"tags": [],
	"description": "",
	"content": "\r¬°Excelente! Ahora hagamos la figura de un 8 como primer paso para hacer una flor de mandala! Una figura de un 8 son solo dos c√≠rculos opuestos entre s√≠. Para hacer esto podemos hacer uso del m√©todo turtle.circle(x), el cual toma un entero x como el radio del c√≠rculo. (Puede recordar que radio * 2 es que tan ancho es el circulo.) Tener el radio como un argumento significa que podemos decidir qu√© tan grande o peque√±o debe ser el c√≠rculo.\nimport turtle turtle.circle(20) En el ejemplo anterior, el c√≠rculo es de 40 p√≠xeles de ancho y es dibujado en sentido contrario a las manecillas del reloj. Si el argumento para turtle.circle() es negativo, entonces el c√≠rculo se dibuja en direcci√≥n de las manecillas del reloj y es opuesto a la versi√≥n original.\nUsando esta informaci√≥n, crea una nueva funci√≥n llamada figure_8() que dibuje una figura de un 8.\n"
},
{
	"uri": "/es/csharp-guess-the-word/variables/",
	"title": "Variables",
	"tags": [],
	"description": "",
	"content": "Variables Variables simplemente son los nombres que le damos a ciertas cosas, como strings, n√∫meros, y booleans. Usamos los variables para archivar informaci√≥n que la computadora puede encontrar.\nEsto es c√≥mo declarar un variable que se llama str. Digamos que str contiene \u0026quot;Hello World\u0026quot;. ¬øPuedes describir qu√© significan las siguientes variables?\nvar str = \u0026#34;Hello World\u0026#34;; var x = 88; var happy = true; Presiona run. Nota que los variables no se impriman a la consola. Si no, el variable simplemente representa la informaci√≥n archivada a la memoria de la computadora usando el variable, como un string, n√∫mero, o boolean.\nPodemos usar estos variables en otras expresiones. Por ejemplo, el siguiente c√≥digo imprimir√≠a Hello Nuevo Foundation a la consola:\nvar str1 = \u0026#34;Hello\u0026#34;; var str2 = \u0026#34;Nuevo Foundation\u0026#34;; Console.WriteLine(str1 + \u0026#34; \u0026#34; + str2); Puedes cambiar el contenido de un variable en cualquier momento usando el = operador otra vez. Si est√°s cambiando el contenido de un variable, no necesitas usar var otra vez. En el siguiente ejemplo, vamos a imprimir Hola en vez de Hello.\nvar str = \u0026#34;Hello\u0026#34;; str = \u0026#34;Hola\u0026#34;; Console.WriteLine(str); Aqu√≠ tenemos otro ejemplo: 10 se va a imprimir en vez de 9.\nvar num = 9; num = num + 1; Console.WriteLine(num); Nota que NO PUEDES reemplazar un variable de string con un n√∫mero o un boolean, o cualquier otra combinaci√≥n. El siguiente c√≥digo no funcionar√°:\nvar happy = \u0026#34;Hello\u0026#34;; happy = 9; Otra manera de declarar variables es reemplazando var con el tipo (string, int, bool) de variable que quieres crear. Declarando el tipo de variable expl√≠citamente, evitas el problema que vimos arriba. Por ejemplo:\nstring str = \u0026#34;Hello World\u0026#34;; int x = 88; bool happy = true; Nota que var, string, int, or bool son palabras claves in C#, entonces no puedes crear variables con esos nombres.\nTrabajando junt@s Creemos dos variables nuevas:\nUn variable llamado comp que contiene el string \u0026quot;Computer\u0026quot;. Un variable llamado five que contiene el n√∫mero 5. Ahora, usamos estos variables para imprimir lo siguiente a la consola.\nConsejo: vamos a usar el + operador para combinar strings, y tambi√©n para sumir n√∫meros.\nComputer\r5\rComputerComputer\r10\rComputerComputerComputer\r15 Lanza Replit\n"
},
{
	"uri": "/es/web-basics/hosting/",
	"title": "Aloja (host) tu sitio web",
	"tags": [],
	"description": "",
	"content": "¬°Aloja tu sitio web en Internet! ¬°Ahora que has creado tu sitio web personal, vamos a alojarlo en Internet para que todo el mundo pueda acceder a √©l! Vas a necesitar una cuenta de GitHub para hacerlo. Si no tienes una, la puedes crear aqu√≠\r.\nUna vez que hayas creado tu cuenta y verificado tu direcci√≥n de email, aparecer√°s en esta p√°gina:\n¬°Ahora, necesitas crear un nuevo repositorio para guardar los contenidos de tu sitio! Piensa en el repositorio como en una carpeta gigante donde se pueden guardar montones de archivos para un proyecto determinado. Puedes crear uno seleccionando Start a Project o Create a new repository. Hay dos cosas muy importantes que tener en cuenta:\nPonle un nombre a tu repositorio pero que no contenga espacios. Puedes usar guiones o may√∫sculas para reemplazar los espacios. Marca la casilla Initialize this repository with a README ¬°Enhorabuena! ¬°Has creado tu primer repositorio! Sube aqu√≠ todos los archivos y carpetas que pertenezcan a tu sitio web. Ahora, cuando vayas a tu p√°gina de perfil, tu nuevo Repositorio va a aparecer en la pesta√±a Repositories.\nDespu√©s de que hayas subido todo lo que has creado para tu sitio, vuelve a la p√°gina de atr√°s donde est√° el repositiorio y selecciona Settings.\nBaja hasta abajo hasta la secci√≥n GitHub Pages.\nCambia el origen Source de ‚ÄòNone‚Äô a ‚Äòmain branch‚Äô. Guarda estos cambios y haz clic en el link que est√° en la parte de arriba de la secci√≥n GitHub Pages (en el ejemplo de abajo, ser√≠a https://exampleaccount1234.github.io/myFirstSite/)\r.\n¬°Ahora cualquiera puede acceder a tu sitio web usando este link!\n"
},
{
	"uri": "/es/python-turtle/activity-8/",
	"title": "Actividad 8 - Creando una flor de mandala",
	"tags": [],
	"description": "",
	"content": "\rHemos terminado de crear nuestra primera figura de un 8! Ahora podemos usar la funci√≥n figure_8() para crear una flor de mandala! Una flor de mandala es muchas figuras 8 puestas encima de otras en √°ngulos diferentes. Entonces, para hacer esto necesitamos usar un\u0026hellip; lo has adivinado, un ciclo!\nCrea una nueva funci√≥n llamada mandala_flower(). En el ciclo llamaremos la funci√≥n figure_8() que escribimos anteriormente para crear una figura de un 8. Luego, hay que girar la tortuga a la izquierda o derecha un cierto n√∫mero de grados (por ejemplo, 10 grados). Repita estos pasos muchas veces para hacer una flor de mandala; es una buena idea crear un ciclo que se repita al menos 25 veces.\n"
},
{
	"uri": "/es/csharp-guess-the-word/activity-3/",
	"title": "Actividad 3 - Declara tus variables",
	"tags": [],
	"description": "",
	"content": "Actividad 3 Esta actividad viene en dos partes y examinar√° tu conocimiento de los variables. Antes de empezar, busca HINT (ACTIVITY 3) (CONSEJO (ACTIVIDAD 3)) en el c√≥digo, donde declaramos un variable llamado vidas que contiene el n√∫mero de vidas del jugador. Usa este variable para imprimir el n√∫mero de vidas del jugador al inicio del juego.\nActivity 3.1 Al inicio del juego, debemos decirle al jugador cu√°ntas letras hay en la palabra que est√°n adivinando. Por ejemplo, si el jugador tiene que adivinar la palabra \u0026quot;Hello\u0026quot;, debemos decirle al jugador: The word has 5 letters (La palabra tiene 5 letras). Si la palabra que est√°n adivinando es \u0026quot;Foundation\u0026quot;, debemos decirle: The word has 10 letters (La palabra tiene 10 letras). Ya tenemos el n√∫mero de letras archivado con el variable numberOfLetters (numeroDeLetras), entonces √∫salo para esta actividad.\nAseg√∫rate de chequear que has completado la actividad presionando ‚Äôrun‚Äô, y aseg√∫rate que veas The word has 5 letters (la palabra tiene 5 letras) o cualquier otro numero que no sea 5 en la consola.\nActividad 3.2 Hay dos cosas m√°s que la computadora tiene que archivar:\nEl n√∫mero de letras que el jugador ha adivinado correctamente Si el jugador ha ganado el juego o no Vamos a declarar dos variables para representar estas dos piezas de informaci√≥n. Presiona run para asegurarte que ning√∫n error aparece en la consola. Recuerda que los variables no producen nada en la consola, entonces para esta parte, simplemente estamos asegur√°ndonos que no hay errores.\n"
},
{
	"uri": "/es/web-basics/conclusion/",
	"title": "En caso de que te lo estuvieras preguntando",
	"tags": [],
	"description": "",
	"content": "\nPuede que est√©s preocupado por Benji, pero estamos encantados de decirte que ha encontrado su hogar a trav√©s de una p√°gina web como la que est√°s creando. Benji es ahora un buen chico a tiempo completo y trabaja mucho en sus trucos para conseguir golosinas.\n"
},
{
	"uri": "/es/python-turtle/activity-9/",
	"title": "Actividad 9 - Coloreando tu flor de mandala",
	"tags": [],
	"description": "",
	"content": "\nAhora que ya tenemos la forma de una flor de mandala, ¬°es momento de colorearla! Aun vamos a utilizar el m√©todo turtle.color(); sin embargo esta vez vamos a utilizar un valor RGB en lugar un valor de color en cadena de texto, as√≠ que podemos producir una gran variedad de colores.\nColores RGB (Red-Green-Blue) En la escuela primaria, puede que recuerdes que al mezclar colores, puedes producir nuevos colores. Por ejemplo, la combinaci√≥n de rojo y azul hace el purpura. Tambi√©n podemos cambiar la cantidad de rojo y azul mezclados para crear diferentes tonos de purpura. La computadora hace algo similar para producir colores. Al combinar varias intensidades de rojo, verde y azul, podemos crear colores m√°s variados, tal como como azul polvo, amarillo dorado y rosa salm√≥n. Click aqui\rpara ver los colres y su forma correspondiente en hexadecimal.\nEl el m√©todo turtle.color(), podemos especificar argumentos enteros correspondientes a la cantidad de rojo, verde y azul a mezclar. Cada n√∫mero entero debe estar entre 0 y 255 inclusivos. Un ejemplo puede ser turtle.color(30, 100, 238), que produce un tono azul oscuro.\nActualiza tu flor de mandala para usar un color de tu preferencia. ¬°Si√©ntete libre de experimentar con colores diferentes!\n"
},
{
	"uri": "/es/csharp-guess-the-word/reading-from-console/",
	"title": "Leyendo la consola",
	"tags": [],
	"description": "",
	"content": "Leyendo la consola Ya que sabemos lo b√°sico de los variables, podemos aceptar entradas del usuario. Usa la l√≠nea siguiente para decirle a la consola que debe esperar hasta que el usuario entra algo en la consola. Despu√©s, la computadora archivar√° lo que el usuario entr√≥ en un variable llamado input.\nvar input = Console.ReadLine(); Aqu√≠ tenemos un ejemplo de c√≥mo usar Console.ReadLine para aceptar entradas de usuario:\nConsole.WriteLine(\u0026#34;Escribe algo:\u0026#34;); var input = Console.ReadLine(); Console.WriteLine(\u0026#34;Escribiste: \u0026#34; + input); Cuando el usuario presiona ‚Äôrun‚Äô, el usuario ve un saludo con el siguiente programa:\nEn este caso, luego de que el usuario escribe Hello World! en la consola, el programa termina e imprime en la consola:\nTrabajando junt@s Escribe el programa que primero imprima las siguientes dos l√≠neas:\n! Bienvenid@!\r¬øComo te puedo ayudar hoy? Luego, la consola va a esperar el input del usuario. Una vez que el usuario escriba algo, debe presionar ‚ÄòEnter‚Äô o la ‚Äòbarra de espacio‚Äô, para que la consola imprima:\nTu preguntaste: [input]?\r¬°Yo no s√© cu√°l es la respuesta! ¬°Hasta luego! [input] (entrada) deber√≠a ser remplazada por cualquier palabra que el usuario haya escrito en la consola.\nLanza Replit\n"
},
{
	"uri": "/es/python-turtle/activity-10/",
	"title": "Actividad 10 - Elejir un color aleatorio para los p√©talos de tu flor de mandala",
	"tags": [],
	"description": "",
	"content": "\nHemos establecido con √©xito el color de la flor de mandala en un valor RGB. Ahora, exploremos cambiar el color de los p√©talos individuales de la flor de mandala.\nHaremos uso de la biblioteca random (aleatorio) de python. El m√©todo random.randint() nos permite elegir un valor aleatorio para cada uno de los valores rojo, verde o azul. Para elegir un valor que est√© entre 0 inclusivo y 256 exclusivo (en otras palabras, entre 0 y 255 inclusivo), necesitamos usar random.randint(0, 256).\nUsa random.randint(0, 256) tres veces para generar tres valores aleatorios y utilizalos en el m√©todo turtle.color(). ¬°Ahora deber√≠as poder ver una flor de mandala multicolor! ¬°Esta es definitivamente una flor de la que Alex estar√≠a interesado en recolectar n√©ctar!\n¬°Felicidades! ¬°Ayudaste a Alex a hacer un panal y una flor! ¬°Ahora puede vivir feliz en su colmena y hacer mucha miel! Su imagen final deber√≠a verse as√≠:\n"
},
{
	"uri": "/es/python-turtle/activity-11/",
	"title": "Actividad 11 - Ahora es tu turno!",
	"tags": [],
	"description": "",
	"content": "Si queda algo de tiempo, ¬°Intenta dibujar tus propias formas y dise√±os! Has de tu imagen interesante usando varias formas y colores.\nClic en el bot√≥n de abajo para abrir una ventana en blanco Trinket e iniciar tu propia creaci√≥n.\nClic aqu√≠\nAyuda, estoy atascado! ¬øAtascado? ¬°Compruebe la Clave de respuestas\rpara ver la actividad en la que est√° atascado!\n"
},
{
	"uri": "/es/java-basics/answer-key/",
	"title": "Java: Basics - Answer Key",
	"tags": [],
	"description": "",
	"content": "activity-1: Print Statements and Comments Hello World class Main { public static void main(String[] args) { System.out.print(\u0026#34;Hello World\u0026#34;); System.out.print(2020); System.out.print(\u0026#39;@\u0026#39;); } } Output:\nHello World2020@\rOwl class Main { public static void main(String[] args) { System.out.println(\u0026#34;Hello world!\u0026#34;); System.out.println(\u0026#34; ‚Äã, ___ / ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ \\\\\u0026#34;); System.out.println(\u0026#34;‚Äã`\\\\/{o,o} \u0026lt; Hi, I am Minerva. Patrick\u0026#39;s friend! |\u0026#34;); System.out.println(\u0026#34;‚Äã ‚Äã/ /) ) \\\\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ /\u0026#34;); System.out.println(\u0026#34;‚Äã/,--\\\u0026#34;-\\\u0026#34;- \u0026#34;); } } Output:\n, ___ / ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ ‚Äæ \\\r`\\/{o,o} \u0026lt; Hi, I am Minerva. Patrick's friend! |\r/ /) ) \\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ /\r/,--\u0026quot;-\u0026quot;- activity-2: Types and Variables DataType class Main { public static void main(String[] args) { String bestFriend = \u0026#34;Minerva\u0026#34;; int numOfFriends = 4; double GPA = 3.6; char meaningOfLife = \u0026#39;$\u0026#39;; boolean loveMusic = true; } } Variable Output:\nx: 2.3 y: 2.3 z: 0 activity-3: Operators int patrickGrade = 88; int tomGrade = 89; int maryGrade = 95; int chrisGrade = 84; int jenGrade = 92; average = (patrickGrade + tomGrade + maryGrade + chrisGrade + jenGrade)/5; boolean over60 = (average \u0026gt; 60); boolean over70 = (average \u0026gt; 70); boolean over80 = (average \u0026gt; 80); boolean over90 = (average \u0026gt; 90); Output:\n---------------------------\rMusic Grade Report ---------------------------\rStudent Grades: - Patrick: 88\r- Tom: 89\r- Mary: 95\r- Chris: 84\r- Jen: 92\rClass Average: 89.0\r- Average Over 60: true\r- Average Over 70: true\r- Average Over 80: true\r- Average Over 90: false activity-4: Control Structures If statement int currentHour = ... ; // variable that stores current hour between 0 - 23 if(currentHour \u0026lt; 12){ System.out.println(\u0026#34;Good Morning\u0026#34;); }else if(currentHour \u0026lt; 20){ System.out.println(\u0026#34;Good Afternoon\u0026#34;); }else{ System.out.println(\u0026#34;Good Night\u0026#34;); } While Loop int myTotal = 0; for(int num2 = 1; num2 \u0026lt;= 100; num2++){ myTotal += num2; } Output:\nAnswer calculated in a while loop: 5050\rAnswer calculated in a for loop: 5050 activity-5: Methods Pyramid public static int pyramidCount(int level){ int total = 0; for(int i = 1; i \u0026lt;= level; i++){ total = total + i*i; } return total; } Output:\nCongratulations! Challenge Solved! activity-6: Object and Classes Bird Class public class Bird{ // instance variables private String species; private String name; private String hobby; private int age; private boolean loveMusic; // constructor public Bird(String species_input, String name_input, String hobby_input, int age_input, boolean loveMusic_input){ species = species_input; name = name_input; hobby = hobby_input; age = age_input; loveMusic = loveMusic_input; } public String getSpecies(){ return species; } public String getName(){ return name; } public String getHobby(){ return hobby; } public int getAge(){ return age; } public boolean getLoveMusic(){ return loveMusic; } public String toString(){ String info = \u0026#34;\u0026#34;; info = info + \u0026#34;Hi, my name is \u0026#34; + getName() + \u0026#34;. I am a \u0026#34; + getAge() + \u0026#34;year old \u0026#34; + getSpecies() + \u0026#34; who likes to \u0026#34; + getHobby() + \u0026#34;. \u0026#34;; if(getLoveMusic()){ info = info + \u0026#34;I also like music very much!\u0026#34;; }else{ info = info + \u0026#34;However, I do not like music!\u0026#34;; } return info; } } main() Implementation: No correct answer just an exercise public static void main(String[] args) { Bird patrick = new Bird(\u0026#34;duck\u0026#34;, \u0026#34;Patrick\u0026#34;, \u0026#34;hangout with friends\u0026#34;, 15, true); System.out.print(patrick); } Output:\nHi, my name is Patrick. I am a 15year old duck who likes to hangout with friends. I also like music very much! activity-7: Data Structure (Array \u0026amp; ArrayList) Array public static void printArr(String[] arr){ for(int i = 0; i \u0026lt; arr.length - 1; i++){ // iterate through each element(not the last one) in the array and add \u0026#34;, \u0026#34; after each element System.out.print(arr[i] + \u0026#34;, \u0026#34;); } // print last element and newline character System.out.println(arr[arr.length -1]); } Output:\nBirds Of Prey, The Birds, Angry Birds, Bird Box, The Secret Life of Pets ArrayList public static void printList(ArrayList\u0026lt;String\u0026gt; list){ // type here for(int i = 0; i \u0026lt; list.size() - 1; i++){ // iterate through each element(not the last one) in the array and add \u0026#34;, \u0026#34; after each element System.out.print(list.get(i) + \u0026#34;, \u0026#34;); } // print last element and newline character System.out.println(list.get(list.size() -1)); } Output:\nBirds Of Prey, The Birds, Angry Birds, Bird Box, The Secret Life of Pets "
},
{
	"uri": "/es/web-basics/answer-key/",
	"title": "Answer Key - Web Basics",
	"tags": [],
	"description": "",
	"content": "Special note: This curriculum allows students to be creative. The below is just an example of what they can do, please use your best judgement and ask for guidance if needed. The answer key provided here is fairly long because we are including snippets of full HTML for context.\nWhen a student clicks on the \u0026lsquo;Try it yourself!\u0026rsquo; it\u0026rsquo;ll open a new tab with some of the HTML code (and CSS code) already scaffolded.\nChallenge 1 Solution should have:\nHeader tags to add a title and the paragraph tags to write a paragraph about Benji. (optional) A list of Benji‚Äôs favorite treats: turkey, peanut butter, and string cheese \u0026lt;head\u0026gt; \u0026lt;!-- Challenge 1: Add title and header tags. --\u0026gt; \u0026lt;title\u0026gt;My exciting title!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- Content goes inside the body --\u0026gt; \u0026lt;!-- Challenge 1: Add a header, a paragraph. --\u0026gt; \u0026lt;h1\u0026gt;About benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Benji is a cute pup. His favorite sport is fetch. He likes long walks in the woods. Once he found a big stick.\u0026lt;/p\u0026gt; \u0026lt;!-- Challenge 1 (optional) Add a list. --\u0026gt; \u0026lt;h5\u0026gt; Benji\u0026#39;s favorite snacks \u0026lt;/h5\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Turkey\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Peanut Butter\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;String Cheese\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/body\u0026gt; Challenge 2 Solution should have:\nHTML: An id attribute to one of the header tag. For example, \u0026lt;header id=\u0026quot;page-title\u0026quot;\u0026gt; CSS: A different title color by adding color: yellow; inside the curly braces CSS: A different font by adding font-family: ‚ÄòRoboto Mono‚Äô, monospace; inside the curly braces and adding @import url(‚Äòhttps://fonts.googleapis.com/css?family=Roboto+Mono\u0026rsquo;); at the top of the CSS tab \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Required meta tags --\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;This will show in the browser tab!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- Challenge 2: page-title id attribute --\u0026gt; \u0026lt;header id=\u0026#34;page-title\u0026#34;\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;My name is Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;I\u0026#39;m looking for my family.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Information:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m a Lab/Great Pyreneese mix\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m 1 year old\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I eat peanut butter you don\u0026#39;t want\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I will protect you from squirrels\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;I hope we get to play soon!\u0026lt;/h3\u0026gt; \u0026lt;img id=\u0026#34;dog\u0026#34; src=\u0026#34;https://aka.ms/Benji-the-dog\u0026#34;\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; @import url(\u0026#39;https://fonts.googleapis.com/css?family=Roboto+Mono\u0026#39;); #page-title { color: yellow; font-family: \u0026#39;Roboto Mono\u0026#39;, monospace; } Challenge 3 Nuevo Foundation GIFs: https://giphy.com/nuevofoundation\rClick on \u0026rsquo;embed\u0026rsquo; and copy the GIF embed code. Paste the GIF embed code anywhere in the \u0026lt;body\u0026gt; tag Example iframe code:\n\u0026lt;iframe src=\u0026#34;https://giphy.com/embed/oywrR92C9YBlrSuUKP\u0026#34; width=\u0026#34;480\u0026#34; height=\u0026#34;480\u0026#34; frameBorder=\u0026#34;0\u0026#34; class=\u0026#34;giphy-embed\u0026#34; allowFullScreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://giphy.com/gifs/nuevofoundation-rockstar-nuvi-oywrR92C9YBlrSuUKP\u0026#34;\u0026gt;via GIPHY\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; Integrated into sample \u0026lsquo;Try it yourself code!\u0026rsquo;:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Required meta tags --\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;This will show in the browser tab!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;My name is Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;I\u0026#39;m looking for my family.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Information:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m a Lab/Great Pyreneese mix\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m 1 year old\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I eat peanut butter you don\u0026#39;t want\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I will protect you from squirrels\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;I hope we get to play soon!\u0026lt;/h3\u0026gt; \u0026lt;!-- Challenge 3: Paste your code here! --\u0026gt; \u0026lt;iframe src=\u0026#34;https://giphy.com/embed/oywrR92C9YBlrSuUKP\u0026#34; width=\u0026#34;480\u0026#34; height=\u0026#34;480\u0026#34; frameBorder=\u0026#34;0\u0026#34; class=\u0026#34;giphy-embed\u0026#34; allowFullScreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://giphy.com/gifs/nuevofoundation-rockstar-nuvi-oywrR92C9YBlrSuUKP\u0026#34;\u0026gt;via GIPHY\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Challenge 4 The contact form is already added for the students. They will simply need to modify their email in the email section and then alter any styling they want!\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;This will show in the browser tab!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;My name is Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;I\u0026#39;m looking for my family.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Information:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m a Lab/Great Pyreneese mix\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I\u0026#39;m 1 year old\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I eat peanut butter you don\u0026#39;t want\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;I will protect you from squirrels\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- Challenge 4: Contact Form --\u0026gt; \u0026lt;div class=\u0026#34;contact-section\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;Contact me\u0026lt;/h3\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;!-- Change the following line --\u0026gt; \u0026lt;form action=\u0026#34;https://formspree.io/email@nuevofoundation.com\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;name\u0026#34;\u0026gt;Name: \u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;name\u0026#34; placeholder=\u0026#34;Tell Benji who you are\u0026#34;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;label for=\u0026#34;message\u0026#34;\u0026gt;Your message: \u0026lt;/label\u0026gt; \u0026lt;textarea name=\u0026#34;message\u0026#34; placeholder=\u0026#34;Tell me about you\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Hi!\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;I hope we get to play soon!\u0026lt;/h3\u0026gt; \u0026lt;img id=\u0026#34;dog\u0026#34; src=\u0026#34;https://aka.ms/Benji-the-dog\u0026#34;\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; .contact-section { width: 250px; margin: 10px; padding: 10px; background-color: #FCFC69; /* Challenge 4: change the color here for styling */ } Challenge 5 No solution here - the students are creating their own sites based on what they learned. A few notes:\nEncourage students to use all of the different things they learned (ie. CSS, form, GIF) Encourage students to create something they would want to show other people. Have fun!\n"
},
{
	"uri": "/es/secret-messages/answer-key/",
	"title": "Mensajes secretos con C++ - Puntos claves",
	"tags": [],
	"description": "",
	"content": "Las siguientes 5 l√≠neas son necesarias para todas las actividades.\n#include \u0026lt;iostream\u0026gt;\rusing namespace std;\rint main() {\rreturn 0;\r} Actividad 1 cout \u0026lt;\u0026lt; \u0026#34;Hola programador!\u0026#34; \u0026lt;\u0026lt; endl; Actividad 2 string nombre;\rcin \u0026gt;\u0026gt; nombre;\rcout \u0026lt;\u0026lt; \u0026#34;Hola \u0026#34; \u0026lt;\u0026lt; nombre \u0026lt;\u0026lt; endl; Actividad 3 string nombre;\rcin \u0026gt;\u0026gt; nombre;\rfor(int i=0; i\u0026lt;nombre.size(); i++){\rcout \u0026lt;\u0026lt; nombre[i] \u0026lt;\u0026lt; endl;\r} Actividad 4 int numero;\rcin \u0026gt;\u0026gt; numero;\rif(numero == 1){\rcout \u0026lt;\u0026lt; \u0026#34;Encriptar un mensaje\u0026#34; \u0026lt;\u0026lt; endl;\r}else{\rcout \u0026lt;\u0026lt; \u0026#34;Desencriptar un mensaje\u0026#34; \u0026lt;\u0026lt; endl;\r} Actividad 5 #include \u0026lt;iostream\u0026gt;\rusing namespace std;\rint main() {\rstring clave;\rstring nombre;\rcin \u0026gt;\u0026gt; clave;\rcin \u0026gt;\u0026gt; nombre;\rint contador = 0;\rfor(int i=0; i\u0026lt;nombre.size(); i++){\rint suma = nombre[i]+clave[contador]-\u0026#39;a\u0026#39;;\rif(suma \u0026gt; \u0026#39;z\u0026#39;){\rsuma-=25;\r}\rnombre[i]=suma;\rcontador+=1;\rif(contador \u0026gt;= clave.size()){\rcontador=0;\r}\r}\rcout \u0026lt;\u0026lt; \u0026#34;Mensaje encriptado: \u0026#34; \u0026lt;\u0026lt; endl;\rcout \u0026lt;\u0026lt; nombre \u0026lt;\u0026lt; endl;\rreturn 0;\r} Actividad 6 #include \u0026lt;iostream\u0026gt;\rusing namespace std;\rvoid encriptar (string \u0026amp;nombre, string clave){\rint contador = 0;\rfor(int i=0; i\u0026lt;nombre.size(); i++){\rint suma = nombre[i]+clave[contador]-\u0026#39;a\u0026#39;;\rif(suma \u0026gt; \u0026#39;z\u0026#39;){\rsuma-=25;\r}\rnombre[i]=suma;\rcontador+=1;\rif(contador \u0026gt;= clave.size()){\rcontador=0;\r}\r}\r}\rvoid desencriptar (string \u0026amp;nombre, string clave){\rint contador = 0;\rfor(int i=0; i\u0026lt;nombre.size(); i++){\rint suma = nombre[i]-clave[contador]+\u0026#39;a\u0026#39;;\rif(suma \u0026lt; \u0026#39;a\u0026#39;){\rsuma+=25;\r}\rnombre[i]=suma;\rcontador+=1;\rif(contador \u0026gt;= clave.size()){\rcontador=0;\r}\r}\r}\rint main() {\rstring clave;\rstring nombre;\rint numero;\rcin \u0026gt;\u0026gt; numero;\rcin \u0026gt;\u0026gt; clave;\rcin \u0026gt;\u0026gt; nombre;\rif(numero == 1){\rcout \u0026lt;\u0026lt; \u0026#34;Mensaje encriptado: \u0026#34; \u0026lt;\u0026lt; endl;\rencriptar(nombre, clave);\rcout \u0026lt;\u0026lt; nombre \u0026lt;\u0026lt; endl;\r}else{\rcout \u0026lt;\u0026lt; \u0026#34;Mensaje desencriptado: \u0026#34; \u0026lt;\u0026lt; endl;\rdesencriptar(nombre, clave);\rcout \u0026lt;\u0026lt; nombre \u0026lt;\u0026lt; endl;\r}\rreturn 0;\r} Actividad 7 #include \u0026lt;iostream\u0026gt;\rusing namespace std;\rvoid encriptar (string \u0026amp;nombre, string clave){\rint contador = 0;\rfor(int i=0; i\u0026lt;nombre.size(); i++){\rif(nombre[i]!=\u0026#39; \u0026#39;){\rint suma = nombre[i]+clave[contador]-\u0026#39;a\u0026#39;;\rif(suma \u0026gt; \u0026#39;z\u0026#39;){\rsuma-=25;\r}\rnombre[i]=suma;\rcontador+=1;\rif(contador \u0026gt;= clave.size()){\rcontador=0;\r}\r}\r}\r}\rvoid desencriptar (string \u0026amp;nombre, string clave){\rint contador = 0;\rfor(int i=0; i\u0026lt;nombre.size(); i++){\rif(nombre[i]!=\u0026#39; \u0026#39;){\rint suma = nombre[i]-clave[contador]+\u0026#39;a\u0026#39;;\rif(suma \u0026lt; \u0026#39;a\u0026#39;){\rsuma+=25;\r}\rnombre[i]=suma;\rcontador+=1;\rif(contador \u0026gt;= clave.size()){\rcontador=0;\r}\r}\r}\r}\rint main() {\rstring clave;\rstring nombre;\rint numero;\rcin \u0026gt;\u0026gt; numero;\rcin \u0026gt;\u0026gt; clave;\rgetline(cin, nombre);\rif(numero == 1){\rcout \u0026lt;\u0026lt; \u0026#34;Mensaje encriptado: \u0026#34; \u0026lt;\u0026lt; endl;\rencriptar(nombre, clave);\rcout \u0026lt;\u0026lt; nombre \u0026lt;\u0026lt; endl;\r}else{\rcout \u0026lt;\u0026lt; \u0026#34;Mensaje desencriptado: \u0026#34; \u0026lt;\u0026lt; endl;\rdesencriptar(nombre, clave);\rcout \u0026lt;\u0026lt; nombre \u0026lt;\u0026lt; endl;\r}\rreturn 0;\r} "
},
{
	"uri": "/es/python-turtle/answer-key/",
	"title": "Python Turtle - Answer Key",
	"tags": [],
	"description": "",
	"content": "Las siguientes 3 l√≠neas son necesarias para la actividad de introducci√≥n y todas las dem√°s actividades tambi√©n.\nimport turtle turtle.color(\u0026#34;orange\u0026#34;) turtle.shape(\u0026#34;turtle\u0026#34;) Actividad de introducci√≥n turtle.color(\u0026#34;orange\u0026#34;) turtle.forward(50) Actividad 1 turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) Actividad 2 for i in range(4): turtle.forward(50) turtle.left(90) Actividad 3 for i in range(6): turtle.forward(50) turtle.left(60) Actividad 4 def draw_hexagon(): for i in range(6): turtle.forward(50) turtle.left(60) draw_hexagon() Actividad 5 def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.forward(50) turtle.right(60) draw_honeycomb() Actividad 6 turtle.penup() turtle.goto(300, 300) turtle.pendown() Actividad 7 def figure_8(): turtle.circle(50) turtle.circle(-50) figure_8() Actividad 8 def mandala_flower(): for i in range(35): figure_8() turtle.right(10) mandala_flower() Actividad 9 def mandala_flower(): turtle.color(30, 100, 160) for i in range(35): figure_8() turtle.right(10) mandala_flower() Actividad 10 def mandala_flower(): for i in range(35): turtle.color(random.randint(0, 256),random.randint(0, 256), random.randint(0, 256)) figure_8() turtle.right(10) mandala_flower() "
},
{
	"uri": "/es/python-guess-number/answer-key/",
	"title": "Python: Adivina el N√∫mero - Respuestas",
	"tags": [],
	"description": "",
	"content": "Jugando con randit import random number = random.randint(1,100) print(\u0026#34;tu n√∫mero generado aleatoriamente es\u0026#34;, number) Crear el juego \u0026lsquo;Adivina el n√∫mero\u0026rsquo; import random #Usa la funci√≥n random.randint() aqu√≠ para generar un n√∫mero #Tambi√©n define aqu√≠ el n√∫mero de intentos que quieres permitir randomNumber = random.randint(1,10) guessesLeft = 3 #Crea un ciclo aqu√≠ que pida repetidamente al jugador un n√∫mero y lo compare con el n√∫mero aleatorio #Recuerda disminuir el n√∫mero de intentos restantes para que el jugador no tenga intentos ilimitados while guessesLeft \u0026gt; 0: print(\u0026#39;\\nAdivina un n√∫mero entre 1 y 10:\u0026#39;) #Pide al usuario una entrada aqu√≠ print(\u0026#39;Por favor, ingresa solo n√∫meros\u0026#39;) userinput = int(input()) #Compara la entrada que acabas de recibir con randomNumber y da al jugador una pista sobre si debe adivinar un n√∫mero m√°s bajo o m√°s alto #Si la respuesta a la adivinanza es correcta, recuerda usar break para salir del ciclo if userinput == randomNumber: print(\u0026#34;¬°Adivinaste el n√∫mero correcto! Felicidades :)! Presiona \u0026#39;run\u0026#39; para jugar de nuevo\u0026#34;) break elif userinput \u0026gt; randomNumber: print(\u0026#34;Tu n√∫mero es demasiado bajo. Intenta con un n√∫mero m√°s alto.\u0026#34;) else: print(\u0026#34;Tu n√∫mero es demasiado bajo. Intenta adivinar m√°s alto.\u0026#34;) #disminuye el n√∫mero de intentos que le quedan al jugador guessesLeft = guessesLeft -1 #Verifica si el jugador se qued√≥ sin intentos. Si se qued√≥ sin intentos, muestra un mensaje diciendo que perdi√≥ el juego if guessesLeft == 0: print(\u0026#34;Te quedaste sin intentos. :/ La respuesta correcta a la adivinanza era \u0026#34; + str(randomNumber) + \u0026#34;!\u0026#34;) #O (\u0026#34;Te quedaste sin intentos. :/ La respuesta correcta a la adivinanza era \u0026#34;, randomNumber) else: pass "
},
{
	"uri": "/es/sql_workshop/",
	"title": "SQL: Salvando la Galaxia",
	"tags": [],
	"description": "Aprendiendo comandos b√°sicos de SQL",
	"content": "Introducci√≥n: Aprende SQL salvando la Galaxia! Bienvenido a la Estaci√≥n Espacial de Nuevo! Eres un aventurero espacial que viaja a trav√©s de la galaxia en tu cohete mientras resuelves acertijos de c√≥digo para ayudar a salvar a tus amigos aliens en distintos planetas.\n¬°Haz sido elegido como un explorador espacial honorario por la Federaci√≥n Gal√°ctica! Se te dar√°n misiones para ayudar hacer la galaxia un lugar seguro y divertido para todos.\nPor favor, no uses el navegador Firefox para este taller.\nContenido Tutorial 1: Aprende los pasos b√°sicos de un cadete Actividad 1: Aprende el comando SELECT Actividad 2: Aprende el comando WHERE Tutorial 2: Explicar la Sintaxis Actividad 3: Aprended el comando COUNT Actividad 4: Selecciona Informaci√≥n Multiple Actividad 5: Aprende el comando MAX/MIN Actividdad 6: Utiliza Comparadores Actividad 7: Usa el comando MIN Actividad 8: Aprende el comando LIKE Actividad 9: Aprende el comando AVG Actividad 10: Aprende el comando SUM Actividad 11: Aprende el comando GROUP BY Actividad 12: Encuentra al Inventor! "
},
{
	"uri": "/es/sql_workshop/answer-key/",
	"title": "Taller de SQL: Respuestas del Workshop de SQL",
	"tags": [],
	"description": "",
	"content": "\rNota: No uses el Navegador Firefox para este taller.\nPara las actividades de arrastrar el elemento: Los bloques que son correctos van a ser resaltados con un recuadro verde alrededor, mientras que los incorrectos ser√°n resaltados con un cuadrado rojo hasta que el jugador mueva el bloque.\nPara las actividades de escribir la respuesta: Los comandos o palabras correctas van a seer resaltadas con color verde en la Caja de Comando Anterior, palabras incorrectas o mal usadas ser√°n resaltadas con rojo. Si el comando que el jugador escriba coincide con lo que se menciona en la hoja de respuestas, asegurate que no haya espacios extras al inicio o fin del comando. Asegurate que el jugador tenga punto y coma al final de cada comando (la √∫ltima palabra en un comando de SQL ser√° resaltada con rojo si no hay un punto y coma al final). Toma en cuenta que algunos infantes van a copiar el comando mostrado en el ejemplo, pegarlo en la terminal y correrlo - esto no va a funcionar. Por favor, p√≠deles que refresquen la p√°gina y escriban manualmente el comando.\nLas palabras clave de SQL (palabras reservadas) en comandos NO distinguen entre may√∫sculas y min√∫sculas (SELECT, FROM, WHERE, COUNT, MAX, IN, etc.), pero a veces est√°n escritas en may√∫sculas para diferenciarlas de otras palabras que no son clave: \u0026ldquo;select * from planet\u0026rdquo; is same as \u0026ldquo;SELECT * FROM planet\u0026rdquo;.\nAprende los pasos b√°sicos de un cadete Ninguna actividad, solo leer la terminolog√≠a.\nActividad 1: Aprende el comando SELECT (Arrastrar y soltar) Respuesta: SELECT * FROM galaxy;\nActividad 2: Aprende el comando WHERE (Arrastrar y soltar) Respuesta: SELECT * FROM galaxy WHERE name = ‚ÄòPlanet of Fun‚Äô;\nExplicar la Sintaxis Ninguna actividad, solo una explicaci√≥n del formato de comandos de SQL.\nActividad 3: Aprended el comando COUNT (Escribir respuesta) Dos respuestas v√°lidas: SELECT COUNT(*) FROM planet; o SELECT COUNT(city_number) FROM planet;\nActividad 4: Selecciona Informaci√≥n Multiple (Escribir respuesta) Dos respuestas v√°lidas: SELECT planet, leader FROM galaxy; o SELECT leader, planet FROM galaxy;\nLa √∫nica diferencia entre las dos respuestas es el orden en que se mostrar√°n las columnas, por lo tanto, ambas respuestas son v√°lidas.\nActividad 5: Aprende el comando MAX/MIN (Escribir respuesta + Arrastrar y soltar) Respuestas v√°lidas:\nSELECT MAX(height) FROM items WHERE object IN (‚Äòladder‚Äô); SELECT MAX(height) FROM items WHERE object = 'ladder'; SELECT * FROM items WHERE object IN (‚Äòladder‚Äô); SELECT * FROM items WHERE object = 'ladder'; A pesar de que la tercera y cuarta respuesta no utiliza el comando MAX, si muestra todas las escaleras y sus colores, haciendolas posibles respuestas v√°lidas para la actividad. Respuestas para los puntos extra:\nSELECT MAX(height) FROM items WHERE object NOT IN('totem', 'key'); SELECT MAX(height) FROM items WHERE object NOT IN('totem'); SELECT MAX(height) FROM items WHERE object NOT IN('key'); Si el jugador usa NOT IN correctamente, esto va a mostrar el resultado correcto. Arrastrar y soltar: La escalera correcta para arrastrar y soltar es la ROJA (la de la extrema derecha). La escalera correcta va a ser resaltada con color Verde.\nActividdad 6: Utiliza Comparadores (Escribir respuesta) Respuesta: SELECT * FROM items WHERE date_created = ‚Äò1738-09-12‚Äô;\nRespuesta para puntos extra: SELECT * FROM items WHERE date_created \u0026gt;= ‚Äò1738-09-12‚Äô;\nActividad 7: Usa el comando MIN (Escribir respuesta + Arrastrar y soltar) Respuestas v√°lidas:\nSELECT MIN(height) FROM items WHERE object IN (‚Äòkey‚Äô); SELECT * FROM items WHERE object IN('key'); SELECT MIN(height) FROM items WHERE object = 'key'; SELECT * FROM items WHERE object = 'key'; SELECT MIN(height) FROM items WHERE object NOT IN('totem', 'ladder'); SELECT MIN(height) FROM items WHERE object NOT IN('totem'); SELECT MIN(height) FROM items WHERE object NOT IN('ladder'); Arrastrar y Solar: La altura corresponde al n√∫mero de bucles en la base de la llave. La llave mas peque√±a (de altura 1) es la llave correcta para arrastrar y soltar (la de la extrema derecha).\nActividad 8: Aprende el comando LIKE (Escribir respuesta) Dos respuestas v√°lidas: SELECT * FROM items WHERE date_created LIKE ‚Äò%-10-%‚Äô; o select * from items where date_created like '1738-10-%';\nActividad 9: Aprende el comando AVG (Escribir respuesta) Respuesta: SELECT AVG(population) FROM planet;\nLa combinaci√≥n de la caja fuerte es \u0026ldquo;40\u0026rdquo;.\nActividad 10: Aprende el comando SUM Command (Escribir respuesta) Respuesta: SELECT SUM(population) FROM planet;\n\u0026ldquo;Actividad 11: Aprende el comando GROUP BY\u0026rdquo; (Escribir respuesta) Respuesta: SELECT * FROM planet GROUP BY favorite_food;\nRespuesta para puntos extra: SELECT COUNT(*), favorite_food FROM planet GROUP BY favorite_food;\nLos botones correctos para seleccionar en cualquier orden son: pizza, hotdog, hamburger y taco.\nActividad 12: Encuentra al Inventor! (Escribir respuesta) Respuesta: SELECT * FROM people;\nEl inventor: \u0026ldquo;Dr. Phi\u0026rdquo;\n"
},
{
	"uri": "/es/security-phishing/",
	"title": "Seguridad: Phishing",
	"tags": [],
	"description": "Gu√≠a introductoria sobre el concepto de phishing!",
	"content": "Bob va a pescar Conoce a nuestro amigo Bob. Bob es un caballero agradable y alegre. Sus aficiones son viajar y pescar. Una buena noche, Bob recibi√≥ un correo electr√≥nico diciendo que gan√≥ un viaje gratis a las \u0026ldquo;Bahamas\u0026rdquo;. Bob se emocion√≥. Inmediatamente hizo clic en el enlace para ingresar sus datos personales y esper√≥ a que llegara su itinerario.\nBob decidi√≥ ir de compras para su viaje. Compr√≥ ropa nueva y una ca√±a de pescar nueva.\nSin embargo, pasaron 24 horas despu√©s, y no recibi√≥ ninguna confirmaci√≥n de su viaje. Pas√≥ otro d√≠a y todav√≠a nada. Al d√≠a siguiente, decidi√≥ ir a encontrarse con su buena amiga Alice. Bob le cont√≥ a Alice todo sobre el correo electr√≥nico, el viaje a las Bahamas, su ropa nueva y las ganas que tiene de ir a pescar. Alice, siendo una agente secreta, sospechaba que algo esta raro y le pidi√≥ a Bob que le mostrara el correo electr√≥nico.\nAl leer el correo electr√≥nico, Alice suspir√≥: \u0026ldquo;¬°Bob, has sido phished!\u0026rdquo;\nTabla de contenido Sections\rConceptos b√°sicos de phishing Miremos mas cerca que pasa. Otros tipos de phishing ¬øQu√© es phishy? Resumen "
},
{
	"uri": "/es/secret-messages/",
	"title": "C++: Mensajes secretos",
	"tags": [],
	"description": "Aprende C++ y crea tus propios mensajes secretos",
	"content": "Mensajes Secretos con C++ Introducci√≥n Bienvenido a la corte!\nEn un reino no muy lejano, todos los d√≠as el rey le env√≠a mensajes a la reina, la cual se encuentra en otra tierra presenciando una coronaci√≥n. Su estad√≠a se alarg√≥ un poco, ya que est√°n haciendo acuerdos de alta importancia para sus naciones. ¬°Pero sus mensajes han sido intervenidos! ¬°Los reyes se enteraron que sus mayores enemigos, los piratas, lograron leer todos esos mensajes!\nPor eso, pensaron en un sistema para que los piratas no entiendan sus conversaciones, pero necesitan ayuda para llevarlo a cabo.\nEl Rey ha pensado en ti, el nuevo programador de la corte, para que desarrolles un sistema que le permitan a √©l y a la reina intercambiar mensajes camuflados y que los piratas no puedan entenderlos. ¬øTe animas a ayudarlo? ¬øPodr√°s con esta gran misi√≥n? El futuro del reino esta en tus manos. Los piratas ya est√°n entrando por la costa. ¬øQue le querr√° decir el rey a la reina?\nContenido Secciones\rUsando Repl.It Actividad 1 - Output Actividad 2 - Input y Variables Actividad 3 - Ciclos Actividad 4 - Condiciones Actividad 5 - C√≥digo Ascii Actividad 6 - Funciones Actividad 7 - Input line Fin "
},
{
	"uri": "/es/web-basics/",
	"title": "HTML &amp; CSS: Web Basico",
	"tags": [],
	"description": "Gu√≠a de introducci√≥n de como hacer una pagina web desde el comienzo. ",
	"content": "¬°Vamos a crear un sitio web! Benji naci√≥ en Houston, Texas. Poco despu√©s de que Benji naciera, un hurac√°n devastador azot√≥ Houston. El hurac√°n Harvey desplaz√≥ a m√°s de 30.000 personas, incluyendo a la familia de Benji. Benji no puede hablar en lenguaje humano as√≠ que no conocemos los detalles. Todo lo que sabemos es que Benji est√° buscando un hogar y est√° comprometido a portarse bien donde sea que vaya. ¬°Vamos a crear un sitio web as√≠ podemos compartir su informaci√≥n y encontrarle su nuevo hogar!\nTabla de contenido Secciones\rConceptos B√°sicos Poniendo todo junto Actividad 1 - Familiarizarse con editor en linea Atributos de HTML Activity 2 - CSS Elementos multimedia Activity 3 - Adding a GIF of Nuvi Actividad 4 - Formulario de contacto Activity 5 - La gran actividad Aloja (host) tu sitio web En caso de que te lo estuvieras preguntando "
},
{
	"uri": "/es/microbit/",
	"title": "MicroBit: Codificaci√≥n con mini computadoras",
	"tags": [],
	"description": "Usando MicroBits para ense√±ar a los estudientes JavaScript y hardware",
	"content": "Una introducci√≥n a JavaScript y hardware mediante Micro:Bits\rLo b√°sico ¬øQu√© es JavaScript? JavaScript es uno de los muchos lenguajes de programaci√≥n y se conoce como el lenguaje de programaci√≥n para la web. Se utiliza para controlar el comportamiento de la p√°gina web como clics de bot√≥n, ventanas emergentes, flujos de datos y muchas otras funciones.\nVariables Las variables son contenedores en el c√≥digo que pueden contener un solo n√∫mero, palabra u otra informaci√≥n. Esta informaci√≥n se puede utilizar y cambiar llamando la variable m√°s adelante en el programa. Esto significa que puedes solicitar a tu programa que acceda a la informaci√≥n que has almacenado.\nCon algunas excepciones, las variables se pueden identificar con cualquier letra, d√≠gito, ora inferior o signo de d√≥lar. PERO pase lo que pase, no pueden tener espacios y siempre deben empezar con una letra.\nLas variables pueden contener diferentes tipos de datos. Vamos a repasar lo b√°sico.\nTipos de Datos N√∫meros Enteros Un n√∫mero entero es b√°sicamente s√≥lo un nombre elegante para cualquier n√∫mero que no es un decimal. Por ejemplo, los n√∫meros enteros son n√∫meros como 3, 100, 6,000, -3, ¬°y m√°s!\n// Este es un comentario. Estos se utilizan para describir lo que hace tu c√≥digo. // A continuaci√≥n se muestran diferentes ejemplos de variables. // Ejemplos de variables enteras (no decimales): var a = 5; var b = 10; var c = 15; Dobles Los dobles son los otros n√∫meros que tienen un punto decimal. Ejemplos son n√∫meros como 0.5, 1.5, ¬°y m√°s!\n// Ejemplos de variables dobles (n√∫meros decimales): var x = 0.5; var y = 1.5; var z = 2.0; Cadenas Las cadenas son variables que pueden almacenar palabras. Si te ayuda a recordar que las cadenas son palabras, consid√©relos como una \u0026ldquo;cadena\u0026rdquo; de caracteres. Las cadenas pueden ser cualquier cosa como tu nombre o el nombre de tu mascota favorita.\nLas cadenas est√°n rodeadas por comillas.\n// Ejemplos de Cadenas (una o m√°s palabras tambi√©n conocidas como \u0026#34;cadena\u0026#34; de caracteres): // Los valores de las variables de cadena est√°n rodeados por comillas var compania = \u0026#34;MICROSOFT\u0026#34;; var curso = \u0026#34;Codificar es divertido!\u0026#34;; var mensaje = \u0026#34;Codificar es divertido!\u0026#34;; Caracteres Los caracteres son letras individuales. Est√°n rodeados por comillas.\n// Ejemplo de variable de car√°cter (una sola letra): // los valores de las variables de car√°cter est√°n rodeados por comillas. var letter = \u0026#34;A\u0026#34;; Booleanos A veces los programadores quieren comprobar si ciertas condiciones son verdaderas o falsas. Esta informaci√≥n se almacena en un dato tipo booleano.\nSi tienes curiosidad acerca de por qu√© se llaman booleanos, un tipo llamado George Boole es el que los cre√≥.\n// Un variable booleano puede ser verdadero (true) o falso (false). var puedenVolarLosCerdos = false; var codificarEsPadre = true; Operaciones matem√°ticas ¬°Ah s√≠! Las computadoras son esencialmente calculadoras por lo que debe ser un hecho que podemos hacer matem√°ticas en ellas. Aqu√≠ hay ejemplos de las matem√°ticas que puedes hacer en tus programas de JavaScript.\nSuma var a = a + b; //a = 15 var a += b; //a = 25 Resta var a = a - b; //a = 15 var a -= b; //a = 5 Multiplicaci√≥n var a = a * b; //a = 50 var a *= b; //a = 500 Divisi√≥n var a = a / b; //a = 50 var a /= b; //a = 5 M√≥dulo Ah s√≠, puede sonar aterrador pero en realidad no lo es. Las operaciones de m√≥dulo s√≥lo te dan el residuo despu√©s de la divisi√≥n. Por ejemplo, 10 % 2 da 0 porque cuando se divide 10 por 2, no le queda ning√∫n residuo.\nvar d = 10 % 2; //d= 0 var e = 5 % 2; //e= 1 Declaraciones impresas A veces deseas que tu computadora muestre realmente el texto o los datas que contienen las variables. Para ello utilizamos instrucciones de impresi√≥n.\nconsole.log(\u0026#34;Esto aparecer√° en la consola, pero no en la p√°gina web\u0026#34;); alert(\u0026#34;Esto se mostrar√° como una ventana emergente\u0026#34;); var respuestaDelUsario = prompt(\u0026#34;¬øQuieres jugar un juego?\u0026#34;); Sentencias Condicionales y Operadores L√≥gicos Las sentencias condicionales m√°s com√∫nmente llamadas ‚Äúif statements‚Äù se utilizan para elegir qu√© c√≥digo ejecutar dependiendo del valor de las variables u otras condiciones.\n// Sentencias Condicionales if (true) { // esta secci√≥n de c√≥digo se ejecutar√° porque la expresi√≥n es cierta (true) } if (false) { //esta secci√≥n de c√≥digo no se ejecutar√° porque la expresi√≥n es falsa (false) } var edad = 10; if (edad \u0026lt; 18) { // si el valor de la variable ‚Äúedad‚Äù es menos que 18 print(\u0026#34;Usted no es un adulto todav√≠a! :( \u0026#34;); } Bucles Y por √∫ltimo, pero no menos importante tenemos cosas llamadas bucles. Esto te permite repetir partes del c√≥digo hasta que se cumpla una determinada condici√≥n. La funci√≥n ‚Äúalert()‚Äù que se ve en el c√≥digo a continuaci√≥n produce una ventana emergente que te muestra el par√°metro que le pasas. El par√°metro es lo que est√° entre par√©ntesis. En este caso est√° mostrando el valor de la cuenta actualizada.\n// Este bucle ‚Äúwhile‚Äù cuenta hacia abajo desde 10 var cuenta = 10; while (cuenta \u0026gt; 0) { alert(cuenta); cuenta--; } // Este bucle ‚Äúfor‚Äù cuenta hacia abajo desde 10. for (var i = 10; i \u0026gt; 0; i--) { alert(i); } // Este es un bucle ‚Äúwhile‚Äù sin fin o un bucle ‚Äúwhile‚Äù infinito. while (true) { // Esta parte del c√≥digo se ejecutar√° una y otra vez para siempre ya que la condici√≥n nunca ser√° falsa. // Cierto (true) siempre es cierto (true). } // ‚Äùbreak‚Äù rompe un bucle inmediatamente y se mueve a la l√≠nea siguiente del bucle while (true) { break; } // El programa se sale del bucle despu√©s del ‚Äúbreak‚Äù y sigue ejecutando en esta l√≠nea. Comenzando con Micro:Bit Ahora que conoces los conceptos b√°sicos de JavaScript, ¬°puedes usar tus habilidades de conocimiento para empezar a programar tu Micro:Bit!\n¬øQu√© es un Micro:Bit? Un Micro:Bit es una mini computadora programable! Se puede codificar desde cualquier navegador web en varios lenguajes de programaci√≥n como JavaScript, Python, Scratch y Block. Para nuestra sesi√≥n de hoy vamos a utilizar JavaScript.\nTu Micro:Bit tiene las siguientes caracter√≠sticas f√≠sicas:\n25 LEDs programables individualmente 2 botones programables Pines de conexi√≥n f√≠sica Sensores de movimiento (aceler√≥metro y br√∫jula) Comunicaci√≥n inal√°mbrica a trav√©s de bluetooth y radio Interfaz USB Si deseas aprender m√°s acerca de cada componente individual y todas las caracter√≠sticas que vienen con tu Micro:Bit puedes hacer clic aqu√≠\r.\nVe y saca el Micro:Bit y el resto de los componentes de la bolsa. Debes tener un Micro:Bit, 2 bater√≠as, un cable micro USB, y el soporte de la bater√≠a (la caja negra con los cables rojos y negros que salen de ella). Si te falta algo o necesitas ayuda, ¬°no dudes en preguntar a uno de los instructores!\nInicio r√°pido Contin√∫a y conecta tu Micro:Bit a tu computadora usando el cable USB. No necesitar√°s las bater√≠as por un tiempo entonces puedas dejarlas a un lado.\nUna vez que conectes el Micro:Bit a tu computadora, se mostrar√° en tu computadora como una unidad llamada \u0026lsquo;MICROBIT\u0026rsquo;. Si abres el explorador de archivos, deber√≠as ver algo similar a la imagen de abajo.\n¬°He codificado un juego para darte un ejemplo de lo que puedes hacer! Sigue adelante y descarga mi juego haciendo clic en la siguiente liga.\nHaz aqu√≠ clic para descargar\nUna vez que se descarga, deber√°s mirar el archivo ‚ÄòHEX‚Äô dentro de tu carpeta de Descargas (o ‚ÄòDownloads‚Äô). (Tambi√©n notar√°s que he nombrado este juego \u0026lsquo;Asteroides.\u0026rsquo; Si tienes un nombre mejor por favor hazme saber.)\nPara jugar el juego tendr√°s que copiar este archivo a tu Micro:Bit. Para ello puedes simplemente copiar y pegar el archivo en el directorio de Micro:Bit pero encontr√© otro m√©todo mucho m√°s f√°cil. Simplemente haz clic con el bot√≥n derecho en el archivo y luego haz clic en Enviar A (o Sent To) y luego selecciona MICROBIT\nSi lo hiciste correctamente, notar√°s que los LEDs de tu Micro:Bit se detendr√°n durante un rato y el LED amarillo de la parte de atr√°s parpadea mientras el Micro:Bit descarga el c√≥digo. Si no ves esto, no te preocupes y p√≠denos ayuda.\n¬øTienes curiosidad por saber c√≥mo es el c√≥digo de mi juego? Haz clic aqu√≠\rProtege tu nave espacial ¬øListo para jugar? Esta es la lista de controles:\nA + B: Dispara l√°seres para destruir asteroides entrantes Tilt: Inclina tu Micro:Bit hacia la izquierda o la derecha para mover tu nave espacial Simple ¬øverdad? Ya veremos. He programado este juego para ir m√°s r√°pido cuanto m√°s asteroides destruyas. ¬øCrees que tienes el puntaje m√°s alto? ¬°Presume y haz nos lo saber! Puedes ver tus puntos cuando la pantalla de ‚Äúgame over‚Äù termine.\nCONSEJO: Si llegas a la pantalla de ‚Äúgame over‚Äù y quieres iniciar un nuevo juego, simplemente haz clic en el bot√≥n de reinicio detr√°s de tu Micro:Bit.\nEmpezar a codificar ¬°Finalmente! ¬°Aqu√≠ est√° la mejor parte! ¬°Ahora puedes usar todo lo que has aprendido para crear tus propios programas y codificar tu Micro:Bit!\nEn primer lugar, vamos a mostrar nuestro nombre en el Micro:Bit. Continua conmigo.\n¬°Ahora vamos a repasar dos tutoriales juntos! Ve a esta liga\ry encuentre el tutorial \u0026ldquo;Flashing Heart.\u0026rdquo;\nVamos a ir a trav√©s de esto y los tutoriales de \u0026ldquo;Micro Chat.\u0026rdquo;\nTu turno Avanza y encuentra otro tutorial en el que est√©s interesado. Si te sientes seguro, codifica tu propio programa desde el comienzo. ¬°Divi√©rtete!\nRecursos y Hoja de Trucos Avanzados de Micro:Bit Variables, Impresi√≥n y Descarga Las variables de JavaScript son las mismas, excepto que se utiliza la palabra clave \u0026rsquo;let\u0026rsquo; en lugar de ‚Äòvar‚Äô para definir un variable.\nlet variable = \u0026#34;texto\u0026#34;; El comando basic.showString(variable); har√° que el texto aparezca en el LED del Micro:Bit\nlet nombre = \u0026#34;Gonzo\u0026#34;; basic.showString(nombre); Comandos √∫tiles de JavaScript Los siguientes comandos est√°n en JavaScript, si prefieres usar el equivalente en c√≥digo Block simplemente busca en la biblioteca correspondiente. Por ejemplo, puedes encontrar la funci√≥n ‚Äòbasic.forever()‚Äô haciendo clic en la pesta√±a ‚ÄòBasic‚Äô y arrastrando la funci√≥n ‚Äòforever‚Äô a tu pantalla.\nbasic.forever(function() { // El c√≥digo entre estos corchetes se ejecutar√° para siempre en tu Micro:Bit. }); // Muestra el n√∫mero dentro de los par√©ntesis en tu Micro:Bit basic.showNumber(number); // Muestra la cadena (palabra) dentro de los par√©ntesis en tu Micro:Bit basic.showString(string); // Genera un n√∫mero aleatorio entre 0 y el n√∫mero dentro de los par√©ntesis Math.random(number); input.onButtonPressed(Button.A, function() { // El c√≥digo aqu√≠ se ejecuta cuando se hace clic el bot√≥n que especifiques. // En este caso cuando se presiona el bot√≥n A. }); // Muestra el caract√©r especificado en la pantalla LED basic.showIcon(IconNames.Character); // Pausa a tu Micro:Bit por la cantidad especificada de microsegundos basic.pause(microseconds); "
},
{
	"uri": "/es/python-earsketch/",
	"title": "Python: Hagamos m√∫sica con EarSketch",
	"tags": [],
	"description": "Crea m√∫sica usando Python y EarSketch",
	"content": "Hagamos algo de m√∫sica! Bienvenidos a esta gu√≠a introductoria sobre c√≥mo crear m√∫sica usando EarSketch\ry Python.\nPara ir a alguna actividad espec√≠fica, puedes darle click a cualquier secci√≥n en el menu a la izquierda de esta p√°gina.\nConoce a DJ Nuvi ¬°Nuvi tiene sus aud√≠fonos! ¬øPuedes encontrar los tuyos? Te estamos contactando para crear el pr√≥ximo √©xito de Nuvi, pero cuando llegas al estudio, Nuvi dice que su pr√≥ximo proyecto se va a producir todo en c√≥digo. Esto es algo que no se ha hecho antes, ¬øest√°s listo para el desaf√≠o? ¬°Mira a tu alrededor para encontrar tus aud√≠fonos y prep√°rate para unirte a √©l!\nAntes de empezar, debemos comprobar si tus aud√≠fonos est√°n funcionando. Intenta reproducir el siguiente audio. ¬øQu√© oyes?\nVerifica tu audio para ver si tu browser/navegador tiene soporte para audio. Sino suena, entonces es probable que necesites usar otro browser/navegador de internet como Google Chrome. audio element.\rPantalla de EarSketch que usaremos para este taller Secciones Secciones\rM√∫sica Basica Conceptos b√°sicos de Python Introducci√≥n a EarSketch Actividad 1 - Establecer tempo y a√±adir sonidos Actividad 2 ‚Äì Haz tu propia canci√≥n! Actividad 3 - Organiza tus canciones usando funciones Actividad 4 - A√±adir efectos a tu canci√≥n Actividad 5 - Usar efecto de Fade in "
},
{
	"uri": "/es/guidelines/",
	"title": "Directrices para colaboradores del taller",
	"tags": [],
	"description": "",
	"content": "¬°Bienvenido! Estas pautas son para crear o editar un Taller de Nuevo Foundation.\nAplicando formatos al texto\rPr√≥ximamente La orientaci√≥n del taller es un trabajo en progreso. Mientras tanto, visite el readme.md del proyecto para obtener instrucciones de configuraci√≥n.\n"
},
{
	"uri": "/es/python-guess-number/",
	"title": "Python: Adivina el N√∫mero",
	"tags": [],
	"description": "Crea un juego sencillo que le pida al usuario adivinar un n√∫mero generado aleatoriamente",
	"content": "En este taller, crear√°s un juego sencillo que incorpora algunos de los conceptos que aprendiste en la secci√≥n de Fundamentos de Python. ¬°Prueba esta demostraci√≥n y descubre cu√°ntos intentos te lleva adivinar el n√∫mero!\nTabla de Contenidos Tabla de Contenidos\rGenerar un n√∫mero aleatorio Crea el juego "
},
{
	"uri": "/es/sql_workshop/basics_activity/",
	"title": "Tutorial 1: Aprende los pasos b√°sicos de un cadete",
	"tags": [],
	"description": "aprende qu√© es una base de datos y SQL",
	"content": "¬°Entrenamiento de cadete! Como un nuevo explorador del espacio honor√≠fico, repasemos los pasos esenciales!\n¬øQu√© es una Base de Datos? Es un tipo de contenedor que almacena y organiza informaci√≥n. Piensa que una base de datos es como un bote donde puedes colocar juguetes para que no se pierdan y para que puedas encontrarlos f√°cilmente despu√©s. Este bote puede tener otros botes m√°s peque√±os para ayudarte a clasificar tus juguetes.\n¬øQu√©s es SQL? Por sus iniciales en ingl√©s, \u0026ldquo;Structured Query Language\u0026rdquo; que significa Lenguaje de Consulta Estructurado, y como su nombre lo dice, es un lenguaje que te permite hablar con las bases de datos para acceder a la informaci√≥n que necesitas. Un comando de SQL es como una oraci√≥n que le dices a la base de datos.\n¬øQu√© es una tabla? Una tabla puede ser una base de datos. Ahora que tienes cierto conocimiento de las bases de datos y de los comandos de SQL, comenzar√°s a aprender c√≥mo usarlos en tus misiones.Contin√∫a para empezar tu primera aventura espacial oficial.\n"
},
{
	"uri": "/es/sql_workshop/activity1/",
	"title": "Actividad 1: Aprende el comando SELECT",
	"tags": [],
	"description": "Aprende el comando SELECT",
	"content": "\rMisi√≥n 1: ¬°Salvar al Planeta de la Diversi√≥n del Aburrimiento! ¬°Tu primera misi√≥n es ir al Planeta de la Diversi√≥n y salvarlo del aburrimiento! Te han enviado una base de datos sobre el planeta y necesitas aprender como usar los comandos SQL para ayudar a salvar el Planeta de la Diversi√≥n.\nTarea 1: Echa un vistazo a la informaci√≥n sobre el Planeta de la Diversi√≥n Te han dado informaci√≥n sobre la Galaxia y quieres buscar al Planeta de la Diversi√≥n. Para hacer esto, la Federaci√≥n Gal√°ctica te ha dado tu primer comando SQL:SELECT.\nLo que hace el comando: El comando SELECT te permite elegir cu√°les datos mostrar de la base de datos.\nEjemplo: ¬°Ahora usa lo que aprendiste! ¬°Arrastra los bloques a la terminal y reacomodalos para responder la siguiente pregunta!\nPregunta: ¬øCu√°l comando muestra todas las columnas en la base datos llamadas \u0026ldquo;galaxy\u0026rdquo;? Enter\rERROR ENTRADA INV√ÅLIDA\r¬°Encontraste el comando correcto para mostrar la base de datos completa! Esto es es √∫til cuando quieres ver toda la informaci√≥n al alcance de tus dedos.\n\u0026#10003;\rHaz completado la tarea. Continua a la siguiente misi√≥n.\r"
},
{
	"uri": "/es/sql_workshop/activity2/",
	"title": "Actividad 2: Aprende el comando WHERE",
	"tags": [],
	"description": "Aprende el comando WHERE",
	"content": "\rTarea 2: ¬°Viaja al Planeta de la Diversi√≥n! Necesitas programar el GPS de tus naves espaciales para ir al Planeta de la Diversi√≥n reacomodando los bloques de c√≥digo. Para encontrar las coordenadas, la Federaci√≥n Gal√°ctica te ha dado el siguiente comando SQL: WHERE\nLo que hace el comando: El comando WHERE te permite solo mostrar los datos que tu quieres.\nEjemplo: El bloque de la base de datos SELECT * FROM que aprendimos en la actividad anterior nos permite elegir una base de datos y mirar dentro de √©sta.\nEl comando WHERE nos permite reducir los datos que se muestran dependiendo de la condici√≥n (el bloque verde en la imagen debajo). Una condici√≥n es un requerimiento que est√°s buscando. Las condiciones no tienen que seguir el ejemplo de arriba, pero su uso m√°s com√∫n es buscar los renglones que contengan informaci√≥n espec√≠fica.\nEl nombre de la columna en la que deseamos buscar informaci√≥n.\nEl signo de igual significa que queremos buscar la informaci√≥n que coincide con lo que tenemos en el lado derecho del signo de igual.\nCuando estamos buscando palabras espec√≠ficas o texto, debemos rodear el texto con comillas simples. SQL utiliza comillas simples para indicar que estamos buscando una palabra en la base de datos.\nPuedes reemplazar \u0026rsquo;texto\u0026rsquo; con cualquier palabra que estes buscando en la base de datos.\nLos signos de punto y coma se utlizan para indicar el final de un comando SQL, como un punto al final de una oraci√≥n.\nUsando la base de datos llamada \u0026lsquo;galaxy\u0026rsquo; que tiene la columna \u0026lsquo;planet,\u0026rsquo; encuentra las coordenadas para el Planeta de la Diversi√≥n. Enter Ahora que sabes donde esta el Planeta de la Diversi√≥n, podemos encontrar mas informaci√≥n sobre este e ignorar a otros planetas. ¬°Vamos al Planeta de la Diversi√≥n! \u0026#10003;\r¬°Has completado la tarea!¬°Continua a la siguiente misi√≥n!\r"
},
{
	"uri": "/es/sql_workshop/syntax_explanation/",
	"title": "Tutorial 2: Explicar la Sintaxis",
	"tags": [],
	"description": "Explicar la sintaxis",
	"content": "¬øUn Email de parte de la Federaci√≥n G√°lactica? A la mitad de tu viaje, de pronto recibes un mensaje de la Federaci√≥n G√°lactica. ¬øSobre qu√© se tratar√°?\nRemitente: La Federaci√≥n G√°lactica\nDestinatario: Cadete Espacial\nAsunto: Terminal mejorada\nQuerido Cadete Espacial,\nNuestros archivos indican que haz aprendido los suficientes comandos para aprender la estructura b√°sica de los comandos de SQL.\nLa Federaci√≥n G√°lactica ha tomado nota de tus logros y ha decidido otorgarte una terminal mejorada. Durante tu viaje, vas a necesitar una terminal √∫til para desplegar informaci√≥n sobre el planeta. ¬°Ahora te ser√° posible escribir comandos!\nSiguiendo los lineamientos de Explorador Espacial, ahora te ense√±aremos la estructura central de un comando de SQL deseando que podr√°s superar los obst√°culos que aparezcan en tu camino.\nCon suerte nuestro consejo te ayudar√° en tu viaje. ¬°Buena suerte, Cadete Espacial!\nDese√°ndote la mejor aventura,\nLa Federaci√≥n G√°lactica\n"
},
{
	"uri": "/es/sql_workshop/activity3/",
	"title": "Actividad 3: Aprended el comando COUNT",
	"tags": [],
	"description": "Aprende el comando COUNT",
	"content": "\rDespu√©s de recibir el mensaje de la Federaci√≥n Gal√°ctica, contin√∫as tu aventura.\n¬°Haz llegado exitosamente al Planeta de la Diversi√≥n! La Federaci√≥n Gal√°ctica te ha enviado una base de datos sobre este planeta.\nTarea 3: Habla con los habitantes Necesitas hablar con los habitantes del Planeta de la Diversi√≥n para descubrir cu√°l es el problema. Averigua cu√°ntas ciudades hay en el planeta utilizando el comando COUNT().\nCuando usamos el comando SELECT * FROM planet;, la tabla de arriba se muestra. Pero para verificar el n√∫mero de ciudades, podemos utilizar el comando COUNT().\nPregunta: Utilizando COUNT(), ¬øcu√°l comando mostrar√° el n√∫mero de ciudades en el Planeta de la Diversi√≥n? Recuerda escribir la respuesta y no copiar y pegar el comando. Presiona el bot√≥n de Enter en la terminal para verificar s√≠ tienes el comando correcto. Usa el boton de Reset para comenzar de nuevo.\nPista 1: La Federacion Galactica te dio el nombre de esta base de datos al principio de esta actividad. Pista 2: Puedes usar el asterisco (*) o el nombre de la columna. Pista 3: No olvide agregar el punto y coma. Escribe el comando aqu√≠\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\rEncontraste el comando correcto para mostrar la base de datos completa. Esto es √∫til cuando quieres ver toda la informaci√≥n al alcance de tus dedos.\n\u0026#10003;\r¬°Has completado la tarea!¬°Contin√∫a a la siguiente misi√≥n! "
},
{
	"uri": "/es/sql_workshop/activity4/",
	"title": "Actividad 4: Selecciona Informaci√≥n Multiple",
	"tags": [],
	"description": "Selecciona Informaci√≥n Multiple",
	"content": "\rTarea 4: Encuentra al L√≠der Despu√©s de ir a la Capital de Diversi√≥n, los habitantes te indican hablar con su L√≠der. Averigua cu√°l habitante es el L√≠der.\nPara completar esta tarea, echemos un vistazo a c√≥mo seleccionar m√∫ltiples columnas en la base de datos.\nAhora utiliza lo que aprendiste para averiguar qui√©n es el l√≠der del Planeta de la Diversi√≥n Puedes ver la base de datos completa utilizando el comando SELECT * FROM [database_name]; que aprendiste en la Actividad 1.\nLa Federaci√≥n Gal√°ctica tambi√©n te ha enviado un recordatorio sobre la base de datos \u0026lsquo;galaxy\u0026rsquo; tiene las siguientes columnas:\nplanet_number: El orden en el los planetas aparecen en la base de datos.\nplanet: El nombre del planeta.\nleader: El nombre del l√≠der del planeta.\npopulation: La cantidad de habitantes que viven en el planeta.\ncoordinate: La ubicaci√≥n del planeta en la galaxia.\nPista: Solo se necesitan dos columnas.\nPregunta: Ustilizando la base de datos \u0026lsquo;galaxy\u0026rsquo;, ¬øc√≥mo muestras solo los nombres de los planetas y su l√≠der? ¬°No olvides el punto y coma al final!\nEscribe el comando aqu√≠\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\r¬°Encontraste el comando correcto para mostrar todos los planetas y sus l√≠deres!\n\u0026#10003;\r¬°Has completado la tarea!¬°Contin√∫a a la siguiente misi√≥n!\r"
},
{
	"uri": "/es/sql_workshop/activity5/",
	"title": "Actividad 5: Aprende el comando MAX/MIN",
	"tags": [],
	"description": "Aprende el comando MAX/MIN",
	"content": "\rTarea 5: Encuentra la escalera m√°s alta para llegar con su L√≠der Haz descubierto que el l√≠der del planeta est√° en una caba√±a en la colina m√°s alta pero para llegar ahi, necesitas encontrar la escalera m√°s alta en la Capital de la Diversi√≥n\nLa Federaci√≥n Gal√°ctica te ha enviado cuatro comandos SQL nuevos. ¬°Vamos a echarles un vistazo!\nLo que hace el comando: La propiedad de la columna: MAX() es utilizada para buscar el valor m√°s alto en una columna. MIN() es lo opuesto de MAX() y buscar√° el valor m√°s chico en una columna. Puedes reemplazar cualquier palabra dentro de los par√©ntesis con el nombre de otra columna para obtener el valor m√©s alto o chico de esa columna.\nF√≠jate en c√≥mo los elementos especificados dentro IN() y NOT IN() est√°n rodeados por comillas simples pero las que est√°n dentro de MAX() y MIN() no lo est√°n.\nCondici√≥n:\nIN() y NOT IN() son usados mano a mano con el comando WHERE que aprendimos en la Actividad 2. IN() es parte de la condici√≥n de un comando SQL y es √∫til cuando s√≥lo quieres mostrar algunas columnas y no todas.\nNOT IN() es lo opuesto de IN(). En lugar de elegir qu√© mostrar como el comando IN(), NOT IN() mostrar√° todas las columnas que no elegiste dentro dentro de los par√©ntesis.\nPuedes usar comas dentro de los par√©ntesis para elegir m√°s de una columa qu√© mostrar o no.\nUsar solo un input (entrada de datos) dentro de IN() es equivalente a usar =.\nEjemplo. column_name IN('obejct_in_column'); es lo mismo que column_name = 'obejct_in_column';\n¬°Ahora utiliza lo que aprendiste! Usando la base de datos llamada \u0026lsquo;items\u0026rsquo; con las columnas \u0026lsquo;object\u0026rsquo; y \u0026lsquo;height\u0026rsquo;, encuentra la escalera (\u0026rsquo;ladder\u0026rsquo;) m√°s alta. Puedes mostrar la base de datos utilizando el comando de la Actividad 1.\nPista 1: Recuerda el consejo de la Federacion Galactica:SELECT [column/column property] FROM [database] [optional condition];\nPista 2: La propiedad de la columna: ¬øNecesitas usar MAX() o MIN() para encontrar la escalera mas alta?\nPista 3: Condici√≥n: WHERE [column_name] [IN/NOT IN];\nPista 4: ¬øNecesitas usar IN() o NOT IN() para mostrar la escalera (\u0026rsquo;ladder\u0026rsquo;)?\nPista 5: ¬øCu√°l s√≠mbolo necesitas al final de un comando SQL?\nBONUS: Intenta usar m√∫ltiples inputs (entradas de datos) dentro de IN() o NOT IN() cuando est√©s buscando la escalera. Este comando es muy poderoso cuando estas buscando m√∫ltiples tipos de objetos. Recuerda: Puedes consultar la base datos m√∫ltiples veces usando todo lo que has aprendido hasta ahora para encontrar el color de la escalera m√°s alta.\nEscribe el comando aqu√≠\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\rRED Ladder = 100 GREEN Ladder = 60 YELLOW Ladder = 20 ¬°Elige y arrastra la escalera correcta en la colina para continuar tu aventura! La escalera correcta resaltar√° en verde.\n¬°Lo lograste! El Lider te comunica que el Planeta de la Diversi√≥n est√° en riesgo de ser invadido por aliens del Planeta del Aburrimiento. ¬°Debes encontrar los T√≥tems de la Diversi√≥n para salvar al planeta! \u0026#10003;\r¬°Has completado la tarea!¬°Contin√∫a a la siguiente misi√≥n!\r"
},
{
	"uri": "/es/sql_workshop/activity6/",
	"title": "Actividdad 6: Utiliza Comparadores",
	"tags": [],
	"description": "Utiliza Comparadores",
	"content": "\rTarea 6: Encuentra el T√≥tem Lengedario de la Diversi√≥n, el Ca√±√≥n de Confeti Necesitas explorar el planeta y encontrar el primer T√≥tem Legendario de la Diversi√≥n: el Ca√±√≥n de Confeti de la Diversi√≥n. La leyenda cuenta que este ca√±√≥n nunca deja de lanzar confeti ya que es un s√≠mbolo de paz y entretenimiento infinito.\nTu √∫nica pista es que el artefacto es creado el 1738-09-12.\nPara ayudarte, la Federaci√≥n Gal√°ctica te ha enviado un tutorial breve de c√≥mo comparar los n√∫meros en la base de datos. En el ejemplo 2, los s√≠mbolos != pueden ser utilizados en vez de \u0026lt;\u0026gt; para darte el mismo output (salida de datos).\nF√≠jate en el valor en [value to compare] en SELECT * FROM [database] WHERE [column_name] [Comparator] [value to compare]; Toma en cuenta que los n√∫meros no necesitan comillas simples alrededor, pero los datos/palabras si necesitan estar dentro de comillas simples. S√≠ Transportation/Transporte tuviera 2 columnas m√°s llamadas \u0026ldquo;Nombre\u0026rdquo; que almacenaran el nombre del veh√≠culo y \u0026ldquo;Fecha\u0026rdquo; que almacenara la fecha de fabricaci√≥n del veh√≠culo, las consultar√≠amos as√≠:\nSELECT * FROM Transportation WHERE Fuel \u0026gt; 20;\nSELECT * FROM Transportation WHERE Name = 'myrocket';\nSELECT * FROM Transportation WHERE Date \u0026gt; '2021-01-01';\nUtilizando la base de datos llamada \u0026lsquo;items\u0026rsquo; con la columna \u0026lsquo;date_created\u0026rsquo;, averigua cu√°l artefacto es el T√≥tem Legendario de la Diversi√≥n: el Can√≥n de Confeti Puedes mostrar la base de datos utilizando el comando de la Actividad 1.\nPista 1: El artefacto se cre√≥ en \u0026lsquo;1738-09-12\u0026rsquo; (use comillas simples alrededor de la fecha).\nSugerencia 2: ¬øQu√© comparador necesita usar para encontrar una coincidencia exacta?\nPista 3: El comando correcto sigue de cerca el ejemplo anterior.\nSugerencia 4: No necesita comillas simples alrededor de los nombres de las columnas o bases de datos en este comando.\nPista 5: ¬øQu√© s√≠mbolo necesita al final de un comando SQL?\nBONUS: ¬°Muestra tambi√©n todos los objetos creados a partir de \u0026lsquo;1738-09-12\u0026rsquo;!\nPista 1: El artefacto se cre√≥ en \u0026lsquo;1738-09-12\u0026rsquo; (use comillas simples alrededor de la fecha).\nPista 2: ¬øQu√© comparador necesitas usar para encontrar una coincidencia exacta de datos?\nPista 3: El comando correcto es similar al ejemplo de arriba.\nPista 4: No necesitas comillas simples alrededor de los nombres de las columnas o bases de datos en este comando.\nPista 5: ¬øQu√© s√≠mbolo necesitas al final de un comando SQL?\nBONUS: ¬°Muestra tambi√©n todos los objetos creados a partir de \u0026lsquo;1738-09-12\u0026rsquo;!\nEscribe el comando aqu√≠\rEnter\rReiniciar\rERROR ENTRADA INV√ÅLIDA\rHas encontrado la ubicaci√≥n del primer T√≥tem Legendario de la Diversi√≥n: ¬°el Ca√±√≥n de Confeti!\n\u0026#10003;\r¬°Haz completado la tarea!¬°Contin√∫a a la siguiente misi√≥n!\r"
},
{
	"uri": "/es/sql_workshop/activity7/",
	"title": "Actividad 7: Usa el comando MIN",
	"tags": [],
	"description": "Usa el comando MIN",
	"content": "\rTarea 7: Encuentra la llave para conseguir el Ca√±√≥n de Confeti. Encontraste la ubicaci√≥n del Legendario Ca√±on de Confeti pero est√° encerrado detr√°s de una puerta de titanio y solo puede ser abierta con la llave m√°s peque√±a del planeta.\nPara ayudarte, la Federaci√≥n G√°lactica te ha enviado un recordatorio de la actividad anterior sobre c√≥mo usar el comando MIN().\nUsando la base de datos llamada \u0026lsquo;items\u0026rsquo; (art√≠culos) con columnas etiquetadas como \u0026lsquo;object\u0026rsquo; (objeto) y \u0026lsquo;height\u0026rsquo;(altura), encuentra la \u0026lsquo;key\u0026rsquo; (llave) con la menor altura. Puedes mostrar la base de datos entera usando el comando de la actividad 1.\nPista 1: Recuerda el consejo de la Federaci√≥n G√°lactica: SELECT [columna/propiedad de columna] FROM [base de datos] [condicionales opcionales];\nPista 2: Condicionales WHERE [column_name] [IN()/NOT IN()];\nPista 3: ¬øNecesitar usar IN() o NOT IN() para mostrar la \u0026lsquo;key\u0026rsquo; (llave)?\nEscribe el comando aqu√≠\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\rElige y arrastra la llave correcta en el candado para continuar con tu adventura. La altura corresponde al numero de bucles en la base de la llave. La llave correcta estar√° destacada con color verde.\n¬°Encontraste el T√≥tem Legendario: el Ca√±√≥n de Confeti!\r\u0026#10003;\rCompletaste la tarea. Contin√∫a con la siguiente misi√≥n.\r"
},
{
	"uri": "/es/sql_workshop/activity8/",
	"title": "Actividad 8: Aprende el comando LIKE",
	"tags": [],
	"description": "Aprende el comando LIKE",
	"content": "\rTarea 8: Encuentra el T√≥tem Legendario del planeta de la Diversi√≥n: La Mesa infinita de Buffet. Otro artefecto que debes encontrar es la Mesa Infinita de Buffet del planeta de la Diversi√≥n. Cuenta la leyenda que los festivales nunca se quedar√°n sin comida con esta mesa de buffet m√≠stica.\nEste T√≥tem fue creado un mes despu√©s del artefacto previo: el Ca√±on de Confeti. (recuerda que el Ca√±on de Confeti fue creado en 1738-09-12).\nLa Federaci√≥n Gal√°ctica te ha enviado un breve tutorial sobre un comando √∫til:LIKE\nUsando la base de datos llamada \u0026lsquo;items\u0026rsquo;(art√≠culos) con una columna etiquetada como \u0026lsquo;date_created\u0026rsquo; (fecha de creaci√≥n), encuentra la Mesa de Buffet Infinito. Puedes usar el comando de la actividad 1 para mostrar toda la base de datos.\nPista 1: El formato para la fecha es A√±o-Mes-D√≠a. Pista 2: Este T√≥tem fue creado un mes DESPU√âS que el Ca√±√≥n de Confeti. Pista 3: ¬øCu√°l es el patr√≥n? ¬øNecesitas buscar el mes al inicio, fin o en otro lugar del valor? Escribe el comando aqu√≠\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\r¬°Encontraste la ubicaci√≥n del T√≥tem Legendario del planeta de la Diversi√≥n: La Mesa de Buffet Infinito! Ahora viajaremos a la capital del planeta de la Diversi√≥n.\r\u0026#10003;\rCompletaste la tarea. Contin√∫a con la siguiente misi√≥n.\r"
},
{
	"uri": "/es/sql_workshop/activity9/",
	"title": "Actividad 9: Aprende el comando AVG",
	"tags": [],
	"description": "Aprende el comando AVG",
	"content": "\rTarea 9: Desbloquea la Mesa de Buffet Infinito: ¬°Haz descubirto la ubicaci√≥n de la Mesa de Buffet Infinito! Sin embargo, est√° encerrada detr√°s de una puerta que s√≥lo se abre si encuentras el n√∫mero secreto.\nTu √∫nica pista es que la combinaci√≥n es los primeros dos d√≠gitos de la poblaci√≥n promedio de la ciudad.\nRepasemos el comando AVG()\nUsando la base de datos \u0026lsquo;planet\u0026rsquo; y el comando AVG(), encuentra los primeros dos d√≠gitos del promedio de la poblaci√≥n (\u0026lsquo;population\u0026rsquo;) de la ciudad. Usa el comando de la actividad 1 para ver la base de datos entera.\nPista 1: El comando es muy similar al ejemplo de arriba.\nPista 2: ¬øC√≥mo usas \u0026lsquo;population\u0026rsquo;(poblaci√≥n) con el comando AVG()?\nEscribe el comando aqu√≠\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\r¬°Descubre la combinaci√≥n para abrir la caja fuerte! La pista para la combinaci√≥n est√° arriba en esta p√°gina.\n+ + 0\r0\r- - Validar ¬°Lo lograste, Explorador Espacial! Encontraste el T√≥tem Legendario del planeta de la Diversi√≥n: la Mesa de Buffet Infinito. \u0026#10003;\rCompletaste la tarea. Contin√∫a con la siguiente misi√≥n.\r"
},
{
	"uri": "/es/sql_workshop/activity10/",
	"title": "Actividad 10: Aprende el comando SUM",
	"tags": [],
	"description": "Aprende el comando SUM",
	"content": "\rRegresa los T√≥tems Legendarios del planeta de la Diversi√≥n al Lider Haz encontrado exitosamente los dos T√≥tems Legendarios del planeta de la Diversi√≥n. El L√≠der te agradece por encontrar su tesoro perdido.\nEl L√≠der revela un secreto: Los T√≥tems Legendarios del planeta de la Diversi√≥n no pueden liberar todo su potencial hasta que sean unidos juntos. Unicamente pueden ser unidos por el \u0026ldquo;Inventor\u0026rdquo;.\nTu siguiente paso es encontrar a la persona que pueda combinar ambos T√≥tems Legendarios del planeta de la Diversi√≥n. El \u0026ldquo;Inventor\u0026rdquo; solo va a aparecer si organizas una gran fiesta.\nTarea 10: Ayuda a los habitantes a organizar la fiesta. ¬°El planeta entero est√° invitado! Ayuda a los ciudadanos a prepararse para la fiesta averiguando cu√°ntos invitados ir√°n a la fiesta.\nAprendamos el comando SUM\nUsando la base de datos \u0026lsquo;planet\u0026rsquo;(planeta) y el comando SUM(), encuentra el numero total de invitados que van a asistir a esta incre√≠ble fiesta. Usa el comando de la actividad 1 para mostrar toda la base de datos.\nPista 1: El comando es muy similar al ejemplo de arriba y el ejemplo del ejercicio de AVG() (tarea anterior). Pista 2: La columna \u0026lsquo;population\u0026rsquo;(poblaci√≥n) contiene informaci√≥n sobre el n√∫mero de individuos por ciudad. Escribe el comando aqu√≠\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\r\u0026#10003;\rCompletaste la tarea. Contin√∫a con la siguiente misi√≥n.\r"
},
{
	"uri": "/es/java-basics/",
	"title": "Java: Basics",
	"tags": [],
	"description": "Una gu√≠a introductor√≠a a conceptos b√°sicos de programaci√≥n en Java.",
	"content": "Resumen general Beinvenidos al curso de Java: Basics, donde aprender√°s un lenguaje com√∫nmente utilizado, el cual le da instrucciones a una computadora para crear programas emocionantes!\nJava es un lenguage de programac√≠on simplificado creado por James Gosling junto a Sun Microsystems en California en el a√±o 1995.\nEn este curso, cubriremos las capacidades b√°sicas del lenguaje.\n(image created by Molang: giphy.com/molangofficialpage)\nEn este curso, seguiremos el ejemplo de nuestro pato amarillo, amante a la m√∫sica, llamado Patrick üê• para aprender todo sobre Java y hacer amistades nuevas en el camino.\nContenido Usando Repl.It Imprimir Declaraciones y A√±adir Comentarios Variables and Types Operadores Control Structures M√©todos Objetos y Clases Data Structures (Array \u0026amp; ArrayList) "
},
{
	"uri": "/es/sql_workshop/activity11/",
	"title": "Actividad 11: Aprende el comando GROUP BY",
	"tags": [],
	"description": "Aprende el comando GROUP BY",
	"content": "\rFiesta con los habitantes! Se te ha dado la tarea de elegir qu√© comida servir en la fiesta. Cada ciudad tiene su comida favorita y tienes que decidir cuales tener en la fiesta. Usa el comando GROUP BY para averiguar qu√© traer.\nLo que hace el comando GROUP BY: Tarea 11: Usando la base de datos llamada \u0026lsquo;planet\u0026rsquo;(planeta) con la columna \u0026lsquo;favorite_food\u0026rsquo;(comida favorita), averigua qu√© traer a la fiesta. Pista: El comando es muy similar al ejemplo de arriba.\nBONUS: Combina el los comandos COUNT() y GROUP BY para mostrar el numero de ciudades que les gusta cada comida. (Revisa las actividades 3 y 4 para obtener ayuda)\nEscribe el comando aqu√≠!\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\u003e\rReiniciar ¬°Cocinar! ¬°Lo lograste Cadete Espacial! Ahora los habitantes finalmente podr√°n comenzar la fiesta. \u0026#10003;\rCompletaste la tarea. Contin√∫a con la siguiente misi√≥n.\r"
},
{
	"uri": "/es/sql_workshop/activity12/",
	"title": "Actividad 12: Encuentra al Inventor!",
	"tags": [],
	"description": "Encuentra al Inventor!",
	"content": "\r¬°Todos los invitaods est√°n aqu√≠. Necesitamos encontrar al Inventor antes de que sea muy tarde! Todos se est√°n divirtiendo en la fiesta. El Inventor tambi√©n ha llegado, ahora tenemos que averiguar qui√©n es el Inventor. Nadie sabe c√≥mo luce, pero el l√≠der te ha dado pistas sobre c√≥mo encontrar al inventor.\nTarea 12: Muestra toda la base de datos llamada \u0026ldquo;people\u0026rdquo; (personas) Pista 1: El comando que uses deber√≠a de mostrar toda la base de datos \u0026ldquo;people\u0026rdquo;. Pista 2: El comando es similar al de la actividad 1 (Aprende el comando SELECT). !Escribe el comando aqu√≠!\rEnter Reiniciar\rERROR ENTRADA INV√ÅLIDA\rEstas son algunas pistas para averiguar qui√©n es el \u0026ldquo;Inventor\u0026rdquo;: La comida favorita del Inventor es la pizza.\nLa materia favorita del Inventor es matem√°ticas.\nLa pel√≠cula favorita del Inventor es \u0026ldquo;Big Hero 6\u0026rdquo;\nIngresa la persona aqu√≠\rValidar! \u0026#10003;\r¬°Completaste esta tarea!\r!Salvaste el planeta de la Diversi√≥n! El planeta de la diversi√≥n ahora est√° protegido de invasores gracias a t√≠. Encontraste los Totems Legendarios perdidos y los regresaste a su lugar de origen y salvaste a los ciudadanos del peligro. Los habitantes nunca van a olvidar tu acto de amabilidad. ¬°Felicidades cadete espacial! Haz salvado exitosamente al planeta de la Diversi√≥n.\rClick en el bot√≥n de \"Descargar\" debajo para recibir tu certificado honorario.\rDescargar\r"
},
{
	"uri": "/es/adafruit/",
	"title": "Blocks: Programando Frutas Musicales con Adafruit",
	"tags": [],
	"description": "Una gu√≠a introductoria para crear sonidos usando Adafruit para aprender acerca del hardware",
	"content": "Contenido Secciones\rLos Componentes Construyendo la estaci√≥n de DJ Creando el programa Descargando el Programa "
},
{
	"uri": "/es/security/",
	"title": "Seguridad: Juego de Esp√≠as",
	"tags": [],
	"description": "¬°Gu√≠a introductoria para aprender sobre contrase√±as y c√≥mo crear una segura!",
	"content": "Tabla de contenidos Conociendo a Alicia, Bob y Eva Conceptos B√°sicos de la Contrase√±a Actividad Juego de Esp√≠as Resumen "
},
{
	"uri": "/es/python-turtle/",
	"title": "Python Tortuga",
	"tags": [],
	"description": "Aprender Python con Turtle",
	"content": "Introducci√≥n Bienvenidos al mundo de Nueva Colmena! Llegaste justo a tiempo para ayudar a nuestra abeja beb√© Alex.\nAlex vive en un pa√≠s llamado Isla Tortuga. Los habitantes de Isla Tortuga hablan un lenguaje llamado Python. Vamos a usar este lenguaje para ense√±ar a Alex c√≥mo vivir en una colmena. ¬øEst√°s listo para jugar?\nContenido Secciones\rUsando Trinket Los basicos - Dibujando una l√≠nea de color Actividad 1 - Dibujando un cuadrado Actividad 2 - Simplificando el c√≥digo con ciclos (loops) Actividad 3 - Dibujar un hex√°gono Actividad 4 - Simplificando el c√≥digo con funciones Actividad 5 - Dibujar una colmena Parte 2: Construyendo una Flor de Mandala Actividad 6 - Moviendo la tortuga Actividad 7 - Dibujando una figura 8 Actividad 8 - Creando una flor de mandala Actividad 9 - Coloreando tu flor de mandala Actividad 10 - Elejir un color aleatorio para los p√©talos de tu flor de mandala Actividad 11 - Ahora es tu turno! "
},
{
	"uri": "/es/javascript-blocks-earsketch/",
	"title": "Bloques: Crea m√∫sica con EarSketch",
	"tags": [],
	"description": "Crea m√∫sica usando bloques de JavaScript y EarSketch",
	"content": "¬°Vamos a hacer m√∫sica! Bienvenido a esta gu√≠a introductoria sobre c√≥mo hacer m√∫sica usando EarSketch\r.\nConoce a DJ Nuvi ¬°Nuvi tiene unos nuevos auriculares! ¬øPuedes encontrar los tuyos? Te contactaron para hacer el pr√≥ximo √©xito de mixtape de Nuvi, pero cuando llegas al estudio, Nuvi dice que su pr√≥ximo proyecto va a ser producido con c√≥digo. Esto es algo que no se ha hecho antes; ¬øest√°s preparado para el desaf√≠o? ¬°Busca tus auriculares y prep√°rate para unirte a √©l!\nAntes de empezar, aseg√∫rate de que tus auriculares funcionan. Prueba a reproducir el siguiente audio. ¬øQu√© escuchas?\nAudio de prueba para ver si tu navegador soporta el elemento de audio. Si no puedes reproducir el audio, probablemente significa que tu navegador no soporta este elemento de audio.\rVentana general de EarSketch Tabla de contenidos Tabla de contenidos\rLos b√°sicos de la m√∫sica Empezando con Earsketch Actividad 1 - Establecer tempo y agregar sonidos Actividad 2 - Hagamos una canci√≥n! Actividad 3 - Agregar efectos a nuestra canci√≥n Actividad 4 - Usar efectos para fundir "
},
{
	"uri": "/es/",
	"title": "Nuevo Foundation Workshops",
	"tags": [],
	"description": "",
	"content": "Proyectos Blocks: Programando Frutas Musicales con Adafruit\rUna gu√≠a introductoria para crear sonidos usando Adafruit para aprender acerca del hardware\nBloques: Crea m√∫sica con EarSketch\rCrea m√∫sica usando bloques de JavaScript y EarSketch\nC#: Adivina la palabra\rUna gu√≠a introductoria para aprender C# y para usar tus nuevas habilidades a crear un juego de Adivina la palabra.\nC\u0026#43;\u0026#43;: Mensajes secretos\rAprende C\u0026#43;\u0026#43; y crea tus propios mensajes secretos\nHTML \u0026amp; CSS: Web Basico\rGu√≠a de introducci√≥n de como hacer una pagina web desde el comienzo. Java: Basics\rUna gu√≠a introductor√≠a a conceptos b√°sicos de programaci√≥n en Java.\nMicroBit: Codificaci√≥n con mini computadoras\rUsando MicroBits para ense√±ar a los estudientes JavaScript y hardware\nPython Tortuga\rAprender Python con Turtle\nPython: Adivina el N√∫mero\rCrea un juego sencillo que le pida al usuario adivinar un n√∫mero generado aleatoriamente\nPython: Elige tu propia aventura\rIntroduccion para hacer un juego de Python donde puedes elegir tu propia aventura\nPython: Hagamos m√∫sica con EarSketch\rCrea m√∫sica usando Python y EarSketch\nSeguridad: Juego de Esp√≠as\r¬°Gu√≠a introductoria para aprender sobre contrase√±as y c√≥mo crear una segura!\nSeguridad: Phishing\rGu√≠a introductoria sobre el concepto de phishing!\nSQL: Salvando la Galaxia\rAprendiendo comandos b√°sicos de SQL\n¬øC√≥mo contribuir? ¬øQuisieras ayudar a mejorar nuestros talleres o nuestra p√°gina web? Aqu√≠ explicamos c√≥mo:\nPautas para colaboradores\rPautas para desarrolladores web\r(en ingl√©s) "
},
{
	"uri": "/es/csharp-guess-the-word/",
	"title": "C#: Adivina la palabra",
	"tags": [],
	"description": "Una gu√≠a introductoria para aprender C# y para usar tus nuevas habilidades a crear un juego de Adivina la palabra.",
	"content": "Traducciones de t√©rminos comunes El lado izquierdo del √≠ndice abajo contiene t√©rminos frecuentemente usados en el mundo de inform√°tica en general o en el idioma de C# espec√≠ficamente. Estos t√©rminos est√°n en ingl√©s, y tienen que ser usados en ingles (las computadoras no son biling√ºes, desafortunadamente). En ingl√©s, son directivos b√°sicos. Hemos dado las traducciones de estos t√©rminos para que puedes entenderlos al nivel ling√º√≠stico mientras que aprendes durante estas actividades c√≥mo funcionan al nivel program√°tico.\nT√©rmino Traducci√≥n/Significado Boolean Booleano ‚Äì una expresi√≥n que puede ser true (verdadera) o false (falsa) Bug/Debugging En el mundo de la inform√°tica ‚Äòbug‚Äô se refiere a un error en el c√≥digo. ‚ÄòDebugging‚Äô es el proceso de corregir errores en c√≥digo. Console.ReadLine Consola.LeaL√≠nea ‚Äì directivo de C# a la consola que debe esperar y leer una l√≠nea entrada por el usuario Console.WriteLine Consola.EscribeL√≠nea ‚Äì directivo de C# a la consola que escribe una l√≠nea de texto False Un Boolean. Falso. Hello World Literalmente, Hola Mundo. Tradicionalmente, esta frase es la primera cosa que tod@s l@s desarrollador@s impriman cuando est√°n aprendiendo un idioma nuevo. Random Aleatorio Run Literalmente, corre. ‚ÄòRun‚Äô le dice a la computadora que debe ejecutar todo el c√≥digo. String Literalmente, una cuerda. En el mundo de la inform√°tica ‚Äòstring‚Äô se refiere a cualquier grupo de s√≠mbolos, n√∫meros, o letras que la computadora entiende como una palabra o frase. En C#, los strings se indican con comillas ‚Äú ‚Äù. True Un Boolean. Verdad, verdadero ¬°Bienvenid@s! El objetivo de la actividad de hoy es aprender el lenguaje de C# e incorporar lo que vas a aprender hoy para asi poder crear el juego ¬°Adivina la palabra!\nSecciones Empezando Escribiendo a la consola Comentarios Activitdad 1 - Escribe en la consola Strings Actividad 2 - Agregar al banco de palabras N√∫meros Booleans Operadores para booleans Variables Actividad 3 - Declara tus variables Leyendo la consola "
},
{
	"uri": "/es/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/es/adventure/",
	"title": "Python: Elige tu propia aventura",
	"tags": [],
	"description": "Introduccion para hacer un juego de Python donde puedes elegir tu propia aventura",
	"content": "Parte 1 ‚Äì ¬°Bienvenido! El Poder de las historias ¬°Hola a todos! Hoy vamos a utilizar nuestros superpoderes de ingenier√≠a para ser los mejores narradores. ¬°Las historias son una gran manera de conectar a las personas, compartir tradiciones y aprender cosas nuevas!\n¬°Vuelve a tu vecino y comparte tu historia favorita! Puede ser una historia que los miembros de su familia hayan compartido. Tu historia favorita de una pel√≠cula de Marvel o tu novela favorita.\n¬°Ahora a trav√©s del c√≥digo, tenemos la oportunidad de crear o volver a contar historias incre√≠bles y difundir nuestras ideas a√∫n m√°s!\n¬°Elige tus propios juegos de aventura! ¬°Hoy estar√°s eligiendo y dise√±ando la trama de las historias que te est√°n contando! En Elige tus propios juegos de aventura eres el protagonista de la historia, y podr√°s elegir las acciones que los personajes est√°n tomando y los resultados de esas acciones. ¬°Tienes el control!\nDemo ¬°Vamos a probarlo!\n¬øQu√© pensaron? Ahora vamos a aprender algunas habilidades interesantes que nos permitir√°n crear nuestras propias historias.\n"
},
{
	"uri": "/es/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]