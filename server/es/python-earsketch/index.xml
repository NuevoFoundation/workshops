<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python: Hagamos m√∫sica con EarSketch on Nuevo Foundation Workshops</title>
    <link>/es/python-earsketch/</link>
    <description>Recent content in Python: Hagamos m√∫sica con EarSketch on Nuevo Foundation Workshops</description>
    <generator>Hugo</generator>
    <language>es</language>
    <lastBuildDate>Wed, 25 Nov 2020 11:45:38 -0700</lastBuildDate>
    <atom:link href="/es/python-earsketch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>M√∫sica Basica</title>
      <link>/es/python-earsketch/music-basics/</link>
      <pubDate>Wed, 25 Nov 2020 11:45:38 -0700</pubDate>
      <guid>/es/python-earsketch/music-basics/</guid>
      <description>&lt;p&gt;Lo b√°sico primero. Algunas cosas sobre la m√∫sica.&lt;/p&gt;&#xA;&lt;h2 id=&#34;qu√©-es-la-m√∫sica&#34;&gt;¬øQu√© es la m√∫sica?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikiversity.org/wiki/Introduction_to_music&#34; target=&#34;_blank&#34;&gt;La m√∫sica&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; es la organizaci√≥n cronol√≥gica de los sonidos; es decir, hacer ciertos sonidos en ciertos momentos, que hacen sentido mel√≥dico, r√≠tmico y arm√≥nico. El primer concepto, m√°s b√°sico, es mantener los sonidos &amp;ldquo;en el tiempo&amp;rdquo;. Esto nos lleva a algunos de los primeros conceptos musicales: beat, ritmo, duraci√≥n y tempo.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;El &lt;b&gt;beat&lt;/b&gt; es el pulso regular que proporciona una &lt;code&gt;l√≠nea de tiempo&lt;/code&gt; (o timeline) para que el ritmo se ancle a s√≠ mismo.&lt;/li&gt;&#xA;&lt;li&gt;El &lt;b&gt;ritmo&lt;/b&gt; es esencialmente patrones repetidos de sonidos o silencios largos o cortos, estresados o sin tensi√≥n que encajan en el beat principal.&lt;/li&gt;&#xA;&lt;li&gt;La &lt;b&gt;duraci√≥n&lt;/b&gt; es la longitud de notas o sonidos o silencios que facilitan el ritmo.&lt;/li&gt;&#xA;&lt;li&gt;El &lt;b&gt;tempo&lt;/b&gt; es la velocidad a la que se reproduce una pieza de m√∫sica.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Conceptos b√°sicos de Python</title>
      <link>/es/python-earsketch/python-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/es/python-earsketch/python-basics/</guid>
      <description>&lt;h2 id=&#34;python-basico&#34;&gt;Python basico&lt;/h2&gt;&#xA;&lt;p&gt;Para codificar m√∫sica, necesitamos aprender un poco de Python. No te preocupes, no te morder√° üòä. Python es uno de los lenguajes que usamos para decirle a las computadoras qu√© hacer. Estos lenguajes se conocen como &amp;ldquo;lenguajes de programaci√≥n&amp;rdquo;. Aprenderemos conceptos de Python en toda la clase, pero comencemos con una simple instrucci√≥n print.&lt;/p&gt;&#xA;&lt;p&gt;Si desea saltar a una secci√≥n espec√≠fica de Python, haga clic en el siguiente tema:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introducci√≥n a EarSketch</title>
      <link>/es/python-earsketch/getting-started-earsketch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/es/python-earsketch/getting-started-earsketch/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/EarSketch&#34; target=&#34;_blank&#34;&gt;EarSketch&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA; es un entorno de programaci√≥n educativa gratuito desarrollado en el Instituto de Tecnolog√≠a de Georgia. Hoy compondremos m√∫sica usando EarSketch.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Para hacer m√∫sica, clic en el bot√≥n de abajo para abrir Earsketch en una nueva pesta√±a.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://earsketch.gatech.edu/earsketch2/&#34; target=&#34;_blank&#34;&gt;Abrir Earsketch&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Clic donde dice &lt;em&gt;Scripts&lt;/em&gt; en el menu izquierdo y selecciona &lt;code&gt;Create a new script&lt;/code&gt;. Cuando te salga que introduzcas el number del script, coloca &lt;code&gt;myjam&lt;/code&gt; (mis sonidos) y dale click en el buton de &lt;code&gt;Create&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;img src=&#34;../gif/createanewscript.gif&#34; alt=&#34;Demo&#34; width=&#34;50%&#34;/&gt;&#xD;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;¬°No borrar ning√∫n c√≥digo que ya este escrito! Colocaremos nuestro c√≥digo en estas l√≠neas.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;notices info&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Informaci√≥n&#34;&gt;&lt;h2 id=&#34;resumen-de-earsketch&#34;&gt;Resumen de EarSketch&lt;/h2&gt;&#xA;&lt;p&gt;Es importante que entiendas como funciona EarSketch antes de que comiences la clase. De esta manera podr√°s navegar la interfaz adecuadamente.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 1 - Establecer tempo y a√±adir sonidos</title>
      <link>/es/python-earsketch/activity-1-set-tempo-add-sounds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/es/python-earsketch/activity-1-set-tempo-add-sounds/</guid>
      <description>&lt;p&gt;Echemos un vistazo m√°s de cerca al c√≥digo preexistente y entendamos lo que significa.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/annotated-screenshot-overview.png&#34; alt=&#34;annotated screenshot cannot be displayed&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Colocaremos nuestro nuevo c√≥digo entre las funciones &lt;code&gt;setTempo()&lt;/code&gt; y &lt;code&gt;finish()&lt;/code&gt;. La funci√≥n &lt;code&gt;setTempo()&lt;/code&gt; le permite establecer el tempo general del proyecto.&lt;/p&gt;&#xA;&lt;div class=&#34;notices info&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Informaci√≥n&#34;&gt;&lt;p&gt;&lt;strong&gt;Dato r√°pido&lt;/strong&gt;: Tempo es la velocidad a la que se reproduce una pieza de m√∫sica. Cambiar el tempo de un proyecto permite crear diferentes estilos de m√∫sica. ¬°Trata de cambiar el tempo de su funci√≥n &lt;code&gt;setTempo&lt;/code&gt; y ver lo que sucede! Por favor, aseg√∫rese de que es un n√∫mero entre 45-220.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 2 ‚Äì Haz tu propia canci√≥n!</title>
      <link>/es/python-earsketch/activity-2-make-a-song/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/es/python-earsketch/activity-2-make-a-song/</guid>
      <description>&lt;p&gt;Ahora que has aprendido a a√±adir sonidos a Earsketch, vamos a tratar de hacer una canci√≥n. Ya deber√≠a tener un clip de audio en Earsketch, pero las canciones se componen de varios instrumentos, por lo que necesitamos a√±adir m√°s clips de audio.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;A√±ade otra llamada a &lt;code&gt;fitMedia()&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Busca un clip de audio que quieras a√±adir a tu canci√≥n actual e ins√©rtalo bajo el par√°metro de &lt;code&gt;fileName&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;El par√°metro &lt;code&gt;trackNumber&lt;/code&gt; debe ser un n√∫mero √∫nico. Esto nos permitir√° colocar nuestros sonidos en diferentes pistas/canciones. Tener diferentes sonidos en diferentes pistas/canciones nos permite mantener la organizaci√≥n de nuestros sonidos y reproducir diferentes sonidos al mismo tiempo. Ejemplo: Si la primera llamada &lt;code&gt;fitMedia()&lt;/code&gt; est√° en la pista 1, la segunda llamada &lt;code&gt;fitMedia()&lt;/code&gt; debe estar en la pista 2.&lt;/li&gt;&#xA;&lt;li&gt;Completa el resto de los par√°metros.&lt;/li&gt;&#xA;&lt;li&gt;Repite estos pasos hasta que tenga cuatro sonidos de audio diferentes en su canci√≥n&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Tu c√≥digo debe parecerse a este::&#xA;&lt;div class=&#34;notices info&#34; &gt;&#xA;&lt;p header-value=&#34;Informaci√≥n&#34;&gt;&lt;pre&gt;&lt;code&gt;from earsketch import *&lt;br&gt;&#xA;init()&#xA;setTempo(120)&lt;br&gt;&#xA;fitMedia(RD_TRAP_BELLLEAD_1, 1, 5, 9)&#xA;fitMedia(YG_TRAP_STRINGS_2, 2, 1, 17)&#xA;fitMedia(YG_TRAP_ELECTRIC_PIANO_FILTERED_1, 3, 1, 17)&#xA;fitMedia(YG_TRAP_BASS_9, 4, 1, 9)&lt;br&gt;&#xA;finish()&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 3 - Organiza tus canciones usando funciones</title>
      <link>/es/python-earsketch/activity-3-organize-songs-using-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/es/python-earsketch/activity-3-organize-songs-using-functions/</guid>
      <description>&lt;p&gt;En Earsketch, las funciones se utilizan principalmente para organizar diferentes secciones de una canci√≥n. La forma musical m√°s com√∫n es A-B-A donde cada secci√≥n tiene cuatro medidas de longitud, y las secciones A suenan diferentes de la secci√≥n B.&lt;/p&gt;&#xA;&lt;p&gt;Ahora que aprendimos a usar funciones, vamos a tratar de usarlas para organizar mejor nuestras canciones.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Defina la funci√≥n con un par√°metro &lt;code&gt;startMeasure&lt;/code&gt; y un par√°metro &lt;code&gt;endMeasure&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Coloque los sonidos que desea que la funci√≥n represente debajo de la definici√≥n de la funci√≥n.&lt;/li&gt;&#xA;&lt;li&gt;Trate de hacer varias secciones de una canci√≥n (verso, coro, introducci√≥n, etc.) y definirlos con sus funciones. Si no lo hace, y solo utiliza varias llamadas &lt;code&gt;fitMedia&lt;/code&gt;, notar√° que su programa ser√° largo y dif√≠cil de entender. Para ayudar a evitar tener un archivo de proyecto grande, ¬°utilice funciones!&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Tu c√≥digo deber√≠a parecerse a este:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 4 - A√±adir efectos a tu canci√≥n</title>
      <link>/es/python-earsketch/activity-4-add-effects-to-your-songs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/es/python-earsketch/activity-4-add-effects-to-your-songs/</guid>
      <description>&lt;h2 id=&#34;efectos-en-earsketch&#34;&gt;Efectos en EarSketch&lt;/h2&gt;&#xA;&lt;p&gt;Los efectos permiten al productor alterar el sonido del clip de audio en su propio sonido √∫nico. De forma similar a como usamos &lt;code&gt;fitMedia()&lt;/code&gt; para a√±adir nuevos clips de audio, debemos utilizar la funci√≥n &lt;code&gt;setEffect()&lt;/code&gt; para definir efectos espec√≠ficos para cada clip de audio. Es importante tener en cuenta que se pueden colocar m√∫ltiples efectos en la misma pista. Esto permite al productor combinar m√∫ltiples efectos juntos. Earsketch tiene muchos efectos incorporados. Para hacer referencia a todos los efectos, visite este &lt;a href=&#34;https://earsketch.gatech.edu/earsketch2/#?curriculum=5-1-0&amp;amp;language=python&#34; target=&#34;_blank&#34;&gt;enlace&lt;sup&gt;&lt;span class=&#34;glyphicon glyphicon-new-window&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/sup&gt;&lt;/a&gt;&#xD;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 5 - Usar efecto de Fade in</title>
      <link>/es/python-earsketch/activity-5-use-effects-to-fade-in/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/es/python-earsketch/activity-5-use-effects-to-fade-in/</guid>
      <description>&lt;p&gt;Ahora que tienes un efecto en tu canci√≥n, vamos a tratar de desvanecernos en la introducci√≥n de nuestra canci√≥n.&lt;/p&gt;&#xA;&lt;p&gt;En la actividad 4, usamos la funci√≥n &lt;code&gt;setEffect&lt;/code&gt; se utiliza para aplicar un efecto a una pista/canci√≥n espec√≠fica durante toda la duraci√≥n de la canci√≥n, pero ¬øqu√© pasa si solo quieres que una secci√≥n espec√≠fica de tu canci√≥n tenga un efecto? ¬°Utilice la funci√≥n &lt;code&gt;setEffect&lt;/code&gt; con m√°s par√°metros!&lt;/p&gt;&#xA;&lt;img src=&#34;../img/screenshot-seteffect2.png&#34; alt=&#34;Ejemplo de codigo&#34; width=&#34;60%&#34;/&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;effectStartValue&lt;/code&gt;: el valor inicial aplicado al par√°metro&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;effectStartLocation&lt;/code&gt;: la medida en la que se establece el valor inicial&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;effectEndValue&lt;/code&gt;: el valor final del par√°metro&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;effectEndLocation&lt;/code&gt;: la medida en la que se establece el valor final&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Esta versi√≥n de &lt;code&gt;setEffect&lt;/code&gt; nos permite realizar &lt;em&gt;automatizaci√≥n&lt;/em&gt; en una pieza espec√≠fica de nuestra canci√≥n. La automatizaci√≥n es una forma de cambiar el valor de un efecto a lo largo del tiempo. Un uso de la automatizaci√≥n es hacer que una canci√≥n se desvanezca o se desvanezca. Para ello, debemos ajustar el volumen &lt;strong&gt;GAIN&lt;/strong&gt; en &lt;code&gt;effectParameter&lt;/code&gt; en el efecto &lt;strong&gt;VOLUME&lt;/strong&gt; &lt;code&gt;effectType&lt;/code&gt; a lo largo del tiempo. Por ejemplo, si definimos nuestro &lt;code&gt;effectStartValue&lt;/code&gt; en -60 db y nuestro &lt;code&gt;effectEndValue&lt;/code&gt; en 0 db, sonar√° como si nuestra canci√≥n se desvaneciera con el tiempo. Para ajustar el punto inicial y la longitud del efecto, especifique &lt;code&gt;effectStartLocation&lt;/code&gt; y &lt;code&gt;effectEndLocation&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
