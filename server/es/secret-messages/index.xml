<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43;: Mensajes secretos on Nuevo Foundation Workshops</title>
    <link>/es/secret-messages/</link>
    <description>Recent content in C&#43;&#43;: Mensajes secretos on Nuevo Foundation Workshops</description>
    <generator>Hugo</generator>
    <language>es</language>
    <lastBuildDate>Fri, 27 Mar 2020 20:24:33 -0700</lastBuildDate>
    <atom:link href="/es/secret-messages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Usando Repl.It</title>
      <link>/es/secret-messages/using-repl-it/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/using-repl-it/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zurhvdsyA_U&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;Para ayudar a los reyes, vamos a crear un programa en el lenguaje llamado C++, donde podamos ingresar un mensaje, y el programa lo modifique de una manera determinada para hacerlo secreto.&lt;/p&gt;&#xA;&lt;h2 id=&#34;usando-replit&#34;&gt;Usando Replit&lt;/h2&gt;&#xA;&lt;p&gt;Vamos a utilizar la herramienta Replit, con la cual vamos a poder correr nuestro códigos de C++. Este es un ejemplo de una ventana interactiva como las que usaremos durante todo el tutorial:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 1 - Output</title>
      <link>/es/secret-messages/activity-1/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/activity-1/</guid>
      <description>&lt;p&gt;Para que nuestro programa cree mensajes secretos, primero debemos ingresar un mensaje.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://replit.com/@nuevofoundation/activity-1&#34; target=&#34;_blank&#34;&gt;Lanza Replit&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Para eso, vamos a comenzar diciendole a la computadora que muestre en la consola para quien es ese mensaje. Esta es la instrucción que necesitaremos:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cout &amp;lt;&amp;lt; &amp;#34;Hola programador!&amp;#34; &amp;lt;&amp;lt; endl;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Intentemos entender esta línea de código en más detalle.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Consejo&#34;&gt;&lt;h3 id=&#34;cadenas-strings&#34;&gt;Cadenas (Strings)&lt;/h3&gt;&#xA;&lt;p&gt;Todo lo que veas entre &lt;strong&gt;comillas &amp;ldquo;&amp;rdquo;&lt;/strong&gt; se llama &lt;strong&gt;cadena o string&lt;/strong&gt;. Un string es solo una secuencia de caracteres, es decir, de números, letras o símbolos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 2 - Input y Variables</title>
      <link>/es/secret-messages/activity-2/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/activity-2/</guid>
      <description>&lt;p&gt;¡Muy bien! Ahora demos un paso más.&#xA;No solo vamos a imprimir para quién es el mensaje, sino que vamos a ingresar el nombre del destinatario, y haremos que nuestro programa lo salude.&lt;/p&gt;&#xA;&lt;p&gt;Para eso necesitaremos de las &lt;strong&gt;variables&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Consejo&#34;&gt;&lt;h3 id=&#34;variables&#34;&gt;Variables&lt;/h3&gt;&#xA;&lt;p&gt;Una &lt;strong&gt;variable&lt;/strong&gt; es un contenedor que guarda información.&#xA;Hay distintos tipos de variables que dependen en que información guarda. Pueden ser del tipo:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;string&lt;/strong&gt;: guarda una secuencia de caracteres, es decir, de números, letras o símbolos. Por ejemplo &lt;code&gt;&amp;quot;hola&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;1, 2, 3&amp;quot;&lt;/code&gt; son strings.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;int&lt;/strong&gt;: guarda números enteros (sin decimales) ya sea negativo o positivo, como &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;100&lt;/code&gt; y &lt;code&gt;-250&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;char&lt;/strong&gt;: sirve para contener un solo caracter. Por ejemplo &lt;code&gt;&#39;A&#39;&lt;/code&gt; , &lt;code&gt;&#39;e&#39;&lt;/code&gt;, &lt;code&gt;&#39;I&#39;&lt;/code&gt;, etc. Un char siempre va entre comillas simples &lt;code&gt;&#39;&#39;&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;bool&lt;/strong&gt;: solo guarda &lt;code&gt;true&lt;/code&gt; (verdadero) o &lt;code&gt;false&lt;/code&gt; (falso).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Para crear una variable, necesitamos declararla de la siguiente manera:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 3 - Ciclos</title>
      <link>/es/secret-messages/activity-3/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/activity-3/</guid>
      <description>&lt;p&gt;¡Genial!&lt;/p&gt;&#xA;&lt;p&gt;El rey nos ha pedido que escribamos letra por letra el nombre del destinatario para luego poder cambiarlas mediante alguna forma y así hacer secreto nuestro mensaje.&lt;/p&gt;&#xA;&lt;p&gt;Para hacer esto tenemos que usar &lt;strong&gt;CICLOS&lt;/strong&gt; (o loops en inglés). Un ciclo ejecuta un grupo de instrucciones varias veces. Veamos este ejemplo donde imprimimos números:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;for(int i=0; i&amp;lt;3; i++){&#xD;&#xA;  cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Intentemos entender lo que hace ese código:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 4 - Condiciones</title>
      <link>/es/secret-messages/activity-4/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/activity-4/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/a7zfuGM80QU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;¡Muy bien!&lt;/p&gt;&#xA;&lt;p&gt;Cada vez estamos más cerca de hacer nuestros mensajes secretos. Pero también, ¡no olvidemos que tenemos que poder descifrar esos mensajes!&lt;/p&gt;&#xA;&lt;p&gt;Para eso, vamos a ingresar en la consola un 1, si es que queremos encriptar un mensaje, o el número 2, si queremos desencriptarlo.&lt;/p&gt;&#xA;&lt;p&gt;Para esto necesitaremos de las &lt;strong&gt;CONDICIONES&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Consejo&#34;&gt;&lt;h3 id=&#34;condiciones-if--else&#34;&gt;Condiciones if / else&lt;/h3&gt;&#xA;&lt;p&gt;Una condición en programación es una instrucción o un grupo de instrucciones, que pueden ejecutarse o no, en base a si una condición es verdadera. Sería algo así: &lt;strong&gt;SI&lt;/strong&gt; (if) pasa esto, ejecuta estas instrucciones, &lt;strong&gt;SI NO&lt;/strong&gt; (else), ejecuta estas otras instrucciones.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 5 - Código Ascii</title>
      <link>/es/secret-messages/activity-5/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/activity-5/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/I2eaDpwc7kg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;¡Genial!&lt;/p&gt;&#xA;&lt;p&gt;En esta actividad vamos a encriptar (hacer secreto) el nombre del destinatario.&lt;/p&gt;&#xA;&lt;p&gt;Vamos a utilizar el &lt;strong&gt;Código Ascii&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Consejo&#34;&gt;&lt;h3 id=&#34;código-ascii&#34;&gt;Código Ascii&lt;/h3&gt;&#xA;&lt;p&gt;El código Ascii muestra que cada caracter tiene un valor numérico. Por ejemplo, el caracter &lt;code&gt;A&lt;/code&gt; es el número 65, el &lt;code&gt;B&lt;/code&gt; es el 66, el &lt;code&gt;C&lt;/code&gt; el 67, etc.&lt;/p&gt;&#xA;&lt;p&gt;La siguiente lista muestra el valor de los caracteres más usados:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 6 - Funciones</title>
      <link>/es/secret-messages/activity-6/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/activity-6/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NvD_aP73dqI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;¡Muy bien!&lt;/p&gt;&#xA;&lt;p&gt;¡Ya hiciste gran parte del programa!&lt;/p&gt;&#xA;&lt;p&gt;En esta actividad vamos a utilizar las &lt;strong&gt;funciones&lt;/strong&gt; para agrupar partes del código.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Consejo&#34;&gt;&lt;h3 id=&#34;funciones&#34;&gt;Funciones&lt;/h3&gt;&#xA;&lt;p&gt;Las funciones nos permiten dividir el trabajo que hace un programa en tareas más pequeñas separadas de la parte principal, es decir, de la función main.&lt;/p&gt;&#xA;&lt;p&gt;Podemos entender a las funciones como una máquina que  cuando la prendemos, ejecuta unas instrucciones y procesos, que me devuelven un resultado final. Se pueden tener varias máquinas que realizan distintos procesos, e identificamos a cada una con el tipo de resultado que devuelve y un nombre.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actividad 7 - Input line</title>
      <link>/es/secret-messages/activity-7/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/activity-7/</guid>
      <description>&lt;p style=&#34;text-align: center;&#34;&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/w0dp9AnGltQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;¡Felicitaciones!&lt;/p&gt;&#xA;&lt;p&gt;Estás muy cerca de salvar por completo a la nación.&lt;/p&gt;&#xA;&lt;p&gt;¡Solo falta poder ingresar una frase completa!&lt;/p&gt;&#xA;&lt;p&gt;Para esto solo tenemos que hacer unos pequeños cambios.&lt;/p&gt;&#xA;&lt;p&gt;Primero, debes usar la instrucción &lt;code&gt;getline()&lt;/code&gt; para ingresar el string:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;string frase;&#xD;&#xA;getline(cin, frase);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;De esta manera, en la consola podemos ingresar un mensaje completo, no una sola palabra.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Sigue estos pasos&lt;/strong&gt;, y finaliza el programa para salvar al Reino:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fin</title>
      <link>/es/secret-messages/activity-8/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/es/secret-messages/activity-8/</guid>
      <description>&lt;p&gt;¡Muchas Felicitaciones!&lt;/p&gt;&#xA;&lt;p&gt;Has hecho un gran trabajo para llegar hasta acá. Lo lograste. Has salvado al reino y además aprendiste a programar.&lt;/p&gt;&#xA;&lt;p&gt;Usaste la &lt;strong&gt;consola&lt;/strong&gt; para ingresar y enviar mensajes encriptados o desencriptados.&#xA;Las &lt;strong&gt;variables&lt;/strong&gt; te fueron de gran ayuda para guardar los mensajes que se querían enviar.&#xA;Usaste los &lt;strong&gt;ciclos&lt;/strong&gt; para analizar letra por letra del mensaje.&#xA;Las &lt;strong&gt;condiciones&lt;/strong&gt; fueron útiles para saber si se quería encriptar o desencriptar, y tomar una decisión en base a ello.&#xA;Y por último, el &lt;strong&gt;código ascii&lt;/strong&gt; te permitió saber el valor de cada caracter, y así poder hacer secretos los mensajes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mensajes secretos con C&#43;&#43; - Puntos claves</title>
      <link>/es/secret-messages/answer-key/</link>
      <pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate>
      <guid>/es/secret-messages/answer-key/</guid>
      <description>&lt;p&gt;Las siguientes 5 líneas son necesarias para todas las actividades.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  &#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;actividad-1&#34;&gt;Actividad 1&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cout &amp;lt;&amp;lt; &amp;#34;Hola programador!&amp;#34; &amp;lt;&amp;lt; endl;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;actividad-2&#34;&gt;Actividad 2&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  string nombre;&#xD;&#xA;  cin &amp;gt;&amp;gt; nombre;&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Hola &amp;#34; &amp;lt;&amp;lt; nombre &amp;lt;&amp;lt; endl;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;actividad-3&#34;&gt;Actividad 3&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;string nombre;&#xD;&#xA;cin &amp;gt;&amp;gt; nombre;&#xD;&#xA;for(int i=0; i&amp;lt;nombre.size(); i++){&#xD;&#xA;  cout &amp;lt;&amp;lt; nombre[i] &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;actividad-4&#34;&gt;Actividad 4&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int numero;&#xD;&#xA;cin &amp;gt;&amp;gt; numero;&#xD;&#xA;if(numero == 1){&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Encriptar un mensaje&amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;}else{&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Desencriptar un mensaje&amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;actividad-5&#34;&gt;Actividad 5&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string clave;&#xD;&#xA;  string nombre;&#xD;&#xA;  cin &amp;gt;&amp;gt; clave;&#xD;&#xA;  cin &amp;gt;&amp;gt; nombre;&#xD;&#xA;  int contador = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;nombre.size(); i++){&#xD;&#xA;    int suma = nombre[i]+clave[contador]-&amp;#39;a&amp;#39;;&#xD;&#xA;    if(suma &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;     suma-=25;&#xD;&#xA;    }&#xD;&#xA;    nombre[i]=suma;&#xD;&#xA;    contador+=1;&#xD;&#xA;    if(contador &amp;gt;= clave.size()){&#xD;&#xA;      contador=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Mensaje encriptado: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;  cout &amp;lt;&amp;lt; nombre &amp;lt;&amp;lt; endl;&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;actividad-6&#34;&gt;Actividad 6&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;void encriptar (string &amp;amp;nombre, string clave){&#xD;&#xA;  int contador = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;nombre.size(); i++){&#xD;&#xA;    int suma = nombre[i]+clave[contador]-&amp;#39;a&amp;#39;;&#xD;&#xA;    if(suma &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;     suma-=25;&#xD;&#xA;    }&#xD;&#xA;    nombre[i]=suma;&#xD;&#xA;    contador+=1;&#xD;&#xA;    if(contador &amp;gt;= clave.size()){&#xD;&#xA;      contador=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;void desencriptar (string &amp;amp;nombre, string clave){&#xD;&#xA;  int contador = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;nombre.size(); i++){&#xD;&#xA;    int suma = nombre[i]-clave[contador]+&amp;#39;a&amp;#39;;&#xD;&#xA;    if(suma &amp;lt; &amp;#39;a&amp;#39;){&#xD;&#xA;     suma+=25;&#xD;&#xA;    }&#xD;&#xA;    nombre[i]=suma;&#xD;&#xA;    contador+=1;&#xD;&#xA;    if(contador &amp;gt;= clave.size()){&#xD;&#xA;      contador=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string clave;&#xD;&#xA;  string nombre;&#xD;&#xA;  int numero;&#xD;&#xA;  cin &amp;gt;&amp;gt; numero;&#xD;&#xA;  cin &amp;gt;&amp;gt; clave;&#xD;&#xA;  cin &amp;gt;&amp;gt; nombre;&#xD;&#xA;  if(numero == 1){&#xD;&#xA;      cout &amp;lt;&amp;lt; &amp;#34;Mensaje encriptado: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;      encriptar(nombre, clave);&#xD;&#xA;      cout &amp;lt;&amp;lt; nombre &amp;lt;&amp;lt; endl;&#xD;&#xA;  }else{&#xD;&#xA;    cout &amp;lt;&amp;lt; &amp;#34;Mensaje desencriptado: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;    desencriptar(nombre, clave);&#xD;&#xA;    cout &amp;lt;&amp;lt; nombre &amp;lt;&amp;lt; endl;&#xD;&#xA;  }&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;actividad-7&#34;&gt;Actividad 7&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;void encriptar (string &amp;amp;nombre, string clave){&#xD;&#xA;  int contador = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;nombre.size(); i++){&#xD;&#xA;    if(nombre[i]!=&amp;#39; &amp;#39;){&#xD;&#xA;      int suma = nombre[i]+clave[contador]-&amp;#39;a&amp;#39;;&#xD;&#xA;      if(suma &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;      suma-=25;&#xD;&#xA;      }&#xD;&#xA;      nombre[i]=suma;&#xD;&#xA;      contador+=1;&#xD;&#xA;      if(contador &amp;gt;= clave.size()){&#xD;&#xA;        contador=0;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;void desencriptar (string &amp;amp;nombre, string clave){&#xD;&#xA;  int contador = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;nombre.size(); i++){&#xD;&#xA;    if(nombre[i]!=&amp;#39; &amp;#39;){&#xD;&#xA;      int suma = nombre[i]-clave[contador]+&amp;#39;a&amp;#39;;&#xD;&#xA;      if(suma &amp;lt; &amp;#39;a&amp;#39;){&#xD;&#xA;      suma+=25;&#xD;&#xA;      }&#xD;&#xA;      nombre[i]=suma;&#xD;&#xA;      contador+=1;&#xD;&#xA;      if(contador &amp;gt;= clave.size()){&#xD;&#xA;        contador=0;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string clave;&#xD;&#xA;  string nombre;&#xD;&#xA;  int numero;&#xD;&#xA;  cin &amp;gt;&amp;gt; numero;&#xD;&#xA;  cin &amp;gt;&amp;gt; clave;&#xD;&#xA;  getline(cin, nombre);&#xD;&#xA;  if(numero == 1){&#xD;&#xA;      cout &amp;lt;&amp;lt; &amp;#34;Mensaje encriptado: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;      encriptar(nombre, clave);&#xD;&#xA;      cout &amp;lt;&amp;lt; nombre &amp;lt;&amp;lt; endl;&#xD;&#xA;  }else{&#xD;&#xA;    cout &amp;lt;&amp;lt; &amp;#34;Mensaje desencriptado: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;    desencriptar(nombre, clave);&#xD;&#xA;    cout &amp;lt;&amp;lt; nombre &amp;lt;&amp;lt; endl;&#xD;&#xA;  }&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
