<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basics on Nuevo Foundation Workshops</title>
    <link>/python-basics/basics/</link>
    <description>Recent content in Basics on Nuevo Foundation Workshops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 19 Sep 2022 14:45:38 -0700</lastBuildDate><atom:link href="/python-basics/basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Starting up with Trinket</title>
      <link>/python-basics/basics/using-trinket/</link>
      <pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate>
      
      <guid>/python-basics/basics/using-trinket/</guid>
      <description>Today, we&amp;rsquo;ll be using Trinket to learn about Python. Here is an example of an interactive Trinket window you will be using today.
Before we start, let’s first understand how the window works. The main.py file contains code, or instructions for the computer to run. Anything that results from running the code will be displayed on the right side. This window is called the console.
Hit run and watch your console run your code on the screen to the right!</description>
    </item>
    
    <item>
      <title>Writing to Console (Print statement)</title>
      <link>/python-basics/basics/writing-to-console/</link>
      <pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate>
      
      <guid>/python-basics/basics/writing-to-console/</guid>
      <description>Make your program talk to you! Print statements are used to write something to the console. Use print(&amp;quot;Hello World&amp;quot;) to print Hello World in the output screen. We will later learn that print is a function and we use it to perform a print job. Whatever you pass to the print function is printed on the screen. Let&amp;rsquo;s start by doing a print statement.
We will use printing a lot in the later lessons, so make sure you understand this before moving on to the next concept!</description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>/python-basics/basics/comments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python-basics/basics/comments/</guid>
      <description>When creating a Python program, we can add some notes by adding one line comments using #. Comments are the parts of the code that do not effect the program. Anything after the # symbol is part of the comment and is ignored by your code. Comments are put in the code to tell the readers what the code is doing. They can make maintenance of code easy and can also help in finding bugs.</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>/python-basics/basics/variables/</link>
      <pubDate>Mon, 19 Sep 2022 14:45:38 -0700</pubDate>
      
      <guid>/python-basics/basics/variables/</guid>
      <description>In a previous exercise, we learned to print different statements with print(&amp;quot;&amp;quot;). While it is great to print out a number or a sentence, we haven&amp;rsquo;t given them a meaning. Variables are simply names that we can give to values such as strings, numbers, and booleans. Here’s how to make a variable named s in Python. We say s is a string that has the value &amp;quot;Hello, World!&amp;quot;.
s = &amp;#34;Hello, World!</description>
    </item>
    
    <item>
      <title>Reading from the Console</title>
      <link>/python-basics/basics/reading-from-console/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      
      <guid>/python-basics/basics/reading-from-console/</guid>
      <description>Now that we know the basics about variables, we can ask for input from the user. Use the following line to tell our program to wait until the user types something into the console. Then, the computer takes whatever is typed into the console, and stores it into the variable called value.
value = input() Here&amp;rsquo;s and examples of how to use input() to accept user input:
print(&amp;#34;What&amp;#39;s your name?&amp;#34;) value = input() print(&amp;#34;Hello &amp;#34; + value + &amp;#34;!</description>
    </item>
    
  </channel>
</rss>
