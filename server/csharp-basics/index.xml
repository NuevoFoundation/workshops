<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C#: Basics on Nuevo Foundation Workshops</title>
    <link>/csharp-basics/</link>
    <description>Recent content in C#: Basics on Nuevo Foundation Workshops</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 17 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="/csharp-basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using .NET Fiddle</title>
      <link>/csharp-basics/using-netfiddle/</link>
      <pubDate>Tue, 17 Sep 2024 00:00:00 +0000</pubDate>
      <guid>/csharp-basics/using-netfiddle/</guid>
      <description>&lt;h3 id=&#34;using-net-fiddle&#34;&gt;Using .NET Fiddle&lt;/h3&gt;&#xA;&lt;p&gt;Today you will be using .NET Fiddle to learn how to code in C#.&lt;/p&gt;&#xA;&lt;p&gt;Before we start, let&amp;rsquo;s first understand how the window works. On the left side you have a list of options.  These have all been set for you, so you do not need to worry about those.  The center of the screen contains code, or instructions for the computer to run. By pressing the &lt;strong&gt;run&lt;/strong&gt; button (the button with the triangle in the middle at the top of the frame), you tell the computer to perform the instructions in the code.  The results from running the code will be displayed on the bottom of the screen.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Write to the Console</title>
      <link>/csharp-basics/write-to-console/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>/csharp-basics/write-to-console/</guid>
      <description>&lt;h2 id=&#34;your-first-c-program&#34;&gt;Your first C# program&lt;/h2&gt;&#xA;&lt;p&gt;Our first excercise is to get comfortable with the structure of a simple C# application that writes to the console.&lt;/p&gt;&#xA;&lt;p&gt;Let‚Äôs try to run a C# program that prints &lt;code&gt;Hello World&lt;/code&gt; to the console.  The line of code &lt;code&gt;Console.WriteLine (&amp;quot;Hello World&amp;quot;);&lt;/code&gt; does this for us.  It tells the computer to write whatever is inbetween the () to the screen.&lt;/p&gt;&#xA;&lt;h3 id=&#34;lets-write-some-code&#34;&gt;Let&amp;rsquo;s write some code!&lt;/h3&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;475&#34; src=&#34;https://dotnetfiddle.net/Widget/0g4Vu7&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;&#xD;&#xA;&lt;p&gt;In the above .NET Fiddle frame, add a new line of code below the first line to print &amp;ldquo;Hello &lt;em&gt;your name&lt;/em&gt;&amp;rdquo;.  It should look something like this.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comments</title>
      <link>/csharp-basics/comments/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>/csharp-basics/comments/</guid>
      <description>&lt;h2 id=&#34;make-a-comment&#34;&gt;Make a Comment&lt;/h2&gt;&#xA;&lt;p&gt;When creating a C# program, we can jot down some notes by adding one line comment using &lt;code&gt;//&lt;/code&gt; or multi-line comment using &lt;code&gt;/*&lt;/code&gt; and &lt;code&gt;*/&lt;/code&gt; (Note: The instructions in the previous activities were written as comments).&lt;/p&gt;&#xA;&lt;p&gt;Also, adding comments will not affect the program whatsoever. So, you can add comments throughout your code to document how it works for you and other coders.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;// sample one line comment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;/* sample&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;      * multi-line&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;      * comment */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;play-with-comments&#34;&gt;Play with Comments&lt;/h2&gt;&#xA;&lt;p&gt;In the .NET Fiddle frame below, add a single line comment and a multi-line comment to your program.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Variables and Data Types</title>
      <link>/csharp-basics/variables/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>/csharp-basics/variables/</guid>
      <description>&lt;h2 id=&#34;variables-name-it&#34;&gt;Variables: Name It!&lt;/h2&gt;&#xA;&lt;p&gt;In the first exercise, we learned to print different statements with &lt;code&gt;Console.WriteLine() and Console.Write()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;While it&amp;rsquo;s great to print out a number or a sentence, we haven&amp;rsquo;t given them a meaning and if we wanted to use the sentence or number again, we would have to type it out again.&lt;/p&gt;&#xA;&lt;p&gt;In C#, we introduce the idea of a &lt;strong&gt;variable&lt;/strong&gt; for data. A variable stores a piece of data with a name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Operators</title>
      <link>/csharp-basics/operators/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>/csharp-basics/operators/</guid>
      <description>&lt;h2 id=&#34;lets-do-math-arithmetic-operator&#34;&gt;Let&amp;rsquo;s do Math: Arithmetic Operator&lt;/h2&gt;&#xA;&lt;p&gt;In the last exercise, we learned about variables and how we can assign values to a variable of a specific type, such as:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// declare variable age of type int with value 3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// assign 4 to the variable age&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looking at the code above, it essentially adds 1 to the value of the variable &lt;code&gt;age&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;And, in C#, we can perform math operations on variables directly with &lt;strong&gt;arithmetic operators&lt;/strong&gt;: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;.&#xA;For example, we can use the add operator &lt;code&gt;+&lt;/code&gt; to add 1 to &lt;code&gt;age&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Control Structures</title>
      <link>/csharp-basics/control-structures/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>/csharp-basics/control-structures/</guid>
      <description>&lt;h2 id=&#34;make-a-decision-if-statement&#34;&gt;Make a Decision: If-Statement&lt;/h2&gt;&#xA;&lt;p&gt;Patrick üê• is a very polite duck who likes to greet everyone he meets with &amp;ldquo;Good Morning,&amp;rdquo; &amp;ldquo;Good Afternoon,&amp;rdquo; or &amp;ldquo;Good Night&amp;rdquo; depending on the current time.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/hpWrLS1RDBd5pwkgjy/giphy.gif&#34; alt=&#34;Sun rising rapidly over a mountain&#34;&gt;&lt;/p&gt;&#xA;&lt;p style=&#34;text-align: center;&#34;&gt;(image by National Geographic: giphy.com/natgeochannel)&lt;/p&gt;&#xD;&#xA;&lt;p&gt;As we learned before, we can print these statements as below:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;Console&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WriteLine&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Good Morning&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;// say it between 0:00 - 11:59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;Console&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WriteLine&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Good Afternoon&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// say it between 12:00 - 19:59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;Console&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WriteLine&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Good Night&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;// say it between 20:00 - 23:59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, we also know Patrick üê• should only decide to say one of these statements based on the current time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Methods</title>
      <link>/csharp-basics/methods/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>/csharp-basics/methods/</guid>
      <description>&lt;h2 id=&#34;what-is-a-method&#34;&gt;What is a Method?&lt;/h2&gt;&#xA;&lt;p&gt;So far, we&amp;rsquo;ve learned about how to store data in variables, print data and sentences, and make decisions with &lt;code&gt;if&lt;/code&gt;-statements, &lt;code&gt;for&lt;/code&gt;-loops, and &lt;code&gt;while&lt;/code&gt;-loops.&lt;/p&gt;&#xA;&lt;p&gt;From the last exercise, we know the following block of code calculates the sum from 1 to 100:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;num&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;Console&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WriteLine&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Sum: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;total&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But what if we want to calculate the sum from 1 to 77 instead? How do we do it without writing the whole blocks of code again?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Classes and Objects</title>
      <link>/csharp-basics/classes-and-objects/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>/csharp-basics/classes-and-objects/</guid>
      <description>&lt;h2 id=&#34;what-is-an-object-and-what-is-a-class&#34;&gt;What is an Object and what is a Class?&lt;/h2&gt;&#xA;&lt;p&gt;An Object is a thing (noun) that has certain characteristics and can perform certain tasks. A Class is the blueprint or definition for that object when it is created.&lt;/p&gt;&#xA;&lt;p&gt;An example is a Person. A Person is a kind of Class. A person can have certain characteristics that distinguish it from another person. It can have blue eyes, it can be 15 years old, etc. A person can also perform certain tasks. It can walk, it can talk, etc.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
