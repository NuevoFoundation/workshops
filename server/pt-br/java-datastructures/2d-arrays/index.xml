<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arrays 2D: Menu on Nuevo Foundation Workshops</title>
    <link>/pt-br/java-datastructures/2d-arrays/</link>
    <description>Recent content in Arrays 2D: Menu on Nuevo Foundation Workshops</description>
    <generator>Hugo</generator>
    <language>pt-br</language>
    <lastBuildDate>Mon, 10 Feb 2020 13:24:17 -0700</lastBuildDate>
    <atom:link href="/pt-br/java-datastructures/2d-arrays/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introdução</title>
      <link>/pt-br/java-datastructures/2d-arrays/introduction/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/pt-br/java-datastructures/2d-arrays/introduction/</guid>
      <description>&lt;h2 id=&#34;o-que-é-um-array-2d&#34;&gt;O que é um Array 2D?&lt;/h2&gt;&#xA;&lt;p&gt;Já aprendemos muito sobre vetores (arrays). Sabemos que um array pode conter muitos tipos diferentes (integers (inteiros), strings, doubles (duplos) etc.), mas que tal um array que contém arrays?&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../img/2darray.png&#34; alt=&#34;imagem de uma tabela com colunas denominadas Array de 0 a 4 e linhas denominadas Index de 0 a 4. Na intersecção Array 0 e Index 0 temos [0][0], na Array 1 e Index 0 temos [1][0], na Array 3 e Index 4, temos [3][4] e assim por diante&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>O Cardápio</title>
      <link>/pt-br/java-datastructures/2d-arrays/the-menu/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/pt-br/java-datastructures/2d-arrays/the-menu/</guid>
      <description>&lt;h2 id=&#34;armazenamento-de-informações-do-restaurante&#34;&gt;Armazenamento de informações do restaurante&lt;/h2&gt;&#xA;&lt;p&gt;Vamos relembrar o array de restaurantes que fizemos anteriormente na seção de arrays.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../arrays/img/array2.png&#34; alt=&#34;Quatro caixas alinhadas horizontalmente. A primeira contém “Burger King”, a segunda contém “Chipotle”, a terceira contém “Panda Express” e a quarta contém “…”. Abaixo, está escrito: Índice 0 contém: “Burger King”; Índice 1 contém: “Chipotle”; …&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Como você pode ver, esse conjunto contém todos os diferentes restaurantes do nosso aplicativo. Agora, vamos tentar fazer com que cada restaurante contenha uma variedade de todos os itens do cardápio. Se feito corretamente, o elemento &lt;code&gt;0&lt;/code&gt; do nosso array, &amp;ldquo;Burger King&amp;rdquo;, deve agora conter seus respectivos itens de cardápio. Pode ser algo assim:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Operações</title>
      <link>/pt-br/java-datastructures/2d-arrays/operations/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/pt-br/java-datastructures/2d-arrays/operations/</guid>
      <description>&lt;p&gt;Os arrays 2D funcionam de maneira muito semelhante aos arrays regulares, e muitas das ideias ou métodos que usamos nos arrays também se aplicam aos arrays multidimensionais. Como um lembrete rápido, veja como inicializar um array 2D e acessar um elemento:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[][]&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;];&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75af00&#34;&gt;arr&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75af00&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;arr&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Saídas 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A única parte difícil que pode não fazer muito sentido no início é iterar por meio de um array 2D, mas isso também é bastante simples. Em vez de um único loop (laço) &lt;code&gt;for&lt;/code&gt;, usaremos dois loops &lt;code&gt;for&lt;/code&gt;. Aqui está um exemplo rápido para você ter uma ideia.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Problema 1: Cardápio de Exemplo</title>
      <link>/pt-br/java-datastructures/2d-arrays/problem-1/</link>
      <pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate>
      <guid>/pt-br/java-datastructures/2d-arrays/problem-1/</guid>
      <description>&lt;h2 id=&#34;tarefa-1-imprima-o-array-2d&#34;&gt;Tarefa 1: Imprima o array 2D&lt;/h2&gt;&#xA;&lt;p&gt;No array 2D abaixo temos uma lista de diferentes alimentos. Cada linha é do mesmo tipo. Por exemplo, a linha 1 é uma série de pratos principais. A linha 2 é uma variedade de bebidas e a linha 3 é uma variedade de sobremesas.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[][]&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;menu&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Hamburger&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Massa&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Filé&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Tacos&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Coca&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Sprite&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Pepsi&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Fanta&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Pudim&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Sorvete&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Moti&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Bolo&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#111&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use o que você aprendeu para imprimir o array!&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://replit.com/@nuevofoundation/2DPrint&#34; target=&#34;_blank&#34;&gt;Iniciar Replit&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;tarefa-2-procure-um-item&#34;&gt;Tarefa 2: Procure um item&lt;/h2&gt;&#xA;&lt;p&gt;O gerente quer saber se existe algum item específico no cardápio. Construa um método de pesquisa que retorne &lt;code&gt;true&lt;/code&gt; ou &lt;code&gt;false&lt;/code&gt; se o item estiver no cardápio ou não.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
