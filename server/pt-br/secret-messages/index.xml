<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43;: mensagens secretas on Nuevo Foundation Workshops</title>
    <link>/pt-br/secret-messages/</link>
    <description>Recent content in C&#43;&#43;: mensagens secretas on Nuevo Foundation Workshops</description>
    <generator>Hugo</generator>
    <language>pt-br</language>
    <lastBuildDate>Fri, 27 Mar 2020 20:24:33 -0700</lastBuildDate>
    <atom:link href="/pt-br/secret-messages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Usando Repl.It</title>
      <link>/pt-br/secret-messages/using-repl-it/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/using-repl-it/</guid>
      <description>&lt;p&gt;Para ajudar o Rei e a Rainha, desenvolveremos um programa, em uma linguagem de programação chamada C++. Com esse programa poderemos inserir uma mensagem, e o programa irá modificá-la para torná-la secreta.&lt;/p&gt;&#xA;&lt;h2 id=&#34;usando-replit&#34;&gt;Usando Replit&lt;/h2&gt;&#xA;&lt;p&gt;Hoje você usará o Replit. Antes de começar, você precisará se cadastrar em uma conta Replit, caso ainda não tenha uma.&lt;/p&gt;&#xA;&lt;p&gt;Clique no botão abaixo para se cadastrar em uma conta Replit - você precisará de uma conta de e-mail para se cadastrar. Se você já possui uma conta Replit, também pode fazer login em sua conta usando o botão abaixo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atividade 1 - Resultado</title>
      <link>/pt-br/secret-messages/activity-1/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/activity-1/</guid>
      <description>&lt;p&gt;Primeiro precisamos inserir uma mensagem para que nosso programa possa criar mensagens secretas.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a class=&#34;my-2 mx-4 btn btn-info&#34; href=&#34;https://replit.com/@nuevofoundation/activity-1-english&#34; target=&#34;_blank&#34;&gt;Iniciar Replit&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Para fazer isso vamos começar dizendo ao computador para mostrar no console para quem é aquela mensagem. Este é o comando que usaremos.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cout &amp;lt;&amp;lt; &amp;#34;Olá desenvolvedor!&amp;#34; &amp;lt;&amp;lt; fim;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Vamos aprender mais sobre essa linha de código, certo?&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Dica&#34;&gt;&lt;h3 id=&#34;string&#34;&gt;string&lt;/h3&gt;&#xA;&lt;p&gt;Tudo o que vemos entre aspas (&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;) é chamado de &lt;strong&gt;string&lt;/strong&gt;s. Uma string é uma sequência de caracteres, números, letras ou símbolos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atividade 2 - Variáveis e Entradas (Inputs)</title>
      <link>/pt-br/secret-messages/activity-2/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/activity-2/</guid>
      <description>&lt;p&gt;Incrível! Agora vamos dar um passo adiante. Agora não apenas imprimiremos a mensagem, mas também inseriremos o nome do destinatário e faremos nosso programa dizer &amp;ldquo;Olá&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Para fazer isso precisaremos de &lt;strong&gt;variáveis&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Dica&#34;&gt;&lt;h3 id=&#34;variáveis&#34;&gt;Variáveis&lt;/h3&gt;&#xA;&lt;p&gt;Uma &lt;strong&gt;variável&lt;/strong&gt; é um contêiner que armazena informações. Existem muitos tipos de variáveis, cada uma armazenando diferentes tipos de informações:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;string&lt;/strong&gt;: representa uma sequência de caracteres, letras, números e símbolos. &lt;strong&gt;strings&lt;/strong&gt;s são sempre colocadas entre aspas duplas. Exemplos: &lt;code&gt;&amp;quot;olá&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;1,2,3&amp;quot;&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;int&lt;/strong&gt;: representa números inteiros positivos ou negativos. Exemplos: &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;100&lt;/code&gt;, &lt;code&gt;-250&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;char&lt;/strong&gt;: representa um único caractere. Exemplos: &lt;code&gt;&#39;A&#39;&lt;/code&gt;, &lt;code&gt;&#39;e&#39;&lt;/code&gt;, &lt;code&gt;&#39;I&#39;&lt;/code&gt;. &lt;strong&gt;char&lt;/strong&gt;s são sempre colocados entre aspas simples.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;bool&lt;/strong&gt;: representa um valor &lt;code&gt;true&lt;/code&gt; ou &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Para criar uma variável, declare-a da seguinte forma:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atividade 3 - Loops</title>
      <link>/pt-br/secret-messages/activity-3/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/activity-3/</guid>
      <description>&lt;p&gt;Ótimo!&lt;/p&gt;&#xA;&lt;p&gt;O Rei solicitou agora que introduzamos a nossa mensagem letra por letra para que possamos alterá-la posteriormente.&lt;/p&gt;&#xA;&lt;p&gt;Para fazer isso, precisamos de algo chamado &lt;strong&gt;loops&lt;/strong&gt;. Os loops nos permitem executar um bloco de código várias vezes. Vamos ver o exemplo abaixo que usa um loop para imprimir alguns números.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;for(int i=0; i&amp;lt;3; i++){&#xD;&#xA;  cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Vamos tentar entender o que essa linha de código faz.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Dica&#34;&gt;&lt;h3 id=&#34;loops&#34;&gt;Loops&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;for(int i=0; i&amp;lt;3; i++) { }&lt;/code&gt;.&#xA;Isso informa ao programa que as instruções contidas entre colchetes &lt;code&gt;{}&lt;/code&gt; devem ser executadas em um loop.&#xA;Podemos identificar três partes diferentes dentro deste comando:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atividade 4 – Condições</title>
      <link>/pt-br/secret-messages/activity-4/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/activity-4/</guid>
      <description>&lt;p&gt;Muito bem!&lt;/p&gt;&#xA;&lt;p&gt;Estamos cada vez mais perto de divulgar nossas mensagens secretas. Mas também não esqueçamos que temos que saber decifrar essas mensagens!&lt;/p&gt;&#xA;&lt;p&gt;Para isso, vamos inserir no console um &lt;code&gt;1&lt;/code&gt;, se quisermos criptografar uma mensagem, ou o número &lt;code&gt;2&lt;/code&gt;, se quisermos descriptografá-la.&lt;/p&gt;&#xA;&lt;p&gt;Para isso precisaremos de &lt;strong&gt;condições&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Dica&#34;&gt;&lt;h3 id=&#34;condições-if--else&#34;&gt;Condições if / else&lt;/h3&gt;&#xA;&lt;p&gt;Uma condição em programação é uma instrução ou um grupo de instruções, que pode ser executada ou não, dependendo se uma condição é verdadeira. Seria algo assim: &lt;strong&gt;IF&lt;/strong&gt;(se) isso acontecer, execute estas instruções, &lt;strong&gt;IF NOT&lt;/strong&gt; (else, senão), execute estas outras instruções.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atividade 5 - Código ASCII</title>
      <link>/pt-br/secret-messages/activity-5/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/activity-5/</guid>
      <description>&lt;p&gt;Isso é ótimo!&lt;/p&gt;&#xA;&lt;p&gt;Nesta atividade iremos criptografar (tornar secreto) o nome do destinatário.&lt;/p&gt;&#xA;&lt;p&gt;Vamos usar o &lt;strong&gt;Código ASCII&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Dica&#34;&gt;&lt;h3 id=&#34;código-ascii&#34;&gt;Código ASCII&lt;/h3&gt;&#xA;&lt;p&gt;O código ASCII mostra que cada caractere possui um valor numérico. Por exemplo, o caractere &lt;code&gt;A&lt;/code&gt; é o número 65, &lt;code&gt;B&lt;/code&gt; é 66, &lt;code&gt;C&lt;/code&gt; é 67, etc.&lt;/p&gt;&#xA;&lt;p&gt;A lista a seguir mostra o valor dos caracteres mais comumente usados:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../media/ascii-english.png&#34; alt=&#34;Lista de códigos ASCII&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Como cada caractere possui um valor numérico, podemos usar isso para adicionar ou subtrair valores a essas letras, e assim alterar a ordem delas de uma determinada maneira. Permite-nos converter caracteres (&lt;code&gt;char&lt;/code&gt;) em números (&lt;code&gt;int&lt;/code&gt;) e vice-versa.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atividade 6 – Funções</title>
      <link>/pt-br/secret-messages/activity-6/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/activity-6/</guid>
      <description>&lt;p&gt;Muito bem!&lt;/p&gt;&#xA;&lt;p&gt;Você já fez muito do programa!&lt;/p&gt;&#xA;&lt;p&gt;Nesta atividade usaremos &lt;strong&gt;funções&lt;/strong&gt; para agrupar seções do código.&lt;/p&gt;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&#xD;&#xA;    &lt;p header-value=&#34;Dica&#34;&gt;&lt;h3 id=&#34;funções&#34;&gt;Funções&lt;/h3&gt;&#xA;&lt;p&gt;As funções nos permitem dividir o trabalho de um programa em tarefas menores separadas da seção principal, ou seja, da função &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Podemos pensar nas funções como uma máquina que, ao ser ligada, executa instruções para retornar um resultado final. Você pode ter diversas máquinas que realizam processos diferentes, e identificamos cada uma delas com um nome, e o tipo de resultado que ela retorna.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atividade 7 – Linha de entrada (Input line)</title>
      <link>/pt-br/secret-messages/activity-7/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/activity-7/</guid>
      <description>&lt;p&gt;Parabéns!&lt;/p&gt;&#xA;&lt;p&gt;Você está muito perto de salvar completamente a nação. Resta apenas poder inserir uma frase completa! Para isso só precisamos fazer algumas pequenas alterações. Primeiro, você precisa usar a instrução para inserir o &lt;code&gt;string:getline()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;string phrase;&#xD;&#xA;getline(cin, phrase);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Fazendo desta forma, o console poderá aceitar uma mensagem completa, não apenas uma única palavra.&lt;/p&gt;&#xA;&lt;p&gt;Siga estas etapas e complete o programa para salvar o reino:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Na função &lt;code&gt;main&lt;/code&gt;, altere a instrução &lt;code&gt;cin &amp;gt;&amp;gt; name;&lt;/code&gt; para &lt;code&gt;getline(cin, name);&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Em ambas as funções, adicione uma condição &lt;code&gt;if&lt;/code&gt; no loop &lt;code&gt;for&lt;/code&gt; e execute o conteúdo do loop &lt;code&gt;for&lt;/code&gt; somente se o caractere atual for maior ou igual &amp;lsquo;&amp;gt;=&amp;rsquo; ao caractere &amp;lsquo;a&amp;rsquo; e menor ou igual a &amp;lsquo;&amp;lt;=&amp;rsquo; ao caractere &amp;lsquo;z&amp;rsquo;. Ao fazer isso, podemos ignorar a criptografia e descriptografia de pontos de exclamação, vírgulas, espaços e outros caracteres especiais.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Não se esqueça de como este programa funciona:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conclusão</title>
      <link>/pt-br/secret-messages/activity-8/</link>
      <pubDate>Thu, 25 Jul 2019 13:24:17 -0700</pubDate>
      <guid>/pt-br/secret-messages/activity-8/</guid>
      <description>&lt;p&gt;Parabéns!&lt;/p&gt;&#xA;&lt;p&gt;Você fez um trabalho incrível. Você salvou o reino e, ao fazer isso, também aprendeu à programar em C++! :)&lt;/p&gt;&#xA;&lt;p&gt;Vamos revisar o que você aprendeu:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Você usou o &lt;strong&gt;console&lt;/strong&gt; para inserir e enviar mensagens criptografadas ou descriptografadas.&lt;/li&gt;&#xA;&lt;li&gt;Você usou &lt;strong&gt;variáveis&lt;/strong&gt; para armazenar as mensagens que seriam enviadas.&lt;/li&gt;&#xA;&lt;li&gt;Você usou &lt;strong&gt;loops&lt;/strong&gt; para analisar cada letra das mensagens.&lt;/li&gt;&#xA;&lt;li&gt;Você usou &lt;strong&gt;condicionais&lt;/strong&gt; para determinar se a criptografia ou descriptografia era necessária.&lt;/li&gt;&#xA;&lt;li&gt;O &lt;strong&gt;código ASCII&lt;/strong&gt; ajudou você a saber o valor de cada caractere para que pudéssemos criptografar ou descriptografar a mensagem.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;O Rei enviou a você uma mensagem criptografada especial de agradecimento. Com a ajuda do seu programa C++, você poderá descriptografá-lo e lê-lo, mas lembre-se que ela estará em inglês:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mensagens secretas C&#43;&#43; - chave de resposta</title>
      <link>/pt-br/secret-messages/answer-key/</link>
      <pubDate>Fri, 27 Mar 2020 20:24:33 -0700</pubDate>
      <guid>/pt-br/secret-messages/answer-key/</guid>
      <description>&lt;p&gt;As 5 linhas a seguir são necessárias para todas as atividades.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  &#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;atividade-1&#34;&gt;Atividade 1&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cout &amp;lt;&amp;lt; &amp;#34;Olá desenvolvedor!&amp;#34; &amp;lt;&amp;lt; endl;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;atividade-2&#34;&gt;Atividade 2&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  string nome;&#xD;&#xA;  cin &amp;gt;&amp;gt; nome;&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Olá &amp;#34; &amp;lt;&amp;lt; nome &amp;lt;&amp;lt; endl;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;atividade-3&#34;&gt;Atividade 3&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;string nome;&#xD;&#xA;cin &amp;gt;&amp;gt; nome;&#xD;&#xA;for(int i=0; i&amp;lt;nome.size(); i++){&#xD;&#xA;  cout &amp;lt;&amp;lt; nome[i] &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;atividade-4&#34;&gt;Atividade 4&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int number;&#xD;&#xA;cin &amp;gt;&amp;gt; number;&#xD;&#xA;if(number == 1){&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Encrypt a message&amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;}else{&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Decrypt a message&amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;atividade-5&#34;&gt;Atividade 5&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string code;&#xD;&#xA;  string name;&#xD;&#xA;  cin &amp;gt;&amp;gt; code;&#xD;&#xA;  cin &amp;gt;&amp;gt; name;&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    int sum = name[i]+code[counter]-&amp;#39;a&amp;#39;;&#xD;&#xA;    if(sum &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;     sum-=25;&#xD;&#xA;    }&#xD;&#xA;    name[i]=sum;&#xD;&#xA;    counter+=1;&#xD;&#xA;    if(counter &amp;gt;= code.size()){&#xD;&#xA;      counter=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  cout &amp;lt;&amp;lt; &amp;#34;Encrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;  cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;atividade-6&#34;&gt;Atividade 6&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;void encrypt (string &amp;amp;name, string code){&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    int sum = name[i]+code[counter]-&amp;#39;a&amp;#39;;&#xD;&#xA;    if(sum &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;     sum-=25;&#xD;&#xA;    }&#xD;&#xA;    name[i]=sum;&#xD;&#xA;    counter+=1;&#xD;&#xA;    if(counter &amp;gt;= code.size()){&#xD;&#xA;      counter=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;void decrypt (string &amp;amp;name, string code){&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    int sum = name[i]-code[counter]+&amp;#39;a&amp;#39;;&#xD;&#xA;    if(sum &amp;lt; &amp;#39;a&amp;#39;){&#xD;&#xA;     sum+=25;&#xD;&#xA;    }&#xD;&#xA;    name[i]=sum;&#xD;&#xA;    counter+=1;&#xD;&#xA;    if(counter &amp;gt;= code.size()){&#xD;&#xA;      counter=0;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string code;&#xD;&#xA;  string name;&#xD;&#xA;  int number;&#xD;&#xA;  cin &amp;gt;&amp;gt; number;&#xD;&#xA;  cin &amp;gt;&amp;gt; code;&#xD;&#xA;  cin &amp;gt;&amp;gt; name;&#xD;&#xA;  if(number == 1){&#xD;&#xA;      cout &amp;lt;&amp;lt; &amp;#34;Encrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;      encrypt(name, code);&#xD;&#xA;      cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  }else{&#xD;&#xA;    cout &amp;lt;&amp;lt; &amp;#34;Decrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;    decrypt(name, code);&#xD;&#xA;    cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  }&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;atividade-7&#34;&gt;Atividade 7&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;&#xD;&#xA;using namespace std;&#xD;&#xA;&#xD;&#xA;void encrypt (string &amp;amp;name, string code){&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    if(name[i]!=&amp;#39; &amp;#39;){&#xD;&#xA;      int sum = name[i]+code[counter]-&amp;#39;a&amp;#39;;&#xD;&#xA;      if(sum &amp;gt; &amp;#39;z&amp;#39;){&#xD;&#xA;      sum-=25;&#xD;&#xA;      }&#xD;&#xA;      name[i]=sum;&#xD;&#xA;      counter+=1;&#xD;&#xA;      if(counter &amp;gt;= code.size()){&#xD;&#xA;        counter=0;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;void decrypt (string &amp;amp;name, string code){&#xD;&#xA;  int counter = 0;&#xD;&#xA;  for(int i=0; i&amp;lt;name.size(); i++){&#xD;&#xA;    if(name[i]!=&amp;#39; &amp;#39;){&#xD;&#xA;      int sum = name[i]-code[counter]+&amp;#39;a&amp;#39;;&#xD;&#xA;      if(sum &amp;lt; &amp;#39;a&amp;#39;){&#xD;&#xA;      sum+=25;&#xD;&#xA;      }&#xD;&#xA;      name[i]=sum;&#xD;&#xA;      counter+=1;&#xD;&#xA;      if(counter &amp;gt;= code.size()){&#xD;&#xA;        counter=0;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;int main() {&#xD;&#xA;  string code;&#xD;&#xA;  string name;&#xD;&#xA;  int number;&#xD;&#xA;  cin &amp;gt;&amp;gt; number;&#xD;&#xA;  cin &amp;gt;&amp;gt; code;&#xD;&#xA;  getline(cin, name);&#xD;&#xA;  if(number == 1){&#xD;&#xA;      cout &amp;lt;&amp;lt; &amp;#34;Encrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;      encrypt(name, code);&#xD;&#xA;      cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  }else{&#xD;&#xA;    cout &amp;lt;&amp;lt; &amp;#34;Decrypted message: &amp;#34; &amp;lt;&amp;lt; endl;&#xD;&#xA;    decrypt(name, code);&#xD;&#xA;    cout &amp;lt;&amp;lt; name &amp;lt;&amp;lt; endl;&#xD;&#xA;  }&#xD;&#xA;  return 0;&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
