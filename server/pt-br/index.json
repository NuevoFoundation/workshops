[
{
	"uri": "/pt-br/linux-basics/",
	"title": "Minicurso básico de Linux",
	"tags": [],
	"description": "Um guia introdutório sobre os comandos básicos do Linux.",
	"content": "\rAntes de prosseguirmos, vamos aos requisitos necessários para completar nosso curso com sucesso:\nUm computador que não seja do tipo Chromebook Seu computador precisa ter pelo menos 3GB de memória livres Uma boa conexão com a internet para baixar os programas necessários: ~10 minutos para baixar VirtualBox ~30 minutos para baixar a imagem de uma máquina virtual Nossas boas-vindas! Que bom ter você com a gente! Eu sou Nuvi, uma agente do Club Secreto Nuevo (CSN). Infelizmente, nós acabamos de perceber que alguém pode ter invadido o nosso computador. Precisamos da sua ajuda para descobrir o que está acontecendo. As nossas mensagens secretas estão em risco e alguém pode ter vazado informações importantes!\rUm Sistema Operacional (OS) é um software que atua como uma interface entre você e o hardware do seu computador. Todo computador deve ter pelo menos um sistema operacional para executar outros programas, como o seu navegador preferido! O sistema operacional ajuda você a se comunicar com seu computador sem saber falar o idioma dos computadores.\nO Microsoft Windows é o sistema operacional com o qual você provavelmente está mais familiarizado em casa. Outro comum que você pode ter visto é o da Apple, o macOS. Ainda temos o sistema operacional Linux! Este é o favorito dos desenvolvedores por sua versatilidade. Existem muitas outras opções por aí, mas hoje usaremos um sistema operacional baseado em Linux, chamado Kali Linux. É um sistema operacional popular entre especialistas em segurança e hackers!\nExistem diferenças e particularidades entre Windows, macOS e Linux. O Windows é perfeito para multimídia e jogos! O macOS fica em algum lugar entre o Windows e o Linux. Embora também seja excelente para multimídia, mas infelizmente não suporta todos os jogos. O Linux geralmente é melhor para programação e hospedagem de servidores.\nConteúdo Seções\rUsando Máquinas Virtuais - Parte 1 Usando Máquinas Virtuais - Parte 2 Iniciando uma Máquina Virtual Atividade 1 - Identificando Usuários no Linux Atividade 2 - Identificando a Localização do Usuário Atividade 3 - Explorando o diretório atual Atividade 4 - Praticando anotações Atividade 5 - Protegendo as permissões de usuários Atividade 6 - Um arquivo corrompido Atividade 7 - O que há de errado com o arquivo? Atividade 8 - Verificando diferenças entre arquivos Atividade 9 - Removendo arquivos maliciosos Atividade 10 - Aprendendo a mover e substituir arquivos Atividade 11 - Guardando e protegendo arquivos Resoluções - Minicurso Básico de Linux Finalizando "
},
{
	"uri": "/pt-br/linux-basics/vbox-setup/",
	"title": "Usando Máquinas Virtuais - Parte 1",
	"tags": [],
	"description": "Um guia introdutório sobre máquinas virtuais",
	"content": "\rEstamos fornecendo a você uma cópia do nosso computador invadido. Ela é chamada de máquina virtual. Agradecemos a sua ajuda!\rO que é uma máquina virtual? Uma máquina virtual (também chamada de VM) é um arquivo de computador (chamado de imagem), que se comporta como um computador real. Em outras palavras, é um computador dentro de um computador. Ele é executado em uma janela, como qualquer outro programa. A VM oferece a mesma experiência como se estivéssemos em um computador comum.\nA VM é isolada do resto do sistema, o que significa que o software dentro de uma VM não pode afetar o próprio computador. Isso produz um ambiente ideal para podermos testar outros sistemas operacionais, acessar dados infectados por vírus e criar novos softwares ou aplicativos.\nO que é VirtualBox? VirtualBox é um software de virtualização, também chamado de hypervisor. Ele permite que o nosso computador rode máquinas virtuais.\nComo podemos baixar o VirtualBox? Vamos baixar o VirtualBox usando este link:\nBaixar\rSe você estiver usando Windows: selecione \u0026ldquo;hosts do Windows\u0026rdquo; Se você estiver usando macOS: selecione \u0026ldquo;hosts do OS X\u0026rdquo; Se você estiver usando outro sistema, recomendamos o uso do Windows ou macOS para este minicurso. Qualquer outra coisa está além do escopo deste minicurso.\nEm seguida, vamos executar o programa que acabamos de baixar.\nVamos manter as opções padrões. Clique em \u0026ldquo;Avançar\u0026rdquo; para prosseguir.\nObserve que há algumas opções na terceira página. Vamos clicar na primeira opção. Caso um aviso similar ao abaixo apareça, não se preocupe! Esse tipo de aviso é esperado. Clique em \u0026ldquo;Yes\u0026rdquo; para prosseguir. Agora, clique em \u0026ldquo;Install\u0026rdquo; para concluir a configuração. Por fim, vamos marcar a caixa de seleção para iniciar o VirtualBox após concluir a instalação. Parabéns! Nós terminamos a instalação do VirtualBox. Agora avançaremos para o preparo do nosso ambiente de investigações!\r"
},
{
	"uri": "/pt-br/python-basics/basics/using-trinket/",
	"title": "Começando com o Trinket",
	"tags": [],
	"description": "",
	"content": "Hoje, usaremos o Trinket para aprender sobre Python. Aqui está um exemplo de janela interativa do Trinket que você usará hoje.\nAntes de começarmos, vamos primeiro entender como funciona a janela. O arquivo main.py contém código ou instruções para o computador funcionar. Tudo o que resultar da execução do código será exibido no lado direito. Esta janela é chamada de console.\nClique em run e observe seu console executar seu código na tela à direita! No exemplo abaixo, print diz ao computador para imprimir a frase entre parênteses () no console ou na tela à direita. Saiba mais sobre print nas próximas lições. "
},
{
	"uri": "/pt-br/python-basics/conditional-statements-loops/conditional-statements/",
	"title": "Declarações condicionais",
	"tags": [],
	"description": "",
	"content": "Agora que conhecemos o básico sobre instruções de impressão, variáveis ​​e leitura de entrada do usuário – podemos combinar todas essas habilidades incríveis com instruções condicionais. As instruções condicionais permitem que o computador tome decisões com base no valor de uma expressão. No mundo real, usamos declarações condicionais o tempo todo para tomar decisões! Por exemplo, se estiver chovendo lá fora, uso um guarda-chuva. Neste exemplo, avaliei o tempo lá fora e como estava chovendo, tomei a decisão sequencial de usar guarda-chuva.\nQue declarações condicionais você consegue imaginar e que usa na vida cotidiana?\nDeclarações If Começaremos com uma instrução if em sua forma mais simples! Olhando para o exemplo do mundo real, você pode ver certas palavras usadas e também se aplicam a instruções de programação. Se (if) estiver chovendo lá fora, uso um guarda-chuva. if nos diz que precisamos tomar uma decisão. Então temos a decisão a tomar. Está chovendo? Essa pergunta é chamada de expressão. Aí, se estiver chovendo, eu uso guarda-chuva. Essa é uma afirmação que se aplica quando a expressão é verdadeira.\nif (expr): statement Mostrado acima, temos três partes diferentes:\nIf – isso informa ao computador que decidiremos com base na expressão entre parênteses Expr – representa a expressão que estamos avaliando. Se a expressão for \u0026ldquo;verdadeira\u0026rdquo;, o computador entrará na declaração (statement) if e executará a declaração. Statement – o que o computador completará se a expressão for “verdadeira” x = 0 y = 5 if (x\u0026lt;y): #verdadeiro print(\u0026#39;yes\u0026#39;) if (y\u0026lt;x): #falso print(\u0026#39;yes\u0026#39;) if (x == 10): #falso print(\u0026#39;yes\u0026#39;) Vamos analisar o exemplo acima e decidir por que algumas afirmações são “verdadeiras” ou “falsas”.\nRecebemos duas variáveis ​​x e y e cada uma delas recebe um valor. Na primeira declaração if estamos testando se o valor de x é menor que o valor de y. Como 0 é menor que 5, isso é verdade! Portanto, a primeira declaração if imprimirá sim.\nNo entanto, podemos ver que y não é menor que x, então é avaliado como false. O interior da declaração if não será executado então. O mesmo se aplica à declaração if que avalia se x é igual a 10. Vemos que x é igual a 0, então esta expressão é false e ​​o interior da declaração if não será executado.\nOutras declarações Agora que sabemos como usar declaração if para executar condicionalmente uma única declaração ou múltiplas declarações, vamos ver o que mais podemos fazer!\nÀs vezes, você precisa avaliar uma condição para agir de acordo se ela for “verdadeira”, mas se for “falsa”, agimos de maneira diferente. Aqui está a forma mais simples da declaração else.\nif (expr): declaração1 else: declaração2 Isto é realmente como a declaração if! No entanto, aqui, se a instrução if for falsa (não verdadeira), o programa executará automaticamente a declaração2 na instrução else.\nUm exemplo da vida real é que se estou com fome, como. Caso contrário (em outras palavras, não estou com fome), não comerei. Vamos dar uma olhada no código python!\nif (comFome): como else: não_como Desafio Vamos juntar tudo o que aprendemos até agora! Vamos ver se podemos criar um programa que solicite o nome do usuário. O usuário pode escrever seu nome no console. Então o computador pode decidir se o nome dele é igual ao seu e imprimir uma resposta. Caso contrário, imprima uma resposta diferente!\nDica: experimente falar sobre os diferentes caminhos que um computador pode seguir! Certifique-se de identificar quais são as condições if e else.\n"
},
{
	"uri": "/pt-br/python-basics/basics/",
	"title": "Fundamentos",
	"tags": [],
	"description": "",
	"content": "Visão geral Nesta seção, apresentaremos a ferramenta que usaremos ao longo deste curso, bem como alguns conceitos-chave que são importantes para aprender python e todas as linguagens de programação. Você aprenderá como escrever na tela, incluindo notas em seu código, armazenando informações e recebendo informações do usuário do seu programa.\nVamos começar!\nTópicos\rComeçando com o Trinket Gravando no console (imprimir instrução) Commentários Variáveis Lendo do console "
},
{
	"uri": "/pt-br/java-basics/activity-0/",
	"title": "Usando Replit",
	"tags": [],
	"description": "",
	"content": "Usando Replit Hoje você usará o Replit para aprender como codificar em Java. Antes de começar, você precisará se inscrever em uma conta Replit, caso ainda não tenha uma.\nClique no botão abaixo para se inscrever em uma conta Replit - você precisará de uma conta de e-mail para se inscrever. Se você já possui uma conta Replit, também pode fazer login em sua conta usando o botão abaixo.dawd\nSign up for Replit\nA seguir, inicie o console Replit que usaremos hoje clicando no botão abaixo. Você deverá ver a tela abaixo.\nLaunch Replit\nAgora faremos um fork (bifurcação) do Repl, que significa simplesmente fazer uma cópia do programa, para que possamos fazer nossas próprias alterações nele. Clique no botão \u0026ldquo;Fork Repl\u0026rdquo; no canto superior direito e depois no botão \u0026ldquo;Fork Repl\u0026rdquo;.\nApós bifurcar o Replit, você verá uma janela semelhante a esta abaixo:\nCada vez que você vir o botão \u0026ldquo;Iniciar Replit\u0026rdquo;, você precisará seguir as etapas acima para bifurcar o repl e concluir uma atividade. Peça ajuda se estiver tendo problemas para bifurcar as respostas!\nAntes de começarmos, vamos primeiro entender como funciona a janela. O arquivo Main.java contém código ou instruções para o computador funcionar. Ao pressionar o botão run (o botão verde com o triângulo no meio na parte superior do quadro), você diz ao computador para executar as instruções do código. Quaisquer resultados da execução do código serão exibidos na tela inferior, sob a aba Console .\nNo exercício Objetos e Classes, você precisará alternar entre o arquivo Main.java e o arquivo Birds.java. Você pode fazer isso clicando no ícone à direita que se parece com um documento. Isso abrirá o menu Arquivos e permitirá que você acesse os outros arquivos.\nTente pressionar o botão run . Se você vir Let\u0026rsquo;s learn Java!, significa que você está pronto. Vamos começar!\n"
},
{
	"uri": "/pt-br/unity/install-unity/",
	"title": "Instalando Unity",
	"tags": [],
	"description": "",
	"content": "Precisamos ajudar Nuvi a derrotar os alienígenas, mas programar tudo do zero pode ser um pouco demais agora. Unity é uma ferramenta que simplifica algumas partes básicas da construção de jogos para nós, então tudo o que precisamos fazer é arrastar e soltar objetos e escrever um pouco de código C# simples!\nPor que usar o Unity quando existem outras ferramentas por aí? Bem, o Unity tem ótimas características, especialmente se você está apenas começando sua jornada de desenvolvimento de jogos. É multiplataforma, o que significa que você pode desenvolver um jogo para, digamos, computadores e telefones celulares. É adequado para para programadores iniciantes. O melhor de tudo é que tem uma comunidade de apoio grande!\nAlguns jogos desenvolvidos em Unity incluem: Subway Surfers, Hearthstone, Cytus, Pokemon Go, Overcooked, Cuphead, Hollow Knight, Among Us e Genshin Impact. Apenas nesta lista, você pode notar que existem títulos indie e títulos AAA, e há jogos para diversas plataformas. Se você deseja desenvolver em uma grande empresa ou por conta própria, é uma boa ideia ter alguma experiência com Unity!\nEntão, antes de podermos fazer qualquer coisa, você precisa baixar e instalar o Unity! Mesmo que você já tenha o Unity instalado, analise esta atividade para ter certeza de que tem a configuração correta.\nEtapa 1: Baixe o Unity Primeiro, vamos escolher e baixar o Unity\r.\nClique em “Escolha seu Unity + download”.\nClique em \u0026ldquo;Student and hobbyist\u0026rdquo; e abaixo \u0026ldquo;Personal\u0026rdquo; ou \u0026ldquo;Student\u0026rdquo; se você tiver um endereço de e-mail de estudante, selecione \u0026ldquo;Começar\u0026rdquo;.\nRole para baixo na página da web em \u0026ldquo;1. Download the Unity Hub\u0026rdquo;, download com base no seu computador.\nPara este workshop, utilizamos a versão \u0026ldquo;2019.4.19f1\u0026rdquo; para o conteúdo e capturas de tela. Se você quiser usar esta versão exata, na mesma página em \u0026ldquo;2. Choose your Unity version\u0026rdquo;, selecione \u0026ldquo;Visit the download archive\u0026rdquo; para encontrar a mesma versão deste workshop. Caso contrário, poderão ocorrer pequenas alterações na interface do usuário para versões mais recentes. Se você optar pelo desenvolvimento de jogos no Unity, não se esqueça de conferir as versões mais recentes!\nApós o término do download do Unity, abra o Unity, que iniciará a configuração do Unity Hub, um aplicativo que o ajudará a gerenciar seus projetos do Unity.\nUma janela pop-up aparecerá. Concorde com os contratos do usuário, ative a licença, selecione a pasta de destino onde deseja fazer o download em seu computador, instale e execute o Unity Hub selecionando \u0026ldquo;Finish\u0026rdquo;!\nEtapa 2: Unidade Hub Faça login com seu Unity ID: o instalador do Unity Hub aparecerá. Depois de clicar em instalar, você será levado a uma página onde deverá criar um Unity ID. Se você ainda não tiver um, crie um novo ID. Se você já possui um, selecione “I already have a Unity ID” e insira suas informações.\nDepois de inserir suas informações, a página solicitará que você escolha um modelo para um microjogo. Isso ocorre apenas porque escolhemos \u0026ldquo;First-Time Users\u0026rdquo;, então o Unity deseja que novos usuários experimentem os projetos fornecidos para ajudá-los a entender melhor o Unity.\nUsaremos nossos próprios projetos para ensinar, então, por enquanto, você pode escolher um modelo aleatório que queira explorar mais tarde e clicar em \u0026ldquo;continue\u0026rdquo; e \u0026ldquo;Launch Unity\u0026rdquo;. O Unity irá então iniciar o microjogo, mas como não o estamos usando, basta fechar o Unity.\nSe a sua versão do Unity não for 2019.4, abra o hub Unity e à esquerda da janela, selecione \u0026ldquo;Installs\u0026rdquo;. Clique no botão \u0026ldquo;ADD\u0026rdquo; e selecione a versão desejada. Você pode selecionar a versão mais recente ou a versão que estamos usando para este projeto, \u0026ldquo;2019.4.19f1 (LTS)\u0026rdquo;. Em seguida, o Unity Hub o levará a uma página onde você poderá escolher as bibliotecas que pode incluir. Certifique-se de que o suporte de compilação para Windows e Mac esteja selecionado!\nEtapa 3: vamos começar! Para começar a trabalhar em um novo projeto, abra o Unity Hub e clique no botão azul que diz “NEW”. Nomeie seu projeto como quiser e escolha um local para criar a pasta do projeto. Certifique-se de ter escolhido \u0026ldquo;2D\u0026rdquo; como modelo de projeto, conforme mostrado na imagem.\n"
},
{
	"uri": "/pt-br/guidelines/site-architecture/",
	"title": "Como o site funciona",
	"tags": [],
	"description": "",
	"content": "Como o site funciona O site dos workshops é criado usando um tema especial chamado DocDock\re o gerador de sites Hugo\r. Isso torna tudo mais rápido e organizado!\nComo isso ajuda? Para quem cria o conteúdo\nÉ fácil escrever usando um formato chamado Markdown. Os workshops aparecem automaticamente no site, sem precisar programar! Funciona até sem internet! Para quem participa dos workshops\nO site é fácil de usar e funciona bem no computador e no celular. Dá para encontrar tudo rapidinho. O site carrega super rápido! Para quem cuida do site\nDá para personalizar páginas e adicionar coisas legais. O site tem ferramentas automáticas que ajudam na organização. Tudo fica seguro e atualizado com a ajuda da tecnologia do GitHub e da Microsoft Azure. Com tudo isso, o site dos workshops fica prático, bonito e fácil de usar! 🚀\n"
},
{
	"uri": "/pt-br/java-datastructures/2d-arrays/introduction/",
	"title": "Introdução",
	"tags": [],
	"description": "",
	"content": "O que é um Array 2D? Já aprendemos muito sobre vetores (arrays). Sabemos que um array pode conter muitos tipos diferentes (integers (inteiros), strings, doubles (duplos) etc.), mas que tal um array que contém arrays?\nUm array 2D tem um tipo como int[][] ou String[][], com dois pares de colchetes. Os elementos de um array 2D são organizados em linhas e colunas, e o novo operador para arrays 2D especifica o número de linhas e o número de colunas. Por exemplo,\nint[][] A; A = new int[3][4]; Isso cria um array 2D de int que tem 12 elementos organizados em 3 linhas e 4 colunas. Existem também inicializadores para arrays 2D. Por exemplo, esta instrução cria o array 3 por 4 mostrado na imagem abaixo:\nint[][] A = { { 1, 0, 12, -1 }, { 7, -3, 2, 5 }, { -5, -2, 2, -9 } }; Um inicializador de array para um array 2D contém as linhas de A, separadas por vírgulas e colocadas entre colchetes. Cada linha, por sua vez, é uma lista de valores separados por vírgulas e entre colchetes. Existem também literais de array 2D com sintaxe semelhante que podem ser usados ​​em qualquer lugar, não apenas em declarações. Por exemplo,\nA = new int[][] { { 1, 0, 12, -1 }, { 7, -3, 2, 5 }, { -5, -2, 2, -9 } }; Tudo isso se estende naturalmente a arrays tridimensionais, quadridimensionais e até mesmo de dimensões superiores.\n"
},
{
	"uri": "/pt-br/java-datastructures/arraylists/introduction/",
	"title": "Introdução",
	"tags": [],
	"description": "",
	"content": "Aprendemos sobre arrays e até nos aventuramos em arrays multidimensionais. Infelizmente, os arrays têm muitas limitações e às vezes podem ser difíceis de usar. Uma limitação de um array é seu tamanho explícito. Se você tiver apenas 10 elementos de espaço alocado nessa matriz, poderá armazenar apenas até 10 elementos. ArrayLists (Lista de Vetores) são uma ótima estrutura de dados que possui um tamanho dinâmico, o que significa que você pode adicionar ou subtrair itens a qualquer momento. Há muito mais coisas que ArrayLists podem fazer, e é isso que torna as ArrayLists estruturas de dados tão poderosas.\nAntes de criarmos um ArrayList, teremos que importar a classe ArrayList. Vai parecer algo assim.\nimport java.util.ArrayList; // importar a classe ArrayList Lembre-se, nosso objetivo é criar um ArrayList que acompanhe o pedido do cliente. Podemos fazer isso assim:\nimport java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList\u0026lt;String\u0026gt; order = new ArrayList\u0026lt;String\u0026gt;(); } } Como você pode ver, semelhante ao array, temos que declarar quais tipos de dados o ArrayList conterá. Neste caso, faremos com que contenha Strings, já que os itens de menu serão Strings.\nPara adicionar itens a um pedido, usaremos o método add(). Se o cliente estivesse fazendo um pedido no Burger King e quisesse pedir um combo com Whopper, nuggets de frango e batatas fritas, seu método poderia ser mais ou menos assim.\nimport java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList\u0026lt;String\u0026gt; order = new ArrayList\u0026lt;String\u0026gt;(); order.add(\u0026#34;Whopper\u0026#34;); order.add(\u0026#34;Nuggets\u0026#34;); order.add(\u0026#34;Batata Frita\u0026#34;); } } Se quiséssemos obter o primeiro item de um ArrayList, você usaria o método get() junto com o número de índice do elemento assim:\nimport java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList\u0026lt;String\u0026gt; order = new ArrayList\u0026lt;String\u0026gt;(); order.add(\u0026#34;Whopper\u0026#34;); order.add(\u0026#34;Nuggets\u0026#34;); order.add(\u0026#34;Batata Frita\u0026#34;); System.out.println(order.get(0)); // Saída: Whopper } } Existem muitos outros métodos que você pode usar em um ArrayList, mas isso é apenas a essência do que um ArrayList pode fazer. Os métodos podem ser encontrados na próxima página.\n"
},
{
	"uri": "/pt-br/java-datastructures/hashmaps/introduction/",
	"title": "Introdução",
	"tags": [],
	"description": "",
	"content": "Um HashMap é uma tabela que contém uma coleção de pares chave-valor. Ele “mapeia” inúmeras chaves para seus respectivos valores. Um HashMap é muito semelhante a um dicionário. Em um dicionário, você pode procurar a definição de uma determinada palavra. Você simplesmente procura a palavra-chave no dicionário e, ao fazer isso, pode obter a definição anexada a essa palavra-chave. O dicionário mapeia as palavras (as \u0026ldquo;chaves\u0026rdquo;) para sua definição (os \u0026ldquo;valores\u0026rdquo;).\nHashMaps pode armazenar muitos tipos diferentes de informações. O abaixo armazena pessoas como chave e seu pedido como valor.\nQueremos poder acessar diretamente o pedido de alguém da mesma forma que encontraríamos uma definição em um dicionário. Ao procurar “Bea”, o HashMap retorna seu pedido: Arepas. Veremos alguns métodos HashMap comuns na próxima página.\n"
},
{
	"uri": "/pt-br/java-datastructures/queues/introduction/",
	"title": "Introdução",
	"tags": [],
	"description": "",
	"content": "Visualizando uma fila (queue) Imagine que você está projetando o NuevoEats para uma empresa, e talvez essa empresa seja o McDonalds.\nQueremos atender nossos novos clientes potenciais da maneira mais eficiente possível para nossos grandes negócios; um por vez. Quando os clientes fazem seus pedidos para viagem no aplicativo NuevoEats, é quase como se estivessem formando uma fila ordenada em frente ao nosso restaurante, com novos clientes entrando nos últimos lugares. Os clientes devem essencialmente “fazer fila” quando fazem seus pedidos e nós devemos atender esses mesmos clientes de frente para trás.\nQueues em Java funciona de maneira semelhante. Depois de declararmos nossa Queue, podemos adicionar novos elementos na parte de trás e removê-los da frente.\nNa verdade, a maioria das filas que encontraremos em Java funciona da seguinte maneira: Primeiro a entrar, primeiro a sair – geralmente abreviado como FIFO (First In, First Out).\n"
},
{
	"uri": "/pt-br/java-datastructures/stacks/introduction/",
	"title": "Introdução",
	"tags": [],
	"description": "",
	"content": "Visualizando uma pilha Uma stack (pilha) é muito semelhante a uma queue (fila) e muitos dos conceitos que você aprendeu sobre uma queue podem ser aplicados a uma stack. Ao contrário da fila com lógica FIFO, uma pilha é diferente porque utiliza a lógica oposta, LIFO (Último a Entrar, Primeiro a Sair; Last In, First Out).\nUm exemplo comum para pensar em uma stack (pilha) é uma pilha de pratos. Imagine 5 pratos empilhados um sobre o outro. Se você adicionar um sexto prato ao topo da pilha, sua pilha de pratos agora será uma pilha de 6. No entanto, e se você quisesse remover um prato? Bem, você não alcançaria o fundo da pilha e pegaria um prato; você tiraria um prato de cima.\nEssa lógica Last In, First Out (LIFO) também se aplica a pilhas em Java.\n"
},
{
	"uri": "/pt-br/java-datastructures/introduction/",
	"title": "Introdução às estruturas de dados",
	"tags": [],
	"description": "",
	"content": "\rAntes de Nuevo Eats\u0026hellip; Para começar seu treinamento no Nuevo Eats, primeiro você deve aprender algo chamado estruturas de dados! Aqui você aprenderá tudo o que precisa saber para realizar sua primeira missão Nuevo Eats! Vamos começar com o básico e o que são.\nEstruturas de dados! As estruturas de dados são incríveis e poderosas. Ao usar código, podemos armazenar muitas informações em categorias organizadas para uso posterior!\nArmazenar itens nessas estruturas pode nos permitir acessar tudo de forma rápida e eficaz - perfeito para Nuevo Eats! Restaurantes, alimentação, funcionários e locais são apenas alguns dos exemplos em que podemos usar estruturas de dados a nosso favor.\nAs estruturas de dados podem armazenar qualquer coisa, muito mais do que mencionamos acima! Pode até armazenar diferentes estruturas de dados dentro de estruturas de dados!\nExistem muitos tipos diferentes de estruturas de dados, assim como existem muitas maneiras de organizar brinquedos!\nAgora que você tem uma ideia do que é, clique em Avançar para descobrir como você pode usar isso para ajudar a fazer o Nuevo Eats para todos!\n"
},
{
	"uri": "/pt-br/python-basics/functions/more-about-functions/",
	"title": "Mais sobre funções",
	"tags": [],
	"description": "",
	"content": "Suponha que você tenha muitas linhas de código e queira dar um nome significativo a esta seção de código. Funções são blocos de código que fazem exatamente isso. Uma função é um conjunto de instruções que damos ao computador para armazenar e pode receber parâmetros (dados de entrada) e dados de saída. Uma função em Python se parece com isto:\ndef my_function(): print(\u0026#34;Hello World!\u0026#34;) print(\u0026#34;My name is Nuvi!\u0026#34;) Vamos analisar este trecho de código. O def informa ao computador que você está escrevendo uma função. Damos um nome a ele, neste caso, my_function. Em seguida, colocamos dois pontos (o símbolo :) para indicar que a função está iniciando. As próximas duas linhas estão a dois espaços de distância do lado esquerdo do editor de texto - isso informa ao computador que essas linhas fazem parte da definição da função. Isso é muito importante, então não perca esse detalhe!\nPressione run.\nVocê notará que nada acontece. Esta é apenas uma definição de função – precisamos “chamar” a função para executar o código dentro da função. Em outras palavras, o computador entende as instruções, mas você precisa dizer ao computador para seguir as instruções fornecidas. Você pode chamar my_function() em qualquer lugar, desde que seja depois que a função for definida. Coloque my_function() abaixo da definição da função, sem espaços na frente. Seu código deve ficar assim:\ndef my_function(): print(\u0026#34;Hello World!\u0026#34;) print(\u0026#34;My name is Nuvi!\u0026#34;) my_function() Não se esqueça de remover os dois espaços antes de chamar my_function(). Caso contrário, você poderá se deparar com um comportamento inesperado!\nEscrevendo funções matemáticas Você deve estar familiarizado com a definição matemática de uma função; por exemplo, a função 𝒇(𝒙) = 3𝒙. Ele pega um valor de entrada, 𝒙, e transforma o valor multiplicando-o por 3. Da mesma forma, em python, você também pode fornecer valores de entrada (chamados parâmetros) para uma função e retornar (ou produzir) um valor de saída. Um exemplo de função Python que triplica um determinado número é fornecido abaixo:\ndef triple(number): return number *3 value = triple(2) print(value) number é o nome do parâmetro (entrada) que estamos dando à função triplo. A palavra return é usada apenas em funções e permite que a função gere um valor. Neste caso, a função tripla retorna (saída) número * 3, que então pode ser armazenado em uma variável e impresso. Se a variável de função. Verifique se o código acima imprime o número 6.\n"
},
{
	"uri": "/pt-br/python-basics/data-types/strings/",
	"title": "Strings",
	"tags": [],
	"description": "",
	"content": "Qualquer coisa que esteja entre aspas é chamada de string. É assim que um computador representa palavras ou frases. Por exemplo, \u0026ldquo;a\u0026rdquo;, \u0026ldquo;2\u0026rdquo;, \u0026ldquo;banana!\u0026rdquo; e \u0026ldquo;Hello World\u0026rdquo; são strings, mas 2 e Hello World não são strings porque faltam aspas. Você pode combinar muitas strings usando o sinal +!\nAs strings que você combina não precisam ser palavras reais! Por exemplo, \u0026quot;Ma\u0026quot; + \u0026quot;çã\u0026quot; produzirá a string \u0026quot;Maçã\u0026quot;. Peça ajuda se estiver confuso!\nPor exemplo,\n\u0026quot;Maçã\u0026quot; + \u0026quot;Abacaxi\u0026quot; produz a string \u0026quot;MaçãAbacaxi\u0026quot;\n\u0026quot;Nuevo\u0026quot; + \u0026quot; \u0026quot; + \u0026quot;Foundation\u0026quot; produz \u0026quot;Nuevo Foundation\u0026quot;\nDesafio 1 E se você combinar seu nome e sobrenome? Como você faria isso?\nDesafio 2 Exclua todas as instruções print do seu código. Comece seu código com a linha print(\u0026quot;Nuevo\u0026quot; + \u0026quot; \u0026quot; + \u0026quot;Foundation\u0026quot;)\nSe você executá-lo, deverá obter a seguinte saída:\nNuevo Foundation\rVamos tentar encontrar mais duas maneiras de imprimir a string \u0026quot;Nuevo Foundation\u0026quot; usando dois símbolos de adição (+) em cada instrução print. Depois de fazer este trabalho, você deverá imprimir \u0026ldquo;Nuevo Foundation\u0026rdquo; 3 vezes. Em outras palavras, seu console deve ficar assim depois de você pressionar executar:\nNuevo Foundation\rNuevo Foundation\rNuevo Foundation\r"
},
{
	"uri": "/pt-br/secret-messages/using-repl-it/",
	"title": "Usando Repl.It",
	"tags": [],
	"description": "",
	"content": "Para ajudar o Rei e a Rainha, desenvolveremos um programa, em uma linguagem de programação chamada C++. Com esse programa poderemos inserir uma mensagem, e o programa irá modificá-la para torná-la secreta.\nUsando Replit Hoje você usará o Replit. Antes de começar, você precisará se cadastrar em uma conta Replit, caso ainda não tenha uma.\nClique no botão abaixo para se cadastrar em uma conta Replit - você precisará de uma conta de e-mail para se cadastrar. Se você já possui uma conta Replit, também pode fazer login em sua conta usando o botão abaixo.\nCadastrar-se no Replit\nA seguir, inicie o console Replit que usaremos hoje clicando no botão abaixo. Você deverá ver a tela abaixo.\nIniciar Replit\nAgora faremos um fork (bifurcação) do Repl, que significa simplesmente fazer uma cópia do programa, para que possamos fazer nossas próprias alterações nele. Clique no botão \u0026ldquo;Fork Repl\u0026rdquo; no canto superior direito e depois no botão \u0026ldquo;Fork Repl\u0026rdquo;.\nApós bifurcar o Replit, você verá uma janela semelhante a esta abaixo:\nCada vez que você vir o botão \u0026ldquo;Iniciar Replit\u0026rdquo;, você precisará seguir as etapas acima para fazer o fork no repl e concluir uma atividade. Peça ajuda se estiver tendo problemas para fazer o fork!\nAntes de prosseguirmos, vamos entender como essas janelas funcionam. O arquivo main.cpp contém o código ou instruções que o computador compreenderá e executará. Clicar no botão Run comandará o computador para executar as instruções desse arquivo. Os resultados podem ser vistos na aba console, na área inferior do Replit.\nA seguir, vamos explicar o código que temos em main.cpp.\nBibliotecas e \u0026ldquo;#include\u0026rdquo; Vá para o início de main.cpp. Você encontrará lá a seguinte linha:\n#include \u0026lt;iostream\u0026gt; Esta diretiva ou instrução refere-se à biblioteca iostream. Uma biblioteca é um local comum onde um conjunto de funções C++, normalmente relacionadas a um problema ou tópico comum específico, é agrupado. Existem bibliotecas para desenhar, para criar e gerenciar conexões de internet, para realizar operações matemáticas e para diversas outras finalidades. iostream é uma biblioteca muito básica que nos permite receber ou imprimir mensagens de e para o console.\nComentários As linhas acinzentadas em main.cpp começam com //. Eles são conhecidos como comentários. Os comentários são úteis em nossos programas C++ como uma forma de documentá-los melhor e explicar com mais detalhes qual é o objetivo das instruções. Os comentários não são instruções e, na verdade, são ignorados pelo computador.\nNamespace std usando namespace std; Esta linha específica nos permite acessar algumas palavras C++ já reservadas. Uma palavra reservada é uma palavra que possui um significado específico em uma determinada linguagem de programação; por isso não pode ser reutilizado para nenhum outro fim. Aqui, estamos referenciando a palavra reservada std para usar o código do padrão C++ já bem projetado e desenvolvido. using namespace std significa que queremos fazer referência ao namespace padrão.\nFunção principal int main(){\rreturn 0;\r} main é uma função obrigatória em qualquer programa C++. É o ponto de entrada do nosso programa. Dentro dos colchetes de abertura e fechamento { \u0026hellip; } colocaremos todas as instruções que desejamos que o computador execute. Após clicar em Executar o computador executará essas instruções. return 0; indica que o programa concluiu com sucesso sua execução. Se as instruções fossem colocadas após essa linha, o computador não as executaria.\nTodas as instruções C++ devem terminar com ponto e vírgula ;\r"
},
{
	"uri": "/pt-br/python-turtle/using-trinket/",
	"title": "Usando Trinket",
	"tags": [],
	"description": "",
	"content": "\nPara ajudar Alex a viver em uma colmeia, ele precisa aprender a como criar um favo de mel! Usaremos a biblioteca turtle do Python para desenhar um favo de mel para Alex.\nUsando Trinket Hoje você usará o Trinket para aprender a codificar em Python. Aqui está um exemplo de janela interativa que você usará hoje:\nAntes de começar, vamos primeiro entender como a janela funciona. O arquivo main.py contém código ou instruções para o computador executar. Pressionando o botão run, você diz para o computador executar as instruções do código. Todos os resultados do código serão exibidos na tela branca inferior, na guia result. Hoje, nossos resultados serão uma animação de um desenho sendo criado.\nEm seguida, vamos explicar melhor alguns dos códigos que foram fornecidos para você no arquivo main.py.\nBibliotecas e instruções de importação Olhe para a parte superior do código. Você verá a seguinte linha:\nimport turtle Essa instrução nos permite importar todas as funcionalidades de desenho fornecidas pela biblioteca turtle. Uma biblioteca é um lugar onde funcionalidades relacionadas são agrupadas para o uso na linguagem Python. Por exemplo, a biblioteca turtle apresenta uma tartaruga artística útil na janela de resultados que podemos controlar usando nosso código para desenhar imagens.\nComentários A linha cinza que começa com # é chamada de comentário. Estas são notas no código que ajudam a explicar o que está acontecendo em português simples. Como são ignoradas pelo computador, muitas vezes são usadas para que, quando outros desenvolvedores trabalharem no mesmo código, tenham mais facilidade para ler e entender o que está acontecendo.\n"
},
{
	"uri": "/pt-br/java-datastructures/arrays/introduction/",
	"title": "Introdução",
	"tags": [],
	"description": "",
	"content": "Arrays (vetores) são uma estrutura de dados onde cada um de seus elementos é organizado em uma sequência numérica e cada item é referenciado por seu número de posição. Em Java, cada um desses elementos é de um tipo (String, int, double, etc.) e tem indexação zero, o que significa que o primeiro elemento em um array começa em 0, o segundo elemento com 1 e assim por diante.\nAqui estão alguns vocabulários importantes que você precisa saber antes de falarmos mais sobre arrays.\nO número de itens em uma matriz é chamado de comprimento (lenght) da matriz. O tipo dos itens individuais em uma matriz é chamado de tipo base (base type) da matriz. O número da posição de um item em uma matriz é chamado de índice (index) desse item. Para nossos propósitos, queremos criar um array que possa conter todos os vários restaurantes em nosso aplicativo. Digamos que nosso programa precise processar os nomes de mil restaurantes diferentes. Precisaremos encontrar uma maneira de classificar e lidar com todos os dados. Sem uma estrutura de dados array, teríamos que resolver o problema criando mil variáveis ​​diferentes para cada restaurante e se quiséssemos fazer algo tão simples como, por exemplo, imprimir os nomes de cada restaurante, teríamos que colocar 1000 instruções de impressão . Realizar esse feito seria um grande desafio.\nPelo contrário, os arrays têm a capacidade de nos permitir realizar as mesmas ações, mas num único passo. A matriz é simplesmente uma única variável, mas contém todos os 1.000 restaurantes dentro dela.\nO comprimento do array seria 1.000, já que existem 1.000 nomes individuais. O tipo base do array seria String, pois os itens do array são strings. O primeiro nome estaria em índice 0 no array, o segundo nome no índice 1 e assim por diante, até o milésimo nome no índice 999.\n"
},
{
	"uri": "/pt-br/security-phishing/bob-goes-fishing/",
	"title": "Bob goes fishing",
	"tags": [],
	"description": "",
	"content": "Meet our friend Bob. Bob is a nice and jolly gentleman. His hobbies are travelling and fishing. One fine evening Bob received an email saying he won a free trip to the \u0026ldquo;Bahamas\u0026rdquo;. Bob got excited. He immediately clicked the link to enter his personal details and waited for his itinerary to come.\nBob decided to go shopping for his trip. He bought new clothes and a new fishing rod.\nHowever, 24 hours later, he still didn\u0026rsquo;t receive a confirmation for his trip. Another day passed and still nothing. The next day, he decided to go meet his good friend Alice. Bob told Alice all about the email, the trip to Bahamas, his new clothes and how he cannot wait to go fishing. Alice, being a secret agent was suspicious, and asked Bob to show her the email.\nOn reading the email Alice sighed, \u0026ldquo;Bob you have been phished!\u0026rdquo;\n"
},
{
	"uri": "/pt-br/security/meeting-alice-bob-eve/",
	"title": "Conhecendo Alice, Bob e Eva",
	"tags": [],
	"description": "",
	"content": "\nConheça nosso amigo Bob. Bob tem um segredo que não quer compartilhar, ele gostaria de mantê-lo seguro. Ele tem o segredo trancado em algum lugar seguro. Apenas Bob tem a \u0026lsquo;chave\u0026rsquo; da fechadura para garantir que ninguém possa descobrir seu segredo, exceto ele.\nConheça nossa não tão boa amiga Eva. Eva quer acesso ao segredo de Bob.\nEva percebe que para descobrir o segredo de Bob, eles precisam primeiro passar a tranca de Bob. Eva não consegue quebrar a fechadura, mas talvez ela consiga descobrir a chave. Depois de espionar Bob por um tempo, Eva percebe que ele realmente adora seu cachorro de estimação, Max. Isso dá a Eva uma ideia.\nEva acha que, já que Bob ama tanto seu animal de estimação, ele pode ter decidido para fazer disso a \u0026ldquo;chave\u0026rdquo; de sua fechadura. Eles decidem tentar e supresa!?, Eva conseguiu abrir a fechadura de Bob e ver seu segredo.\nIsso não é bom para Bob! Ele quer saber o que ele poderia ter feito de forma diferente para que Eva não conseguisse descobrir seu segredo tão facilmente, mas ele não sabe por onde começar.\nPara a sorte de Bob, sua boa amiga, a Agente Secreta Alice, chega para ajudá-lo com sua situação. Vamos ver o que Alice tem a dizer\u0026hellip;\n"
},
{
	"uri": "/pt-br/python-basics/data-structures/lists/",
	"title": "Listas",
	"tags": [],
	"description": "",
	"content": "As listas são a coleção ordenada de itens e podem ser escritas como valores separados por vírgula entre colchetes []. Como vimos em nossa lição sobre loops, as listas podem ser de qualquer tipo de dados, por exemplo, strings ou inteiros.\n#Criando uma lista de 5 frutas fruits = [\u0026#39;laranja\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;] Se quiser se referir a um elemento específico de uma lista, você pode fazer isso usando índices (posição) entre colchetes. O primeiro elemento é o índice (posição) 0 e a lista vai até (número de elementos na lista - 1). Portanto, uma lista com 6 elementos terá índices de 0 a 5.\n#Criando uma lista de 5 frutas fruits = [\u0026#39;laranja\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;] #Imprimir elemento no índice 2 print(fruits[2]) ##imprime banana índice Item 0 laranja 1 maçã 2 banana 3 maçã 4 manga Como você pode ver neste exemplo, as listas podem ter elementos duplicados.\nEm python, as listas não precisam ser todas do mesmo tipo de dados, portanto, uma única lista pode conter uma combinação de strings e números.\n#listas também podem ter tipos de dados diferentes my_list = [\u0026#39;doce\u0026#39;, 10, 2.5] Comprimento da lista Você pode obter o comprimento da lista usando a função len(list) e o nome da lista é passado como parâmetro.\nlength = len(fruits) ##comprimento = 5 Anexar um elemento na lista Você pode adicionar itens a uma lista usando a função append, função list.append(x) onde list é o nome da lista e x é o elemento que você deseja anexar. Adiciona o elemento no final da lista.\n#Antes a lista era [\u0026#39;laranja\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;] fruits.append(\u0026#39;limão\u0026#39;) #Agora a lista é [\u0026#39;laranja\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;, \u0026#39;limão\u0026#39;] Insira um elemento em um índice específico Se quiser controlar onde colocar um novo elemento, você pode inserir um elemento em um índice específico de uma lista usando a função list.insert(i, x). Aqui list é o nome da lista, i é o índice onde você deseja inserir e x é o elemento que você deseja inserir. Nota: isso mudará todos os elementos começando na posição i em um índice.\nfruits.insert(1, \u0026#39;goiaba\u0026#39;) #Agora a lista é [\u0026#39;laranja\u0026#39;, \u0026#39;goiaba\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;, \u0026#39;limão\u0026#39;] Remover um elemento da lista A função list.remove(x) procura a primeira instância do elemento fornecido x e o remove da lista.\nfruits.remove(\u0026#39;maçã\u0026#39;) #Agora a lista é [\u0026#39;laranja\u0026#39;, \u0026#39;goiaba\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;, \u0026#39;limão\u0026#39;] list.remove(x) apresenta um erro de valor se o elemento x não estiver presente na lista.\nAlém disso, observe que a segunda instância de 'maçã' ainda está na lista.\nRemover um elemento em uma posição específica A função list.pop(i) remove o elemento no índice i.\nfruits.pop(0) #Agora a lista é [\u0026#39;goiaba\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;, \u0026#39;limão\u0026#39;] Se você não especificar o índice,list.pop() então ele remove o último elemento da lista.\nInverta os elementos da lista A função list.reverse() inverte os elementos da lista.\nfruits.reverse() #Agora a lista é [\u0026#39;limão\u0026#39;, \u0026#39;manga\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;goiaba\u0026#39;] Obtenha o elemento mínimo e máximo da lista A função min(list) retorna o elemento mínimo da lista e o elemento máximo pode ser encontrado usando a função max(list). Se a sua lista for uma lista de números, ela retornará o número de valor mais baixo ou mais alto da lista. Se a sua lista for uma lista de strings, ela retornará o primeiro ou o último valor em ordem alfabética.\nmy_list = [4, 1, 2, 5, 3] ## Definindo uma nova lista de inteiros print(min(my_list)) ## imprime 1, o elemento mínimo de my_list print(max(my_list)) ## imprime 5, o elemento máximo de my_list Se a sua lista for uma mistura de strings e números, as funções min e max retornarão um erro.\nDesafio Agora vamos tentar você mesmo. Comece com a lista de frutas abaixo. Imprima a lista de frutas e para cada fruta, conforme o usuário gosta. Se eles gostarem, fique com ele. Caso contrário, remova-o da lista. Em seguida, peça ao usuário para adicionar uma fruta que esteja faltando na lista. Adicione à lista e imprima a quantidade de frutas que o usuário gosta.\nfruits = [\u0026#39;laranja\u0026#39;, \u0026#39;kiwi\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;, \u0026#39;limão\u0026#39;] Dica: Você precisará converter o inteiro length em uma string usando a função str(int).\n"
},
{
	"uri": "/pt-br/adafruit/the-components/",
	"title": "Os Componentes",
	"tags": [],
	"description": "",
	"content": "Todos os componentes que usaremos para o projeto estão listados abaixo. Certifique-se de adquirir todos os materiais necessários antes de começar o projeto:\nUma Placa Arduíno Adafruit Cabo Micro USB para USB 2 conectores do tipo garra de jacaré, em qualquer cor Duas laranjas "
},
{
	"uri": "/pt-br/linux-basics/vm-import-setup/",
	"title": "Usando Máquinas Virtuais - Parte 2",
	"tags": [],
	"description": "Continuando o guia introdutório sobre máquinas virtuais",
	"content": "\rExcelente trabalho na preparação do nosso ambiente de trabalho! Agora vamos executar a imagem do nosso computador invadido como uma VM.\rO que é uma imagem? Imagens vêm em uma variedade de tipos. Temos fotografias, que são imagens. E as imagens do nosso computador que também são muito semelhantes. Ambas são cópias de coisas de um único ponto no tempo. Nesse minicurso trabalharemos com uma cópia de um computador que está agindo de forma estranha. Mas não se preocupe, isso não vai prejudicar o seu computador! Lembre-se que o SO estará isolado, o que significa que não pode afetar seu computador.\nConfigurando o Kali Linux Baixando a imagem Imagens do sistema operacional facilitam o envio de cópias exatas de computadores. O VirtualBox usa a extensão de arquivo .ova para suas imagens. Isso assemelha-se a maneira como salvamos nossos documentos como um arquivo .docx e fotografias como .png.\nAgora, vamos baixar a nossa cópia do computador infectado! Clique no link abaixo para fazer o download. A maioria das imagens do sistema operacional é grande (~8 GB), mas a nossa é de apenas ~3 GB. Mesmo assim, o download ainda pode demorar alguns minutos.\nBaixar\rImportando uma Máquina Virtual Agora que baixamos a nossa imagem da máquina infectada, é hora de configurá-la!\nPasso 1 No aplicativo VirtualBox, podemos importar as nossas imagens. Vamos clicar no botão \u0026ldquo;Import\u0026rdquo; para começar!\nPasso 2 A imagem que queremos importar, aqui chamada de appliance, será o arquivo .ova que você baixou anteriormente. Clique na pequena pasta com um símbolo de acento circunflexo verde. Isso abrirá uma janela para que você possa encontrar e selecionar a nossa imagem de extensão .ova.\nPasso 3 Agora que você selecionou o arquivo de imagem .ova. Clique em \u0026ldquo;Abrir\u0026rdquo;. Em seguida, clique em \u0026ldquo;Next\u0026rdquo; na tela \u0026ldquo;Appliance to Import\u0026rdquo;.\nPasso 4 Agora vamos ao último passo! No campo \u0026ldquo;Name\u0026rdquo;, nomeie a nossa imagem para algo de sua escolha. Ela é a sua própria VM! Certifique-se de que a opção \u0026ldquo;USB Controller\u0026rdquo; não esteja selecionada. Certifique-se de desmarcá-la. Em seguida, para a campo \u0026ldquo;MAC Address Policy\u0026rdquo;, certifique-se de que a opção \u0026ldquo;Generate new MAC addresses for all network adapters\u0026rdquo; esteja selecionada. Por fim, clique em \u0026ldquo;Import\u0026rdquo;!\nObservação: será exibida uma janela informando o tempo necessário para concluir a importação. Normalmente, isso leva cerca de 5 minutos, mas pode demorar um pouco mais dependendo do seu computador.\nExcelente! Agora que importamos a nossa imagem infectada, vamos executá-la para começarmos a nossa investigação.\r"
},
{
	"uri": "/pt-br/python-basics/basics/writing-to-console/",
	"title": "Gravando no console (imprimir instrução)",
	"tags": [],
	"description": "",
	"content": "Faça seu programa falar com você! As instruções Print são usadas para escrever algo no console. Use print(\u0026quot;Olá, Mundo!\u0026quot;) para imprimir Olá, Mundo! na tela de saída. Mais tarde aprenderemos que print é uma função e a utilizamos para realizar um trabalho de impressão. Tudo o que você passa para a função print é impresso na tela. Vamos começar fazendo uma instrução print.\nUsaremos muito a impressão nas lições posteriores, portanto, certifique-se de entender isso antes de passar para o próximo conceito!\nDesafio 1 Para começar, escreva o seguinte texto em seu Trinket main.py e clique em Run (Executar).\nprint(\u0026#34;Olá, Mundo!\u0026#34;) Observe seu console dizer “Olá, mundo!” na tela à direita! print diz ao computador para imprimir a frase entre parênteses () na janela do console ou na tela à direita.\nUsando \u0026quot; com impressão Você notou que Olá, Mundo! estava cercado por \u0026quot;? Você tentou sem as marcas \u0026quot; para ver que produziu um erro? Mas, se você tentou print(123), você viu que funciona. Isso ocorre porque o texto (Strings em linguagens de programação) exige que você especifique que se trata de texto, colocando-o entre aspas. Mas os números não os exigem.\nVolte e tente imprimir coisas diferentes!\nDesafio 2 Sem remover as aspas, tente alterar \u0026quot;Olá, Mundo\u0026quot; para outra frase. (Por exemplo – \u0026quot;Meu nome é Nuvi!\u0026quot;) Pressione Run para ver se alguma coisa muda. Adicione outro print abaixo da linha atual para imprimir uma segunda frase abaixo da primeira frase. Pressione Run para ver se duas frases são impressas. Usaremos muito a impressão nas lições posteriores, portanto, certifique-se de entender isso antes de continuar!\nAJUDA! Recebi muito texto em vermelho! Se você vir algum texto em vermelho, você encontrou alguns erros! Por favor, peça ajuda. Em particular, tome cuidado com o seguinte ao codificar em Python:\nCertifique-se de que a frase que deseja imprimir esteja entre aspas e que a frase esteja dentro dos parênteses. O espaçamento em Python é muito importante. Certifique-se de não ter espaços ou tabulações desnecessárias no início ou no final de cada linha, pois de outra forma o Python não será capaz de ler o código. Por exemplo, não coloque nenhum espaço antes de print ou nenhum espaço após o último parêntese em print(\u0026quot;Olá, Mundo!). "
},
{
	"uri": "/pt-br/java-basics/activity-1/",
	"title": "Imprimir declarações e comentários",
	"tags": [],
	"description": "Introduzir métodos println() e comentários em Java.",
	"content": "\nDeixe o programa falar! Vamos tentar escrever um programa que diga Hello World (Olá Mundo) digitando a linha de código System.out.print(\u0026quot;Hello World\u0026quot;);\nO programa imprime tudo o que você digitou entre parênteses de System.out.print. E cada linha de código termina com ;.\nDepois, adicione mais instruções para imprimir números colocando números entre parênteses (ou seja, System.out.print(2020)) ou um símbolo colocando um símbolo entre 2 aspas simples ' (i.e. System.out.print('@')).\nLaunch Replit\nVocê notou que todas as afirmações que você digitou foram impressas em uma linha? Às vezes queremos inserir uma nova linha ao digitar. Para fazer isso, digitamos um código ligeiramente diferente System.out.println();\n(Nota: digitamos println em vez de print para criar uma nova linha após)\nVolte e experimente. Faça com que todas as declarações sejam impressas em linhas diferentes!\nComo imprimir vários símbolos em uma linha de código? Aprendemos que para imprimir símbolos nós os colocamos entre 2 aspas simples ', mas como imprimimos vários símbolos em uma linha?\nPodemos simplesmente colocá-los entre 2 aspas duplas \u0026quot; (i.e. System.out.print(\u0026quot;@ , - h A #\u0026quot;);)\n!! Importante !! Às vezes você não pode simplesmente colocar caracteres entre \u0026quot; \u0026quot; Ao colocar caracteres entre \u0026quot; \u0026quot; em uma instrução de impressão, às vezes é fácil confundir o computador sobre quais caracteres imprimir.\nPor exemplo, como dizemos ao computador para imprimir \u0026quot;?\nSe você digitar System.out.print(\u0026quot;\u0026quot;\u0026quot;);, você receberá um erro! porque o computador não consegue identificar onde termina o texto!\nEm vez disso, certos caracteres precisam ser escapados adicionando um \\ na frente deles.\nSystem.out.print(\u0026quot;\\\u0026quot;\u0026quot;); // isso imprime \u0026quot;\rOutros caracteres que precisam ser escapados em Java incluem: ', \u0026quot;, \\.\nImprimir uma Coruja Vamos conhecer 🐥 o primeiro amigo de Patrick, a coruja Minerva 🦉!\nUse o que você acabou de aprender e recrie a coruja abaixo usando apenas 4 linhas de código! (Crédito da arte: asciiart.eu/animals/birds-land)\n, ___ / ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ \\\r`\\/{o,o} \u0026lt; Oi, Eu sou Minerva, amiga do Patrick! |\r/ /) ) \\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ /\r/,--\u0026quot;-\u0026quot;- Launch Replit\nEu recebi um erro! Main.java:4: error: reached end of file while parsing\rSe você receber um erro como este, é possível que você tenha esquecido de escapar de caracteres como \u0026quot; e \\.\nReleia a terceira dica acima para ver como escapar caracteres em uma instrução print!\nFaça um comentário Ao criar um programa Java, podemos fazer algumas anotações adicionando um comentário de uma linha usando // ou comentário de várias linhas usando /* e */ (Nota: as instruções nas atividades anteriores foram escritas como comentários).\nAlém disso, adicionar comentários não afetará de forma alguma o programa. Assim, você pode adicionar notas com comentários em todo o seu código!\n// amostra de comentário de uma linha\r/* amostra de\r* comentário de\r* várias linhas */ "
},
{
	"uri": "/pt-br/unity/understanding-unity-interface/",
	"title": "Compreendendo a interface do Unity",
	"tags": [],
	"description": "",
	"content": "Antes de começar a trabalhar em nosso jogo, reserve um tempo para observar a interface do Unity e se familiarizar com as janelas. Você pode mover essas janelas para personalizar o layout do seu espaço de trabalho. Se você ficar preso em um layout estranho, você pode voltar ao layout padrão fazendo: Windows -\u0026gt; Layouts -\u0026gt; Default.\nJogo Esta janela mostra o que a câmera está vendo - em outras palavras, é o que você verá quando executar e jogar o jogo. No momento, você vê apenas uma tela azul, mas é exatamente isso que o Unity mostra por padrão em 2D. Não se preocupe, você dará ao seu jogo um cenário sofisticado mais tarde.\nCena Esta janela exibe tudo na cena atual, incluindo algumas coisas invisíveis que você pode precisar. Você pode rolar para dentro e para fora para ampliar e clicar com o botão direito para se mover pela cena. Tenha cuidado para não confundir com a janela do Jogo!\nHierarquia Esta janela mostra cada objeto na cena atual como uma lista.\nInspetor Esta janela mostrará todos os detalhes sobre um objeto selecionado na janela Hierarquia ou Cena. No momento, você não vê nada aqui porque ainda não há objetos no jogo.\nProjeto Esta janela mostra TUDO que você precisa para fazer o jogo, incluindo coisas que você ainda não usou.\nConsole Esta janela mostrará a saída do jogo. Você pode ignorá-lo por enquanto, mas será importante quando você começar a corrigir erros no jogo.\nUma última coisa importante\u0026hellip; encontre o botão Play no topo da interface do Unity. Deveria ficar assim: Isso é o que você usará para jogar ou \u0026ldquo;executar\u0026rdquo; seu jogo conforme você o cria. Observe que quaisquer alterações feitas no jogo enquanto você joga NÃO serão salvas. Se você achar que precisa fazer alguma alteração, clique no botão Jogar novamente para parar de jogar.\nIsso é tudo que você precisa saber por enquanto! Pode parecer assustador, mas você começará a entender melhor quando começar a trabalhar no jogo. O mais importante é você entrar e começar a trabalhar!\n"
},
{
	"uri": "/pt-br/android-tictactoe/android-setup/",
	"title": "Configuração do Android",
	"tags": [],
	"description": "",
	"content": "Siga as etapas abaixo para instalar o Android Studio em seu computador. Se você já tiver o Android Studio instalado, abra-o e pule para a próxima etapa!\nEssas etapas têm exemplos para instalação em computadores Windows. No entanto, as etapas são semelhantes para outros sistemas operacionais de computador também.\nBaixe e Instale o Android Studio Baixe o Android Studio\rpara o seu sistema operacional. Siga estas etapas\rpara instalar o Android Studio. Defina a variável de ambiente JAVA_HOME O Android Studio vem com uma versão do Java necessária para que certas partes do aplicativo funcionem. Siga as etapas abaixo para definir a variável de ambiente JAVA_HOME em seu computador, que informa a essas ferramentas onde encontrar o Java:\nNa caixa de pesquisa no canto inferior esquerdo da tela, digite env. Selecione o programa \u0026ldquo;Melhor correspondência\u0026rdquo; Editar as variáveis de ambiente do sistema. Clique em Variáveis de Ambiente.... Novo... na seção \u0026lsquo;Variáveis do usuário\u0026rsquo;. Digite JAVA_HOME como o nome da variável. Copie o seguinte no valor da variável: C:\\Program Files\\Android\\Android Studio\\jre Clique em OK. Recomendamos fortemente que você reinicie seu computador agora para que o Android Studio seja aberto corretamente.\nInicie o Android Studio Uma vez instalado, abra o Android Studio para trabalhar no aplicativo.\nExistem várias maneiras de iniciar o aplicativo Android Studio em seu computador Windows. Aqui estão dois métodos:\nMétodo 1 Clique no ícone do Windows no canto inferior esquerdo do seu computador. Percorra a lista até ver a pasta Android Studio. Clique na pasta Android Studio para expandi-la. Clique no aplicativo Android Studio na pasta para iniciar o Android Studio. Método 2 Na caixa de pesquisa no canto inferior esquerdo da tela, digite Android Studio. Na janela de resultados, se \u0026ldquo;Melhor correspondência\u0026rdquo; destacar Android Studio, clique no aplicativo Android Studio ou pressione ENTER no teclado. Abra os arquivos do projeto Clique em Abrir um projeto existente na tela inicial do Android Studio. Procure pelo local onde você baixou os arquivos do projeto. Selecione a pasta \u0026lsquo;TicTacToe\u0026rsquo; dentro da pasta \u0026lsquo;TicTacToe\u0026rsquo; que você descompactou anteriormente. A pasta \u0026lsquo;TicTacToe\u0026rsquo; a ser selecionada deve ter um ícone verde do Android ao lado, indicando que é uma pasta de projeto Android. Execute o Android Studio e abra o projeto. Você verá algo parecido com: Aceite as Licenças Antes de poder executar o código, você precisará aceitar as licenças do Android seguindo as etapas abaixo:\nClique no botão Terminal na parte inferior da janela do Android Studio. Digite o comando abaixo, substituindo \u0026lsquo;\u0026lt;USER_NAME\u0026gt;\u0026rsquo; pelo nome de usuário do seu computador. C:\\Users\\\u0026lt;USER_NAME\u0026gt;\\AppData\\Local\\Android\\Sdk\\tools\\bin\\sdkmanager --licenses Digite y e pressione ENTER nas solicitações, para aceitar as licenças. Isso será necessário várias vezes. "
},
{
	"uri": "/pt-br/supply-chain-analytics/scenario/",
	"title": "Preparando a cena",
	"tags": [],
	"description": "",
	"content": "O novo Xbox 1000 acabou de ser lançado e você PRECISA comprá-lo. Mas para fazer isso você precisará começar a economizar muito mais dinheiro. Depois que todas as crianças da escola adoraram os biscoitos que sua mãe preparou para a arrecadação de fundos da escola, você teve a ideia genial de abrir uma biscoiteria com ela e dividir os lucros em 50-50!\nPara começar, você venderá apenas 2 tipos de biscoitos. Depois de perguntar aos seus amigos, os dois principais biscoitos que todo mundo adora são biscoitos de chocolate e biscoitos açucarados.\nCada lote de biscoitos equivale a 12 biscoitos. Você pode vender um lote de biscoitos de chocolate por R$20 e um lote de biscoitos de açúcar por R$15.\nVocê precisa comprar os ingredientes para fazer os biscoitos. Na cadeia de abastecimento, estes são conhecidos como “matérias-primas”. Ao fazer as contas, você descobriu que, como os biscoitos de chocolate usam mais ingredientes do que os os de açúcar, cada lote custará R$10 em matéria-prima. Cada lote de biscoitos açucarados custará apenas R$ 7.\nEste modelo de negócio é muito competitivo. Para permanecer no mercado, você precisa ter lucro, o que significa que você ganha mais dinheiro do que gasta.\nComo você calcula o lucro?\rProfit = Revenue - Cost\rA receita é o dinheiro total que você ganha vendendo biscoitos. Ao subtrair o custo dos ingredientes que foram usados ​​para fazer esses biscoitos, você fica com o lucro!\rAqui está o problema: você só tem um número limitado de ingredientes comuns que deve compartilhar entre os dois. Mas cada lote requer uma quantidade diferente. Para simplificar, eu incluí apenas três dos ingredientes principais: ovos, farinha e açúcar.\nVocê quer ganhar o máximo de dinheiro vendendo os biscoitos com os ingredientes que possui. Então o que nós podemos fazer?\n"
},
{
	"uri": "/pt-br/android-tictactoe/puzzle1/",
	"title": "Quebra-cabeça 1 - Execute o jogo e resolva-o",
	"tags": [],
	"description": "",
	"content": "Execute o jogo Pressione o botão play (►) na parte superior do Android Studio para iniciar o jogo. Você verá que o título na parte superior do aplicativo diz Jogo da Velha (isso não parece certo!); vamos mudar para Jogo da Velha.\nResolva o quebra-cabeça Clique duas vezes no arquivo strings.xml em app → res → valores: Como você pode modificar este arquivo para dizer Tic-Tac-Toe? "
},
{
	"uri": "/pt-br/guidelines/getting-started/",
	"title": "Iniciando",
	"tags": [],
	"description": "",
	"content": "Pré-requisitos Visual Studio Code\rHugo\rGit\r. Saiba mais sobre Git e GitHub no guia Quickstart\r. Links de referência Github repo\rWorkshops website\rVídeos passo a passo (em inglês) Workshops de ciclo de desenvolvimento do repositório Github\rEstrutura do repositório Github dos Workshops\rCódigo A contribuição para este repositório é feita por meio do modelo fork\r. Os colaboradores enviam alterações para sua própria versão \u0026ldquo;bifurcada\u0026rdquo; dos workshops e, em seguida, enviam uma solicitação pull solicitando que essas alterações sejam mescladas.\nPara começar:\nFaça o fork do repositório clicando em Fork no canto superior direito: No git bash, execute (substituindo [user-name] pelo seu nome de usuário do GitHub): \\\u0026gt; git clone https://github.com/[user-name]/workshops.git\r\\\u0026gt; cd workshops\r\\workshops\u0026gt; git remote add upstream https://github.com/NuevoFoundation/workshops.git\r\\workshops\u0026gt; git remote set-url --push upstream no_push O último comando evita um push acidental para este repositório sem passar por uma solicitação pull.\nDepois de executar acima, git remote -v deve mostrar algo semelhante ao seguinte:\n\\workshops\u0026gt; git remote -v origin https://github.com/dmonroym/workshops.git (fetch)\rorigin https://github.com/dmonroym/workshops.git (push)\rupstream https://github.com/NuevoFoundation/workshops.git (fetch)\rupstream no_push (push) Construir e testar Para construir e testar suas alterações você vai usar hugo. Se você seguiu as instruções de instalação corretas, então hugo deve estar em seu PATH (se não, reinicie sua máquina).\n\\\u0026gt; cd workshops\r\\workshops\u0026gt; hugo -D server Isso gerará algumas informações de compilação, mas a linha mais importante será semelhante a: Web Server is available at //localhost:1313/ (bind address 127.0.0.1) (O servidor Web está disponível em //localhost:1313/ (endereço de ligação 127.0.0.1))\nAgora você pode iniciar seu navegador favorito e abrir //localhost:1313/ e deverá ver o site aberto.\nAtualizando seu fork Para se manter atualizado, você deseja manter seu fork atualizado tanto quanto possível. Antes de criar um novo branch, você deve buscar as alterações e enviá-las para o seu fork. Veja como fazer isso (se você precisar de outro branch, use-o em vez do master).\n\\workshops\u0026gt; git fetch --all --prune\r\\workshops\u0026gt; git checkout master\r\\workshops\u0026gt; git merge upstream/master\r\\workshops\u0026gt; git push origin master Exemplo de passo a passo Cenário: vamos fazer uma alteração simples na página de primeiros passos e enviar uma solicitação pull.\nSiga as instruções acima Depois de seguir as instruções do Código acima, você terá uma cópia local do repositório dos workshops.\nCrie um ramo de tópico Certifique-se de que seu fork esteja atualizado antes de fazer isso:\n\\workshops\u0026gt; git checkout master\r\\workshops\u0026gt; git checkout -b [branch-name]\r\\workshops\u0026gt; git push --set-upstream origin [branch-name] Abra o repositório usando VS Code Ao iniciar o VS Code, você pode Abrir pasta\u0026hellip; Navegue até a pasta do workshop e selecione abrir.\nNavegue até o arquivo e modifique-o Dependendo do que você está modificando, você desejará entender melhor [como o site é construído] (arquitetura do site)\nNo nosso caso, você deseja modificar este arquivo, então vá para content\\brazilian-portuguese\\guidelines\\getting-started.md Quero simplesmente que você adicione dois pontos de exclamação à palavra \u0026ldquo;Bem-vindo!\u0026rdquo;\nAntes: Bem-vindo!\nDepois: Bem vindo!!!\nConfirme a mudança A execução do git status deve fornecer todas as alterações feitas e todos os nomes dos arquivos. Você desejará prepará-los usando git add e, em seguida, confirmá-los e enviá-los. Aqui estão os comandos para fazer isso.\n\\workshops\u0026gt; git status\r\\workshops\u0026gt; git add content/brazilian-portuguese/guidelines/getting-started.md\r\\workshops\u0026gt; git commit -m \u0026#34;Added exclamations\u0026#34;\r\\workshops\u0026gt; git push Algumas dicas do git: Se você quiser adicionar tudo e confirmar ao mesmo tempo, você pode pular todos esses comandos e apenas usar git commit -am \u0026quot;message here\u0026quot; e depois fazer o git push\nCrie uma solicitação pull Parabéns, agora você fez todas as alterações necessárias e a última etapa é revisá-lo e colocá-lo em produção.\nSe você navegar até seu fork no github.com, provavelmente verá uma sugestão para criar uma solicitação pull (pull request) com base em seu push mais recente.\nCaso contrário, basta navegar até Pull Requests -\u0026gt; Nova pull request\nO ponto mais importante aqui é ter certeza de que você está escolhendo corretamente os branches (o base e o head).\nAgora você pode clicar no botão Create pull request, fornecer uma descrição e um bom título e aguardar a aprovação de um revisor para que possa ser mesclado.\n"
},
{
	"uri": "/pt-br/guidelines/new-workshops/",
	"title": "Novas regras do workshop",
	"tags": [],
	"description": "",
	"content": "Este documento tem como objetivo orientar você sobre como criar novos workshops para o projeto de workshop da Nuevo Foundation\r.\nConheça cada parte: Arquitetura do Site\re Introdução\r.\n"
},
{
	"uri": "/pt-br/java-datastructures/arrays/",
	"title": "Arrays",
	"tags": [],
	"description": "",
	"content": "Primeiro, nossos clientes precisam ser capazes de selecionar o restaurante do qual desejam pedir sua comida! Pode haver centenas de restaurantes diferentes no aplicativo e precisamos de alguma maneira de armazená-los todos dentro de uma estrutura de dados. Para atingir esse objetivo, usaremos um array (vetor).\n"
},
{
	"uri": "/pt-br/jsappybird/load-the-bird/",
	"title": "Carregue a imagem do pássaro e altere o texto da tela",
	"tags": [],
	"description": "",
	"content": "Primeiramente vamos carregar o Flappy e colocá-lo na tela.\nAdicione o comando abaixo no arquivo [File: load-sprites.js] game.load.image('bird','assets/bird.png');\rTrabalhando juntos Na janela Replit abaixo, iniciamos o código com a linha game.load.image('bird', 'assets/bird.png');.\nNo seu console você deverá ver um pássaro Jsappy depois de pressionar run e depois a barra de espaço:\nAltere o texto da tela Vamos alterar o texto da tela inicial:\nAdicione o comando abaixo no arquivo [Arquivo: start-screen.js] var text = game.add.text(0, 0, \u0026ldquo;Pressione espaço para iniciar\u0026rdquo;, textOptions);\nTrabalhando juntos Na janela Replit abaixo, iniciamos o código com a linha var text = game.add.text(0, 0, \u0026quot;Pressione espaço para iniciar\u0026quot;, textOptions);.\nEm seu console você deverá ver Pressione espaço para iniciar depois de pressionar run:\n"
},
{
	"uri": "/pt-br/python-basics/functions/built-in/",
	"title": "Funções integradas",
	"tags": [],
	"description": "",
	"content": "Existem muitas funções integradas em python que podem ser usadas para aumentar a facilidade de escrita de código. Vamos discutir alguns deles aqui.\nsort() Esta função é usada para classificar os valores em estruturas de dados, como arrays e listas.\narr = [8,5,1,4,6] arr.sort() print(\u0026#39;O arr ordenado é :\u0026#39;,arr) #imprime O arr ordenado é :[1,4,5,6,8] find() Retorna a primeira ocorrência do input(pattern) para find() fornecido na string fornecida.\nstr1 = \u0026#34;Hello World\u0026#34; index = str1.find(\u0026#34;World\u0026#34;) print(index) #imprime 6 len() len() ajuda a descobrir o tamanho de uma determinada estrutura de dados.\narr = [10,5,4,2,3] print(len(arr)) #imprime 5 isdigit() Esta função retorna true se a string passada como argumento consistir apenas em dígitos; caso contrário, retorna falso\ns = \u0026#34;123\u0026#34;; print s.isdigit() #imprime true s = \u0026#34;Olá Mundo\u0026#34;; print s.isdigit() #imprime false s = \u0026#34;123Olá\u0026#34; print s.isdigit() #imprime false pois tem letras junto com dígitos reverse() Esta função é usada para reverter o conteúdo de um array ou lista.\narr = [5, 6, 7, 8, 9]; arr.reverse(); print(arr) #imprime [9,8,7,6,5] replace() Esta função substitui o primeiro argumento passado para a função pelo segundo argumento em uma determinada string.\ninitial_str = \u0026#34;Meu nome é Harry. Harry é um bom garoto.\u0026#34; final_str = initial_str.replace(\u0026#34;Harry\u0026#34;, \u0026#34;Potter\u0026#34;) print(final_str) #imprime Meu nome é Potter. Potter é um bom garoto. append() Esta função é usada para adicionar um número, caractere ou elemento de qualquer tipo de dados ao final de uma lista ou array.\narr = [1,2,3,4,5]; arr.append(6); print(arr) #imprime [1,2,3,4,5,6] arr = [\u0026#39;Harry\u0026#39;,\u0026#39;Ram\u0026#39;,1,2] arr.append(\u0026#34;Jenifer\u0026#34;) print(arr) #imprime [Harry,Ram,1,2,Jenifer] remove() Remove a primeira ocorrência se o argumento for passado para o objeto fornecido. Se você tentar remover um elemento que não está na lista, ocorrerá uma exceção informando que o elemento não está na lista.\narr = [1,1,2,3,3] arr.remove(1) print(arr) #imprime 1,2,3,3 arr.remove(4) #dá uma exceção informando que o elemento não está na lista Desafio 1 Crie um array de nomearr\nInicialize-o para [1,2,3,4,5]\nAnexe o número 6 a ele e imprima.\nInverta arr e imprima-o.\nFaça sort em arr e imprima-o.\nImprima o comprimento de arr\nRemova o elemento 6 de arr e imprima-o.\nImprima o comprimento de arr,\nSaída esperada [1,2,3,4,5,6]\r[6,5,4,3,2,1]\r[1,2,3,4,5,6]\r6\r[1,2,3,4,5]\r5 Desafio 2 -Inicialize uma string s para \u0026ldquo;Hello all.Hello people\u0026rdquo;.\n-Encontre a ocorrência da palavra Hello na string s e imprima.\n-Substitua a palavra Hello por Hi em s.\n-Descubra se a string s contém apenas dígitos e imprima o veredicto.\nResultado Esperado 0\rHi all.Hi people.\rFalse "
},
{
	"uri": "/pt-br/java-datastructures/arraylists/methods/",
	"title": "Métodos",
	"tags": [],
	"description": "",
	"content": "Modificando Elementos import java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList\u0026lt;String\u0026gt; order = new ArrayList\u0026lt;String\u0026gt;(); order.add(\u0026#34;Whopper\u0026#34;); order.add(\u0026#34;Nuggets\u0026#34;); order.add(\u0026#34;Batata Frita\u0026#34;); order.set(1, \u0026#34;Coca\u0026#34;); // Isso troca o elemento 1, Nuggets para uma Coca. } } Usando set(), você pode definir o elemento no número do índice para um novo elemento.\nRemovendo Elementos import java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList\u0026lt;String\u0026gt; order = new ArrayList\u0026lt;String\u0026gt;(); order.add(\u0026#34;Whopper\u0026#34;); order.add(\u0026#34;Nuggets\u0026#34;); order.add(\u0026#34;Batata Frita\u0026#34;); order.remove(2); // Remove batata frita do ArrayList } } Semelhante a set(), o método remove() remove um elemento em um número de índice.\nObtendo o tamanho de um ArrayList import java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList\u0026lt;String\u0026gt; order = new ArrayList\u0026lt;String\u0026gt;(); order.add(\u0026#34;Whopper\u0026#34;); order.add(\u0026#34;Nuggets\u0026#34;); order.add(\u0026#34;Batata Frita\u0026#34;); System.out.println(order.size()); // Gera o tamanho do ArrayList, neste caso: 3 } } size() retorna o tamanho do ArrayList.\nIterando sobre elementos import java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList\u0026lt;String\u0026gt; order = new ArrayList\u0026lt;String\u0026gt;(); order.add(\u0026#34;Whopper\u0026#34;); order.add(\u0026#34;Nuggets\u0026#34;); order.add(\u0026#34;Batata Frita\u0026#34;); for (int i = 0; i \u0026lt; order.size(); i++) { System.out.println(order.get(i)); } // Saída: // Whopper // Nuggets // Batata Frita } } Usando uma combinação do loop for e do método get, podemos iterar através do ArrayList e imprimir cada elemento em cada índice.\n"
},
{
	"uri": "/pt-br/java-datastructures/hashmaps/methods/",
	"title": "Métodos",
	"tags": [],
	"description": "",
	"content": "Hashmaps Um HashMap pode armazenar itens em pares chave/valor e você pode atribuir esses pares a diferentes tipos, como strings ou inteiros.\nComo sempre, para criar um HashMap, você terá que importar a classe HashMap assim.\nimport java.util.HashMap; // importará o HashMap HashMap\u0026lt;String, String\u0026gt; addresses = new HashMap\u0026lt;String, String\u0026gt;(); Neste caso, criamos um HashMap chamado endereços que armazena chaves do tipo String e valores do tipo String.\nAdicionando Elementos Para adicionar pares chave/valor ao HashMap, use o método put().\n// Importe a classe HashMap import java.util.HashMap; public class Main { public static void main(String[] args) { // Crie um objeto HashMap chamado capitalCities HashMap\u0026lt;String, String\u0026gt; addresses = new HashMap\u0026lt;String, String\u0026gt;(); // Adicione chaves e valores (país, cidade) addresses.put(\u0026#34;Melissa\u0026#34;, \u0026#34;Rua Foster nº 333. Conyers, GA 30012\u0026#34;); addresses.put(\u0026#34;Jun\u0026#34;, \u0026#34;Avenida E. Wentworth nº 66. Annandale, VA 22003\u0026#34;); addresses.put(\u0026#34;Isabelle\u0026#34;, \u0026#34;Avenida John nº 11. Champaign, IL 61821\u0026#34;); addresses.put(\u0026#34;Tom\u0026#34;, \u0026#34;Rua Blue Spring nº 808. Colorado Springs, CO 80911\u0026#34;); } } Como você pode ver, o código acima insere um par chave/valor em nossos endereços HashMap.\nAcessando Elementos Para acessar um item em um HashMap, use o método get().\n// Importe a classe HashMap import java.util.HashMap; public class Main { public static void main(String[] args) { // Crie um objeto HashMap chamado endereços HashMap\u0026lt;String, String\u0026gt; addresses = new HashMap\u0026lt;String, String\u0026gt;(); // Adicione chaves e valores (nome, endereço) addresses.put(\u0026#34;Melissa\u0026#34;, \u0026#34;Rua Foster nº 333. Conyers, GA 30012\u0026#34;); addresses.put(\u0026#34;Jun\u0026#34;, \u0026#34;Avenida E. Wentworth nº 66. Annandale, VA 22003\u0026#34;); addresses.put(\u0026#34;Isabelle\u0026#34;, \u0026#34;Avenida John nº 11. Champaign, IL 61821\u0026#34;); addresses.put(\u0026#34;Tom\u0026#34;, \u0026#34;Rua Blue Spring nº 808. Colorado Springs, CO 80911\u0026#34;); String junAddress = addresses.get(\u0026#34;Jun\u0026#34;); System.out.println(\u0026#34;Jun\u0026#39;s address is: \u0026#34; + junAddress); //exibe o endereço de Jun } } Usando o método get(), chamamos addresses.get(\u0026quot;Jun\u0026quot;) e retorna o endereço de Jun.\nEsses são alguns dos métodos mais básicos do HashMap. Outros métodos podem incluir o método remove(), que remove um item ou o método size() que retorna quantos itens estão no HashMap. Daremos mais exemplos para que você experimente na próxima página!\n"
},
{
	"uri": "/pt-br/java-datastructures/queues/methods/",
	"title": "Métodos",
	"tags": [],
	"description": "",
	"content": "Filas prioritárias Uma PriorityQueue (Fila Prioritária) é usada quando os objetos devem ser processados ​​com base na prioridade. Nesse caso, queremos ordenar a fila pelo tempo que o cliente está esperando. Sabe-se que uma Fila segue o algoritmo First-In-First-Out, mas às vezes é necessário que os elementos da fila sejam processados ​​​​de acordo com a prioridade; é aí que PriorityQueue entra em ação. O PriorityQueue é baseado no amontoado de prioridade. Os elementos da fila de prioridade são ordenados de acordo com a ordenação natural, ou por um Comparador fornecido no momento da construção da fila, dependendo de qual construtor é utilizado.\nAntes de criarmos uma fila, teremos que importar a classe PriorityQueue. Para facilitar a vida, podemos usar um * para importar todas as classes da biblioteca. Vai parecer algo assim.\n// Importará PriorityQueue, entre outras classes import java.util.*; Existem vários métodos para usar em uma fila prioritária e se você estiver interessado, sinta-se à vontade para pesquisar os métodos. Porém, agora falaremos apenas sobre os métodos mais importantes: add(), peek() e poll().\nCriando uma fila prioritária Queue\u0026lt;Integer\u0026gt; orders = new PriorityQueue\u0026lt;\u0026gt;(); Existem diversas maneiras de ordenar a fila de prioridade e cabe a você decidir como deseja implementá-la.\nAdicionando Elementos Você pode adicionar a uma fila usando o método add(). O PriorityQueue` classificará automaticamente os elementos para você. O padrão é a ordem natural de um objeto, mas você pode alterá-lo com base no que desejar.\nadd(1); add(2); add(3); // Cria uma fila com elementos [1, 2, 3] Acessando Elementos peek() retornará o elemento superior sem removê-lo.\nqueue.peek(); // Retorna 1 // A fila contém [1, 2, 3] Removendo Elementos poll() retornará o elemento superior e o removerá da fila.\nqueue.poll(); // Retorna 1 // A fila contém [2, 3] Com esses três métodos em mente, vamos dar uma olhada em um exemplo.\nimport java.util.*; class PriorityQueueDemo { // Método Principal public static void main(String args[]) { // Criando fila de prioridade vazia PriorityQueue\u0026lt;Integer\u0026gt; pQueue = new PriorityQueue\u0026lt;Integer\u0026gt;(); // Adicionando itens ao pQueue usando add() pQueue.add(60); pQueue.add(30); pQueue.add(10); // Imprimindo o elemento superior de PriorityQueue System.out.println(pQueue.peek()); // Imprimindo o elemento superior e removendo-o // do contêiner PriorityQueue System.out.println(pQueue.poll()); // Imprimindo o elemento superior novamente System.out.println(pQueue.peek()); } } Portanto, temos três clientes com tempos de espera variados de 10, 30 e 60. O que você acha que o compilador produzirá?\nVamos em frente e tentar digerir um pouco o código. Para a primeira linha, chamamos pQueue.peek(). O que peek() faz? Peek simplesmente retorna o elemento no topo. O que está no topo? Bem, como já está classificado, deve imprimir o menor elemento que é 10.\nQue tal pQueue.poll()? Bem, ele deveria fazer exatamente a mesma coisa que o peek anterior, mas agora remove o elemento superior da fila que é 10.\nE se tentarmos chamar peek() novamente? Bem, agora que 10 não existe mais, agora será 30.\nPortanto, o resultado final pode ser assim:\n10 10 30 Espere aí! Não queríamos que as pessoas que esperavam mais tempo na fila chegassem primeiro ao topo da fila? Parece que a fila produz os elementos menores primeiro, mas o que realmente queremos é o elemento maior. Para conseguir isso, teríamos apenas que instanciar a fila de maneira um pouco diferente. Collections.reverseOrder() basicamente reverterá a ordem da nossa fila. Assim!\nPriorityQueue\u0026lt;Integer\u0026gt; pQueue = new PriorityQueue\u0026lt;Integer\u0026gt;(Collections.reverseOrder()); Agora nossa implementação deve ser sólida.\nimport java.util.*; class PriorityQueueDemo { // Método Principal public static void main(String args[]) { // Criando fila de prioridade vazia PriorityQueue\u0026lt;Integer\u0026gt; pQueue = new PriorityQueue\u0026lt;Integer\u0026gt;(Collections.reverseOrder()); // Adicionando itens ao pQueue usando add() pQueue.add(60); pQueue.add(30); pQueue.add(10); // Imprimindo o elemento superior de PriorityQueue System.out.println(pQueue.peek()); // Imprimindo o elemento superior e removendo-o // do contêiner PriorityQueue System.out.println(pQueue.poll()); // Imprimindo o elemento superior novamente System.out.println(pQueue.peek()); } } Pergunta de checagem: Qual será a saída deste pQueue agora?\nAnswer:\n60 60 30 "
},
{
	"uri": "/pt-br/java-datastructures/stacks/methods/",
	"title": "Métodos",
	"tags": [],
	"description": "",
	"content": "Stacks Uma stack é semelhante a uma queue. A única diferença são os nomes dos métodos e a maneira como recuperamos os itens.\nAntes de criarmos uma stack, teremos que importar a classe stack. Para facilitar a vida, podemos usar um * para importar todas as classes da biblioteca. Vai parecer algo assim.\n// Isso importará a stack, entre outras classes import java.util.*; Existem vários métodos para usar em uma stack. Se estiver interessado, você pode pesquisar na internet para obter mais informações sobre esses métodos. No entanto, vamos explicar apenas os métodos mais importantes por enquanto: push(), peek(), e pop().\nCriando uma pilha Stack driver = new Stack(); Adicionando Elementos Para adicionar um elemento à stack, podemos usar o método push(). Esta operação push() coloca o elemento no topo da stack.\npush(1); push(2); push(3); // Cria uma pilha com elementos [3, 2, 1] Acessando Elementos Para recuperar ou buscar o primeiro elemento da stack ou o elemento presente no topo da stack, podemos usar o método peek(). O elemento recuperado não é excluído ou removido da pilha.\nstack.peek(); // Retorna 3 // A stack contém [3, 2, 1] Removendo Elementos Para remover um elemento da stack, podemos usar o método pop(). O elemento é retirado e removido do topo da stack.\nstack.pop(); // Retorna 3 // A Stack contém [2, 1] Com esses três métodos em mente, vamos dar uma olhada em um exemplo.\nimport java.util.*; public class Driver { public static void main(String []args) { // Inicialização padrão do Stack Stack stack = new Stack(); // pushing (empurrando) os elementos stack.push(\u0026#34;Burger King\u0026#34;); stack.push(\u0026#34;Subway\u0026#34;); stack.push(\u0026#34;Jack in the Box\u0026#34;); // Imprimindo os elementos da stack System.out.println(stack); } } Saída:\n[\u0026#34;Jack in the Box\u0026#34;, \u0026#34;Subway\u0026#34;, \u0026#34;Burger King\u0026#34;] "
},
{
	"uri": "/pt-br/python-basics/data-types/numbers/",
	"title": "Números",
	"tags": [],
	"description": "",
	"content": "O computador também pode fazer contas. Use print() para imprimir o resultado das expressões matemáticas. Não são necessárias aspas para números! Ao contrário das strings, você pode fazer contas com números.\nprint(7-3) #imprime 4 print(5 * -6 + 7) #imprime -23 print(24 * (8-3) / 6) #imprime 20.0 O computador faz a divisão de números inteiros de maneira diferente da calculadora normal. A divisão de números inteiros excluirá restos ou decimais.\nPor exemplo,\n15/4 resulta em 3 15,0/4,0 resulta em 3,75\nVocê também pode tentar usar os símbolos matemáticos para criar suas próprias expressões!\nSímbolo Operação Símbolo Operação + Adiciona * Multiplica - Subtrai / Divide Desafio 1 Vamos tentar descobrir as respostas para as perguntas a seguir usando Python. Tente imprimir o resultado abaixo (certifique-se de não perder nenhum parênteses):\n2 - 19 (3 + 5) * 6 (13 + 5 * 8) / (6 - (3 + 7)) Desafio 2 Você pode imprimir esta declaração? \u0026quot;527 vezes 199 é: __\u0026quot;\nVocê preencherá o espaço em branco com a resposta sobre o que é (527 * 199). Se quiser imprimir uma string e um número juntos, primeiro você precisa converter o número em uma string.\nAqui está um exemplo: print(\u0026quot;Olá, Mundo!\u0026quot; + str(5))\nUsar str(5) transforma o número na string \u0026quot;5\u0026quot;. Converter um tipo de coisa em outro é chamado de \u0026ldquo;casting\u0026rdquo;.\nCuriosidade: números aleatórios Veja como imprimir um número aleatório entre 1 (inclusive) e 10 (inclusive):\n# Esta linha importa a biblioteca necessária from random import # Esta linha imprime um número aleatório entre 1 (inclusive) e 10 (inclusive) print(randint(1,10)) Quer saber mais? Peça ajuda ou dê uma olhada na internet! O melhor amigo de todo programador é um mecanismo de busca!\nEm particular, tente entender o que significam as palavras from e import. Voltaremos a estas palavras mais tarde durante o projeto.\n"
},
{
	"uri": "/pt-br/java-datastructures/2d-arrays/the-menu/",
	"title": "O Cardápio",
	"tags": [],
	"description": "",
	"content": "Armazenamento de informações do restaurante Vamos relembrar o array de restaurantes que fizemos anteriormente na seção de arrays.\nComo você pode ver, esse conjunto contém todos os diferentes restaurantes do nosso aplicativo. Agora, vamos tentar fazer com que cada restaurante contenha uma variedade de todos os itens do cardápio. Se feito corretamente, o elemento 0 do nosso array, \u0026ldquo;Burger King\u0026rdquo;, deve agora conter seus respectivos itens de cardápio. Pode ser algo assim:\nComo você pode ver, o elemento 0 deve ser nosso array do Burger King. Assim como nos nossos arrays 1D, indexamos a zero os itens de nosso array. Se quiséssemos fazer um pedido de um Whopper, simplesmente chamaríamos Restaurante[0][0]. Isso chamaria nosso array do Burger King e o primeiro elemento desse array, o que é incrível. Se quiséssemos batatas fritas em nosso array, chamaríamos Restaurante[0][2].\nPergunta: Se quiséssemos pedir frango com laranja e frango com laranja fosse o décimo elemento de nosso array do Panda Express, como poderíamos acessar esse elemento?\nSe você respondeu Restaurante[2][9], então você acertou! Panda Express é o terceiro array [2] e frango com laranja é o décimo elemento [9].\n"
},
{
	"uri": "/pt-br/java-datastructures/arrays/operations/",
	"title": "Operações",
	"tags": [],
	"description": "",
	"content": "Criando um array Arrays são usadas para armazenar vários valores em uma única variável, em vez de declarar variáveis ​​separadas para cada valor. Para declarar um array, defina o tipo de variável entre colchetes.\nString[] restaurants; Agora declaramos uma variável que contém um array de strings. Para inserir valores nele, podemos usar um array literal - coloque os valores em uma lista separada por vírgulas, entre chaves:\nString[] restaurants = {\u0026#34;Burger King\u0026#34;, \u0026#34;Chipotle\u0026#34;, \u0026#34;Panda Express\u0026#34;, \u0026#34;Subway\u0026#34;}; Para criar um array de inteiros, você poderia escrever:\nint[] myNum = {10, 20, 30, 40}; Acessando elementos de um array Você acessa um elemento do array referindo-se ao número do index (índice). Esta instrução acessa o valor do primeiro elemento em restaurantes:\nString[] restaurants = {\u0026#34;Burger King\u0026#34;, \u0026#34;Chipotle\u0026#34;, \u0026#34;Panda Express\u0026#34;, \u0026#34;Subway\u0026#34;}; System.out.println(restaurants[0]); // O sistema emitirá \u0026#34;Burger King\u0026#34; Alterando um elemento de array Para alterar o valor de um elemento específico, consulte o número do índice:\nString[] restaurants = {\u0026#34;Burger King\u0026#34;, \u0026#34;Chipotle\u0026#34;, \u0026#34;Panda Express\u0026#34;, \u0026#34;Subway\u0026#34;}; System.out.println(restaurants[0]); // O sistema emitirá \u0026#34;Burger King\u0026#34; restaurants[0] = \u0026#34;McDonalds\u0026#34;; System.out.println(restaurants[0]); // O sistema agora emite \u0026#34;McDonalds\u0026#34; Encontrando o comprimento de um array Para descobrir quantos elementos um array tem, use a propriedade length:\nString[] restaurants = {\u0026#34;Burger King\u0026#34;, \u0026#34;Chipotle\u0026#34;, \u0026#34;Panda Express\u0026#34;, \u0026#34;Subway\u0026#34;}; System.out.println(restaurants.length); // O sistema emitirá 4 Loop através de um array Você pode percorrer os elementos do array com o for loop e usar a propriedade length para especificar quantas vezes o loop deve ser executado. O exemplo a seguir gera todos os elementos da matriz de restaurantes:\nString[] restaurants = {\u0026#34;Burger King\u0026#34;, \u0026#34;Chipotle\u0026#34;, \u0026#34;Panda Express\u0026#34;, \u0026#34;Subway\u0026#34;}; for (int i = 0; i \u0026lt; restaurants.length; i++) { System.out.println(restaurants[i]); } // Saídas: // Burger King // Chipotle // Panda Express // Subway "
},
{
	"uri": "/pt-br/java-datastructures/arrays/problem-1/",
	"title": "Problema 1: Fundamentos de Array",
	"tags": [],
	"description": "",
	"content": "\rTarefa 1: Impressão Criamos uma série de restaurantes existentes em nosso sistema! Precisamos da sua ajuda para imprimir tudo para não incluirmos os mesmos restaurantes.\nUse um loop (laço) for para imprimir o conteúdo do array. Use o método length() para encontrar o tamanho do array. Veja o exemplo abaixo. Se recebermos o array abaixo:\nString[] restaurants = { \u0026#34;Burger King\u0026#34;, \u0026#34;Chipotle\u0026#34;, \u0026#34;Panda Express\u0026#34;, \u0026#34;McDonalds\u0026#34; }; a resposta deve ser impressa:\nString answer = \u0026#34;Burger King,Chipotle,Panda Express,McDonalds\u0026#34;; Iniciar Replit\nTarefa 2: Alterando Elementos Oh não! McDonalds está sem comida! Mude a lista de restaurantes antes que as pessoas comecem a fazer pedidos no McDonalds e fiquem desapontados por não ter comida. Felizmente a \u0026ldquo;Pizza Hut\u0026rdquo; está disposta a ajudar! Substitua o McDonalds pela Pizza Hut no índice.\nInicie Encontre primeiro o índice do McDonalds Lembre-se das citações em torno de \u0026quot;Pizza Hut\u0026quot; Veja o exemplo abaixo! String[] restaurants = {\u0026#34;Burger King\u0026#34;, \u0026#34;Chipotle\u0026#34;, \u0026#34;Panda Express\u0026#34;, \u0026#34;McDonalds\u0026#34;}; //substitua “McDonalds” por “Pizza Hut” Iniciar Replit\n"
},
{
	"uri": "/pt-br/python-basics/data-types/",
	"title": "Tipos de dados",
	"tags": [],
	"description": "",
	"content": "Visão geral Na programação, os tipos de dados são um conceito importante. Variáveis ​​podem armazenar dados de diferentes tipos, e diferentes tipos podem fazer coisas diferentes.\nPython tem os seguintes tipos de dados integrados por padrão, nestas categorias:\nTipo Exemplo Texto str Numérico int, float, complex Sequência list, tuple, range Mapeamento dict Conjunto set, frozenset Booleano bool Binário bytes, bytearray, memoryview Nenhum NoneType Nesta seção, vamos nos concentrar em strings, números e booleanos. Vamos começar!\nTópicos\rStrings Números Booleanos "
},
{
	"uri": "/pt-br/web-basics/basics/",
	"title": "Noções básicas",
	"tags": [],
	"description": "",
	"content": "O que é um site? Um site é apenas uma página que pode ser encontrada na Internet. Ele é exibido por meio de um navegador quando você digita o endereço (também conhecido como unique name) na barra de endereço.\nPartes de um site Os elementos comuns do site incluem barras de navegação, rodapés, barras de pesquisa e formulários de contato.\nDesign do site O primeiro passo para fazer um site é decidir quais elementos queremos e como ficarão. Esse processo é chamado de design de layout e é apenas um esboço de como as diferentes peças vão se unir. Existem muitas ferramentas para ajudá-lo a fazer isso, mas a mais antiga e uma das mais populares é a boa e velha caneta e papel. Veja como esbocei o meu:\nEste esboço é apenas uma orientação. Não há problema em mudar as coisas à medida que começamos a montar tudo. Uma boa sugestão é começar da forma mais simples possível.\n"
},
{
	"uri": "/pt-br/secret-messages/activity-1/",
	"title": "Atividade 1 - Resultado",
	"tags": [],
	"description": "",
	"content": "Primeiro precisamos inserir uma mensagem para que nosso programa possa criar mensagens secretas.\nIniciar Replit\nPara fazer isso vamos começar dizendo ao computador para mostrar no console para quem é aquela mensagem. Este é o comando que usaremos.\ncout \u0026lt;\u0026lt; \u0026#34;Olá desenvolvedor!\u0026#34; \u0026lt;\u0026lt; fim; Vamos aprender mais sobre essa linha de código, certo?\nstring Tudo o que vemos entre aspas (\u0026quot;\u0026quot;) é chamado de strings. Uma string é uma sequência de caracteres, números, letras ou símbolos.\nNa linha de código que escrevemos antes, \u0026quot;Olá desenvolvedor!\u0026quot; é uma string. \u0026quot;123\u0026quot;, \u0026quot;abc!\u0026quot; ou \u0026quot;Olá\u0026quot; também são exemplos de strings. No entanto, 123, abc! ou Olá não são strings, pois não estão entre aspas.\nImprimir no console Para imprimir no console, usamos cout. Cada cout será seguido por \u0026lt;\u0026lt;, enquanto endl significa que chegamos ao fim da linha. Qualquer coisa envolvida por \u0026lt;\u0026lt; será impressa no console. No nosso caso, se clicarmos em Run, a string Olá desenvolvedor! será impressa no console.\nCopie a linha acima e cole no arquivo main.cpp que tínhamos no início. Execute o programa e veja o que acontece. Tente alterar a string para \u0026quot;Olá Mundo!\u0026quot; ou \u0026quot;Pela rainha\u0026quot;.\nAjuda! Se após clicar no botão Run aparecer uma mensagem de erro em vermelho, significa que há algo errado com seu código. Por favor, peça ajuda ao seu instrutor.\nVocê também deve verificar o seguinte:\nCertifique-se de que a ortografia, letras maiúsculas e símbolos utilizados correspondam ao exemplo dado. Certifique-se de adicionar um ponto e vírgula no final de cada linha de código. "
},
{
	"uri": "/pt-br/python-turtle/the-basics/",
	"title": "Os Fundamentos – Desenhando uma linha colorida",
	"tags": [],
	"description": "",
	"content": "Antes que Alex possa aprender como criar uma colmeia, ele deve primeiro aprender a desenhar uma linha colorida. Adicionaremos código à janela do Trinket abaixo e faremos isso em duas partes.\nPrimeiro, precisamos dizer à tartaruga qual a cor que queremos que a linha tenha. Para fazer isso, vamos digitar:\nturtle.color(\u0026#34;orange\u0026#34;) Vamos entender esta linha de código com mais detalhes.\nStrings Tudo o que você vê entre aspas é chamado de string. Uma string é apenas uma sequência de caracteres (sejam letras, números ou símbolos).\nNo código acima, \u0026quot;orange\u0026quot; é uma string. Outros exemplos de strings incluem \u0026quot;123\u0026quot;, \u0026quot;abc!\u0026quot; e \u0026quot;green\u0026quot;. Tenha cuidado, 123, abc! e green não são strings porque faltam aspas!\nMétodos turtle.color() é um método. Usamos métodos para fazer com que a tartaruga execute certas ações. Neste caso, turtle.color() está mudando a cor das linhas que desenha para a cor que indicamos. Dissemos para ele mudar a cor para laranja enviando a string \u0026quot;orange\u0026quot; como um argumento.\nArgumentos Argumentos são entradas que você passa para métodos usar. Em nosso exemplo, \u0026quot;turtle.color() precisa de um argumento string representando o nome da cor para definir a tartaruga, então passamos \u0026quot;orange\u0026quot; como um argumento para o método. Também poderíamos ter dito para mudar a cor para outra coisa, mas tem que ser uma cor que turtle.color() entenda. As cores que ele reconhece são: \u0026quot;red\u0026quot;, \u0026quot;orange\u0026quot;, \u0026quot;yellow\u0026quot;, \u0026quot;green\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;purple\u0026quot;, \u0026quot;black\u0026quot;, \u0026quot;pink\u0026quot; e \u0026quot;gray\u0026quot;. Se enviarmos qualquer outra coisa além de uma dessas sequências de cores, obteremos a cor padrão, que é preto.\nAgora que escolhemos a cor que queremos, podemos traçar uma linha! Para traçar uma linha, existem dois métodos que podemos usar:\nturtle.forward(50) turtle.backward(50) turtle.forward(50) fará com que a tartaruga avance 50 pixels e desenhe uma linha na direção para a qual está voltada, enquanto turtle.backward(50) fará o mesmo, mas na direção oposta.\nPixels Uma imagem é composta por milhares, senão milhões de pixels. Um pixel é uma unidade de medida para imagens digitais, semelhante à forma como medimos o peso em gramas ou longas distâncias em quilômetros.\nInteiros Um número inteiro é qualquer número inteiro, seja positivo ou negativo. Neste exemplo, turtle.forward() e turtle.backward() esperam um inteiro como argumento em vez de uma string. Isso ocorre porque o argumento representa o número de pixels que você deseja que a tartaruga mova ao desenhar. Uma string claramente não funcionaria para esses métodos!\nVamos fazer a tartaruga avançar, então digite turtle.forward(50). Agora seu código deve ficar parecido com isto:\nimport turtle turtle.color(\u0026#34;orange\u0026#34;) turtle.forward(50) Agora que completamos nosso código, pressione run. Você deverá ver o seguinte na tela de resultados:\nSe sim, ótimo! Caso contrário, peça ajuda.\nComo exercício, tente entender o que a linha de código a seguir faz e tente adicionar isso ao seu código. O que isso faz?\nturtle.shape(\u0026#34;turtle\u0026#34;) ME AJUDE! Nada aparece na tela! Se, depois de pressionar run, você não ver nada na tela, verifique se há um x vermelho ao lado da aba console (a aba console é ao lado da guia result no meio da tela). Se você fizer isso, você encontrou alguns erros! Clique na guia console e peça ajuda. Cuidado com o seguinte ao codificar em python:\nNão use letras maiúsculas. Certifique-se de que nenhuma das linhas que você escreveu até agora comece com espaços. Certifique-se de que o nome da cor escolhida esteja entre aspas e que a cor esteja entre parênteses em turtle.color(). "
},
{
	"uri": "/pt-br/java-datastructures/introduction/setting-up/",
	"title": "Configurando",
	"tags": [],
	"description": "",
	"content": "\rConfigurando Replit! Hoje você usará o Replit para aprender sobre estruturas de dados com Java. Antes de começar, você precisará se inscrever em uma conta Replit, caso ainda não tenha uma.\nClique no botão abaixo para se inscrever em uma conta Replit - você precisará de uma conta de e-mail para se inscrever. Se você já possui uma conta Replit, também pode fazer login em sua conta usando o botão abaixo.\nCadastre-se no Replit\nA seguir, inicie o console Replit que usaremos hoje clicando no botão abaixo. Você deverá ver a tela abaixo.\nIniciar Replit\nAgora faremos um fork do Repl, que significa simplesmente fazer uma cópia do programa, para que possamos fazer nossas próprias alterações nele. Clique no botão \u0026ldquo;Fork Repl\u0026rdquo; no canto superior direito e depois no botão \u0026ldquo;Fork Repl\u0026rdquo;.\nApós bifurcar o Replit, você verá uma janela semelhante a esta abaixo:\nCada vez que você vir o botão \u0026ldquo;Iniciar Replit\u0026rdquo;, você precisará seguir as etapas acima para bifurcar o repl e concluir uma atividade. Peça ajuda se estiver tendo problemas para bifurcar as respostas!\nAntes de começarmos, vamos primeiro entender como funciona o Replit. O arquivo main.java contém código ou instruções para o computador funcionar. Ao pressionar o botão run, você instrui o computador a executar as instruções do código. Quaisquer resultados da execução do código serão exibidos na tela branca inferior, na guia resultado.\nPara aprender como codificar as estruturas de dados, usaremos o Replit para testar suas habilidades. Pressione executar e tente completar as seguintes tarefas!\nIniciar Replit\n"
},
{
	"uri": "/pt-br/python-earsketch/music-basics/",
	"title": "Fundamentos de Música",
	"tags": [],
	"description": "fundamentos de Música",
	"content": "Os fundamentos primeiro. Algumas coisas sobre música. O que é música? Música\ré a organização cronológica de sons; isto é, emitir certos sons em determinados momentos, que tenham sentido melódico, rítmico e harmônico. O primeiro conceito, mais básico, é manter os sons “no tempo”. Isso nos leva a alguns dos primeiros conceitos musicais: batida, ritmo, duração e tempo.\nBatida (Beat) é o pulso regular que fornece uma linha do tempo para o ritmo para se ancorar. Ritmo (Rhythm) é essencialmente padrões repetidos de sons ou silêncios longos ou curtos, acentuados ou átonos, que se encaixam na batida principal. Duração (Duration) é a duração das notas ou sons ou silêncios que facilitam o ritmo. Tempo é a velocidade com que uma peça musical é tocada. "
},
{
	"uri": "/pt-br/python-basics/conditional-statements-loops/else-if-statement/",
	"title": "Condição Else-if",
	"tags": [],
	"description": "",
	"content": "No último exercício, aprendemos condições if-else básicas. Se precisar de uma atualização rápida, você pode revisar Declarações condicionais.\nNesta seção, expandiremos para introduzir uma nova condição chamada “elif”.\nCondição Elif A palavra-chave Elif representa a condição \u0026ldquo;else-if\u0026rdquo;. Um exemplo do mundo real seria: Se eu estiver com muita fome, comerei um bolo; caso contrário, se estiver com um pouco de fome, comerei uma maçã; caso contrário, não comerei nada. Você pode ver que é usado quando deseja tentar outra condição se a primeira não for verdadeira.\n# Esta é a sintaxe básica do elif if expressão1: declaração1 elif expressão2: declaração2 else: declaração3 Vamos ver um exemplo # Isto é um exemplo if 1 \u0026gt; 3: print(\u0026#39;1\u0026gt;3\u0026#39;) elif 1 == 3: print(\u0026#39;1=3\u0026#39;) else: print(\u0026#39;1\u0026lt;3\u0026#39;) Como podemos ver que a primeira afirmação, 1 maior que 3, é falsa, ela é avaliada como false. O interior da instrução if não será executado então. Avaliaremos então a instrução elif, 1 é igual a 3, que também é avaliada como false. O interior do elif não será executado. Então o que estiver em else será impresso.\nAviso: elif é diferente de if Vamos ver dois exemplos Exemplo A # Este é o Exemplo A de duas instruções if if 1 == 1: print(\u0026#39;1=1\u0026#39;) if 3 == 3: print(\u0026#39;3=3\u0026#39;) else: print(\u0026#39;wrong\u0026#39;) O Exemplo A imprimirá:\n1 = 1\r3 = 3 Exemplo B # Este é um exemplo de instruções Elif if 1 == 1: print(\u0026#39;1=1\u0026#39;) elif 3 == 3: print(\u0026#39;3=3\u0026#39;) else: print(\u0026#39;wrong\u0026#39;) O Exemplo B imprimirá:\n1 = 1 No Exemplo A, avaliaremos a primeira instrução if (1==1) como verdadeiro. O interior da primeira instrução if será executado então. Avaliaremos então a segunda instrução if (3==3) como verdadeiro também. O interior da segunda instrução if também será executado.\nNo Exemplo B avaliaremos a primeira instrução if (1==1) como verdadeiro. Então a parte restante de elif e else não será avaliada, pois if já está correto.\nDesafio Você pode utilizar o conhecimento que aprendeu em Python:Fundamentos-booleanos para criar seu próprio exemplo para elif? Você pode querer revisar o booleano para terminar este desafio.\nBooleanos "
},
{
	"uri": "/pt-br/arduino/setting-up-the-pc/",
	"title": "Configurar o PC",
	"tags": [],
	"description": "",
	"content": "Conhecendo o IDE do Arduino Baixe e instale o IDE do Arduino de:\na Microsoft Store (instalação mais rápida) - https://www.microsoft.com/store/productId/9NBLGGH4RSD8\rou do site do Arduino https://www.arduino.cc/en/Main/Software\r(escolha a versão mais recente) Uma vez que o software tenha sido instalado no seu computador, vá em frente e abra-o. Este é o IDE do Arduino e é o local onde toda a programação vai acontecer. Reserve algum tempo para olhar ao redor e se sentir confortável com isso.\nhttps://www.makerspaces.com/simple-arduino-projects-beginners/\rBarra de menus: Dá acesso às ferramentas necessárias para criar e salvar esboços Arduino. Botão Verificar: Compila seu código e verifica se há erros de ortografia ou sintaxe. Botão Upload: Envia o código para a placa que está conectada, como o Arduino Uno, neste caso. As luzes na placa piscarão rapidamente durante o upload. Novo esboço: Abre uma nova janela contendo um esboço em branco. Nome do esboço: Quando o esboço é salvo, o nome do esboço é exibido aqui. Abrir esboço existente: Permite que você abra um esboço salvo ou um dos exemplos armazenados. Salvar esboço: Isso salva o esboço que você tem aberto no momento. Monitor serial: Quando a placa estiver conectada, isso exibirá as informações seriais do seu Arduino Área de Código: Esta área é onde você compõe o código do esboço que diz ao quadro o que fazer. Área de mensagem: Esta área informa o status sobre como salvar, compilar código, erros e muito mais. Console de texto: Mostra os detalhes de uma mensagem de erro, tamanho do programa que foi compilado e informações adicionais. Placa e porta serial: informa qual placa está sendo usada e a qual porta serial ela está conectada. Ligue o seu Arduino Neste ponto, você está pronto para conectar seu Arduino ao seu computador. Conecte uma extremidade do cabo USB ao Arduino Uno e, em seguida, a outra extremidade do USB à porta USB do seu computador.\nUma vez que a placa está conectada, você precisará ir para Ferramentas, em seguida, Board e, finalmente, selecione Arduino Uno.\nEm seguida, você deve informar ao Arduino qual porta você está usando no seu computador.\nPara selecionar a porta, vá para Ferramentas e, em seguida, Porta e, em seguida, selecione a porta que diz Arduino.\n"
},
{
	"uri": "/pt-br/adafruit/building-the-dj-station/",
	"title": "Construindo uma estação de DJ",
	"tags": [],
	"description": "",
	"content": "Ligando as laranjas Pegue uma laranja e um de seus fios. Abra uma das garras jacaré e insira a parte inferior na laranja, deixando a parte superior da garra visível para fora. Será mais fácil de fazer se você inseri-lo no parte central inferior da laranja. O mesmo local onde você começaria a descascar se fosse comer a laranja.\nRepita o mesmo para a segunda laranja usando o outro fio. Conecte uma laranja a entrada A1 e a outra a entrada A2. Agora que tudo está conectado, sua laranja ficará assim! Usando o cabo USB, conecte o lado pequeno a placa arduíno. Ele ficará conectado a porta prateada. Agora vamos criar o nosso programa antes de conectar a placa arduíno ao computador! Atenção: Certifique-se de que seu computador está MUDO antes de começar.\n"
},
{
	"uri": "/pt-br/security/password-basics/",
	"title": "Fundamentos de Senhas",
	"tags": [],
	"description": "",
	"content": "Nossa Agente Secreta Alice resolve o caso explicando ao Bob sobre Senhas!!!\nO que é uma senha? As senhas são a chave para a fechadura do seu mundo virtual. Assim como seu segredo é mantido em segurança em uma sala segura usando um cadeado e uma chave, suas informações pessoais na Internet são protegidas por sua senha de login e nome de usuário.\nUma sala segura é tão segura quanto a fechadura da porta. Precisamos de senhas mais fortes para proteger nossos dados e identidade on-line contra pessoas mal-intencionadas conhecidas como Hackers.\nO que deu errado? As senhas precisam ser privadas e só devem ser conhecidas por você. Uma senha forte é aquela que é mais segura porque é difícil para uma máquina ou um ser humano adivinhar.\nExemplos de senhas fracas Qualquer palavra comum do dicionário, em qualquer idioma (por exemplo, “avião” ou “Senha”). Uma palavra de dicionário onde as letras são substituídas por números (por exemplo, \u0026ldquo;av1a0\u0026rdquo; ou \u0026ldquo;S3nh@\u0026rdquo;). Um conjunto repetido de caracteres (por exemplo, \u0026ldquo;AAAAA\u0026rdquo; ou \u0026ldquo;12345\u0026rdquo;). Uma série de caracteres do teclado (por exemplo, \u0026ldquo;qwerty\u0026rdquo; ou \u0026ldquo;poiuy\u0026rdquo;). Informações pessoais (por exemplo, aniversários, nomes de animais de estimação ou amigos, número do Seguro Social, endereços). Qualquer coisa que esteja anotada e armazenada em algum lugar próximo ao seu computador. A chave de Bob (sua senha) era sua informação pessoal e, portanto, Eve poderia adivinhá-la.\nComo corrigi-lo? Usando senhas mais fortes. Vamos aprender como tornar uma senha forte e fácil de lembrar. Não queremos esquecer isso, queremos?\n"
},
{
	"uri": "/pt-br/python-basics/conditional-statements-loops/loops/",
	"title": "Loops",
	"tags": [],
	"description": "",
	"content": "Loops em Python Se você quiser repetir uma tarefa várias vezes, o Python tem uma maneira de fazer isso facilmente usando loops (laços). Existem dois tipos de loops básicos em python: loops for e loops while.\nFor loops Os loops For iteram sobre uma sequência. Digamos que você queira repetir uma tarefa simples 5 vezes. Aqui está como você faria isso.\nO loop for a seguir itera cada um dos números da lista [1,2,3,4,5] e atribui o valor x a ele. Em seguida, ele executa o código dentro do loop for.\nfor x in [1,2,3,4,5]: print(\u0026#34;Estamos no número do loop\u0026#34;,x) E se você quisesse repetir uma tarefa 10 vezes? 100 vezes? 1000 vezes??\nSeria difícil escrever uma lista com 1000 números [1,2,3,4,5,6,\u0026hellip;\u0026hellip;\u0026hellip;.,998,999,1000]. Existe uma função que pode criar essa lista para você.\nAqui está um exemplo de como criar a lista usando a função range:\nO código abaixo cria uma lista começando em 1 e terminando em 10.\nrange(1,11) Agora tente substituir a lista [1,2,3,4,5] no exemplo acima por esta função de intervalo!\nA lista no loop for não precisa ser apenas números, pode ser qualquer coisa! Aqui está outro exemplo do que você pode fazer com isso:\nfruits = [\u0026#34;apple\u0026#34;,\u0026#34;banana\u0026#34;,\u0026#34;orange\u0026#34;] for x in fruits: print(x) While loops Embora os loops sejam semelhantes aos loops for, mas em vez de iterar sobre uma sequência, eles se repetem enquanto uma determinada condição for atendida. Por exemplo, vamos criar um loop while que se repete 5 vezes.\ncount = 0 while count \u0026lt; 5: print(\u0026#34;A contagem atual é\u0026#34;, count) count += 1 #Isso é a mesma coisa que count = count + 1 Como você pode ver, todo o código abaixo do loop while é executado desde que a contagem da variável seja menor que 5.\nTome cuidado! Certifique-se de que a condição se torne Falsa em algum momento, ou o loop continuará infinitamente.\nDeclarações de quebra Você aprendeu anteriormente que os loops for e while continuam iterando sobre uma sequência até chegar ao fim ou até que uma condição seja atendida.\nExiste outra maneira de interromper a execução desses loops antes do final da lista ou antes que uma condição seja atendida.\nVocê pode fazer isso com a instrução break. Isso permite que você saia do loop em um loop for ou while.\nAqui está um exemplo com um loop while:\ncount = 0 while True: #Isso fará com que o loop while seja executado para sempre! a menos que haja uma instrução break em algum lugar do loop. print(\u0026#34;contagem é\u0026#34;, count) if (count == 10): #Isso diz que se count é igual a 10, então saia do loop while print(\u0026#34;Saindo do loop!\u0026#34;) break count += 1 # isso é igual a count = count + 1 Desafios Dada uma lista de alimentos, escreva um programa que escreva “Eu gosto de [nome do alimento]”, a menos que seja o menos favorito do usuário, o que você pede no início. foodList = [\u0026#34;maçãs\u0026#34;, \u0026#34;sorvete\u0026#34;, \u0026#34;pizza\u0026#34;, \u0026#34;bananas\u0026#34;, \u0026#34;cenouras\u0026#34;, \u0026#34;abóbora\u0026#34;, \u0026#34;pepinos\u0026#34;, \u0026#34;sanduíche\u0026#34;, \u0026#34;aveia\u0026#34;, \u0026#34;biscoitos\u0026#34;, \u0026#34;bolo\u0026#34;, \u0026#34;espinafre \u0026#34;, \u0026#34;couve\u0026#34;] Dada uma lista grande como a mostrada abaixo, escreva um programa que possa encontrar um número específico dessa lista. numList = [69, 430, 363, 80, 166, 476, 250, 38, 84, 405, 41, 302, 480, 57, 155, 17, 350, 87, 313, 36, 191, 367, 163, 167, 185, 93, 131, 314, 444, 452, 47, 457, 28, 21, 405, 350, 241, 121, 411, 152, 244, 207, 199, 371, 193, 4, 286, 482, 496, 283, 23, 466, 8, 84, 47, 231, 112, 329, 328, 85, 208, 161, 42, 251, 277, 207, 496, 3, 137, 138, 436, 447, 442, 313, 479, 464, 191, 19, 78, 333, 480, 36, 378, 232, 438, 451, 139, 444, 392, 75, 245, 151, 225, 50, 369, 49, 73, 325, 430, 335] Por exemplo, peça ao usuário para inserir um número no console e, em seguida, escreva no console se ele for encontrado. Dica: Você precisará converter as informações inseridas pelo usuário em um número inteiro usando int(x).\nPergunta Como você mudaria este programa se a lista fosse muito grande? Se você encontrou um número, precisa continuar pesquisando no restante da lista?\n"
},
{
	"uri": "/pt-br/security-phishing/phishing-basics/",
	"title": "Phishing Basics",
	"tags": [],
	"description": "",
	"content": "Our Secret Agent Alice explains to Bob about Phishing!!!\nWhat is Phishing? Just like when fishing, one uses a bait to catch fish on a rod, malicious hackers use different types of bait to steal personal information from unsuspecting people.\nPhishing is a type of social engineering attack which is used to steal sensitive data, including login credentials, banking and credit card details.\nIt occurs when a Hacker, posing as a trusted entity, lures an individual using email, text message, or phone.\nThe recipient is then tricked into clicking a malicious link, which can lead to the installation of a malicious software, or revealing of sensitive data.\nWhat went wrong? Bob was enticed by an email from a hacker named Eve offering him a free trip to Bahamas to steal his personal information.\nA closer look Alice helps Bob understand the red flags in his email by taking a detailed look!\nNote: There are times when you need to provide personal information to a trusted recipient. However, providing personal information can also lead to phishing. In this workshop we will understand how to differentiate between a legitimate email and a scam email.\n"
},
{
	"uri": "/pt-br/python-basics/data-structures/tuples/",
	"title": "Tuplas",
	"tags": [],
	"description": "",
	"content": "Uma tupla também é uma coleção ordenada de elementos, assim como as listas, mas as tuplas são imutáveis. Portanto, você não pode alterar os elementos de uma tupla depois que ela for atribuída (ao contrário das listas onde você tem permissão para fazer isso). Essa natureza imutável torna as tuplas muito úteis quando você não deseja que seus dados sofram mutação ao longo do programa. Junto com isso, as tuplas geralmente são usadas para armazenar elementos de diferentes tipos de dados. Onde você definiu uma lista usando colchetes ([]), uma tupla pode ser criada colocando todos os elementos entre parênteses (), separados por vírgulas.\n#criando uma tupla de dois elementos do tipo String my_tuple = (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;) Tuplas também podem ser criadas sem parênteses. No entanto, é uma boa prática usá-los.\nA tupla também pode ter elementos de diferentes tipos.\n#Uma tupla contendo elementos de diferentes tipos de dados my_tuple = (\u0026#39;maçã\u0026#39;, 1, 4.5) Acessando os elementos de uma tupla Podemos acessar os elementos de uma tupla usando índices entre colchetes [], assim como a lista. Além disso, assim como as listas, o índice começa em 0.\n#criando uma tupla de três elementos do tipo String my_tuple = (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;, \u0026#39;manga\u0026#39;) print(my_tuple[0]) ## imprime maçã print(my_tuple[2]) ## imprime manga Combine duas tuplas Podemos combinar duas tuplas usando o operador +.\nfrutas = (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;, \u0026#39;manga\u0026#39;) números = (1, 2, 3) #Combine duas tuplas de frutas e números combined_tuple = frutas + números print(combined_tuple) ## imprime (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;, \u0026#39;manga\u0026#39;, 1, 2, 3) Comprimento de uma tupla A função len(tuple) fornece o número de elementos presentes na tupla.\nfrutas = (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;, \u0026#39;manga\u0026#39;) print(len(frutas)) ## imprime 3 Reatribuir uma tupla Como as tuplas são imutáveis, não podemos alterar um elemento da tupla. Então frutas[0] = 'limão' dará um erro, pois aqui estamos tentando alterar o elemento no índice 0 de \u0026lsquo;frutas\u0026rsquo;. Mas podemos reatribuir uma tupla (substituir a tupla inteira).\nmy_tuple = (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;, \u0026#39;manga\u0026#39;) print(my_tuple) ## imprime (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;, \u0026#39;manga\u0026#39;) # renunciando my_tuple my_tuple = (1, 2, 3) print(my_tuple) ## imprime (1, 2, 3) Excluindo uma tupla Podemos excluir totalmente uma tupla usando a palavra-chave del.\nfrutas = (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;, \u0026#39;manga\u0026#39;) print(frutas) ## imprime (\u0026#39;maçã\u0026#39;, \u0026#39;laranja\u0026#39;, \u0026#39;manga\u0026#39;) # Excluindo frutas del frutas print(frutas) ## Dá ERRO porque a tupla de frutas não está mais presente Desafio Vamos tentar o mesmo exercício que fizemos com Listas, mas usando Tuplas.\nComece com a lista de frutas abaixo. Imprima a lista de frutas e para cada fruta, conforme o usuário gosta. Se eles gostarem, fique com ele. Caso contrário, remova-o da lista. Em seguida, peça ao usuário para adicionar uma fruta que esteja faltando na lista. Adicione à lista e imprima a quantidade de frutas que o usuário gosta.\nfrutas = [\u0026#39;laranja\u0026#39;, \u0026#39;kiwi\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;, \u0026#39;limão\u0026#39;] "
},
{
	"uri": "/pt-br/linux-basics/launch-vm/",
	"title": "Iniciando uma Máquina Virtual",
	"tags": [],
	"description": "Continuação do guia introdutório sobre máquinas virtuais",
	"content": "\rAgora que tudo está instalado, vamos iniciar a nossa máquina virtual!\rIniciando uma Máquina Virtual Iniciar uma VM é bem simples no VirtualBox. Basta clicar duas vezes na máquina virtual que criamos na etapa anterior e pronto!\nÀ medida que a máquina virtual está sendo iniciada, poderemos notar alguns avisos como na imagem a seguir. É seguro ignorá-los.\nAcessando a nossa Máquina Virtual Primeiro precisaremos acessar a nossa máquina virtual. Usaremos estas credenciais para começar!\nUsuário Senha nuvi nuevo123 Esta não é uma forma segura de compartilhar senhas! Ela destina-se apenas aos propósitos deste minicurso. Não use senhas simples suas contas pessoais nem as compartilhe com ninguém!\nAprenderemos mais sobre senhas em nosso minicurso de segurança!\nMinicurso de Segurança\rO Terminal Em todas as nossas atividades, estaremos praticando as nossas habilidades em linha de comando (CLI). É bom aprender a CLI porque pode ser mais rápido e eficiente do que usar uma GUI. GUI é a interface gráfica de usuário, que é provavelmente o que você mais costuma fazer em um computador. Agora vamos abrir o nosso terminal, que é outro nome para a CLI. Em Kali este aplicativo é chamado de \u0026ldquo;Emulador de Terminal\u0026rdquo;.\nApós clicar no botão, o terminal deverá abrir como na imagem abaixo. Uma vez aberto, você finalmente está pronto para desenvolver suas habilidades sobre o Linux!\n"
},
{
	"uri": "/pt-br/python-basics/conditional-statements-loops/",
	"title": "Instruções condicionais e loops",
	"tags": [],
	"description": "",
	"content": "Visão geral Na seção anterior você aprendeu sobre impressão, comentários e variáveis. Nesta seção, apresentaremos o conceito de instruções condicionais e como aplicá-las em python. Declarações condicionais são aquelas como \u0026ldquo;Se estou com fome, como um lanche\u0026rdquo; e \u0026ldquo;Coma um lanche enquanto estiver com fome\u0026rdquo;.\nVamos começar!\nTópicos\rDeclarações condicionais Condição Else-if Loops Nested Loops "
},
{
	"uri": "/pt-br/java-basics/activity-2/",
	"title": "Variáveis ​​e Tipos",
	"tags": [],
	"description": "Apresente tipos e variáveis ​​em Java.",
	"content": "\nVariáveis: Nomeie-as! No último exercício, aprendemos a imprimir diferentes declarações com System.out.print().\nEmbora seja ótimo imprimir um número ou uma frase, não lhes demos um significado.\nEm Java, introduzimos a ideia de uma variável para dados. Uma variável é como uma caixa que armazena um dado com um nome.\nPor exemplo, pode haver uma variável chamada myName que armazenou \u0026quot;Patrick\u0026quot;, outra variável chamada loveMusic que armazenou true e outra variável chamada age que armazenou 3. Assim como a imagem abaixo:\nQual é o tipo! Então, como criamos essas caixas ou variáveis ​​em Java para armazenar dados?\nAntes de aprender como criar variáveis, precisamos aprender o conceito de tipo em Java. Tipo em Java descreve o que está sendo armazenado na caixa. Se você tiver uma caixa de inteiros, ela conterá apenas números inteiros, não frases ou símbolos. Cada variável possui seu próprio tipo que a restringe ao armazenamento de um tipo específico de dados.\nPor exemplo, a variável chamada age que armazena o número 3 deve conter números inteiros, não sentenças ou símbolos.\nEm Java, uma variável que armazena números inteiros é do tipo int. Declaramos uma variável int chamada age com dados 3 usando a linha de código:\nint age = 3; Em geral, para declarar uma variável nós as escrevemos no formato: [tipo de dados] [nome da variável] = [dado];.\nA seguir estão os tipos de dados importantes que foram integrados em Java:\nTipo Descrição Exemplos int inteiro 20, 30, 35 char caractere, como um símbolo ou uma única letra do alfabeto 'A','b', '(', ']' String uma sequência de char \u0026quot;Hello\u0026quot;, \u0026quot;Hola\u0026quot;, \u0026quot;Olá\u0026quot; boolean tem o valor de verdadeiro (true) ou falso (false) true or false true, false double números fracionados 2.0, 3.14, 9.33 Vamos revisitar as três variáveis ​​de que falamos e identificar seus tipos de dados.\nPara declarar essas variáveis ​​em Java, digitamos o seguinte:\nString name = \u0026#34;Patrick\u0026#34;; int age = 10; boolean loveMusic = true; Qual é o tipo - Ajude Patrick! Patrick 🐥 não é um mestre em tipos de dados! Ele frequentemente os confundia ao declarar variáveis. Vamos ajudá-lo a corrigir seu erro:\nLaunch Replit\nAo armazenar dados em variáveis, você pode usar esses dados posteriormente ou alterá-los, atribuindo-os a dados diferentes do mesmo tipo. Por exemplo:\nint age = 10; System.out.println(age); // imprime 10 age = 11; // atribui o valor 11 para a variável age System.out.println(age); // imprime 11 Qual o tipo? \u0026ndash; Acompanhe os Números! Agora considere o seguinte código. Qual você acha que é a saída? Acompanhe os valores de cada variável e teste-os abaixo!\ndouble x = 2.3; double y = 10.0; int z = 4; x = y; y = x; z = 0; z = z; System.out.println(\u0026#34;x: \u0026#34; + x + \u0026#34; y: \u0026#34; + y + \u0026#34; z: \u0026#34; + z ); Launch Replit\nExplicando o exemplo Nas linhas 1-3 declaramos as variáveis ​​e definimos os valores iniciais para x (2.3), y (10.0) e z (4). Na linha 4, definimos x com o valor de y (10.0). Na linha 5, definimos y como o valor de x, que foi definido como 10.0 (10.0). Na linha 6, definimos z como 0. Na linha 7, definimos z com o valor de z, que é 0 (0).\n"
},
{
	"uri": "/pt-br/android-tictactoe/app-structure/",
	"title": "Estrutura do Aplicativo de Jogo",
	"tags": [],
	"description": "",
	"content": "De volta às Fundações Agora que o jogo tem o título certo, vamos mergulhar mais fundo em todos esses arquivos na pasta do jogo. O que eles significam? Como eles contribuem para o jogo? AndroidManifest.xml Todo projeto no Android inclui um arquivo de manifesto. Para o seu jogo, este é o arquivo AndroidManifest.xml. O arquivo de manifesto define os metadados para o seu jogo, por exemplo, pode definir o ícone e o tema geral para o aplicativo do seu jogo.\nactivity_main.xml Este arquivo está localizado na pasta \u0026ldquo;layout\u0026rdquo;. Como o nome da pasta indica, os arquivos nesta pasta definem como seu aplicativo se parece. Se você olhar o código para activity_main.xml, verá palavras-chave como TableLayout ou TableRow. A combinação de palavras-chave no arquivo activity_main.xml cria o layout para os botões de escolha do jogo (Jogador vs Jogador ou Jogador vs Computador), o tabuleiro do jogo da velha e o botão de reiniciar. A palavra-chave TableLayout diz que o layout será alinhado ao estilo de tabela, que inclui colunas e linhas. A palavra-chave TableRow cria uma nova linha no layout, com cada elemento adicional correspondendo a um local nessa linha: MainActivity.kt Este arquivo está localizado na pasta \u0026ldquo;java\u0026rdquo;. O arquivo contém o código e a lógica para o seu aplicativo.\ncolors.xml, strings.xml, styles.xml Esses arquivos estão localizados na pasta \u0026ldquo;values\u0026rdquo;. Os arquivos contêm valores que podem ser referenciados por outros arquivos XML e código do aplicativo.\nJuntando tudo Todos esses arquivos trabalham juntos para criar seu jogo. O arquivo activity_main.xml decide o que é mostrado para você. Quando você clica nos botões, eventos são enviados do activity_main.xml para o MainActivity.kt para determinar o que acontece nesse clique de botão. Para valores repetíveis, activity_main.xml e MainActivity.kt podem acessar colors.xml, strings.xml ou styles.xml para usar esses valores a partir de um local conveniente.\n"
},
{
	"uri": "/pt-br/supply-chain-analytics/linearoptimizationbasics/",
	"title": "Otimização Linear - Os Fundamentos",
	"tags": [],
	"description": "",
	"content": "O que é otimização? Definição oficial: Um modelo matemático de otimização consiste em uma função objetiva e um conjunto de restrições na forma de um sistema de equações ou desigualdades.\nA otimização linear pode parecer muito complicada – e pode ser. Mas para começar, você só precisa entender algumas coisas.\nOtimização A otimização é como você toma a decisão mais eficiente quando tem recursos limitados. Por exemplo, quando você tem apenas um período limitado de tempo permitido para jogar no Xbox, você quer ter certeza de que está jogando seu jogo favorito durante a maior parte do tempo para usar seu tempo com eficiência.\nEm um problema de otimização, você escreve uma fórmula matemática para representar restrições do mundo real, como tempo de computador ou número de ovos. (Acho que afinal usamos álgebra)!\nHoje em dia, você pode usar Excel ou Python para resolver esses problemas sem realmente escrever as equações.\nExistem três partes principais que você precisa aprender: variáveis ​​de decisão, função objetiva e restrições.\nVariáveis ​​de decisão Estas são as variáveis ​​que você deseja otimizar (como número de ovos). O computador resolverá isso para você e recomendará a quantidade ideal.\nFunção objetiva Esta é a equação que descreve qual é o seu objetivo. Por exemplo, você pode querer maximizar a quantidade de dinheiro que ganha em sua padaria. Como você calcula a quantidade de dinheiro que ganhará? É o lucro de cada cookie multiplicado pela quantidade de cookies que você fará (é aqui que as variáveis ​​de decisão entram em jogo!)\nRestrições Estas são as limitações que você tem. Por exemplo, se você tiver um número limitado de ovos, certifique-se de que o total de ovos usados ​​seja menor ou igual ao número de ovos disponíveis. É assim que você forma sua equação.\n"
},
{
	"uri": "/pt-br/java-datastructures/2d-arrays/",
	"title": "Arrays 2D: Menu",
	"tags": [],
	"description": "",
	"content": "Agora que todos os nossos restaurantes estão organizados em um vetor (array) para que nossos clientes possam ver, precisamos dar aos clientes acesso aos itens do menu de cada restaurante! Para conseguir isso, nos aventuraremos no mundo dos vetores (arrays) multidimensionais!\n"
},
{
	"uri": "/pt-br/python-basics/data-types/booleans/",
	"title": "Booleanos",
	"tags": [],
	"description": "",
	"content": "Booleanos são declarações True ou False (Verdadeiro ou Falso). Ao contrário de strings ou números, os booleanos armazenam declarações de verdade: o que estou dizendo é verdadeiro ou falso?\nPor exemplo, se eu disser “Você é um robô”, um booleano pode armazenar se esta afirmação é verdadeira. Neste caso, como você não é um robô (espero!), False seria armazenado.\nQuais são as respostas booleanas a essas perguntas sobre você?\nEu sou humano. _______ Tenho 25 dedos. _______ Gosto de biscoitos. _______ Minha cor favorita é azul. ______ As formas mais comuns de operadores booleanos são comparações como menor ou maior que. Como eles são escritos em python está listado abaixo.\nOperador Descrição Operador Descrição \u0026lt; Menor que \u0026gt; Maior que \u0026lt;= Menor que ou igual a \u0026gt;= Maior que ou igual a == Igual a != Diferente de Desafio 1 Como de costume, use print para imprimir seus resultados da seguinte forma: Diferente de\nprint(5 + 8 \u0026lt; 10) print((3 + 5) * 6) == (65 - 17) A primeira instrução deve retornar False. E o segundo deve retornar True.\nDesafio 2 Tente imprimir as respostas para as seguintes expressões usando print. Se os resultados de alguma dessas afirmações não fizerem sentido, peça ajuda!\n54 \u0026lt; (10 + 32) (37 / 5) != 7 \u0026ldquo;Olá\u0026rdquo; + \u0026ldquo;Mundo\u0026rdquo; == \u0026ldquo;Olá Mundo\u0026rdquo; False == False Desafio 3 Tente fazer suas próprias expressões!\nCuriosidade: Conectando Booleanos com operadores AND e OR Você também pode conectar expressões booleanas usando os operadores AND e OR. Aqui está um gráfico que descreve o que acontece quando conectamos booleanos:\nExpressão Resultado True and True True True and False False False and True False False and False False True or True True True or False True False or True True False and False False Para resumir, AND (e) requer que ambas as expressões booleanas sejam verdadeiras, enquanto OR (ou) requer apenas que uma das duas expressões booleanas seja verdadeira. Aqui estão mais alguns exemplos:\n(5 \u0026lt; 8) e (9 != 10) produz True já que 5 é menor que 8 e 9 não é igual a 10. (8 \u0026lt;= 2) ou (\u0026ldquo;h\u0026rdquo; + \u0026ldquo;e\u0026rdquo; == \u0026ldquo;ele\u0026rdquo;) produz Verdadeiro já que \u0026ldquo;h\u0026rdquo; + \u0026ldquo;e\u0026rdquo; resulta em \u0026ldquo;ele\u0026rdquo;, mesmo que 8 não seja menor ou igual a 2. (6 != 2 * 3) ou (8 \u0026lt; 2 * 4) produz False já que 6 não é igual a 2 * 3 e 8 é menor que 2 * 4, produza Falso. O que você acha que as seguintes expressões produzem? (11-2 \u0026lt; 10) e (7+3 \u0026gt; 10) (True ou 3 \u0026lt; 1) e (False ou 3\u0026gt;1) "
},
{
	"uri": "/pt-br/jsappybird/jump/",
	"title": "Faça o pássaro pular e adicione gravidade",
	"tags": [],
	"description": "",
	"content": "O que devemos fazer com o pássaro? Vamos fazê-lo pular:\nAdicione o comando abaixo no arquivo [File: create-game.js] spaceKey.onDown.add(jump, this);\nTrabalhando juntos Na janela Replit abaixo, iniciamos o código com a linha spaceKey.onDown.add(jump, this);.\nNo seu console você deverá ver um pássaro Jsappy pulando depois de pressionar run:\nAdicione gravidade Trabalhando juntos Na janela Replit abaixo, iniciamos o código com a linha bird.body.gravity.y = 900;.\nNo seu console você deverá ver um pássaro JSappy pulando com a gravidade depois de pressionar run:\n"
},
{
	"uri": "/pt-br/java-datastructures/2d-arrays/operations/",
	"title": "Operações",
	"tags": [],
	"description": "",
	"content": "Os arrays 2D funcionam de maneira muito semelhante aos arrays regulares, e muitas das ideias ou métodos que usamos nos arrays também se aplicam aos arrays multidimensionais. Como um lembrete rápido, veja como inicializar um array 2D e acessar um elemento:\npublic static void main(String[] args) { int[][] arr = new int[10][20]; arr[0][0] = 1; System.out.println(arr[0][0]); } // Saídas 1 A única parte difícil que pode não fazer muito sentido no início é iterar por meio de um array 2D, mas isso também é bastante simples. Em vez de um único loop (laço) for, usaremos dois loops for. Aqui está um exemplo rápido para você ter uma ideia.\npublic static void main(String[] args) { int[][] arr = new int[10][20]; int num = 0; // Iterar sobre o array de arrays for (int i = 0; i \u0026lt; arr.length; i++) { // Iterar sobre um array individual dentro do array 2D for (int j = 0; j \u0026lt; arr[i].length; j++) { // Acesse valores individuais arr[i][j] = num; num++; } } } Como você pode ver, criamos um array vazio chamado arr. Nele, temos 10 arrays, cada um com 20 elementos respectivamente. Para iterar por todos os arrays, usamos um loop for padrão, assim como faríamos com um array normal. No entanto, a única diferença é que agora precisamos criar um segundo loop for que itera através do iésimo array. Neste exemplo, simplesmente definimos arr[i][j] como num e num++.\n"
},
{
	"uri": "/pt-br/java-datastructures/introduction/prerequisites/",
	"title": "Pré Requisitos",
	"tags": [],
	"description": "",
	"content": "\rVariáveis Antes de iniciar este workshop, você deve ter algum conhecimento prévio de como as variáveis ​​Java funcionam e como criá-las. Clique aqui para revisar o workshop Java Basics!\rNão se preocupe se ainda se sentir um pouco inseguro! Aos poucos, apresentaremos a você esses tópicos em questão. No entanto, se você não tem ideia do que são variáveis, recomendamos fortemente que você conclua o workshop de fundamentos de Java antes.\n"
},
{
	"uri": "/pt-br/java-datastructures/stacks/problem-1/",
	"title": "Problema 1: Fundamentos da Stack",
	"tags": [],
	"description": "",
	"content": "Tarefa 1: Reverter usando stack Oh não! Um novo estagiário foi contratado e bagunçou a lista de restaurantes! Os pedidos dos restaurantes estão em ordem inversa! Felizmente, a stack (pilha) é a estrutura de dados perfeita para isso. Você pode criar uma nova stack na ordem correta?\nLembre-se de que a stack é Último a entrar, primeiro a sair (LIFO; pense em uma pilha de pratos). Como é a stack original? // Exemplo da atual stack Stack\u0026lt;String\u0026gt; restaurants = new Stack\u0026lt;\u0026gt;(); restaurants.push(\u0026#34;McDonalds\u0026#34;); restaurants.push(\u0026#34;Carls Jr.\u0026#34;); restaurants.push(\u0026#34;Burger King\u0026#34;); restaurants.push(\u0026#34;Chipotle\u0026#34;); Iniciar Replit\nTarefa 2: Manter o histórico Outro uso prático da stack é a função de desfazer. Muitos programas hoje em dia incluem um botão de desfazer para acompanhar as alterações mais recentes. A stack é a estrutura de dados perfeita para isso! Você pode criar uma função para desfazer a alteração recente? Por exemplo:\n// Exemplo da atual stack Stack\u0026lt;String\u0026gt; myOrder = new Stack\u0026lt;\u0026gt;(); restaurants.push(\u0026#34;Bebida\u0026#34;); restaurants.push(\u0026#34;Batata Frita\u0026#34;); restaurants.push(\u0026#34;Pizza\u0026#34;); restaurants.push(\u0026#34;Pizza\u0026#34;); // O usuário pediu uma pizza extra! Como você pode desfazer a mudança recente? Stack.undo() // Remover o push mais recente Iniciar Replit\n"
},
{
	"uri": "/pt-br/java-datastructures/arraylists/problem-1/",
	"title": "Problema 1: Fundamentos de ArrayList",
	"tags": [],
	"description": "",
	"content": "\rTarefa 1: Inserção Tacos Truck já está disponível na rua! Novos funcionários estão lutando para acompanhar todos os diferentes pedidos. Ajude-os a organizar todos os itens usando ArrayLists!\n/* Dan está pedindo tacos em sua loja favorita: - 2 pedidos de \u0026#34;carne assada\u0026#34; - 4 pedidos de \u0026#34;carnitas\u0026#34; - 1 pedido de \u0026#34;frango\u0026#34; - 2 pedidos de \u0026#34;birria\u0026#34; Retorne um ArrayList de todos esses elementos nessa ordem */ Como você pode adicionar itens à lista? O que Dan deseja no pedido? Tarefa 2: Obtendo elementos Um restaurante que vende comida chinesa acaba de abrir nas proximidades. Um grande número de pedidos acabou de chegar e o gerente tem dificuldade em acompanhar tudo, então eles colocaram tudo em um ArrayList. Ajude a finalizar o programa para retornar a string fornecida em um determinado índice.\nArrayList\u0026lt;String\u0026gt; menu = new ArrayList\u0026lt;\u0026gt;(); menu.add(\u0026#34;Pizza\u0026#34;); menu.add(\u0026#34;Cachorro Quente\u0026#34;); menu.add(\u0026#34;Hamburger\u0026#34;); menu.add(\u0026#34;Cachorro Quente\u0026#34;); // Retorna \u0026#34;Pizza\u0026#34; pois é o item número 0 do cardápio item = find(menu, 0); Como você pode percorrer a lista? Veja o menu de exemplo! Tarefa 3: Removendo Elementos O mesmo restaurante chinês tem um bug no código! Os pedidos foram duplicados aleatoriamente e o ArrayList é preenchido com cópias dos pedidos. Ajude o proprietário escrevendo um programa para remover as primeiras n ocorrências de um determinado pedido no ArrayList.\nArrayList\u0026lt;String\u0026gt; menu = new ArrayList\u0026lt;\u0026gt;(); menu.add(\u0026#34;Pizza\u0026#34;); menu.add(\u0026#34;Cachorro Quente\u0026#34;); menu.add(\u0026#34;Hamburger\u0026#34;); menu.add(\u0026#34;Pizza\u0026#34;); menu.add(\u0026#34;Pizza\u0026#34;); menu.add(\u0026#34;Cachorro Quente\u0026#34;); // Remova os dois primeiros pedidos de pizza item = remove(menu,\u0026#34;Pizza\u0026#34;, 2); // O menu não será o seguinte array: {\u0026#34;Cachorro Quente\u0026#34;, \u0026#34;Hamburger\u0026#34;, \u0026#34;Pizza\u0026#34;, \u0026#34;Cachorro Quente\u0026#34;} "
},
{
	"uri": "/pt-br/java-datastructures/hashmaps/problem-1/",
	"title": "Problema 1: Fundamentos de HashMap",
	"tags": [],
	"description": "",
	"content": "Tarefa 1: usando Hashmap para organizar dados É uma festa! Um cliente faz uma grande festa de aniversário para mais de 20 pessoas! Todo mundo tem seu próprio pedido. Para manter a ordem em massa organizada, você decide criar um hashmap de Strings. O nome da aniversariante é Isabella, mas o nome dela se perde na lista. Você consegue descobrir o que Isabella pediu?\nVocê se lembra dos métodos hashmap? Veja o exemplo de pedido abaixo! // Exemplo de hashmap atual HashMap\u0026lt;String, String\u0026gt; order = new HashMap\u0026lt;String, String\u0026gt;(); //chave, valor order.put(\u0026#34;Justin\u0026#34;, \u0026#34;Sprite\u0026#34;); order.put(\u0026#34;George\u0026#34;, \u0026#34;Coca\u0026#34;); order.put(\u0026#34;Sam\u0026#34;, \u0026#34;Fanta\u0026#34;); order.put(\u0026#34;Eva\u0026#34;, \u0026#34;Coca\u0026#34;); order.put(\u0026#34;Olivia\u0026#34;, \u0026#34;Coca\u0026#34;); ... Iniciar Replit\n"
},
{
	"uri": "/pt-br/java-datastructures/queues/problem-1/",
	"title": "Problema 1: Fundamentos de Queue",
	"tags": [],
	"description": "",
	"content": "\rTarefa 1: Limpando a Queue para novos pedidos Um novo restaurante foi adicionado ao Nuevo Eats! Novos pedidos estão chegando e a Queue (Fila) está inundada de pedidos! A popularidade dos diferentes tacos cresceu rapidamente e o restaurante está sobrecarregado. Procure uma maneira de limpar todos os elementos para salvar o restaurante!\nComo você pode iterar atráves da Queue? Tente limpar a fila à medida em que você avança! Veja o menu de exemplo! // Isso usa uma lista como organizadora da fila. Queue\u0026lt;String\u0026gt; orders = new PriorityQueue\u0026lt;\u0026gt;(); orders.add(\u0026#34;Taco de Peixe\u0026#34;); orders.add(\u0026#34;Taco de Carne\u0026#34;); orders.add(\u0026#34;Taco de Frango\u0026#34;); orders.add(\u0026#34;Taco de Peixe\u0026#34;); orders.add(\u0026#34;Taco de Carne\u0026#34;); Iniciar Replit\nTarefa 2: Usando a Priority Queue para encontrar o preço mínimo Um restaurante está usando uma Priority Queue (fila prioritária) para gerenciar pedidos. O restaurante deseja poder analisar os pedidos com base nos preços para preparar melhor as refeições que está preparando. Especificamente, eles gostariam de encontrar o enésimo preço mínimo atualmente em sua lista. Escreva uma função que analise a fila de pedidos e retorne o enésimo preço mínimo.\nComo você garantirá que a lista esteja em ordem? O que torna mais fácil encontrar o preço mínimo? E se eles estiverem procurando o 5º preço mínimo (ou mais baixo)? Iniciar Replit\n"
},
{
	"uri": "/pt-br/web-basics/putting-together/",
	"title": "Juntando as peças",
	"tags": [],
	"description": "",
	"content": "Para que seu navegador entenda o que é cada elemento do seu site, precisamos rotulá-los com tags HTML. HTML significa Linguagem de marcação de hipertexto. Tags são palavras rodeadas pelos símbolos \u0026lt;e\u0026gt;. Por exemplo, a tag \u0026lt;img\u0026gt; informa ao seu navegador “isto é uma imagem”. A tag \u0026lt;button\u0026gt; informa “este é um botão”.\nTags também podem ser usadas para organizar sua página da web! A imagem abaixo descreve a estrutura de uma página da web básica. O cabeçalho geralmente contém as bibliotecas adicionais usadas e o título da página, enquanto o corpo contém a maior parte do conteúdo exibido.\nA maioria das tags precisa de uma tag de abertura e uma tag de fechamento. Por exemplo, você verá que todas as páginas têm uma tag de abertura \u0026lt;html\u0026gt; na parte superior e uma tag de fechamento \u0026lt;/html\u0026gt; no final. Isso informa ao navegador onde os elementos HTML começam e onde terminam. Pense nas tags como aspas; por exemplo, o computador entenderá que tudo entre as tags \u0026lt;html\u0026gt; e \u0026lt;/html\u0026gt; faz parte de um site HTML.\nExistem também algumas tags, como a tag de imagem \u0026lt;img\u0026gt;, que fecham automaticamente, o que significa que elas só precisam de uma tag de abertura e não de uma tag de fechamento.\nAqui está um exemplo:\nVeja a Pen HTML Basics por Deliana Escobari (@Sunny-Dee)\ron CodePen.\r"
},
{
	"uri": "/pt-br/python-basics/functions/built-in-math/",
	"title": "Funções matemáticas integradas",
	"tags": [],
	"description": "",
	"content": "Python fornece uma série de funções integradas importantes que podemos usar sem a necessidade de fornecer a definição da função. Nesta seção, aprenderemos sobre algumas das funções matemáticas integradas com as quais você pode realizar tarefas matemáticas em números.\nAs funções max() e min() nos fornecem os maiores e menores valores de uma lista, respectivamente:\nx = min(20, 10, 50, 25)\t#x = 10 print(x) y = max(20, 10, 50, 25)\t#y = 50 print(y) A função abs() nos dá o valor absoluto (positivo) do número:\nx = abs(-34)\t#x = 34 print(x) y = abs(90)\t#y = 90 print(y) A função pow(a, b) nos dá o valor de a elevado à potência de b (ab):\nx = pow(3,4)\t#x = 81 print(x) Desafio Vamos juntar tudo! Vamos ver se conseguimos criar um programa que pegue 5 números do usuário e imprima o valor mínimo desses números elevado à potência máxima. Por exemplo, dado o número 2,7,4,11,9, retorne 211. Pontos de bônus se você conseguir dividi-lo em funções!\n"
},
{
	"uri": "/pt-br/python-turtle/activity-1/",
	"title": "Atividade 1 – Desenhar um quadrado",
	"tags": [],
	"description": "",
	"content": "\nParabéns! Você ajudou Alex a traçar um limite! Agora vamos intensificar e ajudar Alex a desenhar um quadrado. Para desenhar um quadrado, precisamos seguir estes passos:\nAvance 50 passos Vire à esquerda 90 graus Avance 50 passos Vire à esquerda 90 graus Avance 50 passos Vire à esquerda 90 graus Avance 50 passos Lembre-se de usar turtle.forward() para desenhar linhas. Para virar 90 graus para a esquerda, você precisa passar 90 como argumento para o método turtle.left():\nturtle.left(90) "
},
{
	"uri": "/pt-br/secret-messages/activity-2/",
	"title": "Atividade 2 - Variáveis e Entradas (Inputs)",
	"tags": [],
	"description": "",
	"content": "Incrível! Agora vamos dar um passo adiante. Agora não apenas imprimiremos a mensagem, mas também inseriremos o nome do destinatário e faremos nosso programa dizer \u0026ldquo;Olá\u0026rdquo;.\nPara fazer isso precisaremos de variáveis.\nVariáveis Uma variável é um contêiner que armazena informações. Existem muitos tipos de variáveis, cada uma armazenando diferentes tipos de informações:\nstring: representa uma sequência de caracteres, letras, números e símbolos. stringss são sempre colocadas entre aspas duplas. Exemplos: \u0026quot;olá\u0026quot;, \u0026quot;1,2,3\u0026quot;. int: representa números inteiros positivos ou negativos. Exemplos: 1, 100, -250. char: representa um único caractere. Exemplos: 'A', 'e', 'I'. chars são sempre colocados entre aspas simples. bool: representa um valor true ou false. Para criar uma variável, declare-a da seguinte forma:\nnúmero int = 10; Vejamos esta linha de código com mais detalhes:\nPrimeiro precisamos especificar o tipo de informação que será armazenada dentro daquela variável. Neste caso, será do tipo int. Então precisamos declarar o nome do container; neste caso, nomearemos nossa variável como number. Finalmente especificamos o valor que o contêiner irá conter; neste caso 10. Terminamos com ponto e vírgula para indicar que a linha está completa.\nAgora podemos usar a variável number dentro do programa para referenciar o número armazenado. Se quisermos imprimir seu valor, usaremos a seguinte linha de código:\ncout \u0026lt;\u0026lt; \u0026#34;O número é: \u0026#34; \u0026lt;\u0026lt; número \u0026lt;\u0026lt; endl; Executando esta linha de código, o console irá imprimir:\nO número é: 10 Podemos usar cout para imprimir palavras, números ou variáveis. Se quiséssemos imprimir mais de uma coisa, teríamos que adicionar \u0026lt;\u0026lt; entre cada termo: Exemplo:\nint hora = 1;\rcout \u0026lt;\u0026lt; \u0026#34;É \u0026#34; \u0026lt;\u0026lt; hora \u0026lt;\u0026lt; \u0026#34; hora da tarde\u0026#34; \u0026lt;\u0026lt; endl; A seguinte frase será impressa no console:\nÉ 1 hora da tarde. A seguir, gostaríamos que o destinatário da mensagem pudesse escrever seu nome no console (que armazenaremos dentro de uma variável) e que o programa lhe dissesse \u0026ldquo;Olá\u0026rdquo;.\nPara inserir o nome, usaremos o seguinte código:\nnome da string;\rcin \u0026gt;\u0026gt; nome; Vamos nos aprofundar nesta linha de código.\nEntrada do console Semelhante a como podemos imprimir no console usando cout, podemos inserir dados no console usando cin e especificando o nome da variável na qual a entrada será armazenada.\nNo exemplo anterior estamos afirmando que quaisquer dados que inserirmos, eles serão armazenados dentro da variável nome.\nDito isto, se inserirmos:\nRainha Então a variável nome armazenará a string \u0026quot;Rainha\u0026quot;.\nAgora é hora de começar nosso programa.\nEstas são as etapas a seguir para esta atividade:\nDeclare uma variável de string chamada nome. Use cin para solicitar entrada do usuário e armazene os dados inseridos na variável nome. Imprima no console \u0026quot;Olá (nome)\u0026quot;, onde (nome) deve ser substituído pelo valor da variável nome. Clique em Executar. Digite \u0026quot;Rainha\u0026quot; como o nome do destinatário na guia console e certifique-se de obter \u0026quot;Olá Rainha\u0026quot; como saída do console. Iniciar Replit\nAJUDA! Se após clicar no botão Executar aparecer uma mensagem de erro em vermelho, significa que há algo errado com seu código. Por favor, peça ajuda ao seu instrutor.\nVocê também deve verificar o seguinte\nCertifique-se de que a ortografia, letras maiúsculas e símbolos utilizados correspondam ao exemplo dado. Certifique-se de adicionar um ponto e vírgula no final de cada linha de código. Lembre-se que todas as strings devem estar entre aspas. Todo o código que você escreve precisa estar entre colchetes {} na função int main. "
},
{
	"uri": "/pt-br/security-phishing/a-closer-look/",
	"title": "A closer look",
	"tags": [],
	"description": "",
	"content": "Bob received the following email the other night.\nWhat do you think is suspicious here? Let\u0026rsquo;s analyze the email: The sender's email address is suspicious and you don't know this email sender personally.\nLucrative offer in the subject line suggests it's too good to be true.\nYou received an email during irregular business hours.\nThese words show a sense of urgency.\nThe sender is asking you to click on a link or open an attachment that you don't know about.\rThe URL or the link has a spelling error which is hard to notice.\nAfter explaining all of this, Alice asked Bob to change all his passwords and bank account login credentials to be safe. Thankfully, the attacker Eve had not yet acted on the information given by Bob and he was safe.\n"
},
{
	"uri": "/pt-br/security/activity/",
	"title": "Atividade",
	"tags": [],
	"description": "",
	"content": "Vamos jogar um jogo!\nEscreva sua frase favorita na caixa de texto abaixo. Certifique-se de que tenha pelo menos cinco palavras. (Ex.: gosto de jogar vôlei na praia.)\rAgora pegue a primeira letra de cada palavra da frase acima e escreva dentro da caixa de texto. (Por exemplo, gdjvnp)\rAdicione alguns números ao texto. Lembre-se da posição dos números. (Por exemplo, 1gdjvnp6)\rFinalmente, vamos adicionar alguns caracteres especiais ao texto. (Por exemplo, 1gdj$vnp6)\rVoilà essa é sua nova senha! Não parece difícil de quebrar? Sucesso! "
},
{
	"uri": "/pt-br/python-basics/basics/comments/",
	"title": "Commentários",
	"tags": [],
	"description": "",
	"content": "Ao criar um programa Python, podemos adicionar algumas notas adicionando comentários de uma linha usando #. Comentários são as partes do código que não afetam o programa. Qualquer coisa após o símbolo # faz parte do comentário e é ignorado pelo seu código. Comentários são colocados no código para informar aos leitores o que o código está fazendo. Eles podem facilitar a manutenção do código e também ajudar a encontrar bugs.\nAo escrever o código, se a qualquer momento você desejar escrever notas para ajudá-lo a entender o código, use o símbolo # para criar um comentário.\n# Esta é minha primeira linha de código print(\u0026#34;Olá, Mundo!) Tenha cuidado, se você remover o símbolo #, seu código não funcionará!\nTente adicionar um comentário acima da primeira linha do código e pressione executar. Você verá que o computador irá ignorar seu comentário.\n"
},
{
	"uri": "/pt-br/python-basics/data-structures/sets/",
	"title": "Conjunto",
	"tags": [],
	"description": "",
	"content": "Assim como uma lista, um conjunto é uma coleção de itens. A diferença entre um conjunto e uma lista é que um conjunto não pode conter duplicatas. Então, se você tiver 5 chocolates e colocá-los em um conjunto, só sobrará 1 chocolate, pois as duplicatas serão removidas. 😢\nNa imagem acima, o lado esquerdo representa Jogos internos (xadrez e tênis de mesa), enquanto o lado direito representa Jogos externos (Críquete e Futebol). O meio representa a parte comum de ambos os conjuntos. Estes são os jogos que podem ser jogados tanto em ambientes internos quanto externos (basquete e badminton). A parte do meio também é conhecida como interseção entre dois conjuntos.\nUm conjunto é criado usando a função set() ou colocando todos os elementos entre chaves.\nJogos internos = set([\u0026#34;Xadrez\u0026#34;, \u0026#34;Tênis de mesa\u0026#34;, \u0026#34;Basquete\u0026#34;, \u0026#34;Badminton\u0026#34;]) Jogos externos = {\u0026#34;Cricket\u0026#34;, \u0026#34;Futebol\u0026#34;, \u0026#34;Basquete\u0026#34;, \u0026#34;Badminton\u0026#34;} print(\u0026#39;** Jogos internos **\u0026#39;) print(jogosInternos) print(\u0026#39;** Jogos externos **\u0026#39;) print(jogosExternos) Saída\n** Jogos Internos **\rset([\u0026#34;Xadrez\u0026#34;, \u0026#34;Tênis de mesa\u0026#34;, \u0026#34;Basquete\u0026#34;, \u0026#34;Badminton\u0026#34;])\r** Jogos Externos **\rset([\u0026#34;Cricket\u0026#34;, \u0026#34;Futebol\u0026#34;, \u0026#34;Basquete\u0026#34;, \u0026#34;Badminton\u0026#34;]) União de Conjuntos Se tivermos 2 conjuntos como acima, a união destes dois conjuntos contém os jogos de ambos os conjuntos. A saída será um novo conjunto. As duplicatas serão removidas.\nO símbolo usado para União é |.\ntodosOsJogos = jogosInternos | jogosExternos print(\u0026#39;** Todos Os Jogos **\u0026#39;) print(todosOsJogos) Saída\n** Todos os Jogos **\rset([\u0026#34;Xadrez\u0026#34;, \u0026#34;Tênis de mesa\u0026#34;, \u0026#34;Basquete\u0026#34;, \u0026#34;Badminton\u0026#34;, \u0026#34;Cricket\u0026#34;, \u0026#34;Futebol\u0026#34;]) Interseção de Conjuntos A intersecção de 2 conjuntos será o conjunto contendo jogos internos e externos.\nO símbolo usado para Intersecção é \u0026amp;.\njogosComuns = jogosInternos \u0026amp; jogosExternos print(\u0026#39;** Jogos Comuns **\u0026#39;) print(jogosComuns) Saída\n** Jogos Comuns **\rset([\u0026#34;Basquete\u0026#34;, \u0026#34;Badminton\u0026#34;]) Diferença de conjuntos A diferença de 2 conjuntos será o conjunto que contém jogos de um conjunto que não estão presentes no outro conjunto.\nO símbolo usado para Diferença é -.\napenasJogosInternos = jogosInternos - jogosExternos print(\u0026#39;** Apenas Jogos Internos **\u0026#39;) print(apenasJogosInternos) Saída\n** Apenas Jogos Internos **\rset([\u0026#34;Xadrez\u0026#34;, \u0026#34;Tênis de mesa\u0026#34;]) Imprimir os itens de um conjunto Você não pode imprimir os itens de um conjunto usando o número do item como uma lista. Os elementos de um conjunto não estão em uma sequência fixa.\nPortanto, você não pode fazer algo como jogosInternos[0] ou jogosInternos[1] como faria em uma lista. No entanto, você pode percorrer os elementos de um conjunto usando um loop for.\nfor g in jogosInternos: print(g) Saída\nXadrez\rTênis de mesa\rBasquete\rBadminton Adicionando itens a um conjunto Podemos usar a função .add para adicionar um novo jogo a um conjunto.\njogosInternos.add(\u0026#34;Carrom\u0026#34;) print(\u0026#39;** Jogos Internos **\u0026#39;) print(jogosInternos) Saída\n** Jogos Internos **\rset([\u0026#34;Xadrez\u0026#34;, \u0026#34;Tênis de mesa\u0026#34;, \u0026#34;Basquete\u0026#34;, \u0026#34;Badminton\u0026#34;, \u0026#34;Carrom\u0026#34;]) Removendo itens de um conjunto Podemos usar a função .discard para remover um item do conjunto.\njogosInternos.discard(\u0026#34;Xadrez\u0026#34;) print(\u0026#39;** Jogos Iternos **\u0026#39;) print(jogosInternos) Saída\n** Jogos Internos **\rset([\u0026#34;Tênis de mesa\u0026#34;, \u0026#34;Basquete\u0026#34;, \u0026#34;Badminton\u0026#34;, \u0026#34;Carrom\u0026#34;]) Se você remover um item que não está presente no conjunto, você não receberá nenhum erro. Por outro lado, se você tentar remover um item que não está presente em uma lista, você receberá um ValueError!\nDesafio Vamos tentar o mesmo exercício que fizemos com Listas e Tuplas, mas usando Conjuntos.\nComece com a lista de frutas abaixo. Imprima a lista de frutas e para cada fruta, conforme o usuário gosta. Se eles gostarem, fique com ele. Caso contrário, remova-o da lista. Em seguida, peça ao usuário para adicionar uma fruta que esteja faltando na lista. Adicione à lista e imprima a quantidade de frutas que o usuário gosta.\nfruits = [\u0026#39;laranja\u0026#39;, \u0026#39;kiwi\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;maçã\u0026#39;, \u0026#39;manga\u0026#39;, \u0026#39;limão\u0026#39;] "
},
{
	"uri": "/pt-br/adafruit/creating-the-program/",
	"title": "Criando o seu programa",
	"tags": [],
	"description": "",
	"content": "Abra seu navegador de internet favorito (como Edge, Firefox, Google Chrome, Brave) e acesse https://aka.ms/oranges\r. Sua tela ficará assim:\nDefinindo as variáveis Hoje vamos usar laranjas para dizer ao nosso Adafruit quando fazer barulho. A primeira coisa que precisamos fazer é dar um nome para cada laranja, possibilitando ao nosso computador saber onde procurar o que elas estão dizendo. Fazemos a primeira parte definindo uma variável. Clique na seção que diz VARIABLES ou variáveis em português. Ela é de cor salmão e pode ser encontrado na sétima posição de cima para baixo da lista de botões. Em seguida, defina uma variável clicando em Make a variable, dando-lhe um nome. Faça isso duas vezes. Aqui nomeamos as nossas variáveis como analog1 e analog2, mas você pode chamá-las como quiser.\nInterpretando as entradas Agora que temos um nome que nosso computador conhece para cada uma das nossas laranjas, vamos deixar o Adafruit saber como entendê-las. Existem dois tipos de entradas, digital e analógica. Interruptores de luz e botões de energia são exemplos de entradas digitais. Eles podem ser ligados ou desligados, 1 ou 0. As entradas analógicas são como um botão de volume ou um dimmer de luz. Eles possuem mais opções de valores que podem ser ajustáveis girando o botão. No nosso projeto, as nossas laranjas serão como entradas analógicas, que ajustarão os valores no Adafruit, conforme elas são tocadas ou espremidas.\nClique novamente na seção Variáveis. Desta vez, você verá quatro caixinhas nas opções do menu. Isso acontece porque anteriormente nos definimos as nossas duas variáveis. Arraste a caixinha “set __ to __” para o bloco verde “forever” localizado na sua área de trabalho. Usando a seta branca para baixo, altere o primeiro espaço em branco para a sua primeira variável, aqui chama-se “analog1”.\nEm seguida, em ADVANCED, clique na seta para baixo para expandir o menu e então clique em PINS. Procure pela caixinha “analog read pin __”, ele fica na terceira posição de cima para baixo da lista. Insira-o na posição onde o 0 está localizado, na caixinha “set analog1 to 0”. Para inseri-lo nesse slot, clique na caixinha e arraste-a para que fique acima do zero. Verifique se o 0 está destacado em amarelo e solte botão do mouse (ou touchpad). Você perceberá que a primeira caixinha estendeu-se para acomodar a segunda caixinha. Se esse comportamento não acontecer, tente novamente.\nDepois de finalizado, sua área de trabalho deverá se parecer com a imagem acima. Repita este processo novamente, mas desta vez selecione a sua segunda variável. Para isso, use as setas brancas para baixo para selecionar analog2 e A2. Agora compare com a imagem abaixo para verificar se você o fez corretamente.\nCriando nossos loops Agora que nosso computador sabe como chamar nossas laranjas e também como entender o que elas estão dizendo, vamos criar um loop que verificará quando estivermos segurando nossa laranja. Clique na seção LOGIC e arraste a caixinha “If ____ then” para adicioná-la ao seu conjunto de variáveis.\nNessa etapa, voltaremos ao exemplo do botão de volume para entender a comparação que faremos em nosso loop. Cada pessoa tem um ponto em que gosta de ouvir sua música para se divertir. Este ponto ideal também aplica-se para as nossas laranjas. Elas informarão ao computador um determinado valor quando ninguém as toca e um valor menor quando as tocarmos. O truque é encontrar o meio termo para que só façamos barulho quando quisermos.\nPara realizar esta configuração, vá para a seção LOGIC novamente e pegue a caixinha logica \u0026ldquo;0 \u0026lt; 0\u0026rdquo; que é o segundo na subseção Comparison. Coloque-a sob o valor “true” na caixinha “If ____ then”. Certifique-se de ver o destaque amarelo antes de soltá-la nessa posição. Observe a imagem abaixo para comparar com a sua área de trabalho.\nAgora vamos adicionar o que estamos comparando. Volte para a seção VARIABLES, retire analog1 e coloque-a no primeiro espaço. Em seguida, clique no segundo espaço e digite 40. O número 40 seria o ponto ideal para a maioria das pessoas. Caso sua laranja esteja fazendo barulho sem que você a toque, volte para esta etapa e aumente o valor. Ainda, se a sua laranja não estiver fazendo barulho algum ao tocá-la, você também pode voltar e aumentar o mesmo valor. Por enquanto, vamos deixá-lo em 40.\nAgora podemos escolher nossa música! Clique na seção MUSIC e arraste a segunda caixinha ”play sound __ until done” para o nosso bloco If-Then. Sinta-se à vontade para clicar na seta para baixo e selecionar os sons de sua preferência.\nAgora repita os últimos passos descritos acima para a segunda variável, analog2. Ao finalizar, sua área de trabalho ficará como a imagem abaixo (mas com suas opções de música).\nDiversão com luzes (se o tempo permitir) A placa da Adafruit possui diversas luzes! Elas são superdivertidas de brincar, então vamos adicionar um pouco de cor as nossas músicas para que possamos ver e ouvir a diferença quando tocamos em nossas laranjas. Clique na seção LIGHT e arraste a caixinha “Set all Pixels to ___” para os nossos dois blocos If-Then. Faça isso antes de tocar qualquer som. Por fim, fique à vontade para mudar a cor das luzes. Para isso, você deve clicar na parte da cor e escolher uma que mais te agrade.\n"
},
{
	"uri": "/pt-br/python-earsketch/python-basics/",
	"title": "Fundamentos de `Python",
	"tags": [],
	"description": "fundamentos do python",
	"content": "Python: Fundamentos Para codificar música, precisamos aprender um pouco de Python. Não se preocupe, isso não vai te morder. Python é uma das linguagens que nós, humanos, usamos para dizer aos computadores o que fazer. Essas linguagens são conhecidas como “linguagens de programação”. Aprenderemos conceitos de Python ao longo da aula, mas vamos começar com uma simples declaração print.\nSe você quiser ir para uma seção específica do Python, clique no tópico abaixo:\nConsole do Python Comentários Funções "
},
{
	"uri": "/pt-br/linux-basics/activity-1/",
	"title": "Atividade 1 - Identificando Usuários no Linux",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para identificar que usuário você é",
	"content": "\rAgora que estamos na linha de comando. Vamos testar um comando simples para identificar a conta de usuário!\rO que são contas de usuário? Cada usuário no Linux tem uma conta de usuário. Eles são usados ​​para identificar exclusivamente cada usuário.\nPor exemplo, digamos que você e seu amigo Nuvi compartilhem o mesmo computador. Você e o Nuvi podem criar contas de usuário separadas e acompanhar quais arquivos pertencem a cada um de vocês. Isso garante que nenhum de vocês altere acidentalmente algo importante um do outro.\nComo descubro qual conta estou usando? O comando Linux whoami, que significa \u0026ldquo;quem eu sou\u0026rdquo;, informará qual conta você está usando. Vamos tentar?\nwhoami A saída esperada para o comando acima é o nome do nosso usuário, nuvi, como podemos observar abaixo:\nAgora que verificamos quem somos, na próxima atividade, iremos descobrir onde estamos!\r"
},
{
	"uri": "/pt-br/python-basics/basics/variables/",
	"title": "Variáveis",
	"tags": [],
	"description": "",
	"content": "Em um exercício anterior, aprendemos a imprimir diferentes instruções com print(\u0026quot;\u0026quot;). Embora seja ótimo imprimir um número ou uma frase, não lhes demos um significado. Variáveis ​​são simplesmente nomes que podemos dar a valores como strings, números e booleanos. Veja como criar uma variável chamada s em Python. Dizemos que s é uma string que possui o valor \u0026quot;Olá Mundo!\u0026quot;.\ns = \u0026#34;Olá Mundo!\u0026#34; x = 88 happy = True Pressione Run (executar).\nObserve que as variáveis ​​não são impressas no console. Em vez disso, a variável simplesmente salva a string, o número ou o booleano na memória do computador. Podemos usar essas variáveis ​​em outras declarações. Por exemplo, o código a seguir imprimiria \u0026quot;Olá\u0026quot; Nuevo Foundation\u0026quot; no console:\nstr1 = \u0026#34;Olá\u0026#34; str2 = \u0026#34;Nuevo Foundation\u0026#34; print(str1 + \u0026#34; \u0026#34; + str2) Você também pode fazer o seguinte para imprimir strings juntas enquanto adiciona espaços entre as palavras.\nstr1 = \u0026#34;Olá\u0026#34; str2 = \u0026#34;Nuevo Foundation\u0026#34; print(str1, str2) Qual é o tipo! Antes de aprender como criar variáveis, precisamos aprender o conceito de tipo. O tipo descreve o que está sendo armazenado na caixa.\nPython é uma linguagem de tipo dinâmico, o que significa que, diferentemente de linguagens como Java, você não precisa especificar o tipo de variável antes de atribuir um valor a ela. E, se você tiver um número inteiro na caixa e remover o número inteiro e colocar uma string na caixa, o python permitirá que você faça isso. Porém, você deve usar a variável com base no tipo.\nA seguir estão os tipos de dados importantes:\nTipo Descrição Exemplos int inteiro 20, 30, 35 char caractere como um símbolo ou uma única letra do alfabeto 'A','b', '(', ']' String uma sequência de char \u0026quot;Hello\u0026quot;, \u0026quot;Bonjour\u0026quot;, \u0026quot;Olá\u0026quot; boolean tem um valor de verdadeiro ou falso true, false double números fracionários 2.0, 3.14, 9.33 Vamos rever as três variáveis ​​de que falamos no primeiro exemplo e identificar seus tipos de dados. s é uma string, x é um int e happy é um booleano.\nDesafio Crie duas novas variáveis: Uma variável chamada comp que armazena a string \u0026quot;Computador\u0026quot;. Uma variável chamada five que armazena o número 5. A seguir, use as variáveis ​​e o que você aprendeu nas atividades anteriores para imprimir o seguinte no console. Você deve usar as variáveis!\nComputador\r5\rComputadorComputador\r10\rComputadorComputadorComputador\r15\rDica: se você tiver dúvidas, considere usar o operador +. Lembre-se que você pode usar as variáveis ​​comp e five múltiplas vezes na mesma linha!\n"
},
{
	"uri": "/pt-br/java-basics/activity-3/",
	"title": "Operadores",
	"tags": [],
	"description": "Apresente operadores e execute operações em variáveis ​​em Java.",
	"content": "\nVamos fazer matemática: operador aritmético No último exercício, aprendemos sobre variáveis ​​e como podemos atribuir valores a uma variável de um tipo específico, como:\nint age = 3; // declare a variável idade do tipo int com valor 3 age = 4; // atribua 4 à variável idade Olhando para o código acima, essencialmente adiciona 1 ao valor da variável age.\nE, em Java, podemos realizar operações matemáticas em variáveis ​​diretamente com operadores aritméticos: +, -, *, /, %. Por exemplo, podemos usar o operador + para adicionar 1 a age:\nint age = 3; // declare a variável idade do tipo int com valor 3 age = age + 1;// adicione 1 à idade A seguir estão os operadores aritméticos em Java:\nOperador Descrição Exemplo + adição 1 + 1 = 2 - subtração 2 - 1 = 1 * multiplicação 3 * 3 = 9 / divisão 9 / 3 = 3 % módulo/resto 10 % 4 = 2 Nota: Se ambos os operandos da divisão forem inteiros, o resultado também será um inteiro. Por exemplo, 10/4 retorna 2, não 2,5, pois descartamos o restante. Se algum dos operandos for double, o resultado será double.\nNota: A operação de módulo obtém o restante da operação de divisão.\nAdição (+) é usado em String como operador de concatenação. Por exemplo:\nString name = \u0026quot;Patric\u0026quot; + \u0026quot;k\u0026quot;; é o mesmo que String name = \u0026quot;Patrick\u0026quot;;\nInstruções 1.Use o programa abaixo para praticar o uso dos operadores aritméticos. Mude os números para ver as respostas.\nLaunch Replit\nComparações: Operador Relacional A seguir, vamos aprender como comparar números usando operadores relacionais.\nAssim como na matemática, podemos comparar números usando \u0026gt;, \u0026lt;, \u0026gt;=, \u0026lt;=. Por exemplo: (3 \u0026gt; 2) é true (verdadeiro), ou (3 \u0026lt; 2) é false (falso), valores booleanos.\nA seguir estão os operadores relacionais em Java:\nOperador Descrição Exemplo == igual a (3 == 3) étrue != não é igual a (3 != 3) é false \u0026gt; maior que (3 \u0026gt; 2) é true \u0026lt; menor que (3 \u0026lt; 2) é false \u0026gt;= maior ou igual a (3 \u0026gt;= 2) é true \u0026lt;= menor ou igual a (2 \u0026lt;= 2) é true Nota: == e != só pode ser usado em dados do mesmo tipo. Por exemplo:\nint x=3; double y=3.0; x==y; // Isso produziria um erro porque x e y são de tipos diferentes. Usar um sinal de igual atribui um valor à variável. Usar dois sinais de igual compara os valores de dois elementos.\nage = 3; // define o valor de age para 3 age == 3; // verifica se o valor de age é 3 Prática de comparação Use o programa abaixo para praticar o uso dos operadores de comparação. Mude os números para ver as respostas. Launch Replit\nEstatísticas do exame! Patrick 🐥 e 4 de seus colegas de classe acabaram de fazer uma prova de música nesta aula. Estas são as notas (Grades) dos exames: Patrick(88), Tom(89), Mary(95), Chris(84), Jen(92).\nQueremos produzir um relatório estatístico de notas de toda a turma.\nEste relatório lista a nota de cada aluno, a pontuação média da turma e se a média da turma é superior a 60, 70, 80, 90 (true ou false), como a seguir:\n---------------------------\rRelatório de notas ---------------------------\rNotas dos alunos: - Patrick: ...\r- Tom: ...\r...\rMédia da turma: ...\r- Média acima de 60: ...\r- Média acima de 70: ...\r- Média acima de 80: ...\r- Média acima de 90: ... Vamos escrever com a ajuda de operadores 🎵!\nInstruções: Identifique todas as variáveis ​​nas instruções de impressão e declare-as começando na linha 12 com o tipo de dados e valor corretos. (Observe que existem 10 variáveis ​​no total e average foi declarado para você).\nDica: por exemplo, a variável patrickGrade deve ser declarada e atribuída na linha 13 como int patrickGrade = 88;.\nCalcule a média correta da turma e atribua-a à variável average (média) usando operadores aritméticos como +, -, *, /, %.\nObserve que a pontuação média é (total de pontos)/(quantidade de alunos).\nAtribua variáveis over60, over70, over80, over90 com o valor correto usando operadores relacionais como \u0026gt;, \u0026lt;, \u0026gt;=, \u0026lt;=.\nExecute o programa e veja o relatório impresso!\nLaunch Replit\n"
},
{
	"uri": "/pt-br/unity/scripts-explained/",
	"title": "Scripts Explicados",
	"tags": [],
	"description": "",
	"content": "Antes de começarmos a mover o Nuvi, vamos primeiro explicar a estrutura de um script do Unity. Há muitas maneiras de fazer o Nuvi se mover dentro do Unity, e uma maneira de fazer isso é adicionar um componente Script ao Nuvi. Um componente Script é um componente que você pode criar sozinho do zero.\nUm Unity Script vazio terá a seguinte aparência:\nusing System.Collections; using System.Collections.Generic; using UnityEngine; public class EmptyScript : MonoBehaviour { void Start() { } void Update() { } } Cada novo script terá as 3 primeiras linhas que começam com using. Essas linhas são necessárias para que o Unity possa usar esse script recém-criado, portanto, geralmente deixamos essas linhas de código de lado. A próxima linha que começa com public class 'script_name' é necessária para que o Unity acesse este script específico.\nCertifique-se de que o nome do script corresponda ao \u0026lsquo;script_name\u0026rsquo;! Se você decidir alterar o nome do script fora do script, isso não atualizará a linha de código que contém o nome do script, então certifique-se de voltar e atualizá-lo, caso contrário o jogo não rodará!\nCada script possui dois métodos predefinidos.\nvoid Start(): Este método é chamado apenas uma vez quando o script é chamado inicialmente. Geralmente é usado para inicializar variáveis ​​que podemos precisar ao longo do script.\nvoid Update(): Este método é chamado à cada quadro e geralmente é usado quando queremos alterar o comportamento de um jogo.\nExiste outro método que usaremos para fazer o movimento do Nuvi chamado void FixedUpdate().\nvoid FixedUpdate(): Este método é chamado com menos frequência que Update(), mas é melhor usado ao lidar com física para movimentos mais suaves, como ao usar Rigidbody.\nHaverá outros métodos da biblioteca Unity que usaremos mais tarde, mas por enquanto isso é tudo que você precisa saber!\n"
},
{
	"uri": "/pt-br/android-tictactoe/printconsole/",
	"title": "Imprimindo no console",
	"tags": [],
	"description": "",
	"content": "Às vezes, o jogo ou aplicativo pode não funcionar da maneira esperada ou você deseja gravar algo no console para fins de registro. Fora da depuração do aplicativo, você pode usar System.out.println() para escrever sua mensagem. Procure suas mensagens na janela \u0026ldquo;logcat\u0026rdquo; na parte inferior do Android Studio: Trabalhando juntos Sem remover as aspas, tente alterar \u0026quot;Reiniciando o jogo da velha!\u0026quot; para \u0026quot;Reiniciando o jogo Tic-Tac-Toe!\u0026quot; ou qualquer outra frase que desejar. Pressione executar para ver se alguma coisa muda. Adicione outro System.out.println abaixo da linha atual para imprimir uma segunda frase abaixo da primeira frase. Pressione executar para ver se duas frases foram impressas. Se você vir algum texto em vermelho, peça ajuda. AJUDA! Recebi muito texto em vermelho! Se você vir algum texto em vermelho, você encontrou alguns erros! Por favor, peça ajuda. Cuidado com o seguinte ao codificar no Android:\nout e println começam com uma letra minúscula. System começa com uma letra maiúscula. Certifique-se de que a frase que deseja imprimir esteja entre aspas e que a frase esteja entre parênteses. Não exclua chaves { ou }. System.out.println é útil quando você deseja corrigir bugs no código, mas seu usuário (a pessoa que usa o aplicativo) não consegue ver o texto impresso com esta função. Mas podemos fazer isso com brindes! Um brinde é um texto pequeno e rápido que tornamos visível para o usuário. Veja como fazer um brinde:\nToast.makeText(this, \u0026#34;Texto que queremos mostrar\u0026#34;, Toast.LENGTH_SHORT).show() "
},
{
	"uri": "/pt-br/supply-chain-analytics/solverandsolving/",
	"title": "Resolvendo seu problema",
	"tags": [],
	"description": "",
	"content": "Para executar um problema de otimização no Excel, você precisa habilitar o complemento chamado “Solver”. Siga o link abaixo para obter detalhes ou veja a imagem abaixo.\nClique aqui\rpara obter mais ajuda se estiver com problemas.\nVocê pode encontrar o suplemento do solucionador clicando em “data” (dados) e depois em “solver” (solucionador) no cabeçalho.\nEm seguida, baixe o seguinte template\rAcompanhe o modelo para ajudar a configurar seu problema. Ao usar o “Solver”, você só precisa selecionar o número da célula e o relacionamento apropriado entre as células. Seu instrutor pode ajudá-lo com isso se você não estiver familiarizado com o Excel.\nVocê pode usar as “respostas” do Excel para verificar suas respostas. Há também uma captura de tela da maneira correta de configurar seu Solver.\nRespostas\rBoa sorte!\n"
},
{
	"uri": "/pt-br/jsappybird/jump-force/",
	"title": "Faça o pássaro pular com força e cair com rotação",
	"tags": [],
	"description": "",
	"content": "Vamos adicionar força ao pássaro\nAdicione o comando abaixo no arquivo [File: create-game.js] bird.body.velocity.y = -350;\nTrabalhando juntos Na janela Replit abaixo, iniciamos o código com a linha bird.body.velocity.y = -350;.\nNo seu console você deverá ver um pássaro JSappy pulando com força depois de pressionar run:\nAtividade bônus Vamos fazer o pássaro pular para cima e para frente:\nAdicione o comando abaixo no arquivo [File: create-game.js] bird.body.velocity.x = 100;\nPássaro caindo com rotação Vamos adicionar rotação ao pássaro:\nAdicione o comando abaixo no arquivo [File: update-game.js] if (bird.angle \u0026lt; 50) { bird.angle += 1; }\nComentários: If é um bloco condicional onde verificamos o ângulo do pássaro e se for menor que 50 estamos executando a condição. -bird.angle+=1;\nTrabalhando juntos Na janela Replit abaixo, iniciamos o código com a linha bird.angle +=1;.\nNo seu console você deverá ver um pássaro Jsappy girando em um ângulo depois de pressionar run:\n"
},
{
	"uri": "/pt-br/python-basics/conditional-statements-loops/nested-loops/",
	"title": "Nested Loops",
	"tags": [],
	"description": "Aplicativos avançados aplicativos para fluxos",
	"content": "Nested Loops Nested loops baseia-se no que aprendemos sobre loops for e loops while no exercício anterior. Você pode querer revisar a página For-loop e While-loop antes de prosseguirmos.\nNesta seção, usaremos um loop dentro de outro, que é chamado de Nested loop (loop aninhado). Nested while loop #Este é o formato do nested while loop while expressãoA: while expressãoB: declaração(B) declaração(A) No loop while acima, quando expressãoA produz Falso, pularemos o bloco inteiro. Quando a expressãoA produzir Verdadeiro, iremos para o loop while interno e verificaremos a expressãoB. Se a expressãoB produzir Verdadeiro, a declaração (B) será executada. Se a expressãoB produzir Falso, pularemos o loop while interno e iremos para a declaração (A).\nSe expressãoA produzir Falso, nenhuma das instruções será executada; declaração (A) e declaração (B) serão executadas se e somente se expressãoA e expressãoB produzirem Verdadeiro.\nVamos dar uma olhada em um exemplo de loop while aninhado.\n#Este é o exemplo do nested while loop. x = 0 y = 0 #Abaixo está nosso loop externo while x \u0026lt;3: #Imprime se \u0026#34;x \u0026lt; 3\u0026#34; produz Verdadeiro print(\u0026#34;Passando pelo loop while externo, x é\u0026#34;, x, \u0026#34;y é\u0026#34;, y, sep = \u0026#34; \u0026#34;) #Abaixo está nosso loop interno while y \u0026lt; 5: #Imprime se \u0026#34;y \u0026lt; 5\u0026#34; produz Verdadeiro print(\u0026#34;Passando pelo loop while interno, x é\u0026#34;, x, \u0026#34;y é\u0026#34;, y, sep = \u0026#34; \u0026#34;) y + = 1 #Os códigos abaixo são executados após o término de cada loop interno. x + = 1 y = 0 Esta é a saída do nosso exemplo.\nPassando pelo loop while externo, x é 0 y é 0\rPassando pelo loop while interno, x é 0 y é 0\rPassando pelo loop while interno, x é 0 y é 1\rPassando pelo loop while interno, x é 0 y é 2\rPassando pelo loop while interno, x é 0 y é 3\rPassando pelo loop while interno, x é 0 y é 4\rPassando pelo loop while externo, x é 1 y é 0\rPassando pelo loop while interno, x é 1 y é 0\rPassando pelo loop while interno, x é 1 y é 1\rPassando pelo loop while interno, x é 1 y é 2\rPassando pelo loop while interno, x é 1 y é 3\rPassando pelo loop while interno, x é 1 y é 4\rPassando pelo loop while externo, x é 2 y é 0\rPassando pelo loop while interno, x é 2 y é 0\rPassando pelo loop while interno, x é 2 y é 1\rPassando pelo loop while interno, x é 2 y é 2\rPassando pelo loop while interno, x é 2 y é 3\rPassando pelo loop while interno, x é 2 y é 4 Perguntas Você pode tentar descobrir como os valores de x e y mudam e explicar por quê?\n(Dica: quantas vezes passamos pelo loop externo e pelo loop interno separadamente?)\nDesafio Um Tente alterar os números inteiros no nested while loop e prever as saídas. Em seguida, execute o código e observe as saídas. Eles correspondem às suas previsões?\nNested for loop #Este é o formato do loop for aninhado for variávelA in intervaloA: for variávelB in intervaloB: declarações(B) declarações(A) No loop for acima, quando a variávelA não estiver no intervaloA(rangeA), pularemos o bloco inteiro. Quando a variávelA estiver no intervaloA, iremos para o loop for interno. Se a variávelB estiver no intervaloB, a instrução (B) será executada. Se a variávelB(rangeB) não estiver no intervaloB, pularemos o loop for interno e iremos para o loop externo.\nSe a variávelA não estiver no intervaloA, nenhuma das instruções será executada; declaração (B) e declaração (A) serão executadas se e somente se a variávelA estiver no intervaloA e a variávelB estiver no intervaloB.\nVejamos um exemplo.\n#Este é o exemplo de loop for aninhado #Abaixo está nosso loop externo for n in range(0, 3): #Abaixo está nosso loop interno for m in range(0, 3): #Imprima se m estiver no intervalo(0, 3) print(\u0026#34;(\u0026#34;, n, \u0026#34;,\u0026#34;, m, \u0026#34;)\u0026#34;, end = \u0026#34; \u0026#34;) #Imprima se n estiver no intervalo(0, 3) print(\u0026#34;\u0026#34;) Esta é a saída do nosso exemplo.\n( 0 , 0 ) ( 0 , 1 ) ( 0 , 2 ) ( 1 , 0 ) ( 1 , 1 ) ( 1 , 2 ) ( 2 , 0 ) ( 2 , 1 ) ( 2 , 2 ) Perguntas Você pode tentar explicar o padrão de impressão?\n(Dica: quantas vezes passamos pelo loop externo e pelo loop interno separadamente?)\nDesafio Dois Tente alterar os números inteiros no loop for aninhado e prever as saídas. Em seguida, execute o código e observe as saídas. Eles correspondem às suas previsões?\nPerguntas Tente inicializar n e m. Isso mudará nossa saída dos nested loops e por quê? Em seguida, execute o código e observe as saídas. Eles correspondem às suas previsões?\nPerguntas Ao final desta seção, vamos pensar nas seguintes questões: 1. Por que a inicialização não altera a saída?\n(Dica: O que a variável no loop for representa?)\n2. O que devemos fazer se quisermos começar a imprimir a partir de (1, 1)?\n(Dica: O que aconteceria se alterássemos os intervalos?)\nDesafio Três Usando o nested loop for ou o loop while, tente imprimir o seguinte padrão\n```\r1 1 2 1 2 3 1 2 3 4 1 2 3 4 5\r```\rDica: para imprimir sem uma nova linha, você pode usar print(x, end=\u0026quot; \u0026quot;). E para forçar uma nova linha você pode usar print().\n"
},
{
	"uri": "/pt-br/java-datastructures/arrays/problem-2/",
	"title": "Problema 2: Arrays Avançados",
	"tags": [],
	"description": "",
	"content": "\rTarefa 1: Encontre o custo médio! Suponha que temos um array contendo os custos de vários alimentos. Encontre o custo médio da comida!\nVocê pode usar um loop for para percorrer o array! Lembre-se, a média de uma lista é o total dividido pelo número de itens. Iniciar Replit\nTarefa 2: Classificando um array! O custo de cada item do cardápio está em todo lugar! Ajude-nos a classificar o array do menor para o maior.\nPense em uma maneira de classificar o array (há muitas maneiras diferentes de fazer isso)! Veja o exemplo! Se recebermos esta matriz abaixo,\nint[] cost = {100,90,50,60,20,1,3}; devemos obter a seguinte saída:\nint[] sorted = {1,3,20,50,60,90,100}; Iniciar Replit\nTarefa 3: Faça seu próprio array! (opcional) Agora é sua vez! Insira seus próprios elementos no array!\nIniciar Replit\n"
},
{
	"uri": "/pt-br/java-datastructures/arraylists/",
	"title": "ArrayList: ordenando no menu",
	"tags": [],
	"description": "",
	"content": "Agora que os clientes têm acesso a todos os itens do cardápio, é hora de eles fazerem seus pedidos. Um cliente pode querer adicionar um item ao seu pedido, remover um item, alterar um item ou acessar um item. Depois de finalizar o pedido, você deseja devolver um recibo contendo a quantidade de itens que o cliente encomendou, bem como cada item de uma lista para o cliente finalizar a compra. Realizaremos todas essas façanhas utilizando um ArrayList (Lista de Vetores).\n"
},
{
	"uri": "/pt-br/java-datastructures/2d-arrays/problem-1/",
	"title": "Problema 1: Cardápio de Exemplo",
	"tags": [],
	"description": "",
	"content": "Tarefa 1: Imprima o array 2D No array 2D abaixo temos uma lista de diferentes alimentos. Cada linha é do mesmo tipo. Por exemplo, a linha 1 é uma série de pratos principais. A linha 2 é uma variedade de bebidas e a linha 3 é uma variedade de sobremesas.\nString[][] menu = { { \u0026#34;Hamburger\u0026#34;, \u0026#34;Massa\u0026#34;, \u0026#34;Filé\u0026#34;, \u0026#34;Tacos\u0026#34; }, { \u0026#34;Coca\u0026#34;, \u0026#34;Sprite\u0026#34;, \u0026#34;Pepsi\u0026#34;, \u0026#34;Fanta\u0026#34; }, { \u0026#34;Pudim\u0026#34;, \u0026#34;Sorvete\u0026#34;, \u0026#34;Moti\u0026#34;, \u0026#34;Bolo\u0026#34; } }; Use o que você aprendeu para imprimir o array!\nIniciar Replit\nTarefa 2: Procure um item O gerente quer saber se existe algum item específico no cardápio. Construa um método de pesquisa que retorne true ou false se o item estiver no cardápio ou não.\nLembre-se de verificar todos os elementos da linha e da coluna! Que tipo de valor isso retorna? Iniciar Replit\n"
},
{
	"uri": "/pt-br/web-basics/activity-1/",
	"title": "Atividade 1 – Familiarize-se com o editor online",
	"tags": [],
	"description": "",
	"content": "Atividade 1 – Criando um site básico Agora é hora de começar a construir um site básico. Para concluir esta atividade, você precisará concluir as seguintes etapas:\nAbra o editor web (clique no botão \u0026ldquo;Try it yourself!\u0026rdquo; abaixo) Use as tags de cabeçalho para adicionar um título e as tags de parágrafo para escrever um parágrafo sobre Benji Se tiver tempo: escreva uma lista das guloseimas favoritas de Benji: peru, manteiga de amendoim e queijo ralado Try it yourself!\nUse este gráfico de referência para testar algumas tags HTML por conta própria.\nEtiqueta Descrição Exemplo \u0026lt;html\u0026gt;\u0026lt;/html\u0026gt; Descreve um documento HTML. Qualquer site deve começar com a tag de abertura e terminar com a tag de fechamento . Veja o exemplo do Codepen acima. \u0026lt;!-- --\u0026gt; Descreve um comentário. Os comentários devem ser vistos por outros programadores, mas não são exibidos no site. \u0026lt;!-- Esta linha não será exibida no navegador --\u0026gt; \u0026lt;head\u0026gt;\u0026lt;/head\u0026gt; Contém todos os elementos HTML que fornecem informações ao navegador para exibir o site corretamente. Os elementos HTML entre as tags e não são exibidos. Veja o exemplo da Code Pen acima \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; Contém o título do site a ser usado para nomear a aba do navegador. \u0026lt;head\u0026gt;\n\u0026lt;título\u0026gt; Meu site \u0026lt;/title\u0026gt;\n\u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;/body\u0026gt; Contém todos os elementos HTML exibidos na página, como texto e imagens. Veja o exemplo da Code Pen acima. \u0026lt;h1\u0026gt;\u0026lt;/h1\u0026gt;\n\u0026hellip; \u0026lt;h6\u0026gt;\u0026lt;/h6\u0026gt; Define um cabeçalho/título. \u0026lt;h1\u0026gt; define o cabeçalho/título mais importante (maior), enquanto \u0026lt;h6\u0026gt; define o título menos importante (menor). \u0026lt;h1\u0026gt;Este será um título grande\u0026lt;/h1\u0026gt;\n\u0026lt;h4\u0026gt;Este será um título menor\u0026lt;/h4\u0026gt; \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; Descreve um parágrafo. \u0026lt;p\u0026gt;Os cães evoluíram para amar os humanos. Concluindo, os cães são os melhores amigos do ser humano.\u0026lt;/p\u0026gt; \u0026lt;div\u0026gt;\u0026lt;/div\u0026gt; Define uma divisão ou seção no site. \u0026lt;div\u0026gt;\n\u0026lt;h1\u0026gt;Tudo sobre mim\u0026lt;/h1\u0026gt;\n\u0026lt;/div\u0026gt; \u0026lt;img\u0026gt; Uma imagem. É uma tag de fechamento automático, mas você deve especificar a origem da imagem para que o navegador saiba de onde obtê-la. \u0026lt;img src=\u0026ldquo;aka.ms/Benji-the-dog\u0026rdquo;\u0026gt; \u0026lt;hr\u0026gt; Desenha uma linha horizontal. Outra tag de fechamento automático que é útil se você deseja dividir o conteúdo da página. \u0026hellip; \u0026lt;hr\u0026gt; \u0026hellip; \u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;\n\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; Uma lista. Para iniciar a lista, use um \u0026lt;ul\u0026gt; marcação. Para cada item a ser adicionado à lista, coloque o item entre os caracteres \u0026lt;li\u0026gt; e tags \u0026lt;/li\u0026gt;. Termine a lista com \u0026lt;/ul\u0026gt; marcação. \u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;Este é um item de lista.\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; "
},
{
	"uri": "/pt-br/python-turtle/activity-2/",
	"title": "Atividade 2 – Simplificando código com loops",
	"tags": [],
	"description": "",
	"content": "Ótimo! Você desenhou um quadrado. Mas observe que estamos escrevendo as mesmas linhas repetidamente! Tivemos que repetir as instruções para traçar uma linha e virar à esquerda 4 vezes. Não seria ótimo se pudéssemos dar instruções uma vez e dizer ao programa para repeti-las 4 vezes? Nós podemos!\nPara fazer isso, precisamos usar loops. Os loops executam um conjunto de instruções várias vezes. Para ver isso em ação, aqui está um exemplo de código que desenha um triângulo:\nfor i in range(3): turtle.forward(50) turtle.left(120) Vamos entender o que esse código faz. for i in range(3): Esta instrução diz ao programa para executar as instruções em um loop. range(3) define um limite para quantas vezes o loop é executado (neste caso, 3 vezes). A letra i é chamada de variável. É usado para controlar quantas vezes executamos o conteúdo do loop.\nSintaxe complicada do Python - Parte 1 Sintaxe é como escrevemos linguagens para que sejam compreensíveis. Em português, temos regras ortográficas e gramaticais para ajudar a entender uns aos outros. Da mesma forma, a linguagem Python possui regras de sintaxe para que o computador possa entender nosso código.\nPrimeiro, observe que no final da linha com for, adicionamos dois pontos (:); isso significa que a próxima linha fará parte do loop for. O computador irá reclamar se você esquecer o :!\nAlém disso, adicionamos uma tabulação na frente de algumas linhas de código no exemplo acima. A tabulação informa ao computador que essas instruções são consideradas parte do loop for.\nPara ver a grande diferença que isso faz, dê uma olhada no código abaixo. Como removemos a tabulação na frente de turtle.left(120), o código não funcionará mais conforme esperado. Agora, repetimos turtle.forward(50) apenas três vezes e, em vez disso, obtemos uma linha reta!\nfor i in range(3): turtle.forward(50) turtle.left(120) Agora, pegue o código de exemplo que fornecemos e modifique-o ligeiramente para que, em vez de desenhar um triângulo, desenhe um quadrado. Você pode relembrar o que fez na Atividade 1 como uma dica.\n"
},
{
	"uri": "/pt-br/secret-messages/activity-3/",
	"title": "Atividade 3 - Loops",
	"tags": [],
	"description": "",
	"content": "Ótimo!\nO Rei solicitou agora que introduzamos a nossa mensagem letra por letra para que possamos alterá-la posteriormente.\nPara fazer isso, precisamos de algo chamado loops. Os loops nos permitem executar um bloco de código várias vezes. Vamos ver o exemplo abaixo que usa um loop para imprimir alguns números.\nfor(int i=0; i\u0026lt;3; i++){\rcout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; endl;\r} Vamos tentar entender o que essa linha de código faz.\nLoops for(int i=0; i\u0026lt;3; i++) { }. Isso informa ao programa que as instruções contidas entre colchetes {} devem ser executadas em um loop. Podemos identificar três partes diferentes dentro deste comando:\nint i=0; declara uma variável int chamada i que será inicializada como 0. Esta variável funcionará como um contador de quantas vezes estivemos no loop. i\u0026lt;3; é a condição que precisa ser atendida para que o loop continue funcionando. Se o valor da variável i for menor que 3, o loop continuará em execução. i++ adicionará 1 à variável i no final de cada loop. A parte mais importante a retirar disto é que esta é a forma geral de repetir as instruções um certo número de vezes (neste caso, 3 vezes). Uma propriedade das variáveis ​​string é que podemos contar a quantidade de caracteres na string.\nAcessando cada caractere de uma string Cada caractere de uma variável de string é chamado de char. Podemos acessar esse char pela posição que ele contém dentro da string. Vamos imaginar isso como uma lista de caracteres. O primeiro caractere estará na posição 0, o segundo na posição 1, e o próximo na posição 2, e assim por diante.\nDito isto, precisaríamos do seguinte código para acessar cada caractere:\npalavra da string = \u0026#34;olá\u0026#34;;\rletra char = palavra[0];\rcout \u0026lt;\u0026lt; \u0026#34;A primeira letra é: \u0026#34; \u0026lt;\u0026lt; letra \u0026lt;\u0026lt; endl; Isso imprimiria:\nA primeira letra é: o Tamanho da string Além de acessar cada caractere individual em uma string, também podemos saber o quão longa ela é usando as seguintes linhas de código:\nstring palavra = \u0026#34;olá\u0026#34;;\rint tamanhoPalavra = palavra.size();\rcout \u0026lt;\u0026lt; \u0026#34;O tamanho é: \u0026#34; \u0026lt;\u0026lt; tamanhoPalavra \u0026lt;\u0026lt; endl; Isso imprimiria:\nO tamanho é: 3 Agora modificamos o código que tínhamos para imprimir cada letra do nome em vez de um olá.\nIniciar Replit\n"
},
{
	"uri": "/pt-br/guidelines/web-developer/",
	"title": "Regras para Desenvolvedores Web",
	"tags": [],
	"description": "",
	"content": "Este documento é destinado apenas a desenvolvedores de sites para alterar os modelos e estilos do projeto de workshop da Nuevo Foundation\r.\nAntes de começar Antes de adicionar/atualizar o site, certifique-se de ter sincronizado com a equipe do projeto e o trabalho existente no Project Backlog\r.\nConfigurando Siga as instruções na página Introdução\rpara instalar o Git e o Hugo para testar o projeto localmente.\nEstilos e estrutura de web design Imagens: As imagens do site devem ser temas/imagens CSS Ignore os arquivos SCSS e use apenas arquivos CSS em /themes/docdock/static/css/ Certifique-se de adicionar uma referência ao CSS que deseja incluir no arquivo head.html em /themes/docdock/layouts/partials/flex/head.html Como é feita uma página de workshop 📄 Página completa: Para ver como tudo funciona junto (cabeçalho, menu, corpo e rodapé), olhe o arquivo /themes/docdock/layouts/_default/baseof.html. Cabeçalho: Aqui ficam os arquivos Meta, CSS e JS: /themes/docdock/layouts/partials/flex/head.html. Menu superior: Não mexa no arquivo config.toml, altere diretamente o HTML em /themes/docdock/layouts/partials/flex/body-before-content.html. Menu lateral: Está em /themes/docdock/layouts/partials/flex/menu.html. Rodapé: Fica em /themes/docdock/layouts/partials/flex/body-after-content.html. Caixa de informações da página: Também está em /themes/docdock/layouts/partials/flex/body-after-content.html. Socorro, o CSS sumiu Um desafio do Hugo é que um parâmetro chave na construção é a variável baseURL. Se o conteúdo estiver carregando e o CSS não, provavelmente há um problema com a configuração baseURL.\nVocê pode alterar o baseURL ao criar conteúdo em vez de alterar o arquivo config.toml. O exemplo abaixo irá reduzir o CSS e JS, definir o baseURL para o URL .org de produção e copiar os resultados para o diretório public.\nhugo --minify --baseURL \u0026quot;https://workshops.nuevofoundation.org/\u0026quot;\nDicas e truques Ignorar Público: Por padrão, executar hugo sem parâmetros criará o site no diretório público. Certifique-se de não adicionar o diretório público ao controle de origem (está no gitignore agora). Navegação esquerda: você pode ocultar o conteúdo da navegação esquerda definindo metadados no arquivo oculto: true (como a marcação index.md deste workshop!) Parciais: Para componentes reutilizáveis ​​em uma página, crie um novo parcial em /themes/docdock/layouts/partials/flex/. "
},
{
	"uri": "/pt-br/arduino/activity-1/",
	"title": "Atividade 1: LED piscante",
	"tags": [],
	"description": "",
	"content": "Fiação do nosso LED piscante Para sua introdução a este sistema, vamos ligar e desligar um LED. A partir disso, podemos obter o básico da eletrônica e como nosso programa pode executar e manipular componentes\nConecte o terminal longo (ânodo) do seu LED ao pino 25J e o terminal curto (cátodo) em qualquer lugar na linha azul [-]. Conecte um resistor de 220 com uma perna em 25H e a outra em qualquer lugar na linha vermelha [+]. Conecte uma extremidade de um fio de jumper em qualquer lugar na mesma linha vermelha [+] na placa de ensaio como no Passo 2 e a outra em 5V no Elegoo. Conecte uma extremidade de um fio de jumper em 31Z na placa de ensaio e a outra em GND (terra) no Elegoo. Conecte a placa Arduino via USB ao seu PC e abra o aplicativo Arduino IDE. A codificação de cores dos fios é comum e muito útil! Aqui usamos vermelho para carga positiva e preto para carga negativa, mas a cor não importa desde que você possa lembrar o que é o quê.\nAbrindo o código de amostra do LED Clique em arquivo -\u0026gt; Exemplos -\u0026gt; 01.Basics -\u0026gt; Piscar Agora clique no botão de upload para implantar o programa no Arduino EXTRA: Observe o tempo de ligar e desligar o LED. O que você acha que poderia mudar no programa para modificar esse timing? Se você disse o número 1000 em atraso (1000); Tens razão! Altere esse número (não se esqueça de pressionar o botão de upload novamente). Notou alguma diferença? Por que você acha que 1000 é 1 segundo? Quanto tempo seriam 10 minutos? Porquê?\n"
},
{
	"uri": "/pt-br/adafruit/downloading-your-program/",
	"title": "Baixando o seu programa",
	"tags": [],
	"description": "",
	"content": "Na parte inferior da sua área de trabalho, ao lado do nome do seu programa, você poderá ver um botão de download em cor rosa-brilhante. Mas antes de baixar o seu programa, vamos nomeá-lo primeiro. Você pode nomear à sua preferência. Aqui nós o chamamos de adafruit_musicalfruit. Agora, clique no botão de download.\nVocê verá uma nova janela, perguntando onde deseja salvar o seu arquivo. O padrão deve ser a pasta Downloads, caso contrário, navegue até a pasta de Downloads e salve o arquivo lá.\nAgora você pode conectar o seu cabo USB ao computador. Ao conectar, você verá algumas luzes do arco-íris! Isso significa que a sua placa está ligada e executando o programa padrão. Vamos substituí-lo pelo nosso programa. Clique no pequeno botão de reset no centro da placa. As luzes devem ficar vermelhas e depois verdes. Se as luzes não ficarem verdes, clique duas vezes rapidamente no botão de reinicialização e aguarde alguns segundos.\nQuando as luzes estiverem verdes, abra uma janela do Windows Explorer, caso ela não apareça de imediato. Agora você verá uma unidade CPLAYBOOT. Aqui é mostrado como uma unidade D:, mas pode ser E:, F:, etc.\nDepois de confirmar que você pode ver este CPLAYBOOT, vá para a pasta Downloads e encontre o arquivo que você salvou lá. Você precisará clicar e arrastar esse arquivo até passar o mouse sobre CPLAYBOOT. Você verá algum texto pop-up dizendo “\u0026ndash;\u0026gt; Move to CPLAYBOOT”, traduzindo, mova para CPLAYBOOT. Solte o arquivo lá para copiá-lo para CPLAYBOOT.\nDepois de soltar o arquivo no lugar certo, as luzes verdes se apagarão, indicando que você programou seu Adafruit com sucesso!\nPARABÉNS! Você conseguiu finalizar o seu projeto! Fique à vontade para voltar e ajustar os sons ou seu número mágico nas comparações. "
},
{
	"uri": "/pt-br/python-basics/data-structures/",
	"title": "Estruturas de dados",
	"tags": [],
	"description": "",
	"content": "Visão geral Na seção anterior, você aprendeu sobre instruções condicionais e loops. Nesta seção, apresentaremos diferentes estruturas de dados. A estrutura de dados é um método de organizar e armazenar dados e informações de forma que um usuário possa utilizá-los com eficiência. Em Python, existem três estruturas de dados principais nas quais nos aprofundaremos e usaremos ao longo desta seção: Listas (Lists), Tuplas (Tuples) e Conjuntos (Sets).\nVamos começar!\nTópicos\rListas Tuplas Conjunto "
},
{
	"uri": "/pt-br/python-earsketch/getting-started-earsketch/",
	"title": "Introdução ao Earsketch",
	"tags": [],
	"description": "introdução sobre como usar o Earsketch",
	"content": "EarSketch\ré um ambiente de programação educacional gratuito desenvolvido no Georgia Institute of Technology. Iremos compor músicas usando EarSketch hoje.\nPara fazer música, clique no botão abaixo para abrir o Earsketch em uma nova aba. Iniciar Earsketch\nAgora vamos começar. Clique no ícone Scripts na barra de menu esquerda e selecione Create a new script. Quando solicitado a inserir o nome do script, digite myjam e clique no botão Create. Não exclua nenhum código pré-existente! Iremos inserir nosso código entre eles. Recomendado para professores - Visão geral do EarSketch Por favor, dê uma olhada na visão geral do EarSketch antes de começar a aula. É importante saber como navegar para frente e para trás na UI (Interface do Usuário).\nA barra de navegação no lado esquerdo da tela é sua base para navegar por tudo o que o EarSketch tem a oferecer.\nO primeiro item da barra de navegação é a coleção Sounds. É o local central para todos os sons pré-carregados que o EarSketch tem a oferecer. No navegador de sons, você pode filtrar quais sons aparecem com base nos artistas, gênero ou instrumentos.\nO próximo ícone na barra de navegação é o painel Scripts. É aqui que escreveremos nosso código.\nO próximo ícone (terceiro de cima) é a seção Share. Você pode usar isso para salvar seu código, baixá-lo ou compartilhá-lo com seus amigos. Iremos pular esta seção para este exercício.\nOs dois últimos ícones na barra de navegação são os guias API Browser e Curriculum.\nUsaremos o API Browser para fazer música. Uma Interface de Programação de Aplicativo ou API é um conjunto de códigos que está pronto para você usar imediatamente! Você pode notar dois ícones à direita de cada API. O primeiro ícone fornece uma descrição da API e um exemplo de como usá-la. O segundo ícone copia e cola a API no editor de código, então você nem precisa digitá-la! Nós usaremos alguns deles nas próximas seções.\nO último ícone na imagem acima mostra o guia Curriculum. Se quiser saber mais sobre o EarSketch, você pode explorar a seção que aparece no lado direito da janela ao clicar nela. Iremos pular esta seção para este exercício.\n"
},
{
	"uri": "/pt-br/security/spy-game/",
	"title": "Jogo de espião",
	"tags": [],
	"description": "",
	"content": "Na nossa última atividade aprendemos que uma senha forte é uma combinação de caracteres aleatórios (possivelmente com letras maiúsculas e minúsculas), números e alguns caracteres especiais. Agora é hora de jogar Hacked ou Safe!\nEm uma lista de senhas usadas pelo nosso Nuvi, selecione a senha mais forte que não pode ser hackeada por Eve.\nEssa senha pode ser hackeada?\rSim\rNão\rEssa senha pode ser hackeada?\rSim\rNão\rEssa senha pode ser hackeada?\rSim\rNão\rEssa senha pode ser hackeada?\rSim\rNão\rPARABÉNS! Você conseguiu. Veja as respostas clicando no botão abaixo. Concluído "
},
{
	"uri": "/pt-br/security-phishing/other-phishing-types/",
	"title": "More about phishing",
	"tags": [],
	"description": "",
	"content": "Alice goes on to explain different kinds of phishing scams other than the email phishing.\nSmishing (SMS Phishing) Phishing conducted via Short Message Service (SMS), a telephone-based text messaging service. A smishing text, for example, attempts to entice a victim into revealing personal information via a link that leads to a phishing website.\nIn the above image, an unknown sender texts you about free deals on iPads and lures you into clicking a malicious link.\nMalvertising Malvertising is malicious advertising that contains active scripts designed to download malware or force unwanted content onto your computer.\nIn the above image, a malvertisment blends into a genuine website. It encourages you to click on the download button. This can lead you to install a virus or a malware on your computer.\nSearch Engine Phishing Some phishing scams involve search engines where the user is directed to products sites which may offer low cost products or services. When the user tries to buy the product by entering the credit card details, the phishing site collects those details. There are many fake bank websites and fake product ads that are used to lure users into clicking a malicious link.\nMany search engines prioritize advertisement links for a search query. Make sure to verify the link before clicking on it so you avoid going to a malicious website as highlighted in the above image.\n"
},
{
	"uri": "/pt-br/security/summary/",
	"title": "Sumário",
	"tags": [],
	"description": "",
	"content": "Lembre-se que as características de uma senha forte são: Pelo menos 8 caracteres – quanto mais caracteres, melhor Uma mistura de letras e números Inclusão de pelo menos um caractere especial, por exemplo, ! @ # ? ] Nota: não use \u0026lt; ou \u0026gt; em sua senha, pois ambos podem causar problemas nos navegadores da Web Uma senha forte é difícil de adivinhar, mas deve ser fácil de lembrar - uma senha que precisa ser anotada não é forte, não importa quantas das características acima sejam empregadas.\nSolução Em nosso Jogo de Espionagem, a senha \u0026ldquo;Ilovemypet\u0026rdquo; não contém números e caracteres especiais, e a senha \u0026ldquo;12345678\u0026rdquo; é uma sequência de números; portanto, ambas as senhas são fracas e podem ser facilmente hackeadas/adivinhadas por uma pessoa mal-intencionada.\n"
},
{
	"uri": "/pt-br/linux-basics/activity-2/",
	"title": "Atividade 2 - Identificando a Localização do Usuário",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para determinar em qual diretório você está atualmente",
	"content": "\rAntes que possamos parar o ataque dos hackers, precisamos aprender a navegar no sistema de arquivos Linux!\rO que é um sistema de arquivos? Um sistema de arquivos é uma coleção estruturada de arquivos e dados em um disco ou unidade de computador. O nível mais alto de um sistema de arquivos é chamado de \u0026ldquo;raiz\u0026rdquo;. Pense nisso como o início do sistema de arquivos.\nCuriosidade: os sistemas de arquivos são frequentemente descritos como uma \u0026ldquo;árvore\u0026rdquo;. Isso ocorre porque o sistema de arquivos se parece com uma árvore de cabeça para baixo e cada pasta ou diretório seria como um ramo ou folha. Por exemplo, o seu sistema de arquivos pode se parecer com o abaixo.\nEm um computador Windows, você pode navegar pelo sistema de arquivos da unidade \u0026ldquo;C:\\\u0026rdquo; deste computador usando o \u0026ldquo;Explorador de Arquivos\u0026rdquo;. Observe a sua estrutura abaixo:\nEm um Mac, você pode navegar pelo sistema de arquivos do computador em \u0026ldquo;Finder\u0026rdquo; como podemos observar abaixo:\nOnde nós estamos no sistema de arquivos? Queremos descobrir qual é o nosso \u0026ldquo;diretório de trabalho atual\u0026rdquo;. Este é o local no sistema de arquivos em que você está atualmente.\nO comando do Linux pwd exibirá o caminho completo do diretório de trabalho atual. Traduzindo do Inglês, significa \u0026ldquo;Imprima o diretório Atual\u0026rdquo;. Vamos tentar?\npwd A saída esperada para o seu comando pode ser parecida com a nossa abaixo:\nEla mostra o caminho /home/nuvi. E o que isso significa? Tentaremos desvendar abaixo:\n/: Este é o símbolo para o diretório raiz do sistema de arquivos. É sempre o primeiro diretório no Linux. /home: Este é o caminho do diretório home, localizado no diretório raiz. /home/nuvi: Este é o caminho para o diretório nuvi, localizado no diretório home. A saída do terminal finaliza aqui, significando que /home/nuvi é o diretório de trabalho atual onde estamos localizados. O processo de entrar no sistema de arquivos através de cada diretório pode continuar por muitas outras etapas em alguns casos. O caminho exibido e descrito acima é chamado de caminho absoluto, porque é o caminho fornecido do diretório raiz até o diretório atual. Como podemos navegar pelo sistema de arquivos? Para mover para um diretório diferente, use o comando cd. Isso significa \u0026ldquo;Alterar diretório\u0026rdquo;. O formato deste comando é cd [nome do diretório].\nNa saída do terminal acima, podemos observar que quando digitamos pwd novamente, o diretório de trabalho em que estamos agora é Desktop. Agora vamos tentar o comando cd ..:\ncd .. O .. após o comando cd leva você um nível acima na árvore do sistema de arquivos. A saída de pwd agora mostra que estamos de volta ao diretório que começamos, ou seja, nós começamos no diretório nuvi, depois descemos a árvore para diretório Desktop com o comando cd Desktop, e então subimos na árvore com o comando cd ...\nExcelente! Na próxima atividade, exploraremos os mais sobre diretórios.\r"
},
{
	"uri": "/pt-br/java-basics/activity-4/",
	"title": "Estruturas de Controle",
	"tags": [],
	"description": "Apresente os loops if-else, for e while em Java.",
	"content": "\nTome uma decisão: declaração If Patrick 🐥 é um pato muito educado que gosta de cumprimentar a todos que encontra com \u0026ldquo;Bom Dia\u0026rdquo;, \u0026ldquo;Boa Tarde\u0026rdquo; ou \u0026ldquo;Boa Noite\u0026rdquo; dependendo do horário.\n(image by National Geographic: giphy.com/natgeochannel)\nComo aprendemos antes, podemos imprimir essas declarações conforme abaixo:\nSystem.out.println(\u0026#34;Bom Dia\u0026#34;); // diga isso entre 0:00 - 11:59 System.out.println(\u0026#34;Boa Tarde\u0026#34;); // diga isso entre 12:00 - 19:59 System.out.println(\u0026#34;Boa Noite\u0026#34;); // diga isso entre 20:00 - 23:59 No entanto, também sabemos que Patrick 🐥 só deveria decidir dizer uma dessas afirmações com base no horário atual.\nEm outras palavras, precisamos escrever um código que tome uma decisão sobre o que imprimir com base nas condições da situação (condicionalmente).\nEm Java, tomamos uma decisão usando uma declaração if ou uma declaração if\u0026hellip;else. Leia as notas abaixo:\nDeclaração If if(boolean expression){\rAction(s) to Take\r} Uma declaração if segue a estrutura mostrada acima. As ações a serem executadas (instruções) no bloco só serão executadas se a expressão booleana for true. Caso contrário, o programa irá pular para a instrução após o bloco se a expressão booleana for false.\nDeclaração If-Else if(boolean expression){\rAction(s) to Take A\r}else{\rAction(s) to Take B\r} Uma declaração if-else segue a estrutura mostrada acima. Se a expressão booleana for true, o programa executará a(s) Ação(ões) para tomar A dentro do bloco if. Caso contrário, o programa executa apenas Action(s) to Take B dentro do bloco else.\nExemplo boolean likeMusic = true; if(likeMusic == true) { System.out.println(\u0026#34;I like Music\u0026#34;); } else { System.out.println(\u0026#34;I don\u0026#39;t like Music\u0026#34;); } O código acima imprimirá a declaração I like Music porque a expressão booleana, likeMusic == true, é verdadeira.\nVamos revisitar o exemplo acima e tomar a decisão de Patrick sobre dizer “Bom dia”, “Boa tarde”, “Boa noite”.\nPatrick deve dizer \u0026ldquo;Bom dia\u0026rdquo; entre 0h e 11h59, \u0026ldquo;Boa tarde\u0026rdquo; entre 12h e 19h59 e \u0026ldquo;Boa noite\u0026rdquo; entre 20h e 23h59.\nTemos uma variável currentHour que armazena a hora atual. Preencha a boolean expression A e a boolean expression B corretas para completar o programa. Teste seu resultado atribuindo a variável currentHour a números de 0 a 23: Launch Replit\nRepetição: For-Loop, While-Loop Na aula de matemática, a professora de Patrick 🐥 pede à turma que resolva um desafio de matemática, e ele pode precisar de ajuda.\nA professora pede que eles encontrem a soma de 1, 2, 3, \u0026hellip;., 100. Isso é 1 + 2 + 3 + 4 \u0026hellip; + 99 + 100?\nEmbora possamos conectar isso a uma calculadora, isso vai demorar um pouco. Felizmente, em Java, você pode calcular isso facilmente em 3 linhas com a ajuda de um for loop ou while loop.\nFor loops e While loops são estruturas de controle em Java que permitem executar blocos de código várias vezes.\nWhile Loop while(boolean expression){\rAction(s) to Take\r} Ação(ões) a serem executadas no bloco while serão executadas enquanto a expressão booleana for true.\nA seguir está um exemplo que imprime de 1 a 10:\nint number = 1; while(number \u0026lt;= 10){ System.out.println(number); number = number + 1; // número é incrementado em 1 } No while loop acima, o programa imprimirá o valor de number e incrementará number. Esta etapa será executada enquanto número \u0026lt;= 10 e, neste caso, o loop termina quando número for 11.\nNota: Para while loops, você deve se lembrar de incrementar a variável condicional, caso contrário você introduzirá um loop infinito em seu programa.\nFor Loop for(initialization; termination condition; update statement){\rAction(s) to Take\r} Em um for loop, existem três partes no bloco de condição: inicialização, condição de término e instrução de atualização.\nAo executar um for loop, o programa executará a parte de inicialização. Um exemplo é int número = 1. Em seguida, o programa verifica a condição de término. Um exemplo é número \u0026lt;= 10. Se for true: execute as Ações a serem executadas execute a instrução de atualização (um exemplo é número = número + 1) Repita as etapas 2 e 3. Se a condição de finalização for false, saia do for loop. A seguir está um exemplo que imprime de 1 a 10:\nfor(int number = 1; number \u0026lt;= 10; number = number + 1){ System.out.println(number); } Depois de aprender sobre o for loop e o while loop, vamos ver como podemos ajudar Patrick 🐥 a calcular 1 + 2 + 3 + 4 \u0026hellip; + 99 + 100 facilmente?\nVamos tentar fazer isso em um while loop:\nTemos uma variável chamada total que rastreia a soma total da adição que obtivemos até agora. Temos uma variável chamada num que rastreia o próximo número a ser adicionado ao total. Escreva a boolean expression apropriada e escreva o while loop. Seguindo essas etapas, obteremos um loop while como este:\nint total = 0; int num = 1; while(num \u0026lt;= 100){ total = total + num; num = num + 1; } System.out.println(\u0026#34;Resposta calculada em um while loop: \u0026#34; + total); Faça isso abaixo clicando em Run e escreva uma versão do for loop que calcule a mesma coisa! Você deve obter a mesma resposta!\nLaunch Replit\n"
},
{
	"uri": "/pt-br/unity/making-nuvi-move/",
	"title": "Fazendo Nuvi se Mover",
	"tags": [],
	"description": "",
	"content": "Agora que sabemos como é um Script, vamos criar um.\nPrimeiro, queremos criar uma nova pasta chamada \u0026ldquo;Scripts\u0026rdquo; em Assets na janela Project, semelhante à pasta Drawings. Faremos isso porque é uma boa prática ter todos os scripts em um local de fácil acesso. Clique duas vezes na pasta Scripts e crie um script clicando com o botão direito e selecionando “C# Script”. Você também pode acessar a guia \u0026ldquo;Assets\u0026rdquo; e escolher \u0026ldquo;Create -\u0026gt; C# Script\u0026rdquo; conforme mostrado abaixo.\nNomeie este script como \u0026ldquo;PlayerMovement\u0026rdquo; e arraste e solte este script na janela do Nuvi Inspector. Também podemos pesquisar o nome do script no Nuvi Inspector, como fizemos para o componente Rigidbody2D.\nAbra o script e copie e cole o código abaixo:\nusing System.Collections; using System.Collections.Generic; using UnityEngine; public class PlayerMovement : MonoBehaviour { public float speed; private Vector3 movement; //(x,y,0) vetor private float move_x; //x coordenada do jogador private float move_y; //y coordenada do jogador void Start() { speed = 7f; movement = new Vector3(0.0f, 0.0f, 0.0f); } void Update() { move_x = Input.GetAxisRaw(\u0026#34;Horizontal\u0026#34;); //retorna -1/0/1 move_y = Input.GetAxisRaw(\u0026#34;Vertical\u0026#34;); movement = new Vector3(move_x, move_y, 0.0f); } void FixedUpdate() { if(movement != Vector3.zero) //se não houver entrada, então não se mova { rb.MovePosition(transform.position + speed * movement * Time.deltaTime); //move fisicamente o Nuvi na direção transform.rotation = Quaternion.LookRotation(transform.forward, -movement); //por se virar à direção em que está se movendo //-movimento porque caso contrário ele ficará na direção oposta, já que a transformação está voltada para baixo } } } Se tentássemos executar o script agora, ele não funcionaria devido a erros do compilador. Para corrigir isso, precisamos adicionar public Rigidbody2D rb; em public float speed;. Em seguida, salve para atualizar o script no Unity.\nComo podemos ver na seção PlayerMovement do Nuvi Inspector, a variável rb está vazia. Precisamos arrastar e soltar o rigidbody2D do Nuvi de seu inspetor para a variável rb. Agora, tente executar o jogo!\nParecendo tudo bem! \u0026hellip;Ou não?\nReserve um momento para observar como o Nuvi se move horizontalmente/verticalmente em comparação com diagonalmente. Na verdade, o Nuvi se move um pouco mais rápido na diagonal. Devemos consertar isso – é um pequeno detalhe, mas importante. Para entender o porquê, precisamos trazer um pouco de matemática.\nLembre-se do Teorema de Pitágoras, a2 + b2 = c2. Quando o Nuvi se move diagonalmente, os movimentos horizontais e verticais são mesclados. Isso acontece em movement = new Vector3(move_x, move_y, 0.0f).\nNosso jogo recebe \u0026ldquo;1\u0026rdquo; como entrada horizontal quando as teclas horizontais são pressionadas e \u0026ldquo;1\u0026rdquo; como entrada vertical quando as teclas verticais são pressionadas. Mas quando eles são pressionados ao mesmo tempo, nosso jogo usa o Teorema de Pitágoras para descobrir o movimento diagonal de Nuvi, c.\nSe definirmos a=1 e b=1, então nossa equação será semelhante a:\na2 + b2 = c2\n12 + 12 = c2\n2 = c2\n√2 = c\n1.414\u0026hellip; = c\nPortanto, o Nuvi está se movendo 1.414 vezes mais rápido do que horizontal ou verticalmente.\nPara corrigir isso, adicione movement = motion.normalized; em movement = new Vector3(move_x, move_y, 0.0f). Esta linha transformará 1,414 em 1. Agora execute o jogo para ver que Nuvi se move na mesma velocidade na diagonal\nHá também uma coisa importante que está faltando no nosso jogo. Você percebe como o Nuvi pode sair da tela? Agora, isso é um grande problema – não queremos que o Nuvi fuja para o espaço, não é? Na próxima lição corrigiremos isso completamente.\n"
},
{
	"uri": "/pt-br/supply-chain-analytics/challenge/",
	"title": "Desafio Extra",
	"tags": [],
	"description": "",
	"content": "Uma das cercas da fazenda se soltou e todas as galinhas e galinhas escaparam! Por conta disso, estamos com poucos ovos e agora temos que alterar a capacidade máxima de ovos de 24 para 15. ☹\nVocê consegue calcular quais deveriam ser as novas quantidades ideais de biscoitos? Quanto seu lucro mudou devido à escassez?\nMude a célula que tem a restrição de capacidade para os ovos de 24 para 15 e execute novamente o Solver! Você não precisará alterar nada no Solver se configurar suas fórmulas corretamente, você só precisará alterar o valor da célula.\n"
},
{
	"uri": "/pt-br/android-tictactoe/puzzle2/",
	"title": "Quebra-cabeça 2 - Bem-vindo usuário",
	"tags": [],
	"description": "",
	"content": "Vamos adicionar uma mensagem de boas-vindas que o usuário poderá ver quando iniciar seu aplicativo!\nVá para MainActivity.kt e encontre // PUZZLE 2 no código e escreva um brinde que dá as boas-vindas ao usuário ao seu jogo com \u0026ldquo;Bem-vindo ao Jogo da Velha!\u0026rdquo;. Agora pressione o botão play (► ) na parte superior do Android Studio e seu aplicativo deverá ficar assim:\nAJUDA! Recebi muito texto em vermelho! Se você vir algum texto em vermelho, você encontrou alguns erros! Por favor, peça ajuda. Cuidado com o seguinte ao codificar no Android:\nO t em Toast está em maiúscula. Certifique-se de que a frase que deseja mostrar esteja entre aspas e que os parênteses estejam no lugar certo. Não exclua chaves { ou }. "
},
{
	"uri": "/pt-br/guidelines/formatting/",
	"title": "Formatando",
	"tags": [],
	"description": "",
	"content": "Ao criar ou modificar workshops, você os escreverá usando a sintaxe Markdown padrão, além de alguma sintaxe personalizada adicional. Esta página explica qual sintaxe usar para adicionar formatos específicos a um workshop.\nReferência de formatação Folha de dicas do Markdown padrão\rOpções de formatação personalizada usando códigos de acesso\rExemplos de formatação Este tema inclui uma série de opções para personalizar a aparência do seu site. Abaixo, você pode encontrar vários exemplos de uso, que incluem a sintaxe a ser usada seguida pelo que realmente é mostrado em uma página quando você usa essa sintaxe.\nAlertas Informações {{\u0026lt; alert theme=\u0026quot;info\u0026quot; \u0026gt;}}**Isto** é uma informação {{\u0026lt; /alert \u0026gt;}}\rIsto é uma informação\rSucesso {{\u0026lt; alert theme=\u0026quot;success\u0026quot; \u0026gt;}}**Yeahhh !** é um sucesso{{\u0026lt; /alert \u0026gt;}}\rYeahhh ! é um sucesso\rAviso {{\u0026lt; alert theme=\u0026quot;warning\u0026quot; \u0026gt;}}**Aviso** é um aviso{{\u0026lt; /alert \u0026gt;}}\rAviso é um aviso\rPerigo {{\u0026lt; alert theme=\u0026quot;danger\u0026quot; \u0026gt;}}**Cuidado !** é um perigo{{\u0026lt; /alert \u0026gt;}}\rCuidado ! é um perigo\rBotões {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; \u0026gt;}} ir para Nuevo Foundation {{\u0026lt; /button \u0026gt;}}\rir para Nuevo Foundation Botão de Sucesso {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;success\u0026quot; \u0026gt;}} Sucesso {{\u0026lt; /button \u0026gt;}}\rSucesso Botão Informação {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;info\u0026quot; \u0026gt;}} Informação {{\u0026lt; /button \u0026gt;}}\rInformação Botão de Aviso {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;warning\u0026quot; \u0026gt;}} Aviso {{\u0026lt; /button \u0026gt;}}\rAviso Botão de Perigo {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;danger\u0026quot; \u0026gt;}} Perigo ! {{\u0026lt; /button \u0026gt;}}\rPerigo ! Botão Padrão {{\u0026lt; button href=\u0026quot;https://nuevofoundation.org\u0026quot; theme=\u0026quot;default\u0026quot; \u0026gt;}} Perigo ! {{\u0026lt; /button \u0026gt;}}\rPerigo ! Expandir {{\u0026lt;expand \u0026quot;Clique aqui para expandir!\u0026quot;\u0026gt;}}\rLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\rtempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\rquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\rconsequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\rcillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\rproident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r{{\u0026lt; /expand\u0026gt;}}\rClique aqui para expandir!\rLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nAvisos Nota {{\u0026lt; notice note \u0026gt;}}\rUm aviso de isenção de responsabilidade\r{{\u0026lt; /notice \u0026gt;}}\rUm aviso de isenção de responsabilidade\nInformativo {{\u0026lt; notice info \u0026gt;}}\rUma isenção de responsabilidade de informação\r{{\u0026lt; /notice \u0026gt;}}\rUma isenção de responsabilidade de informação\nDica {{\u0026lt; notice tip \u0026gt;}}\rUm aviso de isenção de responsabilidade\r{{\u0026lt; /notice \u0026gt;}}\rUm aviso de isenção de responsabilidade\nAviso {{\u0026lt; notice warning \u0026gt;}}\rUm aviso de isenção de responsabilidade\r{{\u0026lt; /notice \u0026gt;}}\rUm aviso de isenção de responsabilidade\nExemplos de ícones disponíveis Lista Completa Aqui\rÍcone Nome do ícone Exemplo de Uso asterisk {{\u0026lt;icon name=\u0026quot;asterisk\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} plus {{\u0026lt;icon name=\u0026quot;plus\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} euro {{\u0026lt;icon name=\u0026quot;euro\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} eur {{\u0026lt;icon name=\u0026quot;eur\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} minus {{\u0026lt;icon name=\u0026quot;minus\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} cloud {{\u0026lt;icon name=\u0026quot;cloud\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} envelope {{\u0026lt;icon name=\u0026quot;envelope\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} pencil {{\u0026lt;icon name=\u0026quot;pencil\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} glass {{\u0026lt;icon name=\u0026quot;glass\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} music {{\u0026lt;icon name=\u0026quot;music\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} search {{\u0026lt;icon name=\u0026quot;search\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} heart {{\u0026lt;icon name=\u0026quot;heart\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} star {{\u0026lt;icon name=\u0026quot;star\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} star-empty {{\u0026lt;icon name=\u0026quot;star-empty\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} user {{\u0026lt;icon name=\u0026quot;user\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} film {{\u0026lt;icon name=\u0026quot;film\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} th-large {{\u0026lt;icon name=\u0026quot;th-large\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} th {{\u0026lt;icon name=\u0026quot;th\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} th-list {{\u0026lt;icon name=\u0026quot;th-list\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} ok {{\u0026lt;icon name=\u0026quot;ok\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} remove {{\u0026lt;icon name=\u0026quot;remove\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} zoom-in {{\u0026lt;icon name=\u0026quot;zoom-in\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} zoom-out {{\u0026lt;icon name=\u0026quot;zoom-out\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} off {{\u0026lt;icon name=\u0026quot;off\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} signal {{\u0026lt;icon name=\u0026quot;signal\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} cog {{\u0026lt;icon name=\u0026quot;cog\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} trash {{\u0026lt;icon name=\u0026quot;trash\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} home {{\u0026lt;icon name=\u0026quot;home\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} file {{\u0026lt;icon name=\u0026quot;file\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} time {{\u0026lt;icon name=\u0026quot;time\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} road {{\u0026lt;icon name=\u0026quot;road\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} download-alt {{\u0026lt;icon name=\u0026quot;download-alt\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} download {{\u0026lt;icon name=\u0026quot;download\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} upload {{\u0026lt;icon name=\u0026quot;upload\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} inbox {{\u0026lt;icon name=\u0026quot;inbox\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} play-circle {{\u0026lt;icon name=\u0026quot;play-circle\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} repeat {{\u0026lt;icon name=\u0026quot;repeat\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} refresh {{\u0026lt;icon name=\u0026quot;refresh\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} list-alt {{\u0026lt;icon name=\u0026quot;list-alt\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} lock {{\u0026lt;icon name=\u0026quot;lock\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} flag {{\u0026lt;icon name=\u0026quot;flag\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} headphones {{\u0026lt;icon name=\u0026quot;headphones\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} volume-off {{\u0026lt;icon name=\u0026quot;volume-off\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} volume-down {{\u0026lt;icon name=\u0026quot;volume-down\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} volume-up {{\u0026lt;icon name=\u0026quot;volume-up\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} qrcode {{\u0026lt;icon name=\u0026quot;qrcode\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} barcode {{\u0026lt;icon name=\u0026quot;barcode\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} tag {{\u0026lt;icon name=\u0026quot;tag\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} tags {{\u0026lt;icon name=\u0026quot;tags\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} book {{\u0026lt;icon name=\u0026quot;book\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} bookmark {{\u0026lt;icon name=\u0026quot;bookmark\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} print {{\u0026lt;icon name=\u0026quot;print\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} camera {{\u0026lt;icon name=\u0026quot;camera\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} font {{\u0026lt;icon name=\u0026quot;font\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} bold {{\u0026lt;icon name=\u0026quot;bold\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} italic {{\u0026lt;icon name=\u0026quot;italic\u0026quot; size=\u0026quot;large\u0026quot;\u0026gt;}} "
},
{
	"uri": "/pt-br/jsappybird/add-jump-sound/",
	"title": "Adicione som do salto do pássaro e bônus",
	"tags": [],
	"description": "",
	"content": "Vamos adicionar sons ao pássaro quando ele pula\nAdicione o comando abaixo no arquivo [File: create-game.js] jumpSound.play();\nTrabalhando juntos Na janela do Replit abaixo, iniciamos o código com a linha jumpSound.play();.\nNo seu console você deverá ver um pássaro Jsappy pulando com som depois de pressionar run.\nAtividades bônus O que acontece se tornarmos a gravidade mais forte? O que acontece se fizermos com que a gravidade tenha um valor negativo? De que outras maneiras malucas o pássaro pode pular? Como podemos fazê-lo girar mais rápido? O que acontece se removermos o \u0026lsquo;se\u0026rsquo; da rotação? "
},
{
	"uri": "/pt-br/java-datastructures/queues/",
	"title": "Filas: Recebimento de Pedidos",
	"tags": [],
	"description": "",
	"content": "Um restaurante pode receber centenas de pedidos por vez e precisa preparar a comida o mais rápido possível para que seja entregue ao cliente. Depende de você como deseja armazenar essas informações. Um restaurante deve começar a preparar a comida por ordem de chegada, pois um cliente que pediu sua refeição há uma hora deve ser preparado muito antes de um cliente que fez seu pedido há apenas 10 minutos. Implementaremos esse comportamento utilizando uma fila (queue).\n"
},
{
	"uri": "/pt-br/python-basics/functions/",
	"title": "Funções",
	"tags": [],
	"description": "",
	"content": "Funções são uma forma de organizar partes de código semelhante ou repetido. Em vez de digitar constantemente o mesmo código, podemos colocar o código desejado em uma função e chamá-lo sempre que quisermos usá-lo.\nObservação: O objetivo de uma função é ajudar a reduzir código redundante durante todo o programa.\nCriando uma função Defina sua função - nome e parâmetros Para fazer uma função em python, devemos usar a palavra-chave def. Esta palavra-chave informa ao editor de código onde a função está definida. def é seguido pelo nome da função. O nome da função é usado para chamar sua função de outras partes do programa. Para generalizar a função (para que possamos usá-la em vários lugares), talvez precisemos enviar algumas informações para ela. Isto é conseguido usando parâmetros. Eles são colocados entre parênteses () e seguem logo após o nome da função. Se nenhum parâmetro for necessário, eles poderão ser ignorados. A declaração da função termina com dois pontos. As instruções que são executadas cada vez que a função é chamada seguem nas próximas linhas. As guias são muito importantes aqui, portanto, certifique-se de que seu código esteja recuado corretamente. Cada linha recuada após a linha de definição da função (com exceção dos comentários) será executada quando você chamar a função.\nEsta é a aparência de uma função:\ndef functionName(parameter1, parameter2, ...): # escreva algum código # chama esta função de outras partes # do código usando functionName Certifique-se de que a primeira linha da sua função sempre termine com dois pontos :\nEscreva o corpo da função Em Python, a indentação define qual código é controlado pela função. No exemplo abaixo, para chamar a função sectionA, você deve especificar 2 parâmetros, startMeasure e endMeasure. Quando você chama sectionA, as 3 linhas de função fitMedia são executadas. As 2 chamadas de função fitMedia na parte inferior estão fora do corpo da função sectionA.\n#Seção A def sectionA(startMeasure, endMeasure): fitMedia(RD_UK_HOUSE__AIRYPAD_1, 1, startMeasure, endMeasure) fitMedia(HOUSE_MAIN_BEAT_002, 4, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) fitMedia(HOUSE_DEEP_CRYSTALCHORD_001, 3, 1, 5) fitMedia(HOUSE_DEEP_CRYSTALCHORD_002, 3, 5, 9) O código recuado abaixo da função sectionA é o código que é executado cada vez que a função sectionA é chamada.\nAviso: Como a identificação é muito importante em Python, certifique-se que o corpo da função sempre começa com 2 espaços.\nRetornando um valor Muitas vezes você não deseja apenas imprimir os resultados ou executar uma ação, mas deseja que a função lhe forneça o resultado da execução da ação. Para fazer isso, você usa a palavra-chave return.\ndef my_function(x): return 5 * x print(my_function(3)) # imprime 15 print(my_function(5)) # imprime 25 Usando a função - Chamada de função Para chamar uma função, insira o nome da função e seus parâmetros onde você deseja executar a função. Por exemplo, para chamar a função sectionA, faríamos algo assim:\nsectionA(1,9) Neste exemplo, sectionA será chamado com o valor startMeasure como 1 e o valor endMeasure como 9.\nTenha cuidado: Ao criar uma função em Python, você deve definir o função e seu conteúdo antes de ser chamada. Em outras palavras, no código, você precisa colocar a declaração da função acima da chamada da função. Caso contrário, você receberá um NameError como abaixo. Veja o seguinte figura para um exemplo: Desafio 1 – Crie sua própria função! Desafio: Crie uma função chamada addNumbers que receba 2 parâmetros chamados número1 e número2 e imprima a soma no console. Chame a função addNumbers com os parâmetros 3 e 5. O que está impresso no console?\nDesafio 2 Vamos tentar criar algumas funções matemáticas simples. Crie uma função chamada add que receba dois parâmetros, número1 e número2, e retorne a soma dos dois números.\nPrimeiro copie a estrutura da função tripla. Altere o nome da função tripla e substitua o número do parâmetro por número1 e número2, separados por vírgula. Tanto o número1 quanto o número2 devem ser int e não se esqueça de adicionar o número1 e o número2 juntos!\nPara verificar se sua função está funcionando corretamente, adicione o seguinte código após a definição de sua função, que chama a função add() e salva seu valor em uma variável. Por exemplo:\nvalue2 = add(2, 3)\rprint(\"Isso deve imprimir 5: \" + str(value2))\rDesafio 3 Você pode criar funções para subtração, multiplicação e divisão?\nTeste as funções chamando cada função, salvando seu valor de retorno e imprimindo-o no console.\n"
},
{
	"uri": "/pt-br/java-datastructures/introduction/for-loops/",
	"title": "Loops For",
	"tags": [],
	"description": "",
	"content": "\rQuando você sabe exatamente quantas vezes deseja percorrer um bloco de código, use um loop (laço) forem vez de um loop while:\nfor (initialization; condition; iteration) { // bloco de código a ser executado } initialization é executado (uma vez) antes da execução do bloco de código. condition (condição) define a condição para execução do bloco de código. iteration é executado (sempre) após a execução do bloco de código. O exemplo abaixo irá imprimir os números 0 a 4:\nfor (int i = 0; i \u0026lt; 5; i++) { System.out.println(i); } initialization define uma variável antes do início do loop (int i = 0). condition define a condição para a execução do loop (i deve ser menor que 5). Se a condição for true, o loop começará novamente, se for false, o loop terminará. iteration aumenta um valor (i++) cada vez que o bloco de código no loop é executado. Este exemplo só imprimirá valores pares entre 0 e 10:\nfor (int i = 0; i \u0026lt;= 10; i = i + 2) { System.out.println(i); } "
},
{
	"uri": "/pt-br/web-basics/html-attributes/",
	"title": "Atributos HTML",
	"tags": [],
	"description": "",
	"content": "Cada tag também pode ter informações adicionais, como atributos de estilo, que podem alterar as propriedades de um elemento. Existem atributos que podemos usar para alterar a aparência visual de um elemento, como tamanho, cor e fonte do texto.\nTodos os atributos são formatados como: attribute-name=\u0026quot;valor entre aspas\u0026quot;. Por exemplo, podemos mudar a cor de um parágrafo para vermelho com este código: \u0026lt;p style=\u0026quot;color:red\u0026quot;\u0026gt;Este texto é vermelho\u0026lt;/p\u0026gt;.\nAs tags de imagem precisam de uma fonte, então precisamos de um atributo dentro da tag para informar ao navegador de onde obter a imagem.\nAqui está um exemplo: E aqui está o resultado: "
},
{
	"uri": "/pt-br/python-turtle/activity-3/",
	"title": "“Atividade 3 – Desenhando um hexágono”",
	"tags": [],
	"description": "",
	"content": "\nBom trabalho! Você acabou de desenhar sua primeira forma em Python com Turtle! Agora vamos alterar ligeiramente o código que já escrevemos para desenhar um quadrado e, em vez disso, desenhar um hexágono. Afinal, Alex é uma abelha e precisa desenhar hexágonos para construir seu primeiro favo de mel.\nPara ajudá-lo a desenhar um hexágono, pense em quantos lados um hexágono tem. Quantos graus existem em cada ângulo de um hexágono?\nComo um lembrete útil, este é o código usado para criar um triângulo:\nfor i in range(3): turtle.forward(50) turtle.left(120) "
},
{
	"uri": "/pt-br/secret-messages/activity-4/",
	"title": "Atividade 4 – Condições",
	"tags": [],
	"description": "",
	"content": "Muito bem!\nEstamos cada vez mais perto de divulgar nossas mensagens secretas. Mas também não esqueçamos que temos que saber decifrar essas mensagens!\nPara isso, vamos inserir no console um 1, se quisermos criptografar uma mensagem, ou o número 2, se quisermos descriptografá-la.\nPara isso precisaremos de condições.\nCondições if / else Uma condição em programação é uma instrução ou um grupo de instruções, que pode ser executada ou não, dependendo se uma condição é verdadeira. Seria algo assim: IF(se) isso acontecer, execute estas instruções, IF NOT (else, senão), execute estas outras instruções.\nExemplo\nif(3 \u0026gt; 1){\rcout \u0026lt;\u0026lt; \u0026#34;3 é maior que 1\u0026#34; \u0026lt;\u0026lt; endl;\r}else{\rcout \u0026lt;\u0026lt; \u0026#34;3 não é maior que 1\u0026#34; \u0026lt;\u0026lt; endl;\r} O programa irá imprimir:\n3 é maior que 1 if(3 \u0026gt; 1) verifica se o número 3 é maior que 1. Se isso for verdade, então o bloco de código imediatamente após if será executado. Caso contrário, o bloco de código após else será executado. No exemplo, o bloco else não será executado porque a condição if é verdadeira - 3 é de fato maior que 1. Para criar condições, geralmente usamos operadores lógicos entre parênteses () ao lado de if. Suponha a = 5 e b = 3. Então, a seguir estão exemplos de operadores lógicos que podemos usar:\nMenor que: a \u0026lt;b (5 é menor que 3?) Menor ou igual a: a \u0026lt;= b (5 é menor ou igual a 3?) Maior que: a \u0026gt; b (5 é maior que 3?) Maior ou igual a: a \u0026gt;= b (5 é maior ou igual a 3?) Igual a: a == b (5 é igual a 3?) Não é igual: a != b (5 não é igual a 3?) Para a atividade usaremos uma condição para saber se o que queremos é criar uma mensagem secreta (criptografá-la) ou descobrir uma mensagem (descriptografá-la).\nPara isso, devemos seguir os seguintes passos:\nCrie uma variável do tipo int. Solicite a entrada do usuário e armazene os dados inseridos na variável do tipo int. Crie uma condição if/else para verificar se o número inserido é igual a 1. Se sim, então queremos criptografar a mensagem; caso contrário, queremos descriptografar a mensagem. Imprima para consolar em cada caso o que desejamos fazer. Por exemplo, se 1 for inserido, imprima \u0026quot;Criptografar uma mensagem\u0026quot;. Caso contrário, imprima \u0026quot;Descriptografar uma mensagem\u0026quot;. Se precisar de ajuda, lembre-se que você pode voltar às atividades anteriores e revisar.\nIniciar Replit\n"
},
{
	"uri": "/pt-br/python-earsketch/activity-1-set-tempo-add-sounds/",
	"title": "Atividade 1 – Defina o andamento e adicione sons",
	"tags": [],
	"description": "Configurando fones de ouvido",
	"content": "Vamos dar uma olhada mais de perto no código pré-existente e entender o que ele significa. Colocaremos nosso novo código entre as funções setTempo() e finish(). A função setTempo() permite definir o andamento geral do projeto.\nDica: Tempo é a velocidade com que uma peça de música é tocada. Alterar o tempo de um projeto permite que diferentes estilos de música sejam criados. Tente alterar o tempo da sua função setTempo e veja o que acontece! Verifique se é um número entre 45-220.\nAtividade 1 Agora que nosso tempo está definido, é hora de adicionar sons. Para fazer isso, devemos utilizar a função fitMedia (). Verifique se o cursor do seu programa está entre as funções setTempo () e finish (). ! [] (../ img/anotated-screenshot-cursor.png) Navegue para o ícone API Browser no menu do lado esquerdo. Percorra a lista até a função fitMedia (). Clique no ícone Paste no canto direito das fitMedia () para inserir a função entre as funções setTemp e finish. Você pode notar que, quando colar a função, o Earsketch produz alguns textos de espaço reservado que precisamos substituir mais adiante. Esses textos de espaço reservado também são conhecidos como \u0026lsquo;parâmetros\u0026rsquo;. Você pode especificar seus próprios valores para o seguinte:\nfileName - Navegue até o painel 'Sounds' e encontre um som que você gosta. trackNumber - selecione qualquer número inteiro positivo como o número da faixa. startLocation/endlocation - esses parâmetros são quantificados em compassos. Um compasso é um segmento de tempo que se correlaciona com um número específico de batidas. Se você não tiver certeza de quais valores escolher, tente o seguinte:\nfitmedia (yg_trap_electric_piano_filtered_1, 3, 1, 17) Seu código agora deve parecer algo assim: from earsketch import * init() setTempo(120) fitMedia(YG_TRAP_ELECTRIC_PIANO_FILTERED_1, 3, 1, 17) finish() Certifique-se de que a capitalização da chamada do método esteja correta. A maioria das linguagens de programação, incluindo Python, diferenciam maiúsculas de minúsculas. Isso significa que adicionar letras maiúsculas pode chamar uma função diferente da esperada. Por exemplo: fitMedia() não é o mesmo que FitMedia().\nDepois de inserir seus próprios parâmetros, pressione executar e clique em reproduzir para ouvir seu clipe de áudio! Se você ver algum texto em vermelho, então aconteceram alguns erros! Por favor, peça ajuda. A função fitMedia() é a base para fazer música no Earsketch. Usaremos muito essa função, então se você tiver alguma dúvida sobre seu uso, pergunte! Estação de trabalho de áudio digital (DAW, Digital Audio Workstation) é a área onde os sons aparecem. Ela fica na parte superior central da janela do EarSketch. A seguir está um exemplo de como diferentes seções de uma música podem parecer no DAW. "
},
{
	"uri": "/pt-br/arduino/activity-2/",
	"title": "Atividade 2 - Joystick com saída serial",
	"tags": [],
	"description": "",
	"content": "Fiação do joystick Agora que você entendeu como podemos fazer com que o sistema forneça sinais do programa (saídas) e os use para controlar LEDs, vamos ver como podemos obter entradas dinâmicas no sistema. Para esta atividade utilizaremos uma entrada de joystick, semelhante às utilizadas nas consolas de videojogos.\nConecte uma extremidade de um fio de jumper ao GND no joystick e a outra ao GND no Elegoo. Conecte uma extremidade de um fio de jumper a +5V no joystick e a outra a 5V no Elegoo. Conecte uma extremidade de um fio de jumper ao VRx no joystick e a outra ao A0 (pino analógico 0) no Elegoo. Conecte uma extremidade de um fio de jumper ao VRy no joystick e a outra ao A1 (pino analógico 1) no Elegoo. Conecte uma extremidade de um fio de jumper ao VRy no joystick e a outra ao A1 (pino analógico 1) no Elegoo. Conecte uma extremidade de um fio de jumper ao SW no joystick e a outra a 2 (pino digital 2) no Elegoo. Conecte a placa Arduino via USB ao seu PC e abra o aplicativo Arduino IDE. Reconhecer e imprimir entradas analógicas Usaremos novamente o código de exemplo para nossos programas. Desta vez, vamos obtê-lo a partir do próprio site elegoo. Copie o seguinte para o seu IDE Arduino.\n//www.elegoo.com //2016.12.09 // Arduino pin numbers const int SW_pin = 2; // pino digital conectado à saída do switch const int X_pin = A0; // pino analógico conectado à saída X const int Y_pin = A1; // pino analógico conectado à saída Y void setup() { pinMode(SW_pin, INPUT); digitalWrite(SW_pin, HIGH); Serial.begin(9600); } void loop() { Serial.print(\u0026#34;Switch: \u0026#34;); Serial.print(digitalRead(SW_pin)); Serial.print(\u0026#34;\\n\u0026#34;); Serial.print(\u0026#34;X-axis: \u0026#34;); Serial.print(analogRead(X_pin)); Serial.print(\u0026#34;\\n\u0026#34;); Serial.print(\u0026#34;Y-axis: \u0026#34;); Serial.println(analogRead(Y_pin)); Serial.print(\u0026#34;\\n\\n\u0026#34;); delay(500); } Agora clique no botão de upload para implantar o programa no Arduino. Clique no botão \u0026ldquo;Serial Monitor\u0026rdquo; no canto superior direito da tela para exibir o console. Observe como os valores X e Y mudam quando você move o joystick. "
},
{
	"uri": "/pt-br/adafruit/answer-key/",
	"title": "Chave de resposta - Adafruit",
	"tags": [],
	"description": "Chave de resposta de referência fácil para o currículo adafruit",
	"content": "Configuração Em resumo:\nAs duas garras de jacaré devem ser presos na superfície das laranjas. O outro lado das garras deve estar nas entradas A1 e A2 do adafruit. O USB deve ser conectado ao adafruit, mas não ao computador. Após a configuração, as laranjas e adafruit devem ficar assim:\nSolução Solução - avançada (com luzes) Como funciona "
},
{
	"uri": "/pt-br/security/answer-key/",
	"title": "Chave de resposta - Segurança",
	"tags": [],
	"description": "Chave de resposta de fácil referência para o currículo de segurança",
	"content": "Solução Em nosso Jogo do Espião, a senha \u0026ldquo;Ilovemypet\u0026rdquo; não contém números e caracteres especiais, e \u0026ldquo;12345678\u0026rdquo; é uma sequência de números; portanto, ambas as senhas são fracas e podem ser facilmente hackeadas/adivinhadas por uma pessoa mal-intencionada.\n"
},
{
	"uri": "/pt-br/security-phishing/whats-phishy/",
	"title": "What&#39;s Phishy?",
	"tags": [],
	"description": "",
	"content": "From our last section we learned about different types of phishing methods and how to recognize them. Now it\u0026rsquo;s time to play a game called What's phishy?\nWhich images from the list given below do you think are phishy?\nDoes this email look phishy?\rYes\rNo\rDoes this banner look phishy?\rYes\rNo\rDoes this text message look phishy?\rYes\rNo\rDoes this text message look phishy?\rYes\rNo\rDoes this text message look phishy?\rYes\rNo\rCheck answers! "
},
{
	"uri": "/pt-br/linux-basics/activity-3/",
	"title": "Atividade 3 - Explorando o diretório atual",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para visualizar o conteúdo do diretório atual",
	"content": "\rAgora que sabemos quem somos e onde estamos, vamos analisar outras provas em busca de mais evidências dos hackers!\rComo podemos explorar um diretório? Para listar os arquivos no diretório atual, usamos o comando ls. Esse comando significa \u0026ldquo;Listar\u0026rdquo;. Vamos tentar?\nls Como podemos obter mais informações sobre os arquivos neste diretório? Vamos começar digitando o comando ls seguido da flag -l:\nls -l A flag -l que acabamos de testar, auxilia o comando ls a listar o conteúdo do diretório em formato longo apresentado detalhes sobre esses arquivos.\nQuais informações estão sendo exibidas? Agora vamos examinar os detalhes do comando ls -l para o diretório Videos:\nverde: exibe as permissões de acesso aos arquivos e diretórios. O primeiro caractere d denota que Videos é um diretório. Se fosse um - significaria que Videos era um arquivo. vermelho: exibe o número de links para este arquivo. No nosso exemplo, o diretório Videos contem 2 links. roxo: exibe o usuário dono do arquivo. Usuário nuvi é dono do diretório Videos. branco: exibe o grupo dono do arquivo. No nosso exemplo, o arquivo pertence ao grupo nuvi. amarelo: exibe o tamanho do arquivo em bytes. O diretório Videos contém um tamanho de 4096 bytes. laranja: exibe a data e a hora em que o arquivo foi criado. azul: exibe o nome do arquivo ou diretório. "
},
{
	"uri": "/pt-br/java-basics/activity-5/",
	"title": "Métodos",
	"tags": [],
	"description": "Apresente métodos em Java.",
	"content": "\nO que é um Método? Até agora, aprendemos como armazenar dados em variáveis, imprimir dados e sentenças e tomar decisões com declaração if, for loop e while loop.\nDo último exercício, sabemos que o seguinte bloco de código calcula a soma de 1 a 100:\nint total = 0; int num = 1; while(num \u0026lt;= 100){ total = total + num; num = num + 1; } System.out.println(\u0026#34;Sum: \u0026#34; + total); Mas e se quisermos calcular a soma de 1 a 77? Como fazemos isso sem escrever todos os blocos de código novamente?\nQueremos criar uma ✨ caixa mágica ✨ em código que faça o cálculo para nós, independentemente dos 2 números para os quais queremos criar uma soma! Em Java, um método é como uma caixa mágica que executa uma tarefa específica executando um bloco de código que pode usar entradas do usuário.\nExistem 2 partes em um método: cabeçalho e corpo:\nCabeçalho do método Para definir um método, precisamos primeiro escrever o cabeçalho do método. Um cabeçalho de método tem quatro partes principais:\nNome da parte Descrição Exemplos ou opções possíveis especificador de acesso fornece o nível de acesso ao método public informa ao computador que qualquer pessoa pode usar este método. private diz ao computador que ele só pode ser chamado dentro de uma classe. (Aprenderemos sobre classes na próxima página!) protected informa ao computador que ele pode ser chamado por objetos da mesma classe. tipo de retorno tipo de dados retornado para a função de chamada use void se o método não retornar nada. nome do método nome do método usado para chamá-lo definido pelo usuário com base no que o método faz lista de parâmetros lista de entradas que devem ser fornecidas quando o método é usado formato de (type nome de entrada, type nome de entrada, \u0026hellip;). // an example\rpublic void sing (String songName)\r1. 2. 3. 4. Nota: Os nomes das variáveis ​​dos parâmetros não precisam corresponder ao nome da variável dos dados que estão sendo passados ​​para o método.\nCorpo do Método A seguir, colocamos o bloco de código associado ao método no corpo do método, que está entre { e } após o cabeçalho do método.\nPara retornar alguns dados, colocamos a palavra-chave return seguida do nome de uma variável ou de um valor a ser retornado.\nNota: Depois de return, nada mais será executado no método.\nEste é um exemplo de como definir um método que soma números de numA até numB:\n/* Nome do método: somaNum * Entrada/Parâmetro: 2 números do tipo int * Funcionalidade: retorne a soma de numA a numB */ public int sumNum(int numA, int numB){ int total = 0; int num = numA; // acessamos a primeira entrada com o nome numA while(num \u0026lt;= numB){ // acessamos a primeira entrada com o nome numB total = total + num; num = num + 1; } return total; // declaração de retorno } Chamada do Método Por último, para executar um método no seu código, precisamos fazer uma chamada de método. Escrevemos o nome do método com a entrada apropriada. Por exemplo:\nsumNum(1, 3); // uma linha de código que chama o método sumNum() com o valor de retorno 6 Sabendo que sumNum(1, 3) retorna um int com a soma de 1 a 3, podemos fazer o seguinte para armazenar o valor:\nint sum1to3 = sumNum(1, 3); Conte a pirâmide!🔺 (photo credit: aliexpress.com/item/32306945847.html)\nA imagem acima é uma imagem de uma pirâmide de números quadrados onde cada nível é um quadrado perfeito do número do nível atual contado de cima para baixo.\nOu seja, o nível superior tem contas 1 * 1, o segundo nível tem contas 2 * 2.\nVamos escrever um método que receba o número total de níveis e produza o número total de contas na pirâmide!\rDepois de resolver o desafio, você verá a seguinte mensagem:\nParabéns! Desafio resolvido! Launch Replit\n"
},
{
	"uri": "/pt-br/unity/colliders/",
	"title": "Colisores",
	"tags": [],
	"description": "",
	"content": "A razão pela qual o Nuvi some da tela é porque não há colisores para detê-los.\nOs colisores permitem que dois objetos se toquem.\nEntão, vamos usar colisores para adicionar paredes invisíveis ao redor da nossa arena. Vá até a janela Hierarquia, clique com o botão direito e escolha \u0026ldquo;Create Empty\u0026rdquo; (Criar Vazio). Nomeie este objeto vazio como \u0026ldquo;Walls\u0026rdquo; (Paredes).\nEm seguida, clique com o botão direito no objeto \u0026ldquo;Walls\u0026rdquo; (Paredes) que você acabou de criar e desta vez escolha \u0026ldquo;3D Object -\u0026gt; Cube\u0026rdquo; (Objeto 3D -\u0026gt; Cubo). Redimensione o cubo em uma forma retangular para cobrir um lado da tela como abaixo:\nEm seguida, remova o componente BoxCollider que o cubo possui por padrão e adicione um componente BoxCollider2D.\nFaça o mesmo para fazer mais 3 paredes invisíveis que cercam o Nuvi, como:\nAgora execute o jogo e veja o que acontece. \u0026hellip;Oh-oh, o Nuvi ainda some. Isso porque o Nuvi não possui Collider (Colisor). Para que dois objetos colidam, ambos precisam ter um Collider!\nEntão, vamos adicionar um componente BoxCollider2D ao Nuvi. Nesse componente, clique em \u0026ldquo;Edit Collider\u0026rdquo; (Editar Colisor) e você deverá ver uma caixa verde ao redor do Nuvi. Redimensione esta caixa para que ela se encaixe perfeitamente no Nuvi. Execute o jogo e veja que Nuvi não vai mais fugir\u0026hellip; mas agora Nuvi começa a girar quando atinge um canto da arena. Para impedir isso, acesse o componente Rigidbody2D do Nuvi, expanda \u0026ldquo;Constraints\u0026rdquo; (Restrições) e marque \u0026ldquo;Freeze Rotation\u0026rdquo; (Congelar Rotação).\nPara adicionar um plano de fundo e fazer o Nuvi funcionar no espaço sideral, arraste o arquivo png \u0026ldquo;background\u0026rdquo; (Plano de Fundo) da pasta Desenhos como você fez para a imagem do Nuvi e solte-o na cena. Redimensione a imagem de fundo; olhar para a janela do jogo irá ajudá-lo a fazer isso.\nSe o Nuvi se esconder atrás da imagem de fundo, vá para o componente Sprite Renderer do Nuvi, expanda \u0026ldquo;Additional Settings\u0026rdquo; (Configurações Adicionais) e altere \u0026ldquo;Order in Layer\u0026rdquo; (Ordem em Camada) do Nuvi para 1 (ou qualquer número maior que 0).\nFinalmente, execute o jogo novamente e certifique-se de que tudo está bem. Se sim, então parabéns! Ajudamos com sucesso o Nuvi a se movimentar no espaço sideral!\n"
},
{
	"uri": "/pt-br/android-tictactoe/comments/",
	"title": "Comentários",
	"tags": [],
	"description": "",
	"content": "Desenvolvedores frequentemente precisam colaborar com outros desenvolvedores. Comentários são uma maneira fácil para os desenvolvedores escreverem notas no código e se comunicarem com os outros. Comentários são ignorados pelo computador; assim, eles também são uma maneira fácil de dizer ao computador para não executar certas linhas de código. Existem duas maneiras de criar comentários:\nPara comentar uma linha, coloque // na frente de uma linha de código. Por exemplo: // Este é um comentário de uma única linha. Para comentar várias linhas de uma vez, indique o início do comentário com /* e o final do comentário com */. Por exemplo: /* Este é um comentário de várias linhas. Esta linha também faz parte do comentário. */ Para remover um comentário (ou descomentar uma linha), basta excluir o // para um comentário de uma única linha ou os caracteres /* e */ para o comentário de várias linhas.\nTrabalhando Juntos Digite // na frente de Toast.makeText(this, \u0026quot;Bem-vindo ao Jogo da Velha”, Toast.LENGTH_LONG).show(). Depois de pressionar o botão de reprodução (►), verifique se Bem-vindo ao Jogo da Velha não aparece na tela. Exclua o // e, em vez disso, envolva Toast.makeText(this, \u0026quot;Bem-vindo ao Jogo da Velha”, Toast.LENGTH_LONG).show() com /* e */. Verifique se Bem-vindo ao Jogo da Velha ainda não é impresso no console depois de pressionar o botão de reprodução (►). Exclua ambos /* e */, e pressione o botão de reprodução (►). Bem-vindo ao Jogo da Velha agora deve ser impresso no console. Ao longo dos quebra-cabeças de hoje, você verá vários comentários de várias linhas e comentários // PUZZLE (como o do Quebra-cabeça 2). Esses comentários nos guiarão para completar o jogo da velha, então tenha certeza de entender como comentar e descomentar o código. "
},
{
	"uri": "/pt-br/python-basics/basics/reading-from-console/",
	"title": "Lendo do console",
	"tags": [],
	"description": "",
	"content": "Agora que sabemos o básico sobre variáveis, podemos pedir informações ao usuário. Use a linha a seguir para dizer ao nosso programa para esperar até que o usuário digite algo no console. Então, o computador pega tudo o que é digitado no console e armazena na variável chamada value.\nvalue = input() Aqui estão alguns exemplos de como usar input() para aceitar a entrada do usuário:\nprint(\u0026#34;Qual o seu nome?\u0026#34;) value = input() print(\u0026#34;Olá \u0026#34; + value + \u0026#34;!\u0026#34;) Experimente! Ao clicar em executar, você notará que a imagem abaixo ainda não aparece no console.\nIsso ocorre porque o programa está esperando que você digite alguma coisa! Digite seu nome ou \u0026lsquo;Nuvi\u0026rsquo; no console à direita, pressione Enter e verifique se foi impresso corretamente.\nMesmo se digitarmos um número, como 8, o valor da variável conterá a string \u0026quot;8\u0026quot;. Tenha cuidado ao tentar fazer contas com variáveis ​​de entrada!\nDesafio Vamos ver se conseguimos escrever um programa que primeiro imprima as duas linhas a seguir no console:\nBem-vindo!\rComo posso ajudá-lo hoje?\rDepois, o console aguarda a entrada do usuário. Depois que o usuário digita algo no console e pressiona Enter, o computador imprime:\nVocê perguntou: [input]?\rNão sei a resposta para [input]. Adeus!\r[input] deve ser substituído por tudo o que o usuário digitou no console. Por exemplo, se você quiser perguntar “Quantos anos eu tenho?”, o computador irá imprimir que não sabe a resposta.\nIsso é muito semelhante ao exemplo que passamos juntos acima. Tente fazer algumas pequenas alterações no que já fornecemos.\n"
},
{
	"uri": "/pt-br/java-datastructures/stacks/",
	"title": "Stacks: O motorista",
	"tags": [],
	"description": "",
	"content": "Um motorista deve pegar um pedido e entregá-lo ao cliente. Um motorista pode retirar vários pedidos ao mesmo tempo. Para obter a máxima eficiência, o motorista deseja retirar o maior número de pedidos e fazer o máximo de entregas no caminho mais curto possível. Se um motorista está indo buscar um pedido em um restaurante, mas de repente um cliente faz um pedido em um restaurante que está muito próximo e no caminho, para aproveitar ao máximo sua viagem, o motorista deve ser capaz de retirar o pedido daquele restaurante. Em geral, um motorista deseja coletar e entregar pedidos com base na distância mais curta. Podemos implementar esse comportamento utilizando uma stack (pilha).\n"
},
{
	"uri": "/pt-br/web-basics/activity-2/",
	"title": "Atividade 2 - CSS",
	"tags": [],
	"description": "",
	"content": "Estilize-o com CSS As tags informam ao navegador quais elementos do site usar. Mas também precisamos dizer como exibir os elementos e onde colocá-los. Podemos querer o título no centro ou no lado direito. Podemos querer uma imagem à direita e um parágrafo à esquerda. Existem duas maneiras de fazer isso: através de atributos HTML ou Cascading Style Sheets.\nFolhas em estilo cascata (CSS) Os atributos HTML são simples, mas podem ficar confusos rapidamente. Se quisermos estilizar muito, cada elemento HTML pode se tornar longo e difícil de ler. Além disso, e se quisermos estilizar muitos elementos da mesma maneira? Teríamos que copiar todos os atributos de cada elemento, o que não é eficiente e sujeito a erros. Para a maioria dos estilos, é melhor usar CSS.\nOs arquivos CSS funcionam em estreita colaboração com tags HTML. Cada tag HTML pode ter um atributo class e/ou um atributo id que ajuda a identificar cada elemento. Muitos elementos podem ter a mesma classe e um elemento pode ter várias classes. No entanto, um elemento pode ter apenas um único id e o id não pode ser compartilhado entre os elementos. O arquivo CSS usa esses atributos para exibir estilos específicos para cada class ou id.\nVeja este exemplo abaixo:\nVeja a Pen Estilizando por Deliana Escobari (@Sunny-Dee) on CodePen.\nClique na guia \"HTML\" no canto superior esquerdo para ver o código HTML e na guia \"CSS\" para ver o código CSS.\rVamos dar uma olhada no código HTML. Tente encontrar um \u0026lt;div\u0026gt; tag com o atributo \u0026ldquo;info\u0026rdquo;. Parece \u0026lt;div id=\u0026ldquo;info\u0026rdquo;\u0026gt;. Ao atribuir um ID a esse div, podemos usar CSS para especificar o estilo para esse elemento específico.\nMude para o arquivo CSS. Também podemos dar estilo a todos os elementos de um tipo específico - por exemplo, poderíamos usar CSS dar todos os \u0026lt;p\u0026gt; elementos do mesmo estilo. No bloco de cabeçalho, dizemos ao navegador para colorir todos os cabeçalhos #0097A7 (que é a cor azul-petróleo).\nVamos falar sobre a sintaxe (ou a forma de escrever) do CSS. Primeiro, você começa com o elemento que deseja estilizar. Se você quiser estilizar todos os elementos com a mesma tag (como \u0026lt;header\u0026gt;), basta escrever o nome. Se você deseja estilizar um elemento com uma classe ou id, coloque um . ou um # na frente do nome da classe ou do id, respectivamente. Então, para cada propriedade que você deseja alterar, use o formato nome-do-atributo: valor;. Não se esqueça de terminar cada linha com um ;. Todos esses estilos devem ser colocados entre chaves { e }.\nExistem muitos elementos de estilo para cobrir todos eles neste tutorial. Se, no esboço que você fez anteriormente, você não tiver certeza de como usar CSS para obter o estilo desejado, tente pesquisar online.\nEmbora o CSS entenda 140 nomes de cores, como “verde”, “vermelho” e “azul”, isso ainda pode ser limitante. E se quisermos um verde escuro ou um verde um pouco mais claro? Para conseguir isso, também podemos nos referir às cores na forma hexadecimal ou RGB. Verifique este link para ver as cores e sua forma hexadecimal correspondente.\nAdicionando uma nova fonte Como você deve saber, existem várias fontes que você pode usar. Esta parte mostrará como importar diferentes fontes para o seu site.\nVamos importar a fonte Heebo da internet. Primeiro importamos a fonte no topo do arquivo CSS com esta instrução: @importar url('https://fonts.googleapis.com/css?family=Heebo|Open+Sans'); Então atribuímos à tag body. Como esta tag conterá todos os outros elementos HTML, nossa escolha de fonte será usada para todos os elementos. Observe que o formato entre chaves é: nome: valor; @import url('https://fonts.googleapis.com/css?family=Roboto+Mono'); font-family: 'Roboto Mono', monospace; @import url('https://fonts.googleapis.com/css?family=Indie+Flower');\nfont-family: 'Indie Flower', cursive; @import url('https://fonts.googleapis.com/css?family=Pacifico'); font-family: 'Pacifico', cursive; @import url('https://fonts.googleapis.com/css?family=Permanent+Marker');\nfont-family: 'Permanent Marker', cursive; Atividade 2 – Adicionando atributos e estilo Agora é hora de deixar nosso site lindo! Para concluir esta atividade, você precisará concluir as seguintes etapas:\nAbra o editor web (clique no botão \u0026ldquo;Experimente você mesmo!\u0026rdquo; abaixo)\nAdicione um atributo id à tag de parágrafo. Por exemplo, \u0026lt;p id=\u0026quot;page-subtitle\u0026quot;\u0026gt;\nVá para a aba CSS e crie uma nova regra #page-subtitle\r{\r} Altere a cor da legenda adicionando color: yellow; dentro das chaves\nAltere a fonte adicionando font-family: 'Roboto Mono', monospace; dentro das chaves e adicionando @import url('https://fonts.googleapis. com/css?family=Roboto+Mono'); na parte superior da guia CSS\nTente você mesmo!\n"
},
{
	"uri": "/pt-br/python-turtle/activity-4/",
	"title": "Atividade 4 – Simplificando código com funções",
	"tags": [],
	"description": "",
	"content": "Desenhamos um hexágono. Mas este é apenas um dos muitos hexágonos que Alex precisa para construir seu favo de mel. Mais uma vez, parece que teríamos que repetir o código muitas vezes para desenhar vários hexágonos. Felizmente, não precisamos! As funções vieram para nos resgatar!\nFunções Uma função é uma forma de agrupar linhas de código para fazer algo. Por exemplo, turtle.forward(50) move a tartaruga 50 passos para frente e turtle.left(120) gira a tartaruga 120 graus para a esquerda. E se quisermos sempre fazer essas duas ações juntas? Podemos colocá-las em uma função chamada draw_line(), de modo que sempre que esta função for chamada, ambas as ações ocorram simultaneamente. Pense nisso como uma receita: compilamos todas as instruções juntas e o nome da receita é a comida que estamos preparando.\nAqui está um exemplo de definição de função e como a usaríamos:\ndef draw_line(): turtle.forward(50) turtle.left(120) A primeira linha é chamada de definição de função cabeçalho. A palavra-chave def informa ao computador que estamos definindo uma nova função. A seguir, damos um nome à função, neste caso draw_line. Por fim, não se esqueça do (): no final da linha, que informa ao computador que estamos iniciando o corpo da função.\nMaterial extra - parâmetros Dentro dos parênteses () normalmente definiríamos parâmetros para a função. Parâmetros são entradas que podemos fornecer à função, que a função pode usar para produzir sua saída. Por exemplo, precisamos ter dois números para somá-los e produzir um resultado - os dois números que usamos podem ser considerados parâmetros. Hoje não usaremos parâmetros e deixaremos como ().\nSemelhante a um loop for, qualquer coisa que desejemos definir dentro da função precisa ser precedida por 1 tabulação.\nSe você pressionar run apenas com este código, notará que não verá nenhuma saída! Apenas criamos as funções, mas precisamos usá-las. Para usar a função que criamos, digite draw_line() novamente, mas sem o def.\ndef draw_line(): # Definição da função turtle.forward(50) turtle.left(120) draw_line() # Chamada de função Isso é chamado de chamada de função para a função draw_line(). Uma chamada de função executa o código definido na função com o mesmo nome. Com a analogia da receita, pense nisso como uma execução real da receita.\nDicas Sempre certifique-se de que os nomes de suas funções sejam descritivos o suficiente para explicar o que o código da função faz. Sua chamada de função deve estar abaixo da definição da função. Sintaxe complicada do Python - Parte 2 Observe que as funções usam regras de sintaxe semelhantes com loops for - você deve ter um : no final da declaração da função, e qualquer coisa no corpo da função precisa começar com uma tabulação.\nO que acontece quando você precisa de um loop for dentro de uma função? Então, você precisa combinar as regras! Aqui está um exemplo de como colocar corretamente um loop for dentro de uma função.\ndef draw_line(): for i in range(3): turtle.forward(50) Observe que turtle.forward(50) tem 2 tabulações na frente dele, porque está dentro de uma definição de função e dentro de um loop for!\nEntão, vamos tentar fazer nossa própria função draw_hexagon()! Lembre-se de incluir o cabeçalho de definição da função, o número de lados que um hexágono possui e o ângulo associado a um hexágono: 60 graus.\n"
},
{
	"uri": "/pt-br/secret-messages/activity-5/",
	"title": "Atividade 5 - Código ASCII",
	"tags": [],
	"description": "",
	"content": "Isso é ótimo!\nNesta atividade iremos criptografar (tornar secreto) o nome do destinatário.\nVamos usar o Código ASCII\nCódigo ASCII O código ASCII mostra que cada caractere possui um valor numérico. Por exemplo, o caractere A é o número 65, B é 66, C é 67, etc.\nA lista a seguir mostra o valor dos caracteres mais comumente usados:\nComo cada caractere possui um valor numérico, podemos usar isso para adicionar ou subtrair valores a essas letras, e assim alterar a ordem delas de uma determinada maneira. Permite-nos converter caracteres (char) em números (int) e vice-versa.\nExemplo\nchar letra = \u0026#39;A\u0026#39;;\rint letra_valor = letra;\rcout \u0026lt;\u0026lt; letra \u0026lt;\u0026lt; \u0026quot; = \u0026quot; \u0026lt;\u0026lt; letra_valor \u0026lt;\u0026lt; endl; Isso imprimirá:\nA = 65 Neste exemplo, salvamos o caractere em uma variável do tipo char. Então, em uma variável do tipo int salvamos a variável do tipo char, mas como a segunda variável salva números, ela irá converter o caractere em seu valor numérico de acordo com o código ASCII.\nPoderíamos fazer o oposto, por exemplo:\nint letra_valor = 67;\rchar letra = letra_valor;\rcout \u0026lt;\u0026lt; letra_valor \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; letra \u0026lt;\u0026lt; endl; Isso imprimirá:\n67 = C Para criar a mensagem secreta utilizaremos uma palavra-chave, a partir da qual codificaremos o nome. A ideia é percorrer cada caractere do nome com uma instrução for e, ao mesmo tempo, percorrer cada caractere da palavra-chave. Em seguida adicionaremos o valor do caractere do nome e da palavra-chave, e o resultado será um novo caractere, que tornará a mensagem criptografada.\nPor exemplo, se minha palavra-chave for 'queen e o nome que desejo criptografar for programmer, o programa terá que adicionar o 'r' e o 'p', e salvar o resultado no lugar de \u0026lsquo;p \u0026rsquo;na string \u0026ldquo;programmer\u0026rdquo;. Então eu adicionaria o 'r' e o 'e', o 'o' e o 'i' , etc. Quando estamos no caractere 5 da string do programador (contado o primeiro como 0 ), teremos que virar na string da rainha e iniciar no caracter retornado 0, ou seja, a letra 'r', já que a string da rainha não possui mais caracteres.\nPara isso vamos reunir parte do que já fizemos, e devemos seguir os seguintes passos:\nPrimeiro, crie uma variável do tipo string para ser a palavra-chave. Armazene a entrada recebida do console nesta variável. Este será o nome. Repita as duas primeiras etapas, mas isso armazenará a palavra-chave. Declare um loop for e use uma variável do tipo int inicializada em 0. Adicione 1 a esta variável para cada ciclo do loop e continue o loop enquanto a variável for menor que a string tamanho da variável. No corpo do loop for, crie uma variável int que seja igual à soma do caractere do nome (nome[i]) e do caractere da palavra-chave na posição do contador (chave[contador] ). Desta soma devemos subtrair uma letra minúscula 'a' para que a soma corresponda a uma letra e não a algum outro caracter aleatório do código ASCII. Use uma instrução if para determinar se a soma dos caracteres corresponde a um caractere maior que 'z'. Nesse caso, subtraia 25 (o número de letras do alfabeto) para garantir que obteremos uma letra verdadeira no alfabeto. Defina o caracter nome[i] como o valor contido na variável sum. Isso mudará a letra original para o novo caractere. Adicione 1 ao contador que carregamos da palavra-chave. Verifique se o contador de palavras-chave é maior ou igual ao comprimento da string chave; em caso afirmativo, redefina o contador para 0. Finalmente, após a instrução for, imprima a mensagem criptografada no console. Lembre-se que você sempre pode voltar às atividades anteriores para revisar qualquer coisa!\nAssim que as etapas forem concluídas, comece a jogar e criptografar suas palavras! Pressione Executar e digite no console a palavra-chave seguida da tecla Enter e, a seguir, o nome ou palavra a ser criptografada, seguida também de Enter. Por exemplo, você pode copiar e colar o seguinte em seu console:\nprogramador\rrainha Atenção: neste programa devemos sempre escrever as strings e caracteres em letras minúsculas.\rIniciar Replit\nImportante: Para colar no console, clique com o botão direito no console e clique em \u0026ldquo;Colar\u0026rdquo;. Caso contrário, a operação de colagem poderá não funcionar corretamente.\r© 2022 GitHub, Inc.\n"
},
{
	"uri": "/pt-br/python-earsketch/activity-2-make-a-song/",
	"title": "Atividade 2 – Faça uma música!",
	"tags": [],
	"description": "Configurando fones de ouvido",
	"content": "Agora que você aprendeu como adicionar sons ao Earsketch, vamos tentar fazer uma música! Você já deve ter um clipe de áudio no Earsketch, mas as músicas são compostas por vários instrumentos, por isso precisamos adicionar mais clipes de áudio.\nAdicione outra chamada fitMedia(). Encontre um clipe de áudio que você gostaria de adicionar à sua música atual e insira-o no parâmetro fileName. O parâmetro trackNumber deve ser um número único. Isso nos permitirá colocar nossos sons em faixas diferentes. Ter sons diferentes em faixas diferentes nos permite manter a organização dos nossos sons e reproduzir sons diferentes ao mesmo tempo. Exemplo: Se a primeira chamada fitMedia() estiver na trilha 1, a segunda chamada fitMedia() deverá estar na trilha 2. Preencha o restante dos parâmetros. Repita essas etapas até ter quatro sons de áudio diferentes em sua música. Seu código agora deve ser parecido com isto: from earsketch import *\ninit() setTempo(120)\nfitMedia(RD_TRAP_BELLLEAD_1, 1, 5, 9) fitMedia(YG_TRAP_STRINGS_2, 2, 1, 17) fitMedia(YG_TRAP_ELECTRIC_PIANO_FILTERED_1, 3, 1, 17) fitMedia(YG_TRAP_BASS_9, 4, 1, 9)\nfinish() "
},
{
	"uri": "/pt-br/arduino/activity-3/",
	"title": "Atividade 3 - Joystick &amp; LEDs",
	"tags": [],
	"description": "",
	"content": "Atividade 3 - Joystick + LEDs Vamos combinar a atividade 1 e a atividade 2. Vamos controlar os LEDs com base na entrada do joystick.\nConecte uma extremidade de um fio de jumper ao GND no joystick e a outra ao 7X no Breadboard. Ligue uma extremidade de um fio de jumper a +5V no joystick e a outra a 5W no Breadboard. Conecte uma extremidade de um fio de jumper ao VRx no joystick e a outra ao A0 no Elegoo. Conecte uma extremidade de um fio de jumper ao VRy no joystick e a outra ao GND no Elegoo. Conecte uma extremidade de um fio de jumper ao SW no joystick e a outra ao 2 no Elegoo. Ligue o chumbo longo (ânodo) do seu LED azul ao pino 8F e o cabo curto (cátodo) no pino 9F. Conecte uma resistência 220 com uma perna em 8G e a outra em 4G. Encaixe uma extremidade de um fio de jumper a 4H no Breadboard e a outra a 11 no Elegoo. Conecte uma extremidade de um fio de jumper ao 9G e a outra ao 12Z (em qualquer lugar da linha azul [-] no Breadboard. Coloque o chumbo longo (ânodo) do seu LED amarelo no pino 14J e o chumbo curto (cátodo) no pino 15J. Fixe uma resistência 220 com uma perna em 14I e a outra em 10I. Fixe uma extremidade de um fio de jumper a 10J no Breadboard e a outra a 10 no Elegoo. Ligue uma extremidade de um fio de jumper ao 15I e a outra ao 18Z (em qualquer lugar da linha azul [-] no Breadboard. Coloque o chumbo longo (ânodo) do seu LED vermelho no pino 21F e o cabo curto (cátodo) no pino 22F. Ligue uma resistência 220 com uma perna em 17G e a outra em 21G. Fixe uma extremidade de um fio de jumper a 17H no Breadboard e a outra a 9 no Elegoo. Conecte uma extremidade de um fio de jumper a 22G e a outra a 25Z (em qualquer lugar na linha azul [-] ) no Breadboard. Coloque o chumbo longo (ânodo) do seu LED verde no pino 14A e o chumbo curto (cátodo) no pino 15A. Fixe uma resistência 220 com uma perna em 10B e a outra em 14B. Fixe uma extremidade de um fio de jumper a 10C no Breadboard e a outra a 8 no Elegoo. Coloque uma extremidade de um fio de jumper em 15B e a outra em 17X (em qualquer lugar na linha azul [-] ) no Breadboard. Conecte os trilhos azuis com um fio de jumper Conecte os trilhos [+] vermelhos com um fio de jumper Conecte uma extremidade de um fio de jumper ao +5V no Elegoo e a outra em qualquer lugar em uma das linhas vermelhas. Conecte uma extremidade de um fio de jumper ao GND no Elegoo e a outra em qualquer lugar em uma das linhas azuis. O Código int button=2; int buttonState=0; int buttonState1=0; void setup() { pinMode(7,OUTPUT); pinMode(button,INPUT); digitalWrite(button,HIGH); Serial.begin(9600); pinMode(8,OUTPUT); pinMode(9,OUTPUT); pinMode(10,OUTPUT); pinMode(11,OUTPUT); } void loop() { int xValue = analogRead(joyX); int yValue = analogRead(joyY); Serial.print(xValue); Serial.print(\u0026#34;\\t\u0026#34;); Serial.println(yValue); buttonState = digitalRead(button); Serial.println(buttonState); if (xValue\u0026gt;=0 \u0026amp;\u0026amp; yValue\u0026lt;=20) { digitalWrite(10,HIGH); } else{digitalWrite(10,LOW);} if (xValue\u0026lt;=20 \u0026amp;\u0026amp; yValue\u0026gt;=490) { digitalWrite(11,HIGH); } else{digitalWrite(11,LOW);} if (xValue\u0026gt;=1010 \u0026amp;\u0026amp; yValue\u0026gt;=490) { digitalWrite(9,HIGH); } else{digitalWrite(9,LOW);} if (xValue\u0026gt;=490 \u0026amp;\u0026amp; yValue\u0026gt;=1010) { digitalWrite(8,HIGH); } else{digitalWrite(8,LOW);} if (xValue\u0026gt;=1010 \u0026amp;\u0026amp; yValue\u0026gt;=1010) { digitalWrite(9,LOW); digitalWrite(8,LOW); } if (buttonState==LOW) { Serial.println(\u0026#34;Switch = High\u0026#34;); digitalWrite(7,HIGH); } else{digitalWrite(7,LOW);} buttonState1=digitalRead(7); Serial.println(buttonState1); delay(100); } "
},
{
	"uri": "/pt-br/security-phishing/summary/",
	"title": "Summary",
	"tags": [],
	"description": "",
	"content": "Conclusion In conclusion, the common features found in Phishing scams have at least one of the following properties:\nLucrative offers or attention grabbing statements. Unusual sender of unexpected behavior or character. Sense of urgency by asking you to act fast because of limited time offers or deals. Example: Your password is about to expire click here to change it immediately. Suspicious hyperlinks. Hovering over the link will show the actual URL you will be directed to. Misspellings or grammatical mistakes. Example: mail@g00gle.com instead of mail@google.com Email attachments with random file name or extensions. Solution In the activity \u0026ldquo;What\u0026rsquo;s Phishy\u0026rdquo; the following emails and texts were potential phishing attempts:\nThe email from spotifyaccounts. The text from Amazon for free Airpods. A voice notification email. Remember to be careful about what you upload or download from the internet.\n"
},
{
	"uri": "/pt-br/linux-basics/activity-4/",
	"title": "Atividade 4 - Praticando anotações",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para criar um novo arquivo",
	"content": "\rComo engenheiro de segurança cibernética, é importante fazer muitas anotações. Elas são úteis para referências futuras e entender como a invasão aconteceu. Vamos registrar nosso trabalho!\rE se nós quisermos criar um novo diretório? Para criar um novo diretório, use o comando mkdir (que significa \u0026ldquo;Crie um Diretório\u0026rdquo;) no seguinte formato: mkdir minha_pasta\nVamos criar um diretório chamado files digitando o comando abaixo:\nmkdir files Como podemos observar, quando executamos o comando ls -l, um diretório adicional chamado files aparece na lista de diretórios.\nO que podemos fazer com esses arquivos? Um exemplo de como podemos manipular um arquivo ou diretório é movendo-o para outro local. Isso é feito pelo comando de movimento, mv. Agora, vamos mover o diretório Music para o diretório Documents.\nDigite o seguinte comando abaixo no seu terminal:\nmv Music/ Documents/ Agora vamos listar os diretórios mais um vez. Digite o comando ls -l e observe a saída do terminal.\nVocê pode perceber que o diretório Music não aparece mais na sua lista de diretórios. O motivo disso acontecer é porque ele foi movido para o diretório Documents.\nPodemos ver que ele foi movido para Documents usando o comando ls + o local do diretório ao qual o arquivo foi movido. Como por exemplo:\nls -l Documents/ Agora, vamos praticar o comando mv mais uma vez, movendo o arquivo Music para o nosso diretório atual.\nVamos praticar?\nmv Documents/Music/ . No comando acima, nós movemos o diretório Music do diretório Documents, para o nosso diretório atual, denotado por .. O ponto representa o diretório atual do usuário. Nesta etapa, se digitarmos ls -l mais uma vez, perceberemos que o diretório Music aparece novamente na lista de diretórios.\nÓtimo trabalho! Agora você sabe como mover arquivos. Usaremos esse conhecimento em breve para recuperarmos nossos documentos do ataque.\rE se quisermos criar um novo arquivo? Para criarmos um arquivo, usamos o comando touch. O comando touch cria um arquivo vazio e sem dados.\nVamos treinar esse comando, criando um arquivo chamado file1:\ntouch file1 Agora, quando digitamos ls -l podemos ver que o arquivo file1 foi criado.\nComo podemos adicionar dados ao nosso arquivo? Um arquivo vazio não tem muita utilidade, então vamos adicionar alguns dados no nosso arquivo, como nosso nome. Para abrir o nosso arquivo para edição, usaremos o comando vim. O Vim é um editor que permite adicionar, remover e alterar os dados de um arquivo.\nDigite o comando abaixo para editar o arquivo file1:\nvim file1 Agora que abrimos o nosso arquivo, pressione i para informarmos ao Vim que queremos inserir dados no nosso arquivo. Depois digite nuvi e pressione a tecla esc para sair do modo de inserção. Por fim, digite :wq e pressione enter. Os dois pontos informam ao Vim que estaremos digitando um comando. O w e o q dizem ao vim que desejamos salvar as alterações feitas e fechar o arquivo.\nPara sair do editor vim, pressione esc e então digite :wq. Salve essas informações pois você as usará toda vez que precisar usar o comando vim!\nDigitaremos o comando ls -l mais uma vez. Agora podemos notar que o arquivo file1 tem 5 bytes de conteúdo, em vez de 0 bytes, quando este estava em branco.\nDefinição: Um byte é uma unidade de medida para dados. No nível mais baixo, os computadores usam o que é conhecido como \u0026ldquo;bit\u0026rdquo;, que é uma única unidade de dados cujo valor só pode ser \u0026ldquo;0\u0026rdquo; ou \u0026ldquo;1\u0026rdquo;, para representar informações. Um byte é uma coleção de 8 bits.\nAgora vamos a última etapa da nossa atividade. Vamos mover o nosso novo arquivo file1 para o nosso novo diretório files.\nDigite o seguinte comando:\nmv file1 files Parabéns, você criou, editou e moveu o seu primeiro arquivo! Agora vamos proteger o nosso sistema!\r"
},
{
	"uri": "/pt-br/java-basics/activity-6/",
	"title": "Objeto e Classes",
	"tags": [],
	"description": "Apresente objeto e classe em Java.",
	"content": "\nO que é um objeto e uma classe? Um objeto é uma coisa (substantivo) que possui certas características e pode realizar determinadas tarefas. Uma classe é o projeto ou definição desse objeto.\nUm exemplo é uma Pessoa. Uma pessoa é classe. Uma pessoa pode ter certas características que a distinguem de outra pessoa. Pode ter olhos azuis, pode ter 30 anos, etc. Uma pessoa também pode realizar certas tarefas. Ele pode andar, pode falar, etc.\nUm objeto Java é uma instância de uma classe Java. Neste caso, \u0026ldquo;Bea\u0026rdquo; é uma \u0026ldquo;Pessoa\u0026rdquo;. \u0026ldquo;Bea\u0026rdquo; tem olhos castanhos. Esta é uma propriedade (ou campo de dados) de \u0026ldquo;Bea\u0026rdquo;. \u0026ldquo;Bea\u0026rdquo; pode falar em inglês. \u0026ldquo;Bea\u0026rdquo; pode falar espanhol. Estes são métodos que \u0026ldquo;Bea\u0026rdquo; pode executar.\nCriando uma classe! Java é uma linguagem de programação orientada a objetos, o que significa que tudo em Java está associado a um objeto e a uma classe (o modelo do objeto).\nPara começar, a linha de código que usamos para imprimir instruções da atividade 1 é na verdade uma chamada de método de uma classe predefinida chamada System!\nSystem.out.println(\u0026#34;Hello World\u0026#34;); System é uma classe que lida com entradas e saídas do usuário. out é uma variável na classe System da classe/tipo PrintStream. println() é um método definido na classe PrintStream. Outra classe com a qual interagimos nos exercícios anteriores é String. A classe String define um conjunto de regras sobre como uma lista de caracteres deve se comportar.\nCom a seguinte linha de código, criamos um objeto String chamado name usando as regras definidas na classe String:\nString name = \u0026#34;Patrick\u0026#34;; System, PrintStream e String são classes predefinidas em Java. No entanto, não estamos limitados a essas classes predefinidas e podemos criar nosso próprio tipo de dados escrevendo uma classe! Isso é útil para codificadores criarem objetos específicos com determinados atributos e comportamentos. Ter acesso a esses tipos definidos pelo usuário nos permite construir programas distintos.\nVamos aprender sobre as diferentes partes de uma aula abaixo:\nClasse Uma classe é um projeto ou protótipo de um novo tipo de objeto. Em geral, uma classe contém três partes importantes: (1) campos de dados/variáveis ​​de instância (2) construtor (3) métodos.\nElemento Descrição Exemplo campos de dados/variáveis ​​de instância variáveis ​​às quais um objeto desta classe tem acesso e que descrevem o objeto A classe Person possui campos eyeColor, age, height. construtor método chamado para criar um objeto desta classe Pode haver mais de um construtor por classe métodos métodos que um objeto desta classe poderá chamar para executar determinadas tarefas A classe Person possui métodos talk e walk. Por exemplo:\npublic class SampleClass{ // (1) campos de dados/variáveis ​​de instância private String name; // exemplo // (2) construtor public SampleClass(){ name = \u0026#34;example\u0026#34;; } // (3) métodos public sampleMethod(){} } Experimente 🐥! Vamos fazer uma classe Bird para representar Patrick 🐥 e todos os seus amigos Bird (pássaros) seguindo os passos abaixo! Nota: Para este exercício, você trabalhará em Bird.java em vez de Main.java.\nLaunch Replit\nPrimeiro, começamos definindo o nome da classe no formato public class name. public class Bird{} Segundo, vamos declarar todos os campos da classe Bird: species, name, hobby, age, loveMusic. Cada campo é declarado no formato: private data type name ;.\nDeclaramos todos os 5 campos como private na classe Bird. Isso garante que esses dados só possam ser acessados ​​dentro desta classe.\nVamos identificar o tipo apropriado para cada campo:\nspecies deve ser uma String que armazena por exemplo: \u0026ldquo;duck\u0026rdquo;, \u0026ldquo;swan\u0026rdquo;, \u0026ldquo;owl\u0026rdquo; (\u0026ldquo;pato\u0026rdquo;, \u0026ldquo;cisne\u0026rdquo;, \u0026ldquo;coruja\u0026rdquo;). name deve ser uma String que armazena por exemplo: \u0026ldquo;Patrick\u0026rdquo;. hobby deve ser uma String que armazena por exemplo: \u0026ldquo;jogar basquete\u0026rdquo;. age deve ser um int que armazena por exemplo: 25. loveMusic deve ser um boolean que armazena verdadeiro ou falso. Por exemplo, para declarar species como um campo privado da classe Bird, você colocaria private String Species; .\nTermine de criar os outros 4 campos da classe Bird! Terceiro, vamos criar o construtor para a classe Bird. Normalmente, construtor é o método que inicializa o valor para todos os campos de uma classe. Possui o formato public nome da classe (parâmetro). Como temos 5 campos nesta classe, o construtor receberá 5 parâmetros/entradas.\npublic Bird(String speciesInput, String nameInput, String hobbyInput, int ageInput, boolean loveMusicInput){ // corpo do construtor } No corpo do construtor, precisamos inicializar todas as variáveis ​​de instância, atribuindo a cada variável seus valores iniciais:\nspecies = speciesInput; name = nameInput; hobby = hobbyInput; age = ageInput; loveMusic = loveMusicinput; Por último, vamos criar alguns métodos para a classe Bird. Vamos criar 6 métodos para esta classe!\ngetSpecies(); // retornar espécie da ave getName(); // retornar o nome do pássaro getHobby(); // retornar hobby do pássaro getAge(); // retornar idade do pássaro getLoveMusic(); // retornar se o pássaro adora música toString(); // retornar informações em uma String Tente escrever os primeiros 5 métodos com o que você aprendeu no exercício anterior sobre métodos de escrita!\nDepois, vamos escrever o método `toString()` juntos!\rtoString() é um método que retorna a representação String do objeto.\nRetornaremos uma String que inclui todos os campos do Bird: name, age, species, hobby, loveMusic, chamando os 5 métodos que você acabou de implementar!\npublic String toString(){ // inicialize as informações da variável para ter uma String vazia String info = \u0026#34;\u0026#34;; // anexe informações à String no formato: // Hi, my name is [name]. I am a [age] year old [species] who likes to [hobby]. info = info + \u0026#34;Hi, my name is \u0026#34; + getName() + \u0026#34;. I am a \u0026#34; + getAge() + \u0026#34; year old \u0026#34; + getSpecies() + \u0026#34; who likes to \u0026#34; + getHobby() + \u0026#34;. \u0026#34;; // se o pássaro gosta de música, acrescente a string \u0026#34;I also like music very much!\u0026#34; para informações if(getLoveMusic()){ info = info + \u0026#34;I also like music very much!\u0026#34;; }else{ info = info + \u0026#34;However, I do not like music!\u0026#34;; } // retornar a String completa return info; } Se você implementou corretamente a classe Bird, você verá a seguinte mensagem ao clicar em Run:\nParabéns! Você implementou corretamente a classe Bird :) Se ainda houver algo incompleto ou incorreto ao clicar em Executar:\nVocê pode receber um erro como Main.java:3: error: cannot access Bird (Main.java:3: erro: não é possível acessar o Bird). Ou você verá a mensagem, Something is still not quite right! (Algo ainda não está certo!). Criando Birds 🐥! Parabéns! Você acabou de escrever sua primeira classe Java, classe Bird. Agora vamos aprender a escrever um programa que use objetos Bird!\nDefinimos a classe Bird para ter os seguintes atributos (variáveis ​​de instância) e comportamentos (métodos): Para criar um novo objeto de uma classe específica, chamamos o construtor dessa classe no formato class name variable name = new constructor call.\nLembre-se de que o construtor da classe Bird é o seguinte:\npublic Bird(String speciesInput, String nameInput, String hobbyInput, int ageInput, boolean loveMusicInput); Assim, podemos criar um Bird com estes atributos (species - duck; name - Patrick; hobby - hangout with friends; age - 15; loveMusic - true) com esta linha de código.\nBird patrick = new Bird(\u0026#34;duck\u0026#34;, \u0026#34;Patrick\u0026#34;, \u0026#34;hangout with friends\u0026#34;, 15, true); Experimente você mesmo e crie vários pássaros de espécies diferentes 🐦🐤🐔🐧!\nA seguir, vamos chamar o método `toString()` nesses objetos `Bird` que criamos para imprimir as informações de nossos amigos. Você pode fazer o seguinte:\rImprima o valor de retorno do método toString(). (ou seja, System.out.println(patrick.toString());) Imprima diretamente o objeto Bird, que solicita que toString() seja chamado em segundo plano. (ou seja, System.out.println(patrick);). Experimente e imprima todas as informações dos amigos pássaros que você criou 🐦🐤🐔🐧!\nLaunch Replit\n"
},
{
	"uri": "/pt-br/unity/setting-up-enemies/",
	"title": "Configurando os inimigos",
	"tags": [],
	"description": "",
	"content": "Agora que o Nuvi está preparado e pronto para agir, vamos fazer com que eles recebam os alienígenas no universo! Localize o arquivo png alienígena chamado \u0026ldquo;alien_pink\u0026rdquo; na pasta Drawings. Em seguida, arraste e solte alien_pink na hierarquia. Redimensione o inimigo para corresponder ao tamanho do Nuvi, pois ele é muito grande.\nAgora, se fôssemos rodar o jogo, Nuvi atravessaria o alienígena rosa. Queremos que o Nuvi colida com ele. Para fazer isso, adicione um BoxCollider2D no alienígena como fizemos com o Nuvi e redimensione-o se necessário. Agora, se rodarmos o jogo novamente, Nuvi esbarrará no alienígena em vez de passar por cima dele!\n"
},
{
	"uri": "/pt-br/android-tictactoe/strings/",
	"title": "Strings",
	"tags": [],
	"description": "",
	"content": "Qualquer coisa que esteja entre aspas é chamada de string. É assim que um computador representa palavras ou frases. Por exemplo, \u0026quot;a\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;banana!\u0026quot; e \u0026quot;Hello World\u0026quot; são strings, mas \u0026quot;Hello World e 2 não são strings, pois não estão entre aspas. Você pode combinar muitas strings usando o operador +. Por exemplo:\n\u0026quot;Apple\u0026quot; + \u0026quot;Pineapple\u0026quot; produz a string \u0026quot;ApplePineapple\u0026quot;. \u0026quot;Nuevo\u0026quot; + \u0026quot; \u0026quot; + \u0026quot;Foundation\u0026quot; produz a string \u0026quot;Nuevo Foundation\u0026quot;. Trabahando Juntos Exclua todo o texto System.out.println do seu código. Comece seu código com a linha System.out.println(\u0026quot;Nuevo\u0026quot; + \u0026quot; \u0026quot; + \u0026quot;Foundation\u0026quot;);. Observe que existem muitas maneiras de combinar strings. Por exemplo, outra maneira de imprimir Nuevo Foundation seria escrever System.out.println(\u0026quot;Nue\u0026quot; + \u0026quot;vo Fou\u0026quot; + \u0026quot;ndation\u0026quot;);. Iremos debater pelo menos mais uma maneira de imprimir a string \u0026quot;Nuevo Foundation\u0026quot; usando dois símbolos + em cada instrução System.out.println. Verifique se Nuevo Foundation foi impresso 3 vezes. Em outras palavras, seu console deve ficar assim depois de você pressionar executar:\nNuevo Foundation\rNuevo Foundation\rNuevo Foundation\r"
},
{
	"uri": "/pt-br/java-datastructures/hashmaps/",
	"title": "Hashmaps: A entrega",
	"tags": [],
	"description": "",
	"content": "Agora que os restaurantes terminaram de preparar o pedido, um motorista precisa vir retirar o pedido e entregá-lo ao cliente. Mas para onde o motorista deve ir? Ele precisa de um endereço de alguma forma. Queremos vincular o nome e o pedido de um cliente ao seu respectivo endereço. Podemos conseguir isso utilizando um HashMap.\n"
},
{
	"uri": "/pt-br/web-basics/media-elements/",
	"title": "Media Elements",
	"tags": [],
	"description": "",
	"content": "Adicionar um GIF GIF significa Graphic Interchange Format, mas tudo que você precisa saber é que é apenas outro tipo de arquivo de imagem. A única diferença é que o arquivo contém muitas imagens. Quando exibidas no navegador, as imagens são reproduzidas em sequência, semelhante aos frames de um filme. Pense nisso como um daqueles flip books que parecem ter uma imagem animada quando você o vira.\nAdicione um vídeo Além de texto e imagens, uma das coisas mais comuns que gostamos de adicionar aos sites são os vídeos. Os arquivos de vídeo são muito grandes, então é melhor usar um serviço para enviar e exibir o vídeo, como o YouTube. Depois de carregado no YouTube, como podemos reproduzi-lo em nosso site? Usamos uma tag especial chamada iframe\nIframes exibem HTML de outros sites dentro do nosso. É como uma janela, onde você pode ver o que está acontecendo lá fora na internet, de dentro do site atual. Este processo é chamado de incorporação.\nPor exemplo, o vídeo abaixo é um iframe do Instragram de Benji:\nView this post on Instagram Push yourself to try new things! 🍉 I stick to the paleo diet most days (usually just the meat part) but on occasion I go for something crazy\nA post shared by Benji Escobari Marquez (@benjimite_thegudboi) on Aug 25, 2018 at 10:05pm PDT\nMuitos sites oferecem iframes para incorporar ao seu site. Por exemplo, veja como você encontra o código iframe para um vídeo do YouTube:\nAqui está um exemplo de iframe Copie o seguinte código: \u0026lt;iframe width=\u0026quot;560\u0026quot; height=\u0026quot;315\u0026quot; src=\u0026quot;https://www.youtube.com/embed/lQsqEBSGdyc\u0026quot; frameborder=\u0026quot;0\u0026quot; permitir=\u0026quot;acelerômetro; reprodução automática; mídia criptografada; giroscópio; imagem- na imagem\u0026quot; permitir tela cheia\u0026gt; \u0026lt;/iframe\u0026gt;\nCole-o na sua Code Pen e ficará assim:\n"
},
{
	"uri": "/pt-br/python-turtle/activity-5/",
	"title": "Atividade 5 – Desenhando um favo de mel",
	"tags": [],
	"description": "",
	"content": "\nEste é o final! Vamos criar o favo de mel onde Alex viverá. Felizmente, este favo de mel tem apenas 6 hexágonos, então vamos combinar nosso conhecimento de funções e loops para fazer nosso favo de mel!\nNesta atividade, crie uma nova função chamada draw_honeycomb(). Dentro do corpo da função, crie um loop que se repete 6 vezes. Dentro do loop temos que primeiro desenhar um hexágono usando nossa função draw_hexagon() que definimos anteriormente. Em seguida, mova a tartaruga para que ela desenhe o próximo hexágono. Para fazer isso, depois que a tartaruga desenhar cada hexágono, precisamos dizer à nossa tartaruga para avançar 50 pixels e depois virar para a direita 60 graus.\nObserve que o desenho do favo de mel pode demorar um pouco. Você pode alterar a rapidez com que a tartaruga desenha o favo de mel definindo a velocidade da tartaruga para um número entre 1 e 10, sendo 1 o mais lento e 10 o mais rápido. Coloque este código perto de onde mudamos a cor da tartaruga.\nturtle.speed(8) "
},
{
	"uri": "/pt-br/secret-messages/activity-6/",
	"title": "Atividade 6 – Funções",
	"tags": [],
	"description": "",
	"content": "Muito bem!\nVocê já fez muito do programa!\nNesta atividade usaremos funções para agrupar seções do código.\nFunções As funções nos permitem dividir o trabalho de um programa em tarefas menores separadas da seção principal, ou seja, da função main.\nPodemos pensar nas funções como uma máquina que, ao ser ligada, executa instruções para retornar um resultado final. Você pode ter diversas máquinas que realizam processos diferentes, e identificamos cada uma delas com um nome, e o tipo de resultado que ela retorna.\nNesta atividade usaremos funções com o tipo de retorno void (vazio). Essas funções processam apenas instruções e não retornam nada.\nPara declarar (criar) uma função, devemos usar a seguinte estrutura fora da função principal:\nvoid name_function(){\r//Código aqui\r} Vamos analisar este código com mais detalhes:\nO tipo de retorno da função indica o tipo de objeto que a função retornará. Neste caso, usamos void para especificar que esta função não retorna nada. O nome desta função é name_function. Os parênteses () são adicionados após o nome para identificar que se trata de uma função. As chaves {} determinam o bloco de código que será executado quando usarmos a função. Chamando uma função Como as funções que declaramos vão fora da função main(), quando pressionamos Run, o bloco de código que escrevemos nas funções não será executado. Portanto, dentro da função main() devemos chamar a função. Devemos informar ao programa quando queremos que aquele bloco de código seja executado. Para chamar uma função, devemos usar a seguinte instrução:\nname_function(); Basta escrever o nome que demos à função, seguido dos parênteses e terminar com ponto e vírgula ;. Isso fará com que as instruções que estão dentro da função name_function() sejam executadas.\nParâmetros de uma função Quando declaramos uma função, podemos passar parâmetros para ela. Estes são objetos adicionais que a função pode usar para executar suas instruções. Os parâmetros ficam entre parênteses da função. Por exemplo:\nvoid name_function(int sum, int \u0026amp;number){\rnumber += sum;\r} E na função main() podemos chamar name_function com alguns parâmetros:\nint main(){\rint x = 25;\rint y = 5;\rname_function(y, x);\r} Vamos entender em detalhes o que fizemos:\nAo declarar name_function, escrevemos entre parênteses quais variáveis ​​vamos passar para a função. Então, dentro do corpo da função, podemos usar essas variáveis. Em main, já tínhamos duas variáveis ​​​​declaradas, que então passamos como parâmetros para a função criada name_function. Ao fazer isso, a variável sum é igual à variável y. A variável number possui este símbolo \u0026amp; na frente. Isso significa que se modificarmos a variável dentro da função, a variável que passamos para ela na função principal também será modificada. Ou seja, a variável x será modificada pela função já que a passamos por referência ao escrever aquele símbolo na frente. Quando não colocamos este símbolo, mesmo que modifiquemos seu valor na função, não veremos essa mudança em main. Isso é ótimo! Agora, vamos criar 2 funções – uma para criptografar a mensagem e outra para descriptografá-la. Para isso usaremos um código que já tínhamos e programaremos algo novo também.\nPrimeiro, declare uma função do tipo de retorno void, assim como a criptografia, mas para descriptografar o nome. Nomeie esta função como decrypt().\nCopie o conteúdo da função encrypt() para a nova função decrypt.\nNa variável sum, em vez de somar, subtraia o caractere do nome e o caractere da palavra-chave, e adicione uma letra a (em vez de subtrair) para que o caractere final seja uma letra do alfabeto e não algum personagem aleatório.\nAltere a condição para entregar o alfabeto. Em vez de verificar se a soma é maior que o caractere z, verifique se a soma é menor que a; em caso afirmativo, adicione 25 à variável, em vez de subtrair.\nNa função main, chame a função correspondente na condição if dependendo se queremos criptografar ou descriptografar uma mensagem.\nQuando terminar, pressione Executar e tente os seguintes exemplos:\nprogrammer\r1\rreina witvczxipigrmg\r2\rreina Você também deve tentar usar suas próprias palavras secretas!\nAtenção: neste programa devemos sempre escrever as strings e caracteres em letras minúsculas.\rLembre-se que você sempre pode voltar às atividades anteriores para revisar qualquer coisa!\nIniciar Replit\nImportante: Para colar no console, clique com o botão direito no console e clique em \u0026ldquo;Colar\u0026rdquo;. Caso contrário, a operação de colagem poderá não funcionar corretamente.\r"
},
{
	"uri": "/pt-br/python-earsketch/activity-3-organize-songs-using-functions/",
	"title": "Atividade 3 - Organize sua música usando funções",
	"tags": [],
	"description": "Configurando fones de ouvido",
	"content": "No EarSketch, as funções são usadas principalmente para organizar diferentes seções de uma música. A forma musical mais comum é A-B-A onde cada seção é quatro compassos de duração, e as seções A soam diferentes da seção B.\nAgora que aprendemos como usar as funções, vamos tentar utilizá-las para organizar melhor nossas músicas.\nDefina sua função com um parâmetro startMeasure e um parâmetro endMeasure. Coloque os sons que você gostaria que a função representasse abaixo da definição da sua função. Tente fazer múltiplas seções de uma música (verso, refrão, introdução, etc.) e defina-as com suas funções. Se você não fizer isso e usar apenas múltiplas chamadas fitMedia, você notará que seu programa se tornará longo e difícil de entender. Para ajudar a evitar um arquivo de projeto grande, use funções! Seu código agora deve ser parecido com isto:\nfrom earsketch import * init() setTempo(120) fitMedia(HOUSE_DEEP_CRYSTALCHORD_001, 3, 1, 5) fitMedia(HOUSE_DEEP_CRYSTALCHORD_002, 3, 5, 9) # Section A def sectionA(startMeasure, endMeasure): fitMedia(RD_UK_HOUSE__AIRYPAD_1, 1, startMeasure, endMeasure) fitMedia(HOUSE_MAIN_BEAT_002, 4, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) # Section B def sectionB(startMeasure, endMeasure): fitMedia(Y37_ORGAN_1, 2, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) fitMedia(RD_UK_HOUSE__ARPLEAD_1, 6, startMeasure, endMeasure) sectionA(1, 9) sectionB(9, 17) sectionA(17, 25) finish() "
},
{
	"uri": "/pt-br/arduino/activity-4/",
	"title": "Atividade 4 - Display LCD",
	"tags": [],
	"description": "",
	"content": "Diagrama de fiação Agora que você domina os sinais de saída para LEDs, vamos ver a exibição de texto com uma exibição simples. Apenas 1 resistor (5K) é usado para limitar o brilho do display. Tente ligar isso de acordo com o diagrama sem instruções específicas.\nO Código: //www.elegoo.com //2016.12.9 /* Biblioteca LiquidCrystal - Hello World Demonstra o uso de uma tela LCD 16x2. O Cristal Líquido biblioteca funciona com todos os monitores LCD que são compatíveis com o Hitachi HD44780 driver. Há muitos deles por aí, e você geralmente pode dizê-los pela interface de 16 pinos. Este esboço imprime \u0026#34;Hello World!\u0026#34; no LCD e mostra o tempo. O circuito: * Pino RS LCD para pino digital 7 * LCD Ativar pino para pino digital 8 * LCD D4 pino para pino digital 9 * LCD D5 pino para pino digital 10 * LCD D6 pino para pino digital 11 * LCD D7 pino para pino digital 12 * LCD R / W pino ao solo * LCD VSS pino à terra * LCD VCC pino para 5V * Resistor de 10K: * termina a +5V e terra * limpador para pino VO LCD (pino 3) Biblioteca adicionada originalmente 18 abr 2008 por David A. Mellis biblioteca modificada 5 jul 2009 por Limor Fried (http://www.ladyada.net) exemplo adicionado 9 jul 2009 por Tom Igoe modificado 22 nov 2010 por Tom Igoe Este código de exemplo é de domínio público. http://www.arduino.cc/en/Tutorial/LiquidCrystal */ // incluir o código da biblioteca: #include \u0026lt;LiquidCrystal.h\u0026gt; // Inicializar a biblioteca com os números dos pinos da interface LiquidCrystal lcd(7, 8, 9, 10, 11, 12); void setup() { // configure o número de colunas e linhas do LCD: lcd.begin(16, 2); // Imprima uma mensagem no LCD. lcd.print(\u0026#34;Hello, World!\u0026#34;); } void loop() { // Defina o cursor para a coluna 0, linha 1 // (nota: a linha 1 é a segunda linha, uma vez que a contagem começa com 0): lcd.setCursor(0, 1); // Imprima o número de segundos desde a reposição: lcd.print(millis() / 1000); } "
},
{
	"uri": "/pt-br/linux-basics/activity-5/",
	"title": "Atividade 5 - Protegendo as permissões de usuários",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para proteger os seus arquivos",
	"content": "\rEssa não! Parece que alguns de nossos arquivos foram manipulados! Precisamos proteger as nossas anotações urgentemente. Não queremos que um hacker acesse nossos segredos!\rComo podemos limitar o acesso aos nossos arquivos? A resposta é, podemos dar \u0026ldquo;permissões\u0026rdquo; aos usuários nos próprios arquivos!\nAs permissões são uma maneira de determinar como o computador permite aos usuários o acesso aos arquivos e o que eles podem fazer com esses arquivos.\nNo Linux, existem três tipos comuns de acesso a um arquivo que um usuário pode solicitar: \u0026ldquo;leitura\u0026rdquo;, \u0026ldquo;escrita\u0026rdquo; ou \u0026ldquo;execução\u0026rdquo;.\nA permissão de \u0026ldquo;Leitura\u0026rdquo; significa que um usuário pode abrir e ler o arquivo. O acesso do tipo \u0026ldquo;leitura\u0026rdquo; geralmente é indicado com um símbolo r que vem do Inglês read.\nA permissão de \u0026ldquo;Escrita\u0026rdquo; significa que um usuário pode abrir e escrever no arquivo. Isso inclui renomear e mover um arquivo para um local diferente no sistema de arquivos. O acesso do tipo \u0026ldquo;escrita\u0026rdquo; geralmente é indicado com um símbolo w que vem do Inglês write.\nA permissão de \u0026ldquo;Execução\u0026rdquo; significa que um usuário pode tentar executar o arquivo como um programa. O acesso do tipo \u0026ldquo;execução\u0026rdquo; geralmente é indicado com um símbolo x que vem do Inglês execute.\nMas como sabemos o quão protegidos estão nossos arquivos? Nós já estudamos um comando em um das atividades passadas que pode nos mostrar o quão protegidos estão nossos arquivos. Você lembra dele? Caso não lembre, fique à vontade para relembrá-lo acessando a atividade 3!\nDevemos continuar usando esse mesmo comando para verificar se as nossas futuras alterações ocorrerão conforme o esperado.\nEntão como podemos proteger os nossos arquivos com essas permissões? Vamos analisar o comando chmod:\nchmod u=rwx g=rx o=x file1 Usamos o comando chmod para modificar as permissões dos nossos arquivos. Nós \u0026ldquo;alteramos o modo\u0026rdquo; que nossos arquivos são acessados modificando os três grupos de permissões:\no grupo u que representa o usuário e dono do arquivo o grupo g que representa o grupo de usuários que têm acesso permitido naquele arquivo o grupo o que representa os outros usuários que não têm acesso Esses grupos podem ser modificados com as seguintes permissões:\nr para leitura w para escrita x para execução. Hora de aplicar o que aprendemos até agora! Agora, vamos tentar alterar as permissões dos nossos arquivos. Queremos que qualquer pessoa dentro e fora do nosso grupo não consiga acessar file1. Apenas o dono do arquivo deve ter acesso. Você sabe como faríamos isso?\nCuriosidade! chmod também pode ser usado com comandos numéricos simples. Esse método é chamado de modo octal pois possui oito tipos de permissões diferentes. Para modificar um arquivo no modo octal nos usamos:\nchmod 751 [digite o nome do arquivo] Quando utilizamos o modo octal, podemos passar o modo de permissões de cada grupo de usuários. A ordem é sempre: usuário dono, grupo dono e outros usuários. Abaixo podemos verificar os oito tipos de permissões diferentes para esse método:\nNúmero Permissão 7 leitura + write + execute 6 leitura + escrita 5 leitura + execução 4 leitura 3 execução + escrita 2 escrita 1 execução 0 sem permissão "
},
{
	"uri": "/pt-br/java-basics/activity-7/",
	"title": "Estruturas de dados (Array &amp; ArrayList)",
	"tags": [],
	"description": "Apresente estruturas de dados básicas em Java.",
	"content": "\nNos exercícios anteriores, aprendemos que variáveis ​​nos permitem acessar e armazenar dados. Mas, e se quisermos armazenar vários dados semelhantes? Existe uma boa maneira de organizá-los sem declarar múltiplas variáveis?\nNa programação, estruturas de dados são elementos que permitem aos codificadores armazenar vários dados do mesmo tipo. Usar estruturas de dados é uma maneira eficiente de armazenar e acessar grandes volumes de dados. Neste exercício, aprenderemos sobre 2 estruturas de dados usadas em Java: array e ArrayList.\nEmbora array seja uma estrutura de dados de comprimento fixo, ArrayList é um comprimento variável onde você pode alterar o tamanho da estrutura de dados. Vamos começar examinando arrays!\nArray Digamos que queremos armazenar os 5 melhores filmes favoritos de Patrick. Em vez de criar 5 variáveis, podemos armazenar todos os 5 dados em um array, nossa primeira estrutura de dados!\nPara armazenar dados em um array, fazemos o seguinte:\nPrimeiro declaramos um array especificando um tipo e tamanho de dados (número de dados que podem ser armazenados). String topMovies[] = new String[5]; // crie um array de Strings de tamanho 5. Repetimos pelo array (passamos por todos os pontos de dados) e atribuímos os dados a um ponto no array. Observe que acessamos o array com seu nome e um índice (0 para acessar o 1º elemento, 1 para o 2º\u0026hellip;).\ntopMovies[0] = \u0026#34;Birds Of Prey\u0026#34;; topMovies[1] = \u0026#34;The Birds\u0026#34;; topMovies[2] = \u0026#34;Angry Birds\u0026#34;; topMovies[3] = \u0026#34;Bird Box\u0026#34;; topMovies[4] = \u0026#34;The Secret Life of Pets\u0026#34;; // a array topMovies agora armazena \u0026#34;Birds Of Prey\u0026#34;, \u0026#34;The Birds\u0026#34;, \u0026#34;Angry Birds\u0026#34;, \u0026#34;Bird Box\u0026#34;, \u0026#34;The Secret Life of Pets\u0026#34; em ordem Por que a indexação de array em Java começa com 0? É tentador e razoável pensar que para acessar o elemento de um array no primeiro índice, deveríamos começar no índice 1.\nPorém, quando o computador lê o código arr[1], ele não pensa em obter o 1º elemento de arr.\nNa verdade, ele lê arr[1] para obter a distância do elemento 1 do início do array.\nEm outras palavras, o índice é na verdade um deslocamento de memória. Para acessar o primeiro elemento, devemos obter o elemento de 0 deslocado do início do array (ou seja, arr[0]).\nUma maneira alternativa de criar um array: Se conhecermos todos os dados de um array com antecedência, podemos criar o array em uma linha listando todos os dados entre { e }.\nPor exemplo:\nString topMovies[] = {\u0026#34;Birds Of Prey\u0026#34;, \u0026#34;The Birds\u0026#34;, \u0026#34;Angry Birds\u0026#34;, \u0026#34;Bird Box\u0026#34;, \u0026#34;The Secret Life of Pets\u0026#34;}; Assim como inicializamos os dados com seu índice, também podemos acessar/modificar cada dado com seu índice.\nPor exemplo:\nString movie1 = topMovies[0]; // movie1 tem valor \u0026#34;Birds Of Prey\u0026#34; Muitas vezes é útil saber quantos elementos há em um array depois de criá-lo (para acessar o último elemento do array, por exemplo). Podemos obter o número de elementos no array no campo length do array, digitando array_name.length.\nPor exemplo:\nint numOfMovie = topMovies.length; // numOfMovie tem valor 5 Exercício: Escreva um método printArr() que receba uma entrada de array e imprima todos os elementos desse array em ordem (Dica: utilize for loop e .length para ajudá-lo).\nApós clicar em Executar, o programa deverá imprimir o seguinte:\nBirds Of Prey, The Birds, Angry Birds, Bird Box, The Secret Life of Pets Launch Replit\nArrayList ArrayList é outra estrutura de dados popular em Java. ArrayList é uma classe que foi implementada usando arrays. É semelhante a um array, pois os usuários acessam, armazenam e modificam dados por meio de um índice.\nVocê cria um ArrayList especificando um nome e o tipo entre \u0026lt; e \u0026gt;. Por exemplo:\nArrayList\u0026lt;String\u0026gt; topMoviesList = new ArrayList\u0026lt;String\u0026gt;(); Para adicionar elementos, chamamos o método add() no ArrayList. Por exemplo:\ntopMoviesList.add(\u0026#34;Birds Of Prey\u0026#34;); topMoviesList.add(\u0026#34;The Birds\u0026#34;); topMoviesList.add(\u0026#34;Angry Birds\u0026#34;); topMoviesList.add(\u0026#34;Bird Box\u0026#34;); topMoviesList.add(\u0026#34;The Secret Life of Pets\u0026#34;); // o ArrayList agora armazena\u0026#34;Birds Of Prey\u0026#34;, \u0026#34;The Birds\u0026#34;, \u0026#34;Angry Birds\u0026#34;, \u0026#34;Bird Box\u0026#34;, \u0026#34;The Secret Life of Pets\u0026#34; em ordem Para acessar um elemento em um índice específico, chamamos o método get(). Observe que Java usa indexação baseada em 0, então para obter o primeiro elemento em um ArrayList fazemos uma chamada de método get(0). Por exemplo:\nString movie1 = topMoviesList.get(0); // movie1 tem valor \u0026#34;Birds Of Prey\u0026#34; E, para obter o número de elementos no ArrayList, chamamos o método size(). Por exemplo:\nint numOfMovie2 = topMoviesList.size(); // numOfMovie2 tem valor 5 Como mencionamos brevemente acima, a diferença crítica entre array e ArrayList é que você precisa saber antecipadamente o número de elementos a serem armazenados em um array, mas não para um ArrayList.\nCom a linha de código String topMovies[] = new String[5] o array topMovies terá para sempre comprimento 5. Como resultado, você não pode armazenar mais de 5 Strings em topMovies após criá-lo.\nNo entanto, com a linha de código ArrayList\u0026lt;String\u0026gt; topMoviesList = new ArrayList\u0026lt;String\u0026gt;(), o ArrayList começa com o elemento 0 e pode ser adicionado ou removido infinitamente.\nPara remover um elemento de um ArrayList, chamamos o método remove(). Por exemplo:\nSystem.out.print(topMoviesList.size()); // imprime 5 topMoviesList.remove(\u0026#34;Birds Of Prey\u0026#34;); System.out.print(topMoviesList.size()); // imprime 4 Exercício: Escreva um método printList() que receba um ArrayList como entrada e imprima todos os elementos desse ArrayList em ordem (Dica: utilize for loop e size() para ajudá-lo).\nApós clicar em Executar, o programa deverá imprimir o seguinte:\nBirds Of Prey, The Birds, Angry Birds, Bird Box, The Secret Life of Pets Launch Replit\nFim do workshop 🐥 Patrick 🐥 obrigado por participar! Espero que você tenha aprendido muito com este curso :) (image created by Molang: giphy.com/molangofficialpage)\n"
},
{
	"uri": "/pt-br/unity/setup-projectile-and-prefab/",
	"title": "Configurando o projétil e tornando-o um pré-fabricado",
	"tags": [],
	"description": "",
	"content": "Oh não! O alienígena rosa está atacando agora! É uma loucura porque Nuvi o atropelou. Vamos configurar o Nuvi com um mecanismo de autodefesa.\nApós selecionar Nuvi na hierarquia, clique com o botão direito e selecione \u0026ldquo;Criar Vazio\u0026rdquo;, que cria um GameObject vazio com apenas um componente Transform.\nPara poder ver onde está nosso objeto vazio, certifique-se de que estamos na ferramenta Move (Mover)! Você deverá ver duas setas que se cruzam – onde elas se cruzam é ​​onde nosso GameObject vazio está localizado.\nEste componente Transform representará de onde o projétil irá surgir. Usando a ferramenta Move, vamos alinhar o Transform para que fique na frente da barriga saliente do Nuvi. Gire o Transform usando a ferramenta Rotate (Girar) para criar uma imagem semelhante à abaixo:\nAgora, na pasta Assets da janela Project, localize o png \u0026ldquo;projectile\u0026rdquo; (projétil) na pasta Drawings. Arraste e solte o projétil na hierarquia. Redimensione o projétil para que fique menor que o Nuvi. Certifique-se de adicionar um BoxCollider2D e um RigidBody2D com a escala de gravidade definida como 0.\nSe a imagem do projétil não aparecer, tente entrar no componente Sprite Renderer e aumentar a \u0026ldquo;Order in Layer\u0026rdquo; (Ordem na Camada), como você fez para o Nuvi quando adicionamos o fundo.\nPré-fabricados Como iremos disparar vários projéteis, seria mais fácil fazer dos projéteis um \u0026ldquo;prefab\u0026rdquo;, ou seja, pré-fabricado. Um pré-fabricado é uma versão pré-fabricada de um objeto do qual você pode fazer várias cópias apenas arrastando-o para a cena. Se você fizer alguma alteração na pré-fabricada, essa alteração afetará todas as cópias dessa pré-fabricada. Você não precisa entrar em cada cópia e alterar tudo manualmente.\nPrimeiro, vamos criar uma pasta \u0026ldquo;Prefabs\u0026rdquo; em Assets na janela Project. Então, para tornar o projétil um pré-fabricado, basta arrastar o projétil da hierarquia para a pasta Prefabs.\nObserve que o texto “projétil” e o cubo vazio próximo a ele ficaram azuis na hierarquia.\nAgora que o projétil foi salvo para reutilização futura, podemos excluí-lo da hierarquia. Para fazer isso, basta clicar com o botão direito no projétil e escolher “Delete”.\n"
},
{
	"uri": "/pt-br/android-tictactoe/numbers/",
	"title": "Números",
	"tags": [],
	"description": "",
	"content": "O computador também pode fazer contas regulares que você vê na escola. Use System.out.println para imprimir o resultado das expressões matemáticas.\nSystem.out.println(5 + 4); System.out.println(6 * (9 - 7) / 3); Aqui está a lista completa de símbolos matemáticos que você pode usar:\n+\rAdicionar\r\\\rDividir\r-\rSubtrair\r%\rModulo (resto)\r*\rMultiplicar\r(,)\rParênteses\rCuriosidade: Divisão de Informática\nO computador faz a divisão de maneira diferente da calculadora normal. A divisão computacional excluirá restos ou decimais. Por exemplo, 15/4 produz 3, e não 3,75.\nWorking Together Tente imprimir as respostas a seguir no console. Certifique-se de que seus colchetes correspondam. Use uma calculadora (ou matemática mental) para verificar se o computador produziu a resposta correta.\n2 - 19 (3 + 5) * 6 (13 + 5 * 8) / (6 - (3 + 7)) 3 % 2 "
},
{
	"uri": "/pt-br/web-basics/activity-3/",
	"title": "Atividade 3 - Adicionando um GIF do Nuvi",
	"tags": [],
	"description": "",
	"content": "Para concluir esta atividade, você precisará concluir as seguintes etapas:\nSiga este link para ver os GIFs disponíveis Clique naquele que você gosta e selecione \u0026ldquo;Incorporar\u0026rdquo; Copie o código da caixa branca abaixo de \u0026ldquo;Código de incorporação GIF\u0026rdquo;\nCole o código em qualquer lugar da sua página, desde que esteja dentro das tags \u0026lt;body\u0026gt;.\nTente você mesmo! "
},
{
	"uri": "/pt-br/secret-messages/activity-7/",
	"title": "Atividade 7 – Linha de entrada (Input line)",
	"tags": [],
	"description": "",
	"content": "Parabéns!\nVocê está muito perto de salvar completamente a nação. Resta apenas poder inserir uma frase completa! Para isso só precisamos fazer algumas pequenas alterações. Primeiro, você precisa usar a instrução para inserir o string:getline().\nstring phrase;\rgetline(cin, phrase); Fazendo desta forma, o console poderá aceitar uma mensagem completa, não apenas uma única palavra.\nSiga estas etapas e complete o programa para salvar o reino:\nNa função main, altere a instrução cin \u0026gt;\u0026gt; name; para getline(cin, name);. Em ambas as funções, adicione uma condição if no loop for e execute o conteúdo do loop for somente se o caractere atual for maior ou igual \u0026lsquo;\u0026gt;=\u0026rsquo; ao caractere \u0026lsquo;a\u0026rsquo; e menor ou igual a \u0026lsquo;\u0026lt;=\u0026rsquo; ao caractere \u0026lsquo;z\u0026rsquo;. Ao fazer isso, podemos ignorar a criptografia e descriptografia de pontos de exclamação, vírgulas, espaços e outros caracteres especiais. Não se esqueça de como este programa funciona:\nPrimeiro, o programa pede o nome do usuário. Em seguida, devemos decidir se a mensagem deve ser criptografada ou descriptografada digitando 1 (para criptografia) ou 2 (para descriptografia). Por fim, digitamos a mensagem para criptografar ou descriptografar. Crie suas próprias mensagens secretas ou descriptografe as de seus colegas!\nAtenção: neste programa devemos sempre escrever as strings e caracteres em letras minúsculas.\rLembre-se que você sempre pode voltar às atividades anteriores para revisar qualquer coisa!\nIniciar Replit\n"
},
{
	"uri": "/pt-br/python-turtle/part-2/",
	"title": "Parte 2 - Construindo uma Flor Mandala",
	"tags": [],
	"description": "",
	"content": "\nBom trabalho! Você terminou de construir um favo de mel para a colmeia de Alex, mas Alex também precisa obter o pólen das flores! Não seria bom adicionar uma flor à imagem também? Na parte 2, estaremos criando uma flor mandala!\n(Fique ligado – mostraremos a aparência de uma flor de mandala.)\n"
},
{
	"uri": "/pt-br/arduino/appendix/",
	"title": "Apêndice",
	"tags": [],
	"description": "",
	"content": "Apêndice Os Componentes, em detalhe Imagine que o nosso circuito é uma peça de teatro. Antes da apresentação final diante de uma plateia, precisamos de um lugar para praticar. É aqui que entra a tábua de pão.\nBreadboards são plataformas simples que podemos usar para construir circuitos temporários para teste e depuração antes de finalizar nosso projeto e soldá-lo permanentemente (soldar) juntos. As placas de pão permitem-nos adicionar, remover ou reposicionar facilmente componentes. Abaixo, à esquerda, há uma imagem de uma tábua de pão. A imagem à direita mostra como os pinos estão conectados uns aos outros. Cada uma das linhas numeradas na tábua de pão, mostrada a amarelo, contém 5 orifícios de alfinetes. Cada orifício de pino em uma linha (linha amarela) é conectado aos outros orifícios de pino nessa linha. A linha vermelha à direita mostra uma conexão comum entre esses orifícios de pino, enquanto a linha azul no lado direito mostra uma conexão comum entre esses orifícios de pino. O mesmo acontece nas linhas vermelha e azul à esquerda. No entanto, as linhas vermelha e azul à direita e à esquerda não estão conectadas entre si. Componentes que estão conectados à mesma conexão comum são conectados no circuito O diodo emissor de luz (ou LED) é uma pequena luz que se acende quando a eletricidade flui através dele.\nO LED tem 2 derivações: o Ânodo e o cátodo. O ânodo é mais longo que o cátodo e está sempre ligado à tensão mais alta. O resistor é um pequeno pedaço de material cerâmico que retarda o fluxo de eletricidade.\nUm resistor tem 2 derivações, mas é omnidirecional. Em outras palavras, não importa qual chumbo você anexa à tensão mais alta. A maioria dos eletrônicos só consegue lidar com uma certa quantidade de eletricidade antes de quebrar, então os resistores protegem os outros componentes do nosso jogo, mantendo a eletricidade baixa. "
},
{
	"uri": "/pt-br/python-earsketch/activity-4-add-effects-to-your-songs/",
	"title": "Atividade 4 - Adicione efeitos à sua música",
	"tags": [],
	"description": "Configurando fones de ouvido",
	"content": "Efeitos no EarSketch Efeitos permitem que o produtor altere o som do clipe de áudio em seu próprio som único. Semelhante a como usamos fitMedia() para adicionar novos clipes de áudio, devemos usar a função setEffect() para definir efeitos específicos para cada clipe de áudio. É importante notar que vários efeitos podem ser colocados na mesma trilha. Isto permite ao produtor combinar vários efeitos juntos. Earsketch tem muitos efeitos integrados. Para fazer referência a todos os efeitos, visite este link\re certifique-se de que o painel Curriculum esteja selecionado na barra de navegação.\nAntes de começarmos a adicionar efeitos à nossa música, vamos dividir as peças das duas funções setEffect: track: O número da faixa à qual o efeito é aplicado. Nota: Para aplicar um efeito à trilha Master, use 0 como valor da trilha. A faixa master é onde todo o áudio é reproduzido coletivamente. Esta é uma maneira fácil de aplicar um efeito a todos os sons que estão sendo processados. effectType: O efeito específico que está sendo usado effectParameter: A configuração do efeito que está sendo usado effectValue: A densidade aplicada ao effectParameter Adicione a função setEffect à sua música Como estamos mais familiarizados com o uso de efeitos, vamos adicionar um efeito à nossa música.\nNo navegador API à esquerda, vá até API setEffect.\nInsira uma chamada de função setEffect em seu código, usando o ícone de colar.\nPrecisamos substituir os parâmetros pelos nossos próprios valores. Coloque um valor inteiro para trackNumber. Vamos colocar 2.\nPara o restante dos parâmetros do efeito, clique no ícone do olho na API setEffect e você verá um link para \u0026ldquo;Cada efeito explicado em detalhes\u0026rdquo;. Clique nele para abrir esta seção no lado direito da janela.\nVocê pode notar que o Earsketch tem muitas variações diferentes de efeitos. Por padrão, você deverá ver a seção 30.4 BANDPASS à direita. Por enquanto, usaremos o DELAY da seção 30.4 como effectType em nossa chamada de função setEffect.\nAgora que escolhemos nosso effectType, precisamos de um effectParameter. Navegue até a seção 30.4 à direita para verificar os diferentes parâmetros suportados pelo DELAY. Aqui está uma foto dessa seção. Recomendamos usar o DELAY_FEEDBACK. Para o parâmetro final, insira um valor válido. Como escolhemos DELAY_FEEDBACK, devemos especificar um número entre -120,0 e -1,0 (como mostrado na imagem acima). Exemplo: Use -6,0 como valor de efeito para DELAY_FEEDBACK.\nSeu código agora deve ser parecido com isto:\nfrom earsketch import * init() setTempo(120) fitMedia(HOUSE_DEEP_CRYSTALCHORD_001, 3, 1, 5) fitMedia(HOUSE_DEEP_CRYSTALCHORD_002, 3, 5, 9) # Section A def sectionA(startMeasure, endMeasure): fitMedia(RD_UK_HOUSE__AIRYPAD_1, 1, startMeasure, endMeasure) fitMedia(HOUSE_MAIN_BEAT_002, 4, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) # Section B def sectionB(startMeasure, endMeasure): fitMedia(Y37_ORGAN_1, 2, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) fitMedia(RD_UK_HOUSE__ARPLEAD_1, 6, startMeasure, endMeasure) sectionA(1, 9) sectionB(9, 17) sectionA(17, 25) setEffect(2, DELAY, DELAY_FEEDBACK, -6.0) setEffect(2, DELAY, DELAY_TIME, 1200.0) finish() "
},
{
	"uri": "/pt-br/linux-basics/activity-6/",
	"title": "Atividade 6 - Um arquivo corrompido",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para procurar arquivos",
	"content": "\rEu sei que tinha um arquivo chamado secret-message.txt com uma das minhas citações favoritas nele. \"Ser. Ou não ser. Eis a questão.\" Preciso encontrá-la. Você pode me ajudar?\rProcurando padrões específicos em um arquivo? O comando grep é um comando usado para pesquisar texto em arquivos. O seu significado é: \u0026ldquo;pesquise globalmente por expressão regular e imprima o resultado\u0026rdquo;. Ele ainda possui diferentes argumentos ou opções que podem alterar a forma como ele é usado.\nO formato é: grep [argumento] “[padrão]” [nome do arquivo].\nArgumentos Significado -c Retorna o número de arquivos com o padrão -i Pesquisa arquivos ignorando as letras maiúsculas e minúsculas. “uNiX” é o mesmo que “unix” -n Retorna o número de linhas e suas linhas correspondentes. -R Pesquisa todos os arquivos no diretório atual. Vamos praticar este comando para podermos encontrar o meu arquivo secret-message.txt original!\rVamos tentar o seguinte comando:\ngrep -R \u0026#34;Ser. Ou não ser. Eis a questão.\u0026#34; Por que o arquivo de mensagem secreta parece estranho? Você lembra daquele arquivo chamado malware.sh? Devemos encontrá-lo novamente e analisa-lo melhor. Acho que foi criado pelos hackers!\rO comando find filtra arquivos por parâmetros dentro de um diretório ou região de arquivos. Ele pode ser usado de várias maneiras, incluindo:\nFiltrar arquivos com um nome específico O formato é: find [diretório] -name [nome do arquivo] Filtrar todos os arquivos com uma extensão específica (por exemplo, arquivos de texto, terminando com .txt) O formato é: find [diretório] -name *.txt Use o comando find para filtrar o arquivo dentro do diretório atual. Existe algum comando que podemos usar para descobrir qual é o diretório atual?\n"
},
{
	"uri": "/pt-br/unity/firing/",
	"title": "Disparando",
	"tags": [],
	"description": "",
	"content": "Agora que o projétil está pronto, vamos fazer o Nuvi disparar esses projéteis. Faça um script chamado \u0026ldquo;FiringBehavior\u0026rdquo; (Comportamento de Disparo) e copie e cole este código:\nusing System.Collections; using System.Collections.Generic; using UnityEngine; public class FiringBehavior : MonoBehaviour { public Transform spawn_coor; //onde o projétil será gerado public float projectile_speed; //quão rápido o projétil irá public GameObject projectile_object; //sprite de projétil vermelho // Start é chamado antes da primeira atualização do quadro void Start() { projectile_speed = 15f; } // A atualização é chamada uma vez por quadro void Update() { if(Input.GetButtonDown(\u0026#34;Jump\u0026#34;)) //barra de espaço gerará projétil { Rigidbody2D rb = projectile.GetComponent\u0026lt;Rigidbody2D\u0026gt;(); rb.AddForce(spawn_coor.up * projectile_speed, ForceMode2D.Impulse); //faz o projétil se mover } } } No momento este script não funciona; precisamos dizer ao jogo o que gerar quando a barra de espaço for pressionada. Para fazer isso, adicione GameObject projectile = Instantiate(projectile_object, spawn_coor.position, spawn_coor.rotation); sobre Rigidbody2D rb = projectile.GetComponent\u0026lt;Rigidbody2D\u0026gt;();. O método Instantiate indica o que criar, onde criar e em que direção deve estar voltado.\nArraste e solte este script no inspetor do Nuvi. Se você executar o script agora, notará que nada mudou. Isso ocorre porque existem variáveis ​​públicas que ainda não foram atribuídas. Vá até o inspetor do Nuvi e role para baixo até o script Comportamento. Observe que spawn_coor e projectile_object estão vazios. Para spawn_coor, arraste e solte o GameObject vazio que você criou na última lição que representa onde os projéteis aparecem. Para projectile_object, arraste e solte o projétil pré-fabricado que você também criou na última lição.\nAlém disso, agora que o Nuvi tem tudo o que precisa para defender, vamos também transformar o Nuvi em um pré-fabricado!\nExecute o jogo e observe o que você vê. Fizemos o Nuvi disparar projéteis, mas esses projéteis não podem fazer nada! Nas próximas lições, você aprenderá como fazê-los interagir com outros objetos.\n"
},
{
	"uri": "/pt-br/android-tictactoe/booleans/",
	"title": "Booleans",
	"tags": [],
	"description": "",
	"content": "Booleanos ou (Booleans em inglês) são afirmações verdadeiras ou falsas. Ao contrário de strings ou números, booleanos armazenam afirmações de verdade: o que estou dizendo é verdadeiro ou falso? Por exemplo, se eu perguntar: \u0026ldquo;Você é um robô?\u0026rdquo;, esta pergunta produz um resultado verdadeiro ou falso, que chamamos de Booleano. Neste caso, como você não é um robô (espero!), produziríamos falso. Também podemos usar operadores matemáticos para criar expressões booleanas. Aqui estão alguns exemplos; no entanto, observe os símbolos incomuns para \u0026ldquo;igual a\u0026rdquo; e \u0026ldquo;diferente de\u0026rdquo;:\nOperador Descrição Operador Descrição \u0026lt; Menor que \u0026gt; Maior que \u0026lt;= Menor ou igual a \u0026gt;= Maior ou igual a == Igual a != Diferente de Como de costume, use System.out.println para imprimir seus resultados:\nSystem.out.println(10 \u0026lt; 8); System.out.println((3 * 6) == (32 - 14)); Trabalhando Juntos Exclua todo o texto System.out.println em seu código. Tente adivinhar as respostas para as seguintes expressões. Use System.out.println para verificar suas respostas.\n54 \u0026lt; (10 + 32) (37 / 5) == 7 \u0026ldquo;Hello\u0026rdquo; + \u0026ldquo;World\u0026rdquo; == \u0026ldquo;Hello World\u0026rdquo; false == false Operadores Booleanos Você também pode conectar expressões booleanas usando o operador \u0026amp;\u0026amp; (E) e o operador || (OU). Por exemplo, suponha que eu pergunte: \u0026ldquo;Você é humano e Nuvi é um robô?\u0026rdquo; A palavra \u0026ldquo;e\u0026rdquo; conecta as duas perguntas verdadeiro-falso juntas. Neste caso, como é verdade que você é humano e também é verdade que Nuvi é um robô, então o resultado geral é true. Aqui está um gráfico que descreve o que acontece quando conectamos booleanos juntos:\nExpressão Resultado Expressão Resultado true \u0026amp;\u0026amp; true true true || true true true \u0026amp;\u0026amp; false false true || false true false \u0026amp;\u0026amp; true false false || true true false \u0026amp;\u0026amp; false false false || false false Para resumir, \u0026amp;\u0026amp; requer que ambas as expressões booleanas sejam verdadeiras, enquanto || requer apenas que uma das duas expressões booleanas seja verdadeira. Aqui estão mais alguns exemplos:\n(5 \u0026lt; 8) \u0026amp;\u0026amp; (9 != 10) produz verdadeiro já que ambos 5 é menor que 8 e 9 não é igual a 10. (6 != 2 * 3) || (8 \u0026lt; 2 * 4) produz falso já que ambos 6 não é igual a 2 * 3 e 8 não é menor que 2 * 4 produzem falso. "
},
{
	"uri": "/pt-br/web-basics/activity-4/",
	"title": "Atividade 4 – Experimente o formulário e mude o estilo",
	"tags": [],
	"description": "",
	"content": "Adicionando um formulário de contato Por fim, adicionaremos um formulário de contato para que as pessoas entrem em contato conosco caso estejam interessadas em Benji.\nA maioria dos navegadores não oferece suporte ao envio de e-mails diretamente do formulário de contato porque é uma maneira fácil para os criadores de problemas enviarem spam aos usuários. Spam é uma mensagem irrelevante ou inadequada enviada pela Internet. Portanto, para enviar um formulário, utilizaremos um serviço gratuito chamado FormSpree\r. Se quisermos que as mensagens do formulário de contato cheguem ao nosso e-mail, primeiro precisaremos confirmá-lo com o FormSpree. Esse método de confirmação evita que malfeitores simplesmente coloquem o e-mail de alguém em um formulário de contato e enviem spam para a vítima.\nVeja a Pen Formulário de Contato por Deliana Escobari (@Sunny-Dee)\ron CodePen.\nAtividade 4 Para concluir esta atividade, você precisará concluir as seguintes etapas:\nClique no botão experimente você mesmo! para abrir o editor Altere a parte que diz \u0026lt;YOUR EMAIL HERE!\u0026gt; para seu e-mail pessoal, se você tiver um. Caso contrário, use email@nuevofoundation.org Se fizer isso, tente enviar uma mensagem de teste e veja se funciona Adicione qualquer estilo ao formulário. Por exemplo, tente alterar a fonte ou a cor do formulário Tente você mesmo!\n"
},
{
	"uri": "/pt-br/python-turtle/activity-6/",
	"title": "“Atividade 6 – Movendo a tartaruga”",
	"tags": [],
	"description": "",
	"content": "\nNosso primeiro passo é desenhar uma colmeia menor para que possamos desenhar tanto a colmeia quanto a flor na tela. Já fizemos isso para você - você viu o que mudamos para desenhar uma colmeia menor?\ndef draw_hexagon(): for i in range(6): turtle.forward(20) turtle.left(60) def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.forward(20) turtle.right(60) Em seguida, precisamos mover a tartaruga para um novo local para desenhar a flor (não queremos desenhar a flor em cima da colmeia!). Para fazer isso, primeiro precisamos usar os seguintes métodos:\nturtle.penup() turtle.goto(x,y) turtle.pendown() turtle.penup() diz à tartaruga para pegar sua caneta para não desenhar enquanto estiver se movendo. Então, com turtle.goto(x,y), estamos dizendo à tartaruga a posição para onde ela se move. Depois disso, dizemos à tartaruga para colocar a caneta de volta no lugar usando turtle.pendown() para que ela possa começar a desenhar novamente.\nDica Os x e y no método turtle.goto() são as coordenadas x e y da tartaruga. Queremos mudar as coordenadas x e y da tartaruga de (0, 0) que é o centro da imagem, para algum lugar um pouco mais distante para que a flor da mandala não cubra parte do favo de mel.\nPara completar esta atividade, mova a tartaruga para a posição (100, 100) na tela. Isso o moverá para o canto superior direito.\n"
},
{
	"uri": "/pt-br/secret-messages/activity-8/",
	"title": "Conclusão",
	"tags": [],
	"description": "",
	"content": "Parabéns!\nVocê fez um trabalho incrível. Você salvou o reino e, ao fazer isso, também aprendeu à programar em C++! :)\nVamos revisar o que você aprendeu:\nVocê usou o console para inserir e enviar mensagens criptografadas ou descriptografadas. Você usou variáveis para armazenar as mensagens que seriam enviadas. Você usou loops para analisar cada letra das mensagens. Você usou condicionais para determinar se a criptografia ou descriptografia era necessária. O código ASCII ajudou você a saber o valor de cada caractere para que pudéssemos criptografar ou descriptografar a mensagem. O Rei enviou a você uma mensagem criptografada especial de agradecimento. Com a ajuda do seu programa C++, você poderá descriptografá-lo e lê-lo, mas lembre-se que ela estará em inglês:\nsvox hrbguoecvg, zye wiquuee lgk iz a jgvpl rgfgqr. wvv fzggls ooxzu hvoj eazy pskirukk bqtzsvd lvk iuqeq ofs I sjz lhmnnh le qdbj hqls, iyt cwtx if nrl kpns. fgu mrh iyt kjvvr teudv ew inzs zawwgd. qdbj peojgrcesx kkuloh rhv osrzunj. o shzzrzazt ijlkjs goautv ngk, ovkje rou hmhv num wulo vrlv inv ocprglkfwzq tb hhzh crcf eoee ssgfds. fgue phgwejbgfcq wdh gklhzrnpiqu. lwv guqax fdbzbq otu axl rjj fvdvde mrh ujplslml rousntj lolh lox. qgdxggluxawwgdk. cuo ybu kont ld ivlqbuolt ssirufe eskxusy kaiiqu mi qdb yaie osrhfsj rn umsdjjrcz kkulo iypl lodl ne ysjo ysrhfhl lc qemg lmthrh, ngk yocv lqaucvs hguxrmmpwfv. I ydvv I cmn psvj qdb rgmiq wf jys lmthrh. Swfrvgody mng yzduzf, lhq klcx\r2\rprogramador Iniciar Replit\nImportante: Para colar no console, clique com o botão direito no console e clique em \u0026ldquo;Colar\u0026rdquo;. Caso contrário, a operação de colagem poderá não funcionar corretamente.\r"
},
{
	"uri": "/pt-br/python-earsketch/activity-5-use-effects-to-fade-in/",
	"title": "Atividade 5 - Use efeitos para fade in",
	"tags": [],
	"description": "Configurando fones de ouvido",
	"content": "Agora que você tem um efeito em sua música, vamos tentar fazer um fade in (aparecimento) na introdução de nossa música.\nNa atividade 4, usamos a função setEffect para aplicar um efeito a uma faixa específica durante toda a duração da música, mas e se você quiser que apenas uma seção específica da sua música tenha efeito? Use o setEffect função com mais parâmetros! effectStartValue: O valor inicial aplicado ao parâmetro effectStartLocation: O compasso no qual o valor inicial é definido effectEndValue: O valor final do parâmetro effectEndLocation: O compasso no qual o valor final é definido Esta versão do setEffect nos permite realizar automação em uma peça específica da nossa música. Automação é uma forma de mudar o valor de um efeito ao longo do tempo. Um uso da automação é fazer com que uma música apareça gradualmente ou desaparecer. Para fazer isso, devemos ajustar o GAIN effectParameter\u0026rsquo;s volume no VOLUME effectType ao longo do tempo. Por exemplo, se nós definirmos nosso effectStartValue em -60 db e nosso effectEndValue em 0 db, vai soar como se nossa música estivesse desaparecendo com o tempo. Para ajustar o ponto inicial e duração do efeito, especifique o efeitoStartLocation e efeitoEndLocation.\nAdicione outra função setEffect à sua música Adicione outra chamada de função setEffect ao seu código, mas certifique-se de que todos os 7 parâmetros estejam presentes na chamada. Defina effectType como VOLUME. Use o guia de referência \u0026ldquo;Every Effect Explained in Detail\u0026rdquo; para ver quais parâmetros VOLUME possui. Para ajustar o volume de um clipe de áudio, use o GAIN effectParameter. Se quisermos fazer algo parecer que está desaparecendo (fade out), devemos fazer com que o volume do som comece em zero e aumente até cerca de 0 decibéis. Para fazer isso, defina effectStartValue com um valor muito baixo e effectEndValue com um valor mais alto. Dica: O volume é medido em decibéis. Em decibéis, quanto mais positivo for um número, mais alto ele fica. Além disso, tente não exceder 0 decibéis para evitar distorções.\nDefina valores para effectStartLocation e effectEndLocation para especificar quando iniciar e parar o efeito de fade. Seu código agora deve ser parecido com isto:\nfrom earsketch import * init() setTempo(120) fitMedia(HOUSE_DEEP_CRYSTALCHORD_001, 3, 1, 5) fitMedia(HOUSE_DEEP_CRYSTALCHORD_002, 3, 5, 9) # Section A def sectionA(startMeasure, endMeasure): fitMedia(RD_UK_HOUSE__AIRYPAD_1, 1, startMeasure, endMeasure) fitMedia(HOUSE_MAIN_BEAT_002, 4, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) # Section B def sectionB(startMeasure, endMeasure): fitMedia(Y37_ORGAN_1, 2, startMeasure, endMeasure) fitMedia(HOUSE_ROADS_BASS_001, 5, startMeasure, endMeasure) fitMedia(RD_UK_HOUSE__ARPLEAD_1, 6, startMeasure, endMeasure) sectionA(1, 9) sectionB(9, 17) sectionA(17, 25) setEffect(2, DELAY, DELAY_FEEDBACK, -6.0) setEffect(2, DELAY, DELAY_TIME, 1200.0) setEffect(0, VOLUME, GAIN, -60, 1, 0, 3) finish() "
},
{
	"uri": "/pt-br/linux-basics/activity-7/",
	"title": "Atividade 7 - O que há de errado com o arquivo?",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para ler um arquivo sem abri-lo",
	"content": "\rArquivos com vírus podem ser perigosos! Não o abra imediatamente! Em vez disso, vamos usar a linha de comando ao nosso favor para analisar o seu conteúdo.\rPara arquivos sobre os quais não temos certeza, precisamos primeiro verificar o seu conteúdo para não abrirmos um vírus acidentalmente.\nMas e como podemos olhar para as primeiras linhas de um arquivo? Às vezes precisamos verificar apenas o início de um arquivo. O comando head mostra a primeira linha de um arquivo.\nO formato é: head [filename]\nSe você adicionar o argumento -n, poderá sinalizar para o comando head quantas linhas do arquivo deseja visualizar a partir do início do arquivo. O formato é: head -n [# de linhas] [nome do arquivo]\nAnalise as primeiras 5 linhas do arquivo malware.sh!\nE se quisermos visualizar as últimas linhas do arquivo? Às vezes precisamos verificar apenas o final de um arquivo. O comando tail mostra a última linha de um arquivo.\nO formato é: tail [nome do arquivo]\nSe você adicionar o argumento -n, poderá sinalizar para o comando tail quantas linhas do arquivo deseja visualizar a partir do final do arquivo. O formato é: tail -n [# de linhas] [nome do arquivo]\nAnalise as últimas 5 linhas do arquivo malware.sh!\nE como podemos ver o arquivo inteiro? Às vezes, precisamos ver o arquivo inteiro para entender o que ele está fazendo e o que devemos fazer a respeito. Agora, precisamos verificar todo o conteúdo do arquivo malware.sh!\nO comando cat mostra o conteúdo de um arquivo. O formato é: cat [nome do arquivo]\nless e more são commandos similares ao cat.\nO comando more O comando more é indicado para arquivos grandes. Ele mostra o maior número de linhas possível. Podemos navegar entre as linhas pressionando a tecla enter até chegar ao final do arquivo.\nO formato é: more [nome do arquivo]\nO comando less O comando less é útil quando precisamos navegar pelas linhas de um arquivo. Funciona de forma semelhante ao comando more, mas com uma diferença do uso das teclas de seta para cima e seta para baixo para movermos entre as linhas de um arquivo. A maneira para sair desse comando é pressionando a letra q.\nO formato é: less [nome do arquivo]\nO que você acha que o arquivo malware.sh faz? Anote suas observações no relatório!\r"
},
{
	"uri": "/pt-br/unity/triggers-and-tags/",
	"title": "Gatilhos e Tags",
	"tags": [],
	"description": "",
	"content": "Gatilhos Agora, vamos parar e pensar em como queremos que nosso projétil funcione. Um projétil será disparado e, quando atingir um inimigo, desaparecerá. \u0026hellip;Isso não é realmente física, é? A física não pode fazer um objeto desaparecer no ar, então esse desaparecimento terá que ser um comportamento personalizado que adicionamos ao projétil usando um script. O comportamento de desaparecimento acontecerá quando o projétil tocar um inimigo.\nFazemos isso transformando este projétil em um gatilho. Vá para o componente BoxCollider2D no inspetor de projéteis que você adicionou e marque a caixa \u0026ldquo;IsTrigger\u0026rdquo;. Um gatilho informará que tocou em algo, portanto, em seu script, você pode verificar se essa interação aconteceu e, em seguida, fazer com que ocorra esse comportamento de desaparecimento personalizado.\nObserve que, como esse projétil é um gatilho, ele não funcionará mais pela física. A menos que você adicione um script para fazê-lo desaparecer, ele passará pelos objetos, incluindo as paredes invisíveis que você adicionou anteriormente.\nTransformar um Collider (colisor) em um Trigger (gatilho) desativa as reações físicas, mas esse objeto ainda pode avisar quando uma colisão acontece.\nTags Antes de começarmos a criar o próximo script, devemos falar sobre mais uma coisa – tags. Tags são usadas para identificar facilmente GameObjects no Unity. Iremos usá-los ao criar os próximos dois scripts! Primeiro, devemos configurar tags em nosso jogo.\nBem no topo da janela do inspetor Nuvi, localize o menu suspenso “Tag”. Neste momento, deverá dizer \u0026ldquo;Untagged\u0026rdquo;. Abra o menu suspenso e selecione \u0026ldquo;Player\u0026rdquo; (jogador). Agora, o Nuvi tem uma tag “Player” que podemos localizar facilmente. Vamos repetir isso tanto para o projétil quanto para o inimigo. Se você quiser criar uma nova tag, selecione \u0026ldquo;Add Tag…\u0026rdquo; no menu suspenso e selecione o sinal \u0026ldquo;+\u0026rdquo;. Em seguida, nomeie suas novas tags como “Projectile” (projétil) e “Enemy” (inimigo) e salve.\n"
},
{
	"uri": "/pt-br/android-tictactoe/conditionals/",
	"title": "Condicionais",
	"tags": [],
	"description": "",
	"content": "Podemos usar instruções if para executar uma instrução de código apenas se certas condições forem atendidas.\nPor exemplo:\nif (isRainingOutside == true) { takeUmbrella = true; } else { takeUmbrella = false; } Para o nosso jogo, devemos usar instruções if para determinar se um jogador tem 3 correspondências verticais, horizontais ou diagonais.\nDentro do () ao lado de if, você deve especificar uma expressão booleana. Booleans são declarações true ou false. Podemos utilizar isso em nossa instrução if. Se a expressão for verdadeira, o código dentro de { } é executado. Se a expressão for falsa, o código dentro de { } após a instrução else é executado.\nVocê também pode conectar expressões booleanas usando o operador \u0026amp;\u0026amp; (E) e o operador || (OU).\nDê uma olhada na função CheckWinner() em MainActivity.kt e pense sobre o que todas as instruções conectadas \u0026amp;\u0026amp; estão fazendo.\n"
},
{
	"uri": "/pt-br/android-tictactoe/variables/",
	"title": "Variáveis",
	"tags": [],
	"description": "",
	"content": "Variáveis são simplesmente nomes que podemos dar a valores como strings, números e booleanos. Usamos variáveis para armazenar informações para que o computador possa controlá-las. As variáveis são criadas usando o tipo e o nome da variável. Então você pode atribuir essa variável às informações que deseja armazenar usando = e o conteúdo.\nObserve as variáveis ​​no topo de MainActivity.kt.\nvar Player1 = ArrayList\u0026lt;Int\u0026gt;() var Player2 = ArrayList\u0026lt;Int\u0026gt;() var ActivePlayer = 1 var setPlayer = 1 var colorBlue = Color.rgb(0, 161, 241) // PUZZLE 3 var colorGreen = Color.BLACK Player1 contém os valores dos movimentos do Jogador 1 no jogo. Player2 contém os valores dos movimentos do Jogador 2 no jogo. ActivePlayer controla de quem é a vez. setPlayer contém o valor se o jogo é Jogador contra Jogador ou Jogador contra Computador. colorBlue e colorGreen contêm os valores das cores do jogador. "
},
{
	"uri": "/pt-br/web-basics/activity-5/",
	"title": "Atividade 4 - O exercício final",
	"tags": [],
	"description": "",
	"content": "Usando o que você aprendeu, vamos tentar criar um site que descreva você! Experimente usar alguns ou todos os seguintes:\nUma tag de título e parágrafo Fontes diferentes Cores diferentes Adicione uma imagem ao seu site Uma lista Incorpore um GIF ou vídeo Mostre seu Estilo!\n"
},
{
	"uri": "/pt-br/python-turtle/activity-7/",
	"title": "Atividade 7 - Desenhando uma figura 8",
	"tags": [],
	"description": "",
	"content": "\nÓtimo! Agora vamos fazer um número 8 como primeiro passo para fazer uma flor de mandala! A figura 8 são apenas dois círculos opostos um ao outro. Para fazer isso podemos usar o método turtle.circle(x), que assume um número inteiro x como o raio do círculo. (Você deve se lembrar que 2 * raio é a largura do círculo.) Ter o raio como um argumento significa que podemos decidir quão grande ou pequeno o círculo deve ser.\nimport turtle turtle.circle(20) No exemplo acima, o círculo tem 40 pixels de largura e é desenhado no sentido anti-horário. Se o argumento para turtle.circle() for negativo, então o círculo é desenhado no sentido horário e é oposto à versão original.\nUsando essas informações, crie uma nova função chamada figure_8() que desenha uma figura 8.\n"
},
{
	"uri": "/pt-br/linux-basics/activity-8/",
	"title": "Atividade 8 - Verificando diferenças entre arquivos",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para comparar arquivos",
	"content": "\rVamos dar uma olhada na nossa mensagem secreta para ter certeza de que esse arquivo estranho chamado malware.sh não fez nada com ela!\rVerificando diferenças entre arquivos Conhecemos algum comando que pode nos ajudar a encontrar a localização do arquivo secret-message.txt?\nAgora, vamos entrar nesse diretório e verificar a citação \u0026ldquo;Ser. Ou não ser. Eis a questão\u0026rdquo; de antes. Mas qual seria o comando que pode nos ajudar a verificar a mensagem?\nEste arquivo geralmente tem citações boas e divertidas, mas parece que alguém as modificou. Acho que devemos compará-las com uma boa versão conhecida desse arquivo. Vamos lá?\rPrecisamos verificar se existe alguma cópia de segurança da mensagem secreta em seu diretório. Vá para o diretório de documentos e digite:\nls -la O argumento -a fornece informação de todos arquivos e diretórios incluindo arquivos e diretórios ocultos.\nEncontrou algum arquivo novo? Então vamos anotar as mudanças!\rCompare o arquivo secret-message.txt com o arquivo da cópia de segurança O comando diff é usado para comparar dois arquivos e obter informações sobre o que foi adicionado, alterado e excluído do arquivo.\nO formato é: diff [arquivo] [nome do arquivo de comparação]\nCuriosidade: Executar diff --help produzirá informações sobre como usar a ferramenta diff, incluindo quais opções extras podemos usar para essa ferramenta.\nVerifique a diferença entre os dois arquivos. Quantas diferenças você encontrou? Anote suas descobertas no arquivo que você fez!\nUma maneira melhor de ver as diferenças O comando vimdiff permite a visualização dos arquivos em abas separadas, destacando as diferenças entre esses arquivos.\nVamos tentar usar vimdiff para visualizar melhor as diferenças entre os nossos arquivos.\n"
},
{
	"uri": "/pt-br/unity/projectile-enemy-behavior/",
	"title": "Comportamento de projéteis/inimigo",
	"tags": [],
	"description": "",
	"content": "Comportamento do projétil Agora que sabemos como funcionam os gatilhos e tags, vamos configurar o comportamento do projétil! Crie um novo script na pasta Scripts chamado \u0026ldquo;ProjectileBehavior\u0026rdquo;. Em seguida, arraste e solte-o no inspetor de projéteis na pasta Prefabs e abra o script. Remova as funções Start() e Update() e substitua-as por isto:\nvoid OnTriggerEnter2D(Collider2D collision) { if(collision.gameObject.tag != \u0026#34;\u0026#34;) //destrói o projétil se ele colidir com qualquer coisa que não seja o jogador { // faz o projétil desaparecer } } Nesta função, queremos destruir o projétil se ele colidir com qualquer coisa que não seja o jogador. Dentro das aspas, o que você acha que devemos acrescentar? Dentro do corpo da função, o que devemos colocar para que o projétil desapareça?\nPodemos recorrer à tag do Nuvi na declaração if!\nDestroy(???) destruirá o gameObject especificado por ??? gameObject é uma variável que se refere ao objeto ao qual este script está anexado Clique aqui para ver a resposta!\rvoid OnTriggerEnter2D(Collider2D collision) { if(collision.gameObject.tag != \u0026#34;Player\u0026#34;) //destrói o projétil se ele colidir com qualquer coisa que não seja o jogador { // faz o projétil desaparecer Destroy(gameObject); } } Comportamento inimigo Agora vamos testar rodando o jogo! Se fizermos isso corretamente, o projétil deverá desaparecer ao entrar em contato quando tocar em qualquer coisa que não seja o Nuvi! Porém, quando disparamos contra o inimigo, observe como o projétil desaparece, mas o inimigo não. Para corrigir esse problema, devemos criar um script semelhante que gire em torno do comportamento do inimigo. Para fazer isso, crie um novo script na pasta Scripts chamado \u0026ldquo;EnemyBehavior\u0026rdquo; e anexe-o ao inspetor Alien_pink. Semelhante a como criamos o script \u0026ldquo;ProjectileBehavior\u0026rdquo;, remova as funções Start() e Update() e adicione isto:\nvoid OnTriggerEnter2D(Collider2D collision) { if(collision.gameObject.tag == \u0026#34;\u0026#34;) //destrói o inimigo se ele colidir com um projétil { // faz o inimigo desaparecer } } Nesta função queremos destruir o inimigo caso ele colida com um projétil. O que você acha que deveríamos acrescentar? O que devemos colocar no corpo da função para fazer desaparecer o projétil?\nPodemos recorrer à etiqueta do projétil na declaração if!\nÉ igual ao script \u0026ldquo;ProjectileBehavior\u0026rdquo;!\nClique aqui para ver a resposta!\rvoid OnTriggerEnter2D(Collider2D collision) { if(collision.gameObject.tag == \u0026#34;Projectile\u0026#34;) //destrói o inimigo se ele colidir com um projétil { Destroy(gameObject); } } Agora que adicionamos esses dois scripts, vamos tentar rodar nosso jogo! Verifique se o seguinte acontece:\nOs projéteis desaparecem quando atingem o alienígena Os projéteis desaparecem quando atingem paredes invisíveis o alienígena desaparece ao ser atingido por um projétil Enquanto estamos nisso, vamos transformar o alien_pink em um pré-fabricado também! No entanto, em vez de excluir o alienígena depois de transformá-lo em um pré-fabricado, vamos adicionar mais dois alienígenas à cena. Basta arrastar e soltar o alienígena na hierarquia e reposicioná-lo como quiser usando a ferramenta Mover!\nVamos dar um passo para trás e ver o que você realizou. Você foi capaz de fazer o Nuvi se mover em 8 direções, fornecer ao Nuvi a habilidade de disparar projéteis, e os inimigos junto com os projéteis podem desaparecer quando colidirem! Se dê tapinhas nas costas; você conquistou muito! Vamos continuar! Estamos quase terminando!\n"
},
{
	"uri": "/pt-br/android-tictactoe/puzzle3/",
	"title": "Quebra-cabeça 3 - O teste final",
	"tags": [],
	"description": "",
	"content": "Quebra-cabeça 3a Este quebra-cabeça testará seu conhecimento sobre variáveis. Há algo estranho com uma das cores do jogador no tabuleiro.\nEncontre // PUZZLE 3a no arquivo MainActivity.kt e atualize a variável colorGreen para mostrar peças verdes no tabuleiro.\nQuebra-cabeça 3b Por que o Jogador 2 sempre vence no primeiro movimento?! Isso não faz sentido, resolva o quebra-cabeça 3b para consertar o jogo.\nEncontre // PUZZLE 3b no arquivo MainActivity.kt e atualize a variável winner para garantir que um jogador realmente ganhe.\nQuebra-cabeça Final Agora que o Jogador 2 não está mais ganhando o jogo automaticamente e todas as peças do jogo parecem boas, ainda há uma última coisa que é estranha. As regras do jogo da velha estabelecem que um jogador pode vencer quando tiver 3 peças conectadas horizontalmente, verticalmente ou diagonalmente. O jogo funciona bem para detectar vitórias horizontais e verticais, mas algo está errado com a verificação diagonal.\nProcure por // FINAL PUZZLE no arquivo MainActivity.kt. Resolva este quebra-cabeça para completar o jogo!\n"
},
{
	"uri": "/pt-br/web-basics/hosting/",
	"title": "Hospedar seu site",
	"tags": [],
	"description": "",
	"content": "Hospede seu site na internet! Agora que você criou seu site pessoal, vamos hospedá-lo na internet para que todos possam acessá-lo! Você precisará de uma conta GitHub para fazer isso. Se você não tiver um, crie um aqui\r.\nDepois de criar sua conta e verificar seu endereço de e-mail, você chegará a esta página.\nAgora você precisará criar um novo repositório para armazenar o conteúdo do seu site! Pense em um repositório como uma pasta gigante que pode armazenar muitos outros arquivos e pastas de um determinado projeto. Você pode criar um selecionando Start a Project ou Create a new repository. Duas coisas muito importantes para ter em mente:\nNomeie seu repositório sem espaços. Mas você pode usar travessões ou letras maiúsculas para simular espaços! Marque a caixa Inicializar este repositório com um README Parabéns! Você criou seu primeiro repositório! Carregue aqui todos os seus arquivos e pastas que pertencem ao seu site.\nPrimeiro precisamos retirar nossos arquivos do Codepen. Você precisa fazer login ou criar uma conta Codepen para exportar seus arquivos. A partir do Codepen que você criou na etapa anterior, clique dentro da aba html e pressione ctrl+s no teclado para salvar. Isso deve acionar um pop-up solicitando que você faça login ou crie uma conta. Não use os botões \u0026ldquo;Cadastre-se\u0026rdquo; ou \u0026ldquo;Login\u0026rdquo; no canto superior direito, pois isso fará com que você perca seu trabalho.\nDepois de fazer login, clique em “Exportar” no canto inferior direito e escolha “Exportar .zip”. Isso fará o download de uma pasta zip para o seu computador. Vá para esta pasta, clique com o botão direito no zip e escolha “Extrair” ou “Extrair tudo”. Isto deve abrir uma nova janela com a pasta extraída. Clique na pasta “exercise-5” e depois na pasta “dist”. Aqui você deverá ver index.html e style.css. Estes são os arquivos que você precisa enviar para o Github.\nNo repositório do Github, escolha \u0026ldquo;Adicionar arquivo\u0026rdquo; e depois \u0026ldquo;Carregar arquivos\u0026rdquo;. Carregue seus arquivos index.html e style.css e clique em \u0026ldquo;Confirmar alterações\u0026rdquo;.\nAgora, quando você acessar sua página de perfil, seu novo Repositório aparecerá em Repositories.\nDepois de fazer upload de tudo o que você criou para o seu site, volte ao repositório e selecione Configurações.\nClique na seção “Páginas” na barra de navegação esquerda.\nMude o Branch de \u0026lsquo;None\u0026rsquo; para \u0026lsquo;main\u0026rsquo;. Salve essas alterações.\nAguarde cerca de um minuto enquanto seus arquivos são publicados. Deve haver um link no topo da seção GitHub Pages. Agora qualquer pessoa pode acessar seu site com este link!\n"
},
{
	"uri": "/pt-br/python-turtle/activity-8/",
	"title": "Atividade 8 – Criando uma flor mandala",
	"tags": [],
	"description": "",
	"content": "\nTerminamos de criar nossa primeira figura 8! Agora podemos usar a função figure_8() para criar uma flor de mandala! Uma flor de mandala consiste em muitos números 8 colocados uns sobre os outros em ângulos diferentes. Então, para fazer isso precisamos usar um\u0026hellip; você adivinhou, um loop!\nCrie uma nova função chamada mandala_flower(). No loop, chamaremos a função figure_8() que escrevemos anteriormente para criar uma figura 8. Em seguida, gire a tartaruga para a esquerda ou para a direita em um certo número de graus (por exemplo, 10 graus). Repita essas etapas várias vezes para fazer uma flor de mandala; é uma boa ideia criar um loop que se repita pelo menos 25 vezes.\n"
},
{
	"uri": "/pt-br/linux-basics/activity-9/",
	"title": "Atividade 9 - Removendo arquivos maliciosos",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para deletar arquivos e diretórios",
	"content": "\rEntão o arquivo malware.sh é definitivamente um arquivo ruim deixado pelos hackers? Hmm! Até o diretório foi comprometido? Precisamos urgentemente remover esse diretório junto com o arquivo malicioso!\rRemovendo um arquivo corrompido! O comando rm permite remover arquivos.\nO formato é: rm [nome do arquivo].\nO comando rm remove permanentemente um arquivo.\nVamos remover o arquivo corrompido que está nos causando problemas. Depois, usaremos o comando ls -l para verificar se o arquivo foi totalmente removido.\nE se precisarmos remover um diretório? O comando rmdir permite remover um diretório vazio.\nO formato é: rmdir [nome do diretório].\nO comando rmdir remove permanentemente um diretório.\nComo podemos remover o diretório em que o arquivo inválido estava?\nRemover arquivos pode ser uma operação perigosa, especialmente no Linux. Certifique-se de ter 100% de certeza de que o arquivo que deseja excluir é seguro para remover. Ao remover o arquivo errado, você pode acidentalmente arruinar o seu computador.\nVocê se lembra do comando para refazer o diretório que excluímos?\nQual seria o comando que nos ajudaria a restaurar o arquivo secret-message.txt?\r"
},
{
	"uri": "/pt-br/unity/ui-part-1/",
	"title": "Construindo a UI: Parte 1",
	"tags": [],
	"description": "",
	"content": "Tela do menu Estamos quase terminando! Para completar este jogo, precisamos fazer mais duas coisas: adicionar uma UI (User Interface; Interface do Usuário) e um script Outline para juntar tudo. Vamos começar com a UI.\nClique com o botão direito na janela de hierarquia e, em vez de selecionar “Create Empty” (Criar Vazio), queremos criar uma tela. Procure por \u0026ldquo;UI\u0026rdquo; → \u0026ldquo;Canvas\u0026rdquo;. É aqui que todos os nossos elementos da UI estarão.\nEm “Canvas”, queremos criar “UI” → “Image”. Renomeie “Image” para “Menu”. Esta será a nossa tela de menu. No inspetor de menu, redimensione a largura e a altura para 400 e 300, respectivamente. Queremos então ancorar a tela do Menu no meio. Dessa forma, mesmo que o tamanho da janela mude, a tela do menu permanecerá no meio. Para fazer isso, clique nos quadrados no canto superior esquerdo em Rect Transform no inspetor de menu.\nSegure shift e alt (no Mac, segure option em vez de alt) e selecione o meio/centro nas predefinições da Âncora. Isso definirá o pivô do Menu para 0 enquanto define a posição para o meio/centro.\nAgora no Menu, crie uma “UI” → “Text” e renomeie-a para “Title” (Título). Mude o texto para o nome que você gostaria de nomear seu jogo em Texto no inspetor \u0026ldquo;Title\u0026rdquo;! Deixe sua criatividade fluir! Também podemos alterar o tamanho da fonte para o que você quiser.\nSe o texto desaparecer, use a ferramenta rect para aumentar o tamanho da caixa de texto na janela Scene (Cena)!\nAltere a predefinição da âncora para superior/central. Mexa na entrada Pos Y até que goste do posicionamento do seu texto!\nFaça outra \u0026ldquo;UI\u0026rdquo; → \u0026ldquo;Text\u0026rdquo; no Menu na hierarquia e renomeie para \u0026ldquo;NumEnemyT\u0026rdquo;. Altere o texto para \u0026ldquo;# of Enemies\u0026rdquo; e altere a fonte para alguns tamanhos menores que o título. Certifique-se de definir a posição da âncora para cima/centro também e mexa na entrada Pos Y!\nAgora, vamos criar uma forma para o jogador escolher quantos inimigos deseja! Há muitas maneiras de fazer isso, mas neste tutorial usaremos um controle deslizante. Para criar um controle deslizante, clique com o botão direito em Menu e selecione \u0026ldquo;UI\u0026rdquo; → \u0026ldquo;Slider\u0026rdquo; e renomeie-o para \u0026ldquo;EnemySlider\u0026rdquo;. Defina a posição da âncora para cima/centro também e mexa na entrada Pos Y para que fique logo abaixo do texto \u0026ldquo;# of Enemies\u0026rdquo;. No inspetor de controle deslizante em Slider, altere o \u0026ldquo;Min Value\u0026rdquo; (Valor mínimo) para \u0026ldquo;1\u0026rdquo; e o \u0026ldquo;Max Value\u0026rdquo; (Valor máximo) para \u0026ldquo;3\u0026rdquo;. Marque também a caixa \u0026ldquo;Whole Number\u0026rdquo;, (Número inteiro) pois não podemos ter 1,5 inimigos em campo!\nAgora que temos um controle deslizante, precisamos de uma chave visual para os jogadores saberem quantos inimigos podem fazer! Faça mais 2 caixas de texto em Menu e nomeie-as como “1T” e “3T”, respectivamente. Altere o texto \u0026ldquo;1T\u0026rdquo; para \u0026ldquo;1\u0026rdquo; e defina a posição da âncora para o meio/esquerda. Mexa nas entradas Pos X e Pos Y em Rect Transform para que fiquem alinhadas com o lado esquerdo do controle deslizante. Repita o processo com “3T”, mas mude o texto para “3”, ancore-o no meio/direita e alinhe-o com o lado direito do controle deslizante.\nAgora, vamos criar um botão Iniciar. Em Menu na janela de hierarquia, crie \u0026ldquo;UI\u0026rdquo; → \u0026ldquo;Button\u0026rdquo; (Botão) e renomeie-o para \u0026ldquo;StartButton\u0026rdquo; (Botão de ínciar). Defina a posição da âncora para baixo/centro e mexa nas entradas Pos Y para colocá-la onde quiser! Se olharmos na hierarquia, há uma seta anexada ao StartButton. Clique nele para revelar um objeto de texto. Altere o texto desse objeto Texto para \u0026ldquo;Start\u0026rdquo;.\nAgora temos a tela do menu configurada! A tela do seu menu deve ser parecida com isto!\nMas espere! Ainda não terminamos! Se rodarmos o jogo e pressionarmos o botão Iniciar, nada acontece! Queremos que a tela do menu desapareça. Para fazer isso, vamos criar outro script em nossa pasta Scripts na janela Projects em Assets e nomeá-lo como \u0026ldquo;StartButton\u0026rdquo;. Abra-o e copie e cole o código abaixo!\nusing System.Collections; using System.Collections.Generic; using UnityEngine; public class StartButton : MonoBehaviour { public GameObject pop_up_box; public void popDown() { pop_up_box.SetActive(false); } } Este código faz com que qualquer GameObject atribuído a pop_up_box desapareça quando a função popDown() é chamada. Salve, depois arraste e solte esse script da pasta Scripts no inspetor StartButton. Em seguida, arraste o Menu da hierarquia para o \u0026ldquo;Pop_up_box\u0026rdquo; vazio sob o \u0026ldquo;Start Button (Script)\u0026rdquo;. Finalmente, em “Button” no inspetor StartButton, clique no sinal “+” na caixa “On Click()”. Arraste o “StartButton” da hierarquia para a caixa que diz “None (Object)”. Em seguida, abra a barra \u0026ldquo;No Function\u0026rdquo; (Sem Função) e passe o mouse sobre \u0026ldquo;StartButton\u0026rdquo;. Localize a função popDown() e selecione-a.\nAgora, se rodarmos o jogo e pressionarmos o botão Iniciar, a tela do menu desaparecerá!\n"
},
{
	"uri": "/pt-br/web-basics/conclusion/",
	"title": "Caso você esteja se perguntando",
	"tags": [],
	"description": "",
	"content": "\nVocê pode estar preocupado com Benji, mas temos o prazer de informar que ele encontrou um lar por meio de um site igual ao que você está construindo. Benji agora é um bom menino recebendo muito amor, trabalhando duro em seus truques para ganhar guloseimas.\n"
},
{
	"uri": "/pt-br/python-turtle/activity-9/",
	"title": "Atividade 9 – Colorindo sua flor mandala",
	"tags": [],
	"description": "",
	"content": "\nAgora que temos o formato de uma flor de mandala, é hora de colori-la! Ainda usaremos o método turtle.color(); entretanto, desta vez usaremos um valor RGB em vez de um valor string para representar a cor, para que dessa forma possamos produzir uma variedade maior de cores.\nCores RGB (vermelho-verde-azul) Na escola primária, você deve se lembrar que, ao misturar cores, você pode produzir novas cores. Por exemplo, combinar vermelho e azul resulta em roxo. Também podemos alterar a quantidade de vermelho e azul misturados para criar diferentes tons de roxo. O computador faz algo semelhante para produzir cores. Combinando várias intensidades de vermelho, verde e azul, podemos criar diferentes cores, como azul claro, amarelo dourado e rosa salmão. Clique aqui\rpara ver as cores e sua forma hexadecimal correspondente.\nNo método turtle.color(), podemos especificar três argumentos inteiros correspondentes à quantidade de vermelho, verde e azul a serem misturados. Cada número inteiro deve estar entre 0 e 255 inclusive. Um exemplo pode ser turtle.color(30, 100, 238), que produz um tom escuro de azul.\nAtualize sua flor de mandala para usar uma cor de sua preferência. Sinta-se à vontade para experimentar cores diferentes!\n"
},
{
	"uri": "/pt-br/python-basics/help/",
	"title": "Socorro, estou preso!",
	"tags": [],
	"description": "Configurando fones de ouvido",
	"content": "Sem problemas! Veja se alguma das opções a seguir ajuda você; caso contrário, sinta-se à vontade para entrar em contato com um de nós e nós o ajudaremos. O recuo é muito importante quando você está trabalhando em Python. Tenha cuidado com espaços e tabulações em seu código, porque erros de indentação (um espaço no começo de uma linha escrita ou de um paragrafo) às vezes podem ser muito difíceis de detectar.\nNo entanto, pelo lado positivo, a formatação estrita torna o código Python muito limpo e organizado. Todas as suas variáveis ​​e funções estão recuadas corretamente como instruído?\nSyntaxError: sintaxe inválida Verifique se suas palavras-chave estão escritas corretamente e se você está seguindo a estrutura definida.\nIndentationError: recuo inesperado Se você vir isso, verifique seus recuos.\nNameError: nome global '---' não está definido Variáveis ​​definidas em uma função só podem ser usadas dentro da função. Se você tentar usar uma variável de uma função em outra função, receberá este erro.\nPara disponibilizar informações para outras funções, você as passa de uma função com a instrução return, possivelmente atribuindo-as a uma variável. Então você passa para outra função usando um parâmetro. Veja o link do tutorial de funções na minha assinatura para uma explicação detalhada.\nNão é possível reconhecer o erro: erro ortográfico? Você geralmente recebe isso quando comete um erro ortográfico em suas palavras-chave. Verifique todas as suas palavras-chave.\nTypeError: Não é possível converter o objeto \u0026lsquo;int\u0026rsquo; em str implicitamente Verifique se você não está tentando usar um número inteiro em ações de string (você não pode concatenar uma string e um número inteiro. Você deve primeiro converter o número inteiro em uma string).\n"
},
{
	"uri": "/pt-br/unity/ui-part-2/",
	"title": "Construindo a UI: Parte 2",
	"tags": [],
	"description": "",
	"content": "Tela final A seguir, queremos fazer uma tela final que será exibida assim que Nuvi derrotar todos os alienígenas. A maior parte deste processo será muito semelhante a como você criou a tela do menu!\nEm \u0026ldquo;Canvas\u0026rdquo;, crie \u0026ldquo;UI\u0026rdquo; → \u0026ldquo;Image\u0026rdquo; como você fez para o menu inicial, e desta vez renomeie-o para \u0026ldquo;EndScreen\u0026rdquo;. Redimensione para o mesmo tamanho do Menu.\nCrie \u0026ldquo;UI\u0026rdquo; → \u0026ldquo;Text\u0026rdquo; em EndScreen, renomeie-o como \u0026ldquo;EndMessage\u0026rdquo; e digite o que quiser - esta mensagem será exibida quando Nuvi derrotar todos os alienígenas e o jogo terminar! No nosso exemplo, dissemos: “Você derrotou todos os Aliens e ajudou Nuvi a salvar o Universo!”\nAgora queremos que nosso jogador possa repetir o jogo assim que terminar. Crie \u0026ldquo;UI\u0026rdquo; → \u0026ldquo;Button\u0026rdquo; em EndScreen. Como você fez para o StartButton, expanda Button para encontrar o objeto Text e renomeie-o para \u0026ldquo;ReplayButton\u0026rdquo;. Edite o texto para que mostre \u0026ldquo;Replay\u0026rdquo;.\nMas, assim como o botão Iniciar, clicar neste botão Repetir ainda não faz nada. Faça outro script na sua pasta Scripts e nomeie-o como \u0026ldquo;RestartScene\u0026rdquo;.\nDesta vez, em vez de apenas fazer desaparecer o EndScreen, queremos recarregar tudo: o menu inicial, o Nuvi e os alienígenas que o Nuvi derrotou. Copie e cole o código abaixo em seu script:\nusing System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.SceneManagement; public class RestartScene : MonoBehaviour { public void restart() { Scene scene = SceneManager.GetActiveScene(); SceneManager.LoadScene(scene.name); } } Para recarregar tudo, usamos Scenes; mas para fazer isso, você precisa ter using UnityEngine.SceneManagement; declarado nas 3 linhas usuais.\nArraste e solte este script da pasta Scripts no inspetor ReplayButton. Na caixa OnClick(), clique em \u0026ldquo;+\u0026rdquo; e como você fez para o StartButton, arraste o objeto ReplayButton para a caixa que diz \u0026ldquo;None (Object)\u0026rdquo;. Em seguida, encontre e selecione a função restart() no script RestartScene.\n"
},
{
	"uri": "/pt-br/linux-basics/activity-10/",
	"title": "Atividade 10 - Aprendendo a mover e substituir arquivos",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para mover e copiar arquivos",
	"content": "\rExcelente! Agora que o arquivo malicioso dos hackers não nos causará mais problemas, vamos restaurar o arquivo antigo para que as coisas voltem a funcionar normalmente.\rComo corrigir o nosso arquivo secreto O comando mv também pode ser usado para substituir o arquivo de destino pelo arquivo de origem.\nO formato é: mv [source filename] [destination name].\nAgora, vamos substituir a mensagem secreta corrompida pelo backup que encontramos anteriormente. E também vamos mover o arquivo para o novo diretório que criamos.\nSalvando uma cópia de segurança dos nossos arquivos O arquivo de backup anterior foi útil para corrigir o arquivo adulterado. Vamos fazer uma cópia de segurança dos arquivos em nosso diretório!\rO comando cp copia um arquivo de um logar para outro. O formato é: cp [arquivo atual] [arquivo destino].\nFaça uma cópia do arquivo secreto secret-message.txt.\n"
},
{
	"uri": "/pt-br/python-turtle/activity-10/",
	"title": "Atividade 10 – Randomizando a cor das pétalas da sua mandala",
	"tags": [],
	"description": "",
	"content": "\nDefinimos com sucesso a cor da flor da mandala para um valor RGB. Agora, vamos explorar a mudança da cor das pétalas individuais das flores da mandala.\nFaremos uso da biblioteca random do python. O método random.randint() nos permite escolher um valor aleatório para cada valor de vermelho, verde ou azul. Para escolher um valor entre 0 inclusivo e 256 exclusivo (em outras palavras, entre 0 e 255 inclusivo), precisamos usar random.randint(0, 256).\nUse random.randint(0, 256) três vezes para produzir três valores aleatórios e insira-os no método turtle.color(). Agora você deve conseguir ver uma flor de mandala multicolorida! Esta é definitivamente uma flor da qual Alex estaria interessado em coletar néctar!\nParabéns! Você ajudou Alex a fazer um favo de mel e uma flor! Ele agora pode viver feliz em sua colméia e produzir muito mel! Sua imagem final deverá ficar mais ou menos assim:\n"
},
{
	"uri": "/pt-br/linux-basics/activity-11/",
	"title": "Atividade 11 - Guardando e protegendo arquivos",
	"tags": [],
	"description": "Aprendendo sobre os commandos do Linux para compactar e descompactar",
	"content": "\rMuito obrigada por ajudar a recuperar a minha máquina! Agora vamos compactar tudo em um belo pacote.\rProteja os seus arquivos, para que eles não sejam adulterados novamente O comando tar permite criar e extrair arquivos compactados.\nUm arquivo compactado é uma coleção de arquivos que ocupam menos espaço de armazenamento no seu computador. Eles também podem ser transferidos para outros computadores mais rapidamente do que arquivos não compactados.\nO comando zip também permite compactar um conjunto de arquivos. O formato é: zip [nome do arquivo compactado] [arquivos a serem compactados]\nO formato é: tar [arquivos].\nSímbolos Ação -c Cria arquivo -x Extrai arquivo -f Cria arquivo com específico nome Use o comando tar para proteger seu diretório de arquivos! Você pode salvar um arquivo com o nome files.tar.gz.\n"
},
{
	"uri": "/pt-br/unity/outline/",
	"title": "Juntando tudo",
	"tags": [],
	"description": "",
	"content": "Agora que temos toda a UI configurada, queremos que o jogo funcione como pretendemos. Neste momento, quando simulamos o jogo, podemos mover o Nuvi, mas a tela final já está aparecendo. Para corrigir isso, teremos um script que ditará como o jogo deve ser. Na pasta Scripts na janela Projetos, crie um novo script chamado \u0026ldquo;Outline\u0026rdquo;. Arraste este script para o inspetor \u0026ldquo;Main Camera\u0026rdquo;, que podemos localizar na hierarquia.\nAntes de adicionarmos qualquer coisa ao script \u0026ldquo;Outline\u0026rdquo;, vamos primeiro definir algumas coisas. Se rodarmos o jogo agora, ainda poderemos mover o Nuvi e atirar nos inimigos rosa, apesar da interface do usuário subir. Vamos consertar isso configurando pontos de spawn. \u0026ldquo;Create Empty\u0026rdquo; na janela de hierarquia e renomeá-lo para \u0026ldquo;SpawnPoints\u0026rdquo;. Em seguida, crie mais quatro transformações em \u0026ldquo;SpawnPoints\u0026rdquo; e renomeie-as como \u0026ldquo;EnemyLoc1\u0026rdquo;, \u0026ldquo;EnemyLoc2\u0026rdquo;, \u0026ldquo;EnemyLoc3\u0026rdquo; e \u0026ldquo;PlayerLoc\u0026rdquo;. Reposicione-os usando a ferramenta Move para que fiquem diretamente sobre os inimigos e jogadores assim:\nCertifique-se de que as Transformações estejam no mesmo eixo Z do Nuvi. Caso contrário, eles podem não aparecer!\nAgora que temos tudo configurado, vamos abrir o script de estrutura de tópicos e copiar e colar este código:\nusing System.Collections; using System.Collections.Generic; using UnityEngine; public class Outline : MonoBehaviour { public Slider num_of_enemies; private Transform location; public GameObject opening_screen; public GameObject winner_screen; public GameObject enemy1; public GameObject player1; private bool is_generated; // Start é chamado antes da primeira atualização do quadro void Start() { is_generated = false; } // A atualização é chamada uma vez por quadro void Update() { if(is_generated == false) { if (opening_screen.activeSelf == false) { generate(); is_generated = true; enemies_left = (int) num_of_enemies.value; } } if(enemies_left == 0) { showEndScreen(); } } private void generate() { for(int x = 1; x \u0026lt;= ; x++) //para cada número de inimigos desejados no controle deslizante { location = positions[x]; //como é um array, faça a transformação do índice x GameObject enemy = Instantiate(enemy1, location); //instanciar o inimigo no local escolhido } location = positions[0]; GameObject player = Instantiate(player1, location); } private void showEndScreen() { winner_screen.SetActive(true); } } Faltam algumas linhas neste código para que ele funcione corretamente. Vamos preenchê-los, certo?\nNote que não será possível rodarmos o jogo ainda, um dos motivos é que usamos um objeto UI no script. Para acessá-lo, precisamos importar o namespace da UI. Para fazer isso, adicione using UnityEngine.UI; na parte superior do script em using UnityEngine;.\nA seguir, queremos armazenar as posições de spawn que criamos. Qual você acha que é a melhor estrutura de dados para armazenar esses pontos de geração? Se você pensou em arrays, você acertou! Adicione a linha public Transform[] positions; logo acima de private Transform location;. Isso nos permitirá armazenar todos os pontos de spawn sem precisar criar quatro variáveis ​​individuais.\nUm problema que encontramos foi a tela final aparecer apesar de ser o início do jogo. Se você percebeu os dois scripts anteriores para o menu e a tela final, pode ter uma ideia de como consertar isso. Semelhante a como definimos a tela do Menu como falsa, precisamos definir a tela Final como falsa. Para fazer isso, adicione winner_screen.SetActive(false); dentro do método Start().\nA adição final que precisamos fazer para que o script funcione está na função generate(). Dentro do loop for, precisamos encontrar uma maneira de pegar o número que o jogador escolheu no controle deslizante da tela do menu. Como nos referiremos ao controle deslizante como num_of_enemies, precisamos simplesmente adicionar num_of_enemies.value logo após \u0026lt; e antes de ; no loop for.\nAgora, vá para o inspetor da câmera principal e localize o script Outline. Observe que há muitas variáveis ​​vazias que precisamos preencher. Primeiro, arraste o controle deslizante num_enemies da hierarquia para a variável \u0026ldquo;Num_of_enemies\u0026rdquo;. Para “Positions”, escolha “4”. Arraste os locais de spawn nesta ordem, começando no Elemento 0: PlayerLoc → EnemyLoc2 → EnemyLoc1 → EnemyLoc3. Em seguida, arraste o Menu GameObject da hierarquia para a variável \u0026ldquo;Opening_screen\u0026rdquo; e o EndScreen GameObject para a variável \u0026ldquo;Winner_screen\u0026rdquo;. Em seguida, na pasta Prefabs na janela Projeto, arraste o pré-fabricado \u0026ldquo;enemy1\u0026rdquo; para a variável \u0026ldquo;Enemy 1\u0026rdquo; e o pré-fabricado \u0026ldquo;Nuvi\u0026rdquo; para a variável \u0026ldquo;Player 1\u0026rdquo;.\nEm seguida, precisamos de uma maneira de saber quando os inimigos são derrotados, para que possamos fazer com que a tela final apareça quando não houver mais inimigos. Para fazer isso, mantemos uma contagem de quantos inimigos existem, e essa contagem deve diminuir quando um inimigo for derrotado. No script \u0026ldquo;Outline\u0026rdquo; adicione public int inimigos_left;. Por enquanto adicione enemies_left = -1; no método Start(). Agora, vamos pensar em quando o inimigo será derrotado. Em que roteiro destruímos o inimigo? Se você pensou no script \u0026ldquo;EnemyBehavior\u0026rdquo;, então você está certo! Abra o script \u0026ldquo;EnemyBehavior\u0026rdquo; e adicione este código acima do método OnCollisionEnter2D():\nGameObject cam; private Outline outline; void Start() { cam = GameObject.Find(\u0026#34;Main Camera\u0026#34;); outline = cam.GetComponent\u0026lt;Outline\u0026gt;(); } A primeira linha do método Start() define a variável \u0026ldquo;cam\u0026rdquo; como o GameObject da \u0026ldquo;Câmera Principal\u0026rdquo;. A segunda linha pega o script Outline de “cam” e define isso para a variável “outline”. Em seguida, adicione outline.enemies_left--; em Destroy(gameObject);. Isso subtrairá 1 da variável “enemies_left” no script “Outline”.\nFinalmente, tudo o que precisamos fazer é remover todos os inimigos e Nuvi da janela Cena. Isso ocorre porque queremos que eles apareçam apenas quando pressionamos o botão Iniciar. Clique com o botão direito sobre eles na hierarquia e selecione excluir.\nUfa\u0026hellip; foi bastante coisa, não foi? Agora tente executar seu jogo! Se tudo estiver bem, então Parabéns! Você fez seu primeiro jogo! Mas você ainda não terminou. Vamos tentar exportar seu jogo para que você possa compartilhá-lo com outras pessoas!\n"
},
{
	"uri": "/pt-br/android-tictactoe/answer-key/",
	"title": "Gabarito - Jogo da Velha para Android",
	"tags": [],
	"description": "",
	"content": "Quebra-cabeça 1 \u0026lt;resources\u0026gt; \u0026lt;string name=\u0026#34;app_name\u0026#34;\u0026gt;Jogo da Velha\u0026lt;/string\u0026gt; \u0026lt;/resources\u0026gt; Quebra-cabeça 2 Toast.makeText(this, \u0026#34;Bem vindo ao Jogo da Velha\u0026#34;, Toast.LENGTH_LONG).show() Quebra-cabeça 3 Quebra-cabeça 3a var colorGreen = Color.GREEN Quebra-cabeça 3b var winner = -1 Quebra-cabeça Final //cross1 if (Player1.contains(1) \u0026amp;\u0026amp; Player1.contains(5) \u0026amp;\u0026amp; Player1.contains(9)) { winner = 1 } if (Player2.contains(1) \u0026amp;\u0026amp; Player2.contains(5) \u0026amp;\u0026amp; Player2.contains(9)) { winner = 2 } //cross2 if (Player1.contains(3) \u0026amp;\u0026amp; Player1.contains(5) \u0026amp;\u0026amp; Player1.contains(7)) { winner = 1 } if (Player2.contains(3) \u0026amp;\u0026amp; Player2.contains(5) \u0026amp;\u0026amp; Player2.contains(7)) { winner = 2 } "
},
{
	"uri": "/pt-br/python-turtle/activity-11/",
	"title": "Atividade 11 – Agora é a sua vez!",
	"tags": [],
	"description": "",
	"content": "Se sobrar algum tempo, tente desenhar suas próprias formas e desenhos! Torne sua imagem interessante usando várias formas e cores.\nClique no botão abaixo para abrir uma nova janela em branco do Trinket para iniciar sua criação.\nClique aqui\nSocorro, estou preso! Preso? Verifica o Gabarito\rpara a atividade na qual você está preso!\n"
},
{
	"uri": "/pt-br/linux-basics/answer-key/",
	"title": "Resoluções - Minicurso Básico de Linux",
	"tags": [],
	"description": "Resoluções de todos os exercícios",
	"content": "Atividade 1 whoami Atividade 2 pwd\rcd Desktop\rcd .. Atividade 3 ls -l\rmv Documents/ Downloads/\rls -l Downloads\rmv Downloads/Documents/ . Atividade 4 mkdir files\rtouch file1\rvim file1\rmv file1 files Atividade 5 chmod u=rwx g=rx o=x file1\rchmod 751 [insert filename] Atividade 6 cd\rgrep -R \u0026#34;Do. Or do not. There is no try.\u0026#34;\rfind . -name *.sh Atividade 7 head -n 5 malware.sh\rtail -n 5 malware.sh\rcat malware.sh\rmore malware.sh\rless malware.sh Atividade 8 find . -name *.txt\rgrep -R \u0026#34;Do. Or do not. There is no try.\u0026#34;\rls -la\rdiff malware.sh secret-message.txt\rvimdiff malware.sh secret-message.txt Atividade 9 rm Downloads/malware.sh\rrm files\rmkdir files Atividade 10 mv secret-message.txt .\rls -l\rcp secret-message.txt file1\rls\rcd files\rcp secret-message.txt file1\rls -l Atividade 11 tar -f files.tar.gz "
},
{
	"uri": "/pt-br/unity/build-and-run/",
	"title": "Compilando e executando seu jogo",
	"tags": [],
	"description": "",
	"content": "Para exportar seu jogo, encontre \u0026ldquo;Arquivo\u0026rdquo; no canto superior esquerdo da janela do Unity e selecione \u0026ldquo;Build Settings\u0026rdquo; (Configurações de compilação). Você será saudado por esta janela pop-up:\nAs duas compilações mais comuns são a compilação para Mac ou a compilação para PC. Para escolher entre os dois, selecione o menu suspenso ao lado de \u0026ldquo;Target Platform\u0026rdquo; (Plataforma de Destino) e escolha sua plataforma. Por fim, basta selecionar “Build” (compilação) no canto inferior direito. Em seguida, você será solicitado a escolher onde deseja salvar o jogo. Você pode criar uma nova pasta e salvar seu jogo lá! Selecione sua pasta e o processo de compilação será iniciado. Assim que o processo de compilação for concluído, vá até onde a pasta recém-criada está localizada e abra-a.\nSe você está compilando no Windows, você pode rodar seu jogo entrando na pasta onde você construiu o jogo e selecionando o aplicativo que tem o ícone abaixo, com o nome do seu jogo ao lado!\nSe você estiver compilando em um Mac, executar o jogo é exatamente o mesmo processo. Mas em vez da marca Unity, você pode encontrar um ícone como abaixo. Não se preocupe, ainda é o seu jogo.\nParabéns! UHUL! Se dê um tapinha nas costas, você completou seu primeiro jogo! Você aprendeu sobre Rigidbodies, Colliders, prefabs, Triggers, tags, scripts, sistema de UI do Unity e como navegar na própria UI do Unity! Sinta-se à vontade para compartilhar seu jogo com outras pessoas!\nSe você gostou deste tutorial e quer aprender mais sobre Unity para um dia fazer seu próprio jogo, existem muitos outros tutoriais por aí na internet que você pode ver de graça! Você também pode brincar com o Unity e descobrir como as coisas funcionam por conta própria.\nO desenvolvimento de jogos pode parecer uma jornada assustadora, mas os produtos que você criar ao longo do caminho valerão ainda mais a pena. Desejamos-lhe boa sorte em sua jornada e lembre-se: nunca se esqueça de se divertir!\n"
},
{
	"uri": "/pt-br/java-basics/answer-key/",
	"title": "Java: Basics - Answer Key",
	"tags": [],
	"description": "",
	"content": "activity-1: Print Statements and Comments Hello World class Main { public static void main(String[] args) { System.out.print(\u0026#34;Hello World\u0026#34;); System.out.print(2020); System.out.print(\u0026#39;@\u0026#39;); } } Output:\nHello World2020@\rOwl class Main { public static void main(String[] args) { System.out.println(\u0026#34;Hello world!\u0026#34;); System.out.println(\u0026#34; ​, ___ / ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ \\\\\u0026#34;); System.out.println(\u0026#34;​`\\\\/{o,o} \u0026lt; Hi, I am Minerva. Patrick\u0026#39;s friend! |\u0026#34;); System.out.println(\u0026#34;​ ​/ /) ) \\\\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ /\u0026#34;); System.out.println(\u0026#34;​/,--\\\u0026#34;-\\\u0026#34;- \u0026#34;); } } Output:\n, ___ / ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ ‾ \\\r`\\/{o,o} \u0026lt; Hi, I am Minerva. Patrick's friend! |\r/ /) ) \\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ /\r/,--\u0026quot;-\u0026quot;- activity-2: Types and Variables DataType class Main { public static void main(String[] args) { String bestFriend = \u0026#34;Minerva\u0026#34;; int numOfFriends = 4; double GPA = 3.6; char meaningOfLife = \u0026#39;$\u0026#39;; boolean loveMusic = true; } } Variable Output:\nx: 2.3 y: 2.3 z: 0 activity-3: Operators int patrickGrade = 88; int tomGrade = 89; int maryGrade = 95; int chrisGrade = 84; int jenGrade = 92; average = (patrickGrade + tomGrade + maryGrade + chrisGrade + jenGrade)/5; boolean over60 = (average \u0026gt; 60); boolean over70 = (average \u0026gt; 70); boolean over80 = (average \u0026gt; 80); boolean over90 = (average \u0026gt; 90); Output:\n---------------------------\rMusic Grade Report ---------------------------\rStudent Grades: - Patrick: 88\r- Tom: 89\r- Mary: 95\r- Chris: 84\r- Jen: 92\rClass Average: 89.0\r- Average Over 60: true\r- Average Over 70: true\r- Average Over 80: true\r- Average Over 90: false activity-4: Control Structures If statement int currentHour = ... ; // variable that stores current hour between 0 - 23 if(currentHour \u0026lt; 12){ System.out.println(\u0026#34;Good Morning\u0026#34;); }else if(currentHour \u0026lt; 20){ System.out.println(\u0026#34;Good Afternoon\u0026#34;); }else{ System.out.println(\u0026#34;Good Night\u0026#34;); } While Loop int myTotal = 0; for(int num2 = 1; num2 \u0026lt;= 100; num2++){ myTotal += num2; } Output:\nAnswer calculated in a while loop: 5050\rAnswer calculated in a for loop: 5050 activity-5: Methods Pyramid public static int pyramidCount(int level){ int total = 0; for(int i = 1; i \u0026lt;= level; i++){ total = total + i*i; } return total; } Output:\nCongratulations! Challenge Solved! activity-6: Object and Classes Bird Class public class Bird{ // instance variables private String species; private String name; private String hobby; private int age; private boolean loveMusic; // constructor public Bird(String species_input, String name_input, String hobby_input, int age_input, boolean loveMusic_input){ species = species_input; name = name_input; hobby = hobby_input; age = age_input; loveMusic = loveMusic_input; } public String getSpecies(){ return species; } public String getName(){ return name; } public String getHobby(){ return hobby; } public int getAge(){ return age; } public boolean getLoveMusic(){ return loveMusic; } public String toString(){ String info = \u0026#34;\u0026#34;; info = info + \u0026#34;Hi, my name is \u0026#34; + getName() + \u0026#34;. I am a \u0026#34; + getAge() + \u0026#34;year old \u0026#34; + getSpecies() + \u0026#34; who likes to \u0026#34; + getHobby() + \u0026#34;. \u0026#34;; if(getLoveMusic()){ info = info + \u0026#34;I also like music very much!\u0026#34;; }else{ info = info + \u0026#34;However, I do not like music!\u0026#34;; } return info; } } main() Implementation: No correct answer just an exercise public static void main(String[] args) { Bird patrick = new Bird(\u0026#34;duck\u0026#34;, \u0026#34;Patrick\u0026#34;, \u0026#34;hangout with friends\u0026#34;, 15, true); System.out.print(patrick); } Output:\nHi, my name is Patrick. I am a 15year old duck who likes to hangout with friends. I also like music very much! activity-7: Data Structure (Array \u0026amp; ArrayList) Array public static void printArr(String[] arr){ for(int i = 0; i \u0026lt; arr.length - 1; i++){ // iterate through each element(not the last one) in the array and add \u0026#34;, \u0026#34; after each element System.out.print(arr[i] + \u0026#34;, \u0026#34;); } // print last element and newline character System.out.println(arr[arr.length -1]); } Output:\nBirds Of Prey, The Birds, Angry Birds, Bird Box, The Secret Life of Pets ArrayList public static void printList(ArrayList\u0026lt;String\u0026gt; list){ // type here for(int i = 0; i \u0026lt; list.size() - 1; i++){ // iterate through each element(not the last one) in the array and add \u0026#34;, \u0026#34; after each element System.out.print(list.get(i) + \u0026#34;, \u0026#34;); } // print last element and newline character System.out.println(list.get(list.size() -1)); } Output:\nBirds Of Prey, The Birds, Angry Birds, Bird Box, The Secret Life of Pets "
},
{
	"uri": "/pt-br/web-basics/answer-key/",
	"title": "Gabarito - Fundamentos de Web",
	"tags": [],
	"description": "",
	"content": "Nota especial: Este currículo permite que os alunos sejam criativos. O texto abaixo é apenas um exemplo do que eles podem fazer. Use seu bom senso e peça orientação, se necessário. O gabarito fornecido aqui é bastante longo porque incluímos trechos de HTML completo para contexto.\nQuando um aluno clica no botão \u0026lsquo;Tente você mesmo!\u0026rsquo; abrirá uma nova guia com parte do código HTML (e código CSS) já estruturado.\nDesafio 1 A solução deve ter:\nTags de cabeçalho para adicionar um título e tags de parágrafo para escrever um parágrafo sobre Benji. (opcional) Uma lista das guloseimas favoritas de Benji: peru, manteiga de amendoim e queijo ralado \u0026lt;head\u0026gt; \u0026lt;!-- Desafio 1: Adicione tags de título e cabeçalho. --\u0026gt; \u0026lt;title\u0026gt;Meu título emocionante!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- O conteúdo entra no corpo --\u0026gt; \u0026lt;!-- Desafio 1: Adicione um cabeçalho, um parágrafo. --\u0026gt; \u0026lt;h1\u0026gt;Sobre Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Benji é um cachorrinho fofo. Seu esporte favorito é buscar a bolinha. Ele gosta de longas caminhadas na floresta. Uma vez ele encontrou um grande pedaço de pau.\u0026lt;/p\u0026gt; \u0026lt;!-- Desafio 1 (opcional) Adicione uma lista. --\u0026gt; \u0026lt;h5\u0026gt; Os lanches favoritos de Benji \u0026lt;/h5\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Peru\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Manteiga de amendoim\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Queijo ralado\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/body\u0026gt; Desafio 2 A solução deve ter:\nHTML: um atributo id para uma das tags de cabeçalho. Por exemplo, \u0026lt;header id=\u0026quot;page-title\u0026quot;\u0026gt; CSS: Uma cor de título diferente adicionando color: yellow; dentro das chaves CSS: Uma fonte diferente adicionada font-family: 'Roboto Mono', monospace; dentro das chaves e adicionando @import url(\u0026lsquo;https://fonts.googleapis.com/css?family\r=Roboto+Mono\u0026rsquo;); na parte superior da guia CSS \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Metatags obrigatórias --\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Isso será exibido na guia do navegador!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- Desafio 2: atributo de id do título da página --\u0026gt; \u0026lt;header id=\u0026#34;page-title\u0026#34;\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;Meu nome é Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Estou procurando uma família.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Informações:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Sou uma mistura de Labrador e Cão dos Pirenéus\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tenho 1 ano\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eu como manteiga de amendoim, você quer?\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vou proteger você dos esquilos\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;Espero que possamos brincar em breve!\u0026lt;/h3\u0026gt; \u0026lt;img id=\u0026#34;dog\u0026#34; src=\u0026#34;https://aka.ms/Benji-the-dog\u0026#34;\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; @import url(\u0026#39;https://fonts.googleapis.com/css?family=Roboto+Mono\u0026#39;); #page-title { color: yellow; font-family: \u0026#39;Roboto Mono\u0026#39;, monospace; } Desafio 3 GIFs da Fundação Nuevo: https://giphy.com/nuevofoundation\rClique em \u0026rsquo;embed\u0026rsquo; e copie o código de incorporação do GIF. Cole o código incorporado do GIF em qualquer lugar da tag \u0026lt;body\u0026gt; Exemplo de código iframe:\n\u0026lt;iframe src=\u0026#34;https://giphy.com/embed/oywrR92C9YBlrSuUKP\u0026#34; width=\u0026#34;480\u0026#34; height=\u0026#34;480\u0026#34; frameBorder=\u0026#34;0\u0026#34; class=\u0026#34;giphy-embed\u0026#34; allowFullScreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://giphy.com/gifs/nuevofoundation-rockstar-nuvi-oywrR92C9YBlrSuUKP\u0026#34;\u0026gt;via GIPHY\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; Integrado no exemplo \u0026lsquo;Tente codar você mesmo!\u0026rsquo;:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Meta Tags Obrigatórios --\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Isso será exibido na aba do navegador!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;Meu nome é Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Estou procurando uma família.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Informações:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Sou uma mistura de Labrador e Cão dos Pirenéus\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tenho 1 ano\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eu como manteiga de amendoim, você quer?\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vou proteger você dos esquilos\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;Espero que possamos brincar em breve!\u0026lt;/h3\u0026gt; \u0026lt;!-- Desafio 3: Cole seu código aqui! --\u0026gt; \u0026lt;iframe src=\u0026#34;https://giphy.com/embed/oywrR92C9YBlrSuUKP\u0026#34; width=\u0026#34;480\u0026#34; height=\u0026#34;480\u0026#34; frameBorder=\u0026#34;0\u0026#34; class=\u0026#34;giphy-embed\u0026#34; allowFullScreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://giphy.com/gifs/nuevofoundation-rockstar-nuvi-oywrR92C9YBlrSuUKP\u0026#34;\u0026gt;via GIPHY\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Desafio 4 O formulário de contato já está adicionado para os alunos. Eles simplesmente precisarão modificar seu e-mail na seção de e-mail e alterar o estilo que desejarem!\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Isso será exibido na guia do navegador!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1 id=\u0026#34;page-title\u0026#34;\u0026gt;Meu nome é Benji\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Estou procurando uma família.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div id=\u0026#34;info\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Informações:\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Sou uma mistura de Labrador e Cão dos Pirenéus\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tenho 1 ano\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eu como manteiga de amendoim, você quer?\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vou proteger você dos esquilos\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- Desafio 4: Formulário de Contato --\u0026gt; \u0026lt;div class=\u0026#34;contact-section\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;Contact me\u0026lt;/h3\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;!-- Altere a seguinte linha --\u0026gt; \u0026lt;form action=\u0026#34;https://formspree.io/email@nuevofoundation.com\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;name\u0026#34;\u0026gt;Nome: \u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;name\u0026#34; placeholder=\u0026#34;Tell Benji who you are\u0026#34;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;label for=\u0026#34;message\u0026#34;\u0026gt;Sua mensagem: \u0026lt;/label\u0026gt; \u0026lt;textarea name=\u0026#34;message\u0026#34; placeholder=\u0026#34;Tell me about you\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Hi!\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;Espero que possamos brincar em breve!\u0026lt;/h3\u0026gt; \u0026lt;img id=\u0026#34;dog\u0026#34; src=\u0026#34;https://aka.ms/Benji-the-dog\u0026#34;\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; .contact-section { width: 250px; margin: 10px; padding: 10px; background-color: #FCFC69; /* Desafio 4: mude a cor aqui para estilizar */ } Desafio 5 Nenhuma solução aqui – os alunos estão criando seus próprios sites com base no que aprenderam. Algumas notas:\nIncentive os alunos a usar todas as coisas diferentes que aprenderam (ou seja, CSS, formulário, GIF) Incentive os alunos a criarem algo que gostariam de mostrar a outras pessoas. Divirta-se!\n"
},
{
	"uri": "/pt-br/secret-messages/answer-key/",
	"title": "Mensagens secretas C++ - chave de resposta",
	"tags": [],
	"description": "",
	"content": "As 5 linhas a seguir são necessárias para todas as atividades.\n#include \u0026lt;iostream\u0026gt;\rusing namespace std;\rint main() {\rreturn 0;\r} Atividade 1 cout \u0026lt;\u0026lt; \u0026#34;Olá desenvolvedor!\u0026#34; \u0026lt;\u0026lt; endl; Atividade 2 string nome;\rcin \u0026gt;\u0026gt; nome;\rcout \u0026lt;\u0026lt; \u0026#34;Olá \u0026#34; \u0026lt;\u0026lt; nome \u0026lt;\u0026lt; endl; Atividade 3 string nome;\rcin \u0026gt;\u0026gt; nome;\rfor(int i=0; i\u0026lt;nome.size(); i++){\rcout \u0026lt;\u0026lt; nome[i] \u0026lt;\u0026lt; endl;\r} Atividade 4 int number;\rcin \u0026gt;\u0026gt; number;\rif(number == 1){\rcout \u0026lt;\u0026lt; \u0026#34;Encrypt a message\u0026#34; \u0026lt;\u0026lt; endl;\r}else{\rcout \u0026lt;\u0026lt; \u0026#34;Decrypt a message\u0026#34; \u0026lt;\u0026lt; endl;\r} Atividade 5 #include \u0026lt;iostream\u0026gt;\rusing namespace std;\rint main() {\rstring code;\rstring name;\rcin \u0026gt;\u0026gt; code;\rcin \u0026gt;\u0026gt; name;\rint counter = 0;\rfor(int i=0; i\u0026lt;name.size(); i++){\rint sum = name[i]+code[counter]-\u0026#39;a\u0026#39;;\rif(sum \u0026gt; \u0026#39;z\u0026#39;){\rsum-=25;\r}\rname[i]=sum;\rcounter+=1;\rif(counter \u0026gt;= code.size()){\rcounter=0;\r}\r}\rcout \u0026lt;\u0026lt; \u0026#34;Encrypted message: \u0026#34; \u0026lt;\u0026lt; endl;\rcout \u0026lt;\u0026lt; name \u0026lt;\u0026lt; endl;\rreturn 0;\r} Atividade 6 #include \u0026lt;iostream\u0026gt;\rusing namespace std;\rvoid encrypt (string \u0026amp;name, string code){\rint counter = 0;\rfor(int i=0; i\u0026lt;name.size(); i++){\rint sum = name[i]+code[counter]-\u0026#39;a\u0026#39;;\rif(sum \u0026gt; \u0026#39;z\u0026#39;){\rsum-=25;\r}\rname[i]=sum;\rcounter+=1;\rif(counter \u0026gt;= code.size()){\rcounter=0;\r}\r}\r}\rvoid decrypt (string \u0026amp;name, string code){\rint counter = 0;\rfor(int i=0; i\u0026lt;name.size(); i++){\rint sum = name[i]-code[counter]+\u0026#39;a\u0026#39;;\rif(sum \u0026lt; \u0026#39;a\u0026#39;){\rsum+=25;\r}\rname[i]=sum;\rcounter+=1;\rif(counter \u0026gt;= code.size()){\rcounter=0;\r}\r}\r}\rint main() {\rstring code;\rstring name;\rint number;\rcin \u0026gt;\u0026gt; number;\rcin \u0026gt;\u0026gt; code;\rcin \u0026gt;\u0026gt; name;\rif(number == 1){\rcout \u0026lt;\u0026lt; \u0026#34;Encrypted message: \u0026#34; \u0026lt;\u0026lt; endl;\rencrypt(name, code);\rcout \u0026lt;\u0026lt; name \u0026lt;\u0026lt; endl;\r}else{\rcout \u0026lt;\u0026lt; \u0026#34;Decrypted message: \u0026#34; \u0026lt;\u0026lt; endl;\rdecrypt(name, code);\rcout \u0026lt;\u0026lt; name \u0026lt;\u0026lt; endl;\r}\rreturn 0;\r} Atividade 7 #include \u0026lt;iostream\u0026gt;\rusing namespace std;\rvoid encrypt (string \u0026amp;name, string code){\rint counter = 0;\rfor(int i=0; i\u0026lt;name.size(); i++){\rif(name[i]!=\u0026#39; \u0026#39;){\rint sum = name[i]+code[counter]-\u0026#39;a\u0026#39;;\rif(sum \u0026gt; \u0026#39;z\u0026#39;){\rsum-=25;\r}\rname[i]=sum;\rcounter+=1;\rif(counter \u0026gt;= code.size()){\rcounter=0;\r}\r}\r}\r}\rvoid decrypt (string \u0026amp;name, string code){\rint counter = 0;\rfor(int i=0; i\u0026lt;name.size(); i++){\rif(name[i]!=\u0026#39; \u0026#39;){\rint sum = name[i]-code[counter]+\u0026#39;a\u0026#39;;\rif(sum \u0026lt; \u0026#39;a\u0026#39;){\rsum+=25;\r}\rname[i]=sum;\rcounter+=1;\rif(counter \u0026gt;= code.size()){\rcounter=0;\r}\r}\r}\r}\rint main() {\rstring code;\rstring name;\rint number;\rcin \u0026gt;\u0026gt; number;\rcin \u0026gt;\u0026gt; code;\rgetline(cin, name);\rif(number == 1){\rcout \u0026lt;\u0026lt; \u0026#34;Encrypted message: \u0026#34; \u0026lt;\u0026lt; endl;\rencrypt(name, code);\rcout \u0026lt;\u0026lt; name \u0026lt;\u0026lt; endl;\r}else{\rcout \u0026lt;\u0026lt; \u0026#34;Decrypted message: \u0026#34; \u0026lt;\u0026lt; endl;\rdecrypt(name, code);\rcout \u0026lt;\u0026lt; name \u0026lt;\u0026lt; endl;\r}\rreturn 0;\r} "
},
{
	"uri": "/pt-br/python-turtle/answer-key/",
	"title": "Tartaruga Python - Gabarito",
	"tags": [],
	"description": "",
	"content": "As 3 linhas abaixo são necessárias para a atividade de introdução e também para todas as outras atividades.\nimport turtle turtle.color(\u0026#34;orange\u0026#34;) turtle.shape(\u0026#34;turtle\u0026#34;) Atividade Introdutória turtle.color(\u0026#34;orange\u0026#34;) turtle.forward(50) Atividade 1 turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) turtle.forward(50) turtle.left(90) Atividade 2 for i in range(4): turtle.forward(50) turtle.left(90) Atividade 3 for i in range(6): turtle.forward(50) turtle.left(60) Atividade 4 def draw_hexagon(): for i in range(6): turtle.forward(50) turtle.left(60) draw_hexagon() Atividade 5 def draw_honeycomb(): for i in range(6): draw_hexagon() turtle.forward(50) turtle.right(60) draw_honeycomb() Atividade 6 turtle.penup() turtle.goto(300, 300) turtle.pendown() Atividade 7 def figure_8(): turtle.circle(50) turtle.circle(-50) figure_8() Atividade 8 def mandala_flower(): for i in range(35): figure_8() turtle.right(10) mandala_flower() Atividade 9 def mandala_flower(): turtle.color(30, 100, 160) for i in range(35): figure_8() turtle.right(10) mandala_flower() Atividade 10 def mandala_flower(): for i in range(35): turtle.color(random.randint(0, 256),random.randint(0, 256), random.randint(0, 256)) figure_8() turtle.right(10) mandala_flower() "
},
{
	"uri": "/pt-br/linux-basics/closing/",
	"title": "Finalizando",
	"tags": [],
	"description": "A última tela após a conclusão das atividades",
	"content": "Parabéns! Você frustrou as travessuras dos hackers aprendendo sobre os vários comandos do Linux. Muito obrigada por nos ajudar! E não conte a ninguém sobre as suas novas habilidades!\rClique em \u0026ldquo;Baixar certificado\u0026rdquo; abaixo para receber o seu certificado de conclusão do Minicurso Básico de Linux!\nBaixar certificado\r"
},
{
	"uri": "/pt-br/sql_workshop/",
	"title": "SQL: Salvando a Galáxia",
	"tags": [],
	"description": "Aprendendo comandos SQL básicos",
	"content": "\rIntrodução: Aprenda SQL salvando a galáxia! Bem-vindo à Estação Espacial Nuevo (NSS)! Você é um aventureiro espacial que viaja pela galáxia em seu veloz foguete enquanto resolve quebra-cabeças de codificação para ajudar a salvar seus amigos alienígenas em diferentes planetas.\nVocê foi aprovado como explorador espacial honorário pela Federação Galáctica! Você receberá missões para ajudar a tornar a galáxia um lugar seguro e divertido para todos!\nPor favor, não use o navegador Firefox para este workshop.\nTabela de Conteúdos Tutorial 1: Aprenda o básico do cadete Atividade 1: Aprenda o Comando SELECT Atividade 2: Aprenda o comando WHERE Tutorial 2: Explicar a sintaxe Atividade 3: Aprenda o comando COUNT Atividade 4: Selecionar Múltiplas Informações Atividade 5: Aprenda o Comando MAX/MIN Atividade 6: Use Comparadores Atividade 7: Use o Comando MIN Atividade 8: Aprenda o comando LIKE Atividade 9: Aprenda o Comando AVG Atividade 10: Aprenda o comando SUM Atividade 11: Aprenda o comando GROUP BY Atividade 12: Encontre o Inventor! "
},
{
	"uri": "/pt-br/sql_workshop/answer-key/",
	"title": "Chave de resposta do workshop SQL",
	"tags": [],
	"description": "",
	"content": "\rNota: Não use o navegador Firefox para este workshop!\nPara atividades de arrastar e soltar: os blocos escolhidos corretamente terão um destaque verde ao seu redor, enquanto os blocos incorretos serão destacados em vermelho até que o jogador mova o bloco.\nPara atividades de digitação: palavras/comandos corretos serão destacados em verde na caixa de comando anterior, palavras colocadas incorretamente ou mal utilizadas serão destacadas em vermelho. Se o comando que os jogadores escrevem corresponder à chave de resposta e ainda estiver destacado em vermelho, certifique-se de que não haja espaços extras no final ou no início do comando! Certifique-se de que os jogadores tenham ponto e vírgula no final do comando (a última palavra no comando SQL será destacada em vermelho se não houver ponto e vírgula)! Observe que algumas crianças copiam um exemplo de comando do workshop e colam-no no terminal para executar - isso não funcionará! Peça-lhes para atualizar a página e digitar manualmente o comando.\nPalavras-chave SQL (palavras reservadas) nos comandos não diferenciam maiúsculas de minúsculas (SELECT, FROM, WHERE, COUNT, MAX, IN, etc.), mas geralmente são escritas em maiúsculas para diferenciar de não-palavras-chave. \u0026ldquo;select * from planet\u0026rdquo; é o mesmo que \u0026ldquo;SELECT * FROM planet\u0026rdquo;.\nAprenda noções básicas de cadetes Nenhuma atividade, apenas uma leitura da terminologia.\nAtividade 1: Aprenda o comando SELECT (arrastar e soltar) Resposta: SELECT * FROM galáxia;\nAtividade 2: Aprenda o comando WHERE (arrastar e soltar) Resposta: SELECT * FROM galaxy WHERE name = ‘Planet of Fun’;\nExplicar a sintaxe Nenhuma atividade, apenas uma explicação do formato do comando SQL.\nAtividade 3: Duas respostas válidas: SELECT COUNT(*) FROM planet; OU SELECT COUNT(city_number) FROM planet;\nAtividade 4: Selecionar múltiplas informações (digitar) Duas respostas válidas: SELECT planet, leader FROM galaxy; OU SELECT leader, planet FROM galaxy;\nA única diferença entre as duas respostas é a ordem das colunas exibidas, portanto ambas as respostas são válidas.\nAtividade 5: Aprenda o comando MAX/MIN (digitar + arrastar e soltar) Respostas válidas:\nSELECT MAX(height) FROM items WHERE object IN (‘ladder’); SELECT MAX(height) FROM items WHERE object = 'ladder'; SELECT * FROM items WHERE object IN (‘ladder’); SELECT * FROM items WHERE object = 'ladder'; Embora a terceira e quarta respostas não utilizem o comando MAX, ele exibe todas as escadas e suas cores, tornando esta uma resposta válida para a atividade. Respostas para bônus:\nSELECT MAX(height) FROM items WHERE object NOT IN('totem', 'key'); SELECT MAX(height) FROM items WHERE object NOT IN('totem'); SELECT MAX(height) FROM items WHERE object NOT IN('key'); Se os jogadores usarem NOT IN corretamente, isso ainda produzirá a resposta correta. Arrastar e Soltar: A escada correta para arrastar e soltar é a escada VERMELHA (escada mais à direita). A escada correta será destacada em verde.\nAtividade 6: Usar Comparadores (digitar) Responder: SELECT * FROM items WHERE date_created = ‘1738-09-12’;\nResposta bônus: SELECT * FROM items WHERE date_created \u0026gt;= ‘1738-09-12’;\nAtividade 7: Use o comando MIN (digitar + arrastar e soltar) Respostas válidas:\nSELECT MIN(height) FROM items WHERE object IN (‘key’); SELECT * FROM items WHERE object IN('key'); SELECT MIN(height) FROM items WHERE object = 'key'; SELECT * FROM items WHERE object = 'key'; SELECT MIN(height) FROM items WHERE object NOT IN('totem', 'ladder'); SELECT MIN(height) FROM items WHERE object NOT IN('totem'); SELECT MIN(height) FROM items WHERE object NOT IN('ladder'); Arrastar e Soltar: A height (altura) corresponde ao número de loops na base da chave. A menor tecla (height 1) é a tecla correta para arrastar e soltar (tecla mais à direita).\nAtividade 8: Aprenda o comando LIKE (digitar) Duas respostas válidas: SELECT * FROM items WHERE date_created LIKE ‘%-10-%’; OR select * from items where date_created like '1738-10-%';\nAtividade 9: Aprenda o comando AVG (digitar) Responder: SELECT AVG(population) FROM planet;\nA combinação do cofre é \u0026ldquo;40\u0026rdquo;.\nAtividade 10: Aprenda o comando SUM (digitar) Responder: SELECT SUM(population) FROM planet;\nAtividade 11: Aprenda o comando GROUP BY (digitar) Responder: SELECT * FROM planet GROUP BY favorite_food;\nResposta bônus: SELECT COUNT(*), favorite_food FROM planet GROUP BY favorite_food;\nOs botões corretos para selecionar (em qualquer ordem) são: pizza, cachorro-quente, hambúrguer e taco.\nAtividade 12: Encontre o Inventor! (Digitar) Responder: SELECT * FROM people;\nO inventor: \u0026ldquo;Dr. Phi\u0026rdquo;\n"
},
{
	"uri": "/pt-br/python-basics/",
	"title": "Python: Fundamentos",
	"tags": [],
	"description": "Aprenda conceitos básicos de uso da linguagem de programação Python",
	"content": "Visão geral Bem-vindo ao curso Python: Fundamentos, onde você aprenderá uma linguagem de programação de alto nível amplamente utilizada que fornece instruções de computador para criar programas interessantes!\nPython é uma linguagem de programação de alto nível criada por Guido van Rossum entre 1985-1990.\nUma linguagem de programação de alto nível é chamada de alto nível porque está a poucos passos do código original executado na Unidade Central de Processamento (CPU) de um computador. O código de alto nível (high level) deve ser usado por humanos e é muito mais fácil de entender do que o código de baixo nível (low level). O código de alto nível é posteriormente traduzido para uma linguagem de baixo nível, que só pode ser percebida e executada por uma CPU específica. Para que o código funcione, cada linha de código escrita em uma linguagem de alto nível deve ser traduzida para linguagem de máquina antes de ser implementada pelo computador.\nHoje, Python é usado por desenvolvedores em todo o mundo. Especificamente, Python é usado para desenvolver sites, componentes de software e aplicativos, ou para trabalhar com tecnologias de Ciência de Dados, Inteligência Artificial e Aprendizado de Máquina.\nE, neste curso, abordaremos todos os recursos básicos da linguagem.\nSe a qualquer momento você ficar travado ou tiver problemas, acesse a seção Ajuda, estou travado!\rpágina para obter algumas dicas rápidas e soluções para erros comuns.\nTópicos\rFundamentos Começando com o Trinket Gravando no console (imprimir instrução) Commentários Variáveis Lendo do console Tipos de dados Strings Números Booleanos Instruções condicionais e loops Declarações condicionais Condição Else-if Loops Nested Loops Estruturas de dados Listas Tuplas Conjunto Funções Mais sobre funções Funções integradas Funções matemáticas integradas Socorro, estou preso! "
},
{
	"uri": "/pt-br/jsappybird/",
	"title": "JS: JSappyBird",
	"tags": [],
	"description": "Crie seu próprio jogo JSappyBird",
	"content": "Introdução Você deve estar familiarizado com o jogo Flappy Bird. Este workshop irá guiá-lo na criação de sua própria versão do jogo usando a linguagem JavaScript! Você está pronto para o desafio?\nComo você provavelmente está familiarizado com o jogo Flappy Bird, este workshop irá guiá-lo sobre como você pode criar sua própria versão do jogo e deixar seus amigos experimentarem! Neste tutorial aprenderemos como usar a linguagem JavaScript para ajudar o pássaro a brincar no mundo que você criará.\nComeçando O objetivo da atividade de hoje é aprender habilidades em JavaScript e incorporar seu novo conhecimento para criar um jogo Flappy Bird! Vamos preparar o jogo.\nHoje você usará o Replit. Antes de começar, você precisará se cadastrar em uma conta Replit, caso ainda não tenha uma.\nClique no botão abaixo para se cadastrar em uma conta Replit - você precisará de uma conta de e-mail para se cadastrar. Se você já possui uma conta Replit, também pode fazer login em sua conta usando o botão abaixo.\nCadastre-se no Replit\nA seguir, inicie o console Replit que usaremos hoje clicando no botão abaixo. Você deverá ver a tela abaixo.\nIniciar Replit\nAgora faremos um fork do Repl, que significa simplesmente fazer uma cópia do programa, para que possamos fazer nossas próprias alterações nele. Clique no botão \u0026ldquo;Fork Repl\u0026rdquo; no canto superior direito e depois no botão \u0026ldquo;Fork Repl\u0026rdquo;.\nApós fazer o ford do Replit, você verá uma janela semelhante a esta abaixo:\nIgnoraremos alguns detalhes nesta tela, mas abordaremos alguns dos princípios básicos que aparecem. O arquivo index.html, assim como todos os arquivos que terminam com .js contêm código ou instruções para o computador funcionar. Ao pressionar o botão run, você instrui o computador a executar as instruções do código. Quaisquer resultados da execução do código serão exibidos no lado direito, chamado console.\nSe você pressionar run agora, verá que nada acontece! Seu trabalho é ajudar Nuvi a completar o código deste jogo!\nQuaisquer atividades nas seções Activity serão realizadas nesta guia do navegador. Você realizará essas atividades sozinho, mas haverá ajuda disponível quando você tiver dúvidas.\nTabela de Conteúdos Tabela de Conteúdos\rCarregue a imagem do pássaro e altere o texto da tela Faça o pássaro pular e adicione gravidade Faça o pássaro pular com força e cair com rotação Adicione som do salto do pássaro e bônus "
},
{
	"uri": "/pt-br/supply-chain-analytics/",
	"title": "Análise de Supply Chain",
	"tags": [],
	"description": "Aprenda como usar conceitos STEM, como otimização, para ajudar a administrar sua biscoiteria!",
	"content": "O que é uma cadeia de suprimentos (Supply Chain)? Uma cadeia de suprimentos move um produto ou serviço do fornecedor ao cliente. São as pessoas, atividades, informações e recursos que movem o produto.\nhttps://newsela.com/read/supply-chain-shortages-holidays/id/2001025129/\rExemplo: Seus pais preparam um sanduíche gostoso para você levar para a escola no almoço no dia seguinte. Aqui está o que é necessário para que isso aconteça:\nUma Fazenda cultiva o trigo Uma instalação transforma esse trigo em farinha Uma fábrica transforma essa farinha em pão Um caminhão de entrega retirará o pão da fábrica e o entregará na lanchonete. Um chef faz o sanduíche para você usando aquele pão Você (cliente) vai comprar aquele sanduíche! Isto pode parecer simples. Afinal, quando você está com vontade de comer um sanduíche, tudo o que o cliente precisa fazer é ir até a loja e escolher um na prateleira. Você pode não pensar em todas as coisas que acontecem nos bastidores – e há muitas delas. Aqui estão alguns exemplos de funções:\n\u003c\u003e\rTipos de trabalhos: previsão, fabricação, abastecimento, negociação, gerenciamento de armazém, entrega https://creativemarket.com/falara/\rHoje em dia, a tecnologia desempenha um papel muito importante no funcionamento das cadeias de abastecimento. Hoje, vou mostrar como você pode usar a tecnologia e a matemática para ajudar a administrar sua cadeia de suprimentos!\nTabela de Conteúdos Tabela de Conteúdos\rPreparando a cena Otimização Linear - Os Fundamentos Resolvendo seu problema Desafio Extra "
},
{
	"uri": "/pt-br/java-basics/",
	"title": "Java: Fundamentos",
	"tags": [],
	"description": "Uma introdução aos fundamentos da linguagem de programação Java",
	"content": "\nBem vindo ao curso Java: Fundamentos, onde você vai aprender uma linguagem de programação amplamente utilizada e de alto nível, que fornece ao computador instruções para criar programas emocionantes!\nJava é uma linguagem de programação de alto nível desenvolvida por James Gosling e Sun Microsystems na Califórnia em 1995.\nUma linguagem de programação de alto nível é chamada de alto nível porque está a poucos passos do código original executado na Unidade Central de Processamento (CPU) de um computador. O código de alto nível deve ser usado por humanos e é muito mais fácil de entender do que o código de baixo nível. O código de alto nível é posteriormente traduzido para uma linguagem de baixo nível, que só pode ser percebida e executada por uma CPU específica. Para que o código funcione, cada linha de código escrita em uma linguagem de alto nível deve ser traduzida para linguagem de máquina antes de ser implementada pelo computador.\nHoje, Java é usado por desenvolvedores em todo o mundo. Especificamente, Java é usado para aplicativos móveis Android, aplicativos de desktop, aplicativos da web, desenvolvimento de jogos\nE, neste curso, abordaremos todos os recursos básicos da linguagem.\n(image created by Molang: giphy.com/molangofficialpage)\nNeste curso, seguiremos o exemplo de um pato amarelo amante da música chamado Patrick 🐥 para aprender tudo sobre Java e fazer amigos pelo caminho!\nSumário Sumário\rUsando Replit Imprimir declarações e comentários Variáveis ​​e Tipos Operadores Estruturas de Controle Métodos Objeto e Classes Estruturas de dados (Array \u0026amp; ArrayList) "
},
{
	"uri": "/pt-br/unity/",
	"title": "Unity: Jogo espacial",
	"tags": [],
	"description": "Aprenda o básico do Unity criando um jogo espacial",
	"content": "Introdução Oh não! Alienígenas desceram à Terra! Você aceitará o desafio e ajudará o robô Nuvi a derrotar os alienígenas?\nEste workshop irá guiá-lo passo a passo na criação de um jogo espacial Unity!\nEspero que goste!\nTabela de Conteúdos Instalando Unity Compreendendo a interface do Unity Scripts Explicados Fazendo Nuvi se Mover Colisores Configurando os inimigos Configurando o projétil e tornando-o um pré-fabricado Disparando Gatilhos e Tags Comportamento de projéteis/inimigo Construindo a UI: Parte 1 Construindo a UI: Parte 2 Juntando tudo Compilando e executando seu jogo "
},
{
	"uri": "/pt-br/secret-messages/",
	"title": "C++: mensagens secretas",
	"tags": [],
	"description": "Aprenda C++ e crie suas próprias mensagens secretas",
	"content": "Introdução Bem-vindo ao tribunal!\nNum reino não muito distante, o Rei envia mensagens diárias à Rainha, que está em um país diferente, testemunhando uma coroação. Sua estada ali chegou ao fim, pois ela está envolvida em negociações cruciais para a nação. No entanto, suas comunicações foram comprometidas! Tanto o Rei quanto a Rainha perceberam que seus inimigos mais cruéis, os Piratas, têm interceptado todas as mensagens trocadas.\nFelizmente, eles conceberam um plano para estabelecer um sistema que impeça os Piratas de acessarem suas conversas, mas necessitam de assistência para concretizá-lo.\nVocê foi escolhido pelo Rei para ser o próximo Desenvolvedor da Corte e criou um sistema de criptografia que possibilitaria que ele e a Rainha se comunicassem sem serem interceptados pelos Piratas. Você está disposto a ajudar o Rei? O futuro do reino está em suas mãos.\nConteúdo Seções\rUsando Repl.It Atividade 1 - Resultado Atividade 2 - Variáveis e Entradas (Inputs) Atividade 3 - Loops Atividade 4 – Condições Atividade 5 - Código ASCII Atividade 6 – Funções Atividade 7 – Linha de entrada (Input line) Conclusão "
},
{
	"uri": "/pt-br/android-tictactoe/",
	"title": "Java: Jogo da Velha",
	"tags": [],
	"description": "Aprenda sobre variáveis, funções e condicionais enquanto constrói um aplicativo Android do Jogo da Velha",
	"content": "Comece sua Aventura de Jogo Android Você já se perguntou como poderia construir seu próprio Jogo da Velha?\nVocê está com sorte, hoje é o dia em que você poderá construir o seu próprio!\nComeçando O que é Android? O Android é atualmente o sistema operacional de celular mais usado no mundo! O Android Studio permite que você crie aplicativos que podem ser usados por esses dispositivos Android. Na verdade, se você tiver um telefone Android, poderá até baixar o aplicativo que está criando hoje em seu telefone!\nSobre esse projeto Neste projeto, fornecemos a você um aplicativo Android quase funcional. Ele precisa de sua ajuda para corrigir alguns problemas e adicionar algumas partes para torná-lo um ótimo jogo!\nBaixe os arquivos do projeto Para começar, baixe os arquivos do projeto usando as etapas abaixo:\nBaixe os arquivos do projeto\rpara o seu jogo. Encontre o arquivo TicTacToe.zip na pasta de downloads. Descompacte o arquivo. No Windows: Clique com o botão direito em TicTacToe.zip e selecione Extrair tudo.... Uma pasta chamada \u0026lsquo;TicTacToe\u0026rsquo; será criada contendo o código do projeto. Nesta aventura, você precisará resolver os quebra-cabeças marcados com as tags PUZZLE para completar o jogo!\nSumário Sumário\rConfiguração do Android Quebra-cabeça 1 - Execute o jogo e resolva-o Estrutura do Aplicativo de Jogo Imprimindo no console Quebra-cabeça 2 - Bem-vindo usuário Comentários Strings Números Booleans Condicionais Variáveis Quebra-cabeça 3 - O teste final "
},
{
	"uri": "/pt-br/arduino/",
	"title": "Arduino: Jogo de luz",
	"tags": [],
	"description": "Construa um microcontrolador Arduino",
	"content": "Introdução - Construindo com Arduino Eletrônicos como microcontroladores, sensores e todos os tipos de circuitos estão ao nosso redor! Alguns são muito básicos e fornecem informações de telemetria para sistemas de tráfego. Outros executam os semáforos programados com temporização embutida.\nHoje trabalharemos em algumas atividades para mostrar algumas das capacidades desta plataforma. Começaremos pequenos e simples e construiremos para maiores e mais complexos. Você aprenderá todas as informações básicas sobre como usar a placa controladora Arduino, sensores e componentes. Depois de fazer cada atividade, sinta-se à vontade para mudar algumas coisas para ver o que é diferente e obter uma compreensão mais profunda\nOs Componentes Os componentes que usaremos para o projeto são mostrados abaixo. Certifique-se de ter todos esses componentes antes de começar:\nElegoo O Kit Super Iniciante de Projeto UNO com Tutorial para Arduino inclui todo o hardware (com exceção do computador)\nComponentes principais necessários para todas as atividades\nArduino UNO R3 Cabo USB A para B PC com Windows 10 Software Arduino IDE (baixar) Componentes adicionais necessários para atividades específicas\n(5) LEDs (any color) (5) 220ohm resistor\rFios de jumper Fio de jumper fêmea para macho Painel LCD + resistor 5K ohm Bateria 9V (opcional) Tabela de conteúdos Tabela de conteúdos\rConfigurar o PC Atividade 1: LED piscante Atividade 2 - Joystick com saída serial Atividade 3 - Joystick \u0026amp; LEDs Atividade 4 - Display LCD Apêndice "
},
{
	"uri": "/pt-br/sql_workshop/basics_activity/",
	"title": "Tutorial 1: Aprenda o básico do cadete",
	"tags": [],
	"description": "Aprenda o que são um banco de dados e SQL",
	"content": "Treinamento de cadetes! Como um novo explorador espacial honorário, vamos repassar alguns princípios básicos!\nO que é um banco de dados? É uma espécie de contêiner para você guardar e organizar informações. Pense em um banco de dados como um balde onde você pode colocar os brinquedos para que não se percam e você pode encontrá-los facilmente mais tarde. Este balde pode conter baldes menores para classificar seus brinquedos.\nO que é SQL? SQL significa “Structured Query Language” e como seu nome, é uma linguagem que permite conversar com o banco de dados para obter as informações que você precisa. Um comando SQL é como uma frase que você diz ao banco de dados.\nO que é uma Tabela? Uma tabela pode ser um banco de dados. Agora que você tem algum conhecimento do que são bancos de dados e comandos SQL, você aprenderá como usá-los em suas missões! Continue a iniciar sua primeira aventura espacial oficial!\n"
},
{
	"uri": "/pt-br/sql_workshop/activity1/",
	"title": "Atividade 1: Aprenda o Comando SELECT",
	"tags": [],
	"description": "Aprenda o comando SELECT",
	"content": "\rMissão 1: Salvar o Planeta da Diversão do Tédio! Sua primeira missão é ir ao Planeta da Diversão e salvá-los do tédio! Você receberá um banco de dados sobre o planeta e precisa aprender a usar comandos SQL para ajudar a salvar o Planeta da Diversão!\nTarefa 1: Dê uma olhada nas informações do Planeta da Diversão Você receberá informações sobre a Galáxia e deseja procurar o Planeta da Diversão. Para fazer isso, a Federação Galáctica deu a você seu primeiro comando SQL: SELECT.\nO que o comando faz: O comando SELECT permite escolher quais dados mostrar de um banco de dados.\nExemplo: Agora use o que você aprendeu! Arraste os blocos para o terminal e reorganize-os para responder à pergunta abaixo!\nPergunta: Qual comando exibirá todas as colunas do banco de dados chamado \u0026ldquo;galaxy\u0026rdquo;? Enter\rERRO ENTRADA INVÁLIDA\rVocê encontrou o comando correto para exibir todo o banco de dados! Isso é útil quando você deseja ver todas as informações na ponta dos dedos!\n\u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity2/",
	"title": "Atividade 2: Aprenda o comando WHERE",
	"tags": [],
	"description": "Aprenda o comando WHERE",
	"content": "\rTarefa 2: Viaje para o Planeta da Diversão! Você precisa programar o GPS do seu foguete para ir ao Planeta da Diversão reorganizando os blocos de código. Para encontrar as coordenadas, a Federação Galáctica deu a você o próximo comando SQL: WHERE!\nO que o comando faz: O comando WHERE permite mostrar apenas os dados que você deseja.\nExemplo: O bloco de banco de dados SELECT * FROM que aprendemos na atividade anterior nos permite escolher um banco de dados para pesquisar.\nO comando WHERE nos permite restringir quais dados são exibidos dependendo da condição (os blocos verdes na imagem abaixo). Uma condição é um requisito que você está procurando. As condições não precisam seguir o exemplo acima, mas o uso mais comum de condições é procurar linhas que contenham informações específicas.\nO nome da coluna na qual desejamos procurar informações.\nO sinal de igual significa que queremos encontrar informações que correspondam ao que temos no lado direito do sinal de igual.\nQuando procuramos palavras ou textos específicos, devemos colocar o texto entre aspas simples. SQL usa aspas simples para indicar que estamos procurando uma palavra no banco de dados.\nVocê pode substituir \u0026rsquo;texto\u0026rsquo; por qualquer palavra que esteja procurando no banco de dados.\nO ponto e vírgula funciona como o final de um comando SQL, como um ponto final no final de uma frase.\nUsando o banco de dados chamado \u0026lsquo;galaxy\u0026rsquo; que possui uma coluna chamada \u0026lsquo;planet\u0026rsquo;, encontre as coordenadas do Planeta da Diversão! Enter Agora que você sabe onde fica o Planeta da Diversão, podemos encontrar mais informações sobre ele e ignorar os outros planetas. Vamos para o Planeta da Diversão! \u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/syntax_explanation/",
	"title": "Tutorial 2: Explicar a sintaxe",
	"tags": [],
	"description": "Explicar a sintaxe",
	"content": "Um e-mail da Federação Galáctica? No meio da sua jornada, você recebe de repente uma mensagem da Federação Galáctica. Sobre o que poderia ser?\nRemetente: A Federação Galáctica\nReceptor: Cadete Espacial\nAssunto: Terminal atualizado\nCaro Cadete Espacial,\nNossos registros indicaram que você aprendeu comandos suficientes para aprender a estrutura básica dos comandos SQL. A Federação Galáctica tomou conhecimento de suas conquistas e decidiu conceder a você um terminal atualizado! Durante sua jornada, você precisará de seu prático terminal para exibir informações sobre o planeta ao seu redor. Agora você pode digitar comandos!\nDe acordo com as Diretrizes do Explorador Espacial, iremos agora falar sobre a estrutura central de um SQL comando na esperança de que você seja capaz de superar os desafios que ainda estão por vir.\nEsperamos que nossos conselhos o ajudem em sua jornada. Boa sorte, Cadete Espacial!\nDesejamos a você uma boa aventura,\nA Federação Galáctica\n"
},
{
	"uri": "/pt-br/sql_workshop/activity3/",
	"title": "Atividade 3: Aprenda o comando COUNT",
	"tags": [],
	"description": "Aprenda o comando COUNT",
	"content": "\rA aventura se desdobra após a intrigante mensagem da Federação Galáctica.\nCom os motores da nave zumbindo em antecipação, você aterrissa triunfantemente no Planeta da Diversão! Em suas mãos, um presente da Federação: uma base de dados repleta de segredos e maravilhas deste mundo exótico, aguardando sua exploração.\nTarefa 3: Fale com os habitantes Você precisa falar com os habitantes do Planeta da Diversão para descobrir qual é o problema. Descubra quantas cidades existem no planeta usando o comando COUNT()!\nQuando usamos o comando SELECT * FROM planet;, a tabela acima é exibida. Mas para verificar o número de cidades, podemos usar o comando COUNT().\nPergunta: Usando o COUNT(), qual comando exibirá o número de cidades no Planeta da Diversão? Lembre-se de digitar a resposta e não copiar e colar o comando. Pressione o botão Enter no terminal para verificar se você tem o comando correto. Use o botão Reset para começar de novo.\nDica 1: A Federação Galáctica deu a você o nome deste banco de dados no início desta atividade. Dica 2: Você pode usar tanto o asterisco (*) quanto o nome de uma coluna. Dica 3: Não se esqueça do ponto e vírgula (;). Digite o comando aqui!\rEntrar Resetar\rERRO DE ENTRADA INVÁLIDA\rVocê encontrou o comando correto para exibir o banco de dados completo! Isso é útil quando você quer ver todas as informações ao alcance de seus dedos!\n\u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity4/",
	"title": "Atividade 4: Selecionar Múltiplas Informações",
	"tags": [],
	"description": "Selecionar Múltiplas Informações",
	"content": "\rTarefa 4: Encontrar o Líder deles Depois de ir para a Capital da Diversão, os habitantes pedem para você falar com o líder deles. Descubra qual habitante é o líder. Para fazer isso, vamos dar uma olhada em como selecionar múltiplas colunas em um banco de dados.\nAgora use o que aprendeu para descobrir quem é o líder do Planeta da Diversão! Você pode visualizar o banco de dados inteiro usando o comando SELECT * FROM [nome_do_banco]; que você aprendeu na atividade 1.\nA Federação Galáctica também te lembra que o banco de dados \u0026lsquo;galáxia\u0026rsquo; possui as seguintes colunas:\nnumero_planeta: A ordem em que os planetas aparecem no banco de dados.\nplaneta: O nome do planeta.\nlíder: O nome do líder do planeta.\npopulação: Quantos habitantes vivem no planeta.\ncoordenada: A localização do planeta na galáxia.\nDica: Apenas duas colunas são necessárias.\nPergunta: Usando o banco de dados \u0026lsquo;galaxy\u0026rsquo;, como você exibe apenas os nomes dos planetas e seus líderes? Não esqueça do ponto e vírgula no final!\nDigite o comando aqui!\rEntrar Resetar\rERRO DE ENTRADA INVÁLIDA\rVocê encontrou o comando correto para exibir todos os planetas e seus líderes!\n\u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity5/",
	"title": "Atividade 5: Aprenda o Comando MAX/MIN",
	"tags": [],
	"description": "Aprenda o Comando MAX/MIN",
	"content": "\rTarefa 5: Encontre a Escada Mais Alta Para Chegar ao Líder Deles Você descobriu que o líder do planeta está em uma cabana no morro mais alto, mas para chegar lá, você precisa encontrar a escada mais alta na Capital da Diversão!\nA Federação Galáctica enviou quatro novos comandos SQL para você brincar! Vamos dar uma olhada neles!\nO que os comandos fazem: Propriedade da Coluna: MAX() é usado para procurar o maior valor em uma coluna. MIN() é o oposto de MAX() e procurará o menor valor em uma coluna. Você pode substituir qualquer palavra dentro dos parênteses por outro nome de coluna para obter o maior ou menor valor dessa coluna.\nObserve como os itens especificados dentro de IN() e NOT IN() estão cercados por aspas simples, mas os dentro de MAX() e MIN() não estão.\nCondição:\nIN() e NOT IN() são usados em conjunto com o comando WHERE que aprendemos na atividade 2. IN() faz parte da condição de um comando SQL e é útil quando você deseja mostrar algumas colunas, mas não todas.\nNOT IN() é o oposto de IN(). Em vez de escolher o que mostrar como IN(), NOT IN() mostrará todas as colunas que você não escolheu dentro dos parênteses.\nVocê pode usar vírgulas dentro dos parênteses para escolher mais de uma coluna para mostrar ou não mostrar.\nUsar apenas 1 entrada dentro de IN() é equivalente a usar =:\nEx. nome_coluna IN('objeto_na_coluna'); é o mesmo que nome_coluna = 'objeto_na_coluna';\nAgora use o que aprendeu! Usando o banco de dados chamado \u0026lsquo;itens\u0026rsquo; com colunas rotuladas como \u0026lsquo;objeto\u0026rsquo; e \u0026lsquo;altura\u0026rsquo;, encontre a \u0026rsquo;escada\u0026rsquo; mais alta. Você pode exibir o banco de dados usando o comando da atividade 1.\nDica 1: Lembre-se do conselho da Federação Galáctica: SELECT [coluna/propriedade da coluna] FROM [banco de dados] [condição opcional];\nDica 2: Propriedade da Coluna: Você precisa usar MAX() ou MIN() para encontrar a escada mais alta?\nDica 3: Condição: WHERE [nome_da_coluna] [IN/NOT IN];\nDica 4: Você precisa usar IN() ou NOT IN() para mostrar a \u0026rsquo;escada'?\nDica 5: Qual símbolo você precisa no final de um comando SQL?\nBÔNUS: Tente usar várias entradas dentro de IN() ou NOT IN() ao procurar a escada Este comando é muito poderoso para buscar vários tipos de objetos Lembre-se: Você pode consultar o banco de dados várias vezes usando tudo o que aprendeu até agora para descobrir a cor da escada mais alta.\nType command here!\rEnter Reset\rERRO ENTRADA INVÁLIDA\u003e\rEscada VERMELHA = 100 Escada VERDE = 60 Escada AMARELA = 20 Escolha e segure a escada correta até o morro para continuar sua aventura! A escada correta será destacada em verde.\nVocê conseguiu! O Líder lhe conta que o Planeta da Diversão está em perigo de ser invadido pelos alienígenas do Planeta do Tédio!\rVocê precisa encontrar os Totens da Diversão para salvar o planeta! \u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity6/",
	"title": "Atividade 6: Use Comparadores",
	"tags": [],
	"description": "Use Comparadores",
	"content": "\rTarefa 6: Encontre o Totem Lendário da Diversão: Canhão de Confete Você precisa explorar o planeta e encontrar o primeiro Totem Lendário da Diversão - O Canhão da Diversão de Confete. As lendas dizem que este canhão nunca para de atirar confetes e é um símbolo de paz e entretenimento sem fim.\nSua única dica é que o artefato foi criado em 12/09/1738.\nPara ajudá-lo, a Federação Galáctica enviou-lhe um breve tutorial sobre como comparar números no banco de dados.\rNo exemplo 2, os símbolos != poderiam ser usados ​​em vez de \u0026lt;\u0026gt; para fornecer a mesma saída.\nObserve o valor em [valor para comparar] em SELECT * FROM [banco de dados] WHERE [nome_coluna] [Comparador] [valor para comparar]; Observe que os números não precisam de aspas simples, mas data/palavras precisam estar entre aspas simples! Se Transporte tivesse mais 2 colunas chamadas \u0026ldquo;Name\u0026rdquo; que armazenasse o nome do veículo e \u0026ldquo;Date\u0026rdquo; que armazenasse a data (ano-mês-dia) de fabricação do veículo, nós as consultaríamos assim:\nSELECT * FROM Transportation WHERE Fuel \u0026gt; 20;\nSELECT * FROM Transportation WHERE Name = 'myrocket';\nSELECT * FROM Transportation WHERE Date \u0026gt; '2021-01-01';\nUsando o banco de dados chamado \u0026lsquo;items\u0026rsquo; com a coluna chamada \u0026lsquo;date_created\u0026rsquo;, descubra qual artefato é o Totem Lendário da Diversão: Canhão de Confete Você pode exibir o banco de dados usando o comando da atividade 1.\nDica 1: O artefato foi criado em \u0026lsquo;1738-09-12\u0026rsquo; (use aspas simples ao redor da data, a data está em ano-mês-dia).\nDica 2: Qual comparador você precisa usar para encontrar uma correspondência exata?\nDica 3: O comando correto segue de perto o exemplo acima.\nDica 4: você não precisa de aspas simples nos nomes das colunas ou dos bancos de dados neste comando.\nDica 5: Qual símbolo você precisa no final de um comando SQL?\nBÔNUS: Exiba todos os itens criados em e depois de \u0026lsquo;1738-09-12\u0026rsquo; também!\nDigite o comando aqui!\rEnter\rReset\rERRO ENTRADA INVÁLIDA\u003e\rVocê encontrou a localização do primeiro totem lendário da diversão: o canhão de confete! \u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity7/",
	"title": "Atividade 7: Use o Comando MIN",
	"tags": [],
	"description": "Use o Comando MIN",
	"content": "\rTarefa 7: Encontre a chave para chegar ao canhão de confete! Você encontrou a localização do Canhão de Confete Lendário, mas ele está trancado atrás de uma porta feita de titânio e só pode ser desbloqueado com a menor chave do planeta!\nPara ajudá-lo, a Federação Galáctica enviou-lhe um lembrete sobre como usar MIN() de uma atividade anterior.\nUsando o banco de dados chamado \u0026lsquo;items\u0026rsquo; com colunas rotuladas \u0026lsquo;object\u0026rsquo; e \u0026lsquo;height\u0026rsquo;, encontre a \u0026lsquo;key\u0026rsquo; (chave) com a menor altura. Você pode exibir todo o banco de dados usando o comando da atividade 1.\nDica 1: Lembre-se do conselho da Federação Galáctica: SELECT [coluna/propriedade da coluna] FROM [banco de dados] [condição opcional];\nDica 2: Condição: WHERE [column_name] [IN()/NOT IN()];\nDica 3: Você precisa usar IN() ou NOT IN() para mostrar a \u0026lsquo;chave\u0026rsquo;?\nDigite o comando aqui!\rEnter Reset\rERRO ENTRADA INVÁLIDA\u003e\rEscolha e arraste a chave correta para a fechadura para continuar sua aventura! A altura (height) corresponde ao número de voltas na base da chave. A chave correta será destacada em verde.\nVocê encontrou o Lendário Totem da Diversão: Canhão de Confete! \u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity8/",
	"title": "Atividade 8: Aprenda o comando LIKE",
	"tags": [],
	"description": "Aprenda o comando LIKE",
	"content": "\rTarefa 8: Encontre o Lendário Totem da Diversão: Mesa de Buffet Infinita Outro artefato que você deve encontrar é a mesa buffet infinita de diversão! As lendas dizem que os festivais nunca acontecerão sem comida com esta mesa de buffet mística.\nEste Totem foi criado um mês após o artefato anterior: o Canhão de Confete (lembrete: o Canhão de Confete foi criado em 12/09/1738).\nA Federação Galáctica enviou a você um breve tutorial sobre um comando útil: LIKE\nUsando o banco de dados chamado \u0026lsquo;items\u0026rsquo; com uma coluna chamada \u0026lsquo;date_created\u0026rsquo;, encontre a Tabela Buffet Infinita! Você pode usar o comando na atividade 1 para exibir todo o banco de dados.\nDica 1: O formato da data é Ano-Mês-Dia. Dica 2: Este Totem foi criado um mês DEPOIS do Canhão de Confete (12 de setembro de 1738). Dica 3: Qual é o padrão? Precisa procurar o mês no início, no final ou em qualquer lugar do valor? Digite o comando aqui!\rEnter Reset\rERRO ENTRADA INVÁLIDA\u003e\rVocê encontrou a localização do Lendário Totem da Diversão: Mesa de Buffet Infinita! Agora viajaremos para Capital da Diversão!\r\u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity9/",
	"title": "Atividade 9: Aprenda o Comando AVG",
	"tags": [],
	"description": "Aprenda o Comando AVG",
	"content": "\rTarefa 9: Desbloqueie a Mesa de Buffet Infinito: Você descobriu a localização da Lendária Mesa de Buffet Infinita! No entanto, está trancado atrás de uma porta que só será desbloqueado se você encontrar o número secreto.\nSua única pista é que a combinação representa os dois primeiros dígitos da população média da cidade.\nVejamos o comando AVG()!\nUsando o banco de dados \u0026lsquo;planet\u0026rsquo; e o comando AVG(), encontre os dois primeiros dígitos da \u0026lsquo;population\u0026rsquo; (população) média da cidade! Use o comando da atividade 1 para visualizar todo o banco de dados.\nDica 1: O comando segue muito de perto o exemplo.\nDica 2: Como você usa \u0026lsquo;população\u0026rsquo; com o comando AVG()?\nDigite o comando aqui!\rEnter Reset\rERRO ENTRADA INVÁLIDA\u003e\rDescubra a combinação para desbloquear o cofre! A pista para a combinação está no topo desta página!\n+ + 0\r0\r- - Check Você conseguiu, Explorador Espacial! Você encontrou o Lendário Totem da Diversão: Mesa de Buffet Infinita! \u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity10/",
	"title": "Atividade 10: Aprenda o comando SUM",
	"tags": [],
	"description": "Aprenda o comando SUM",
	"content": "\rDevolva os Lendários Totens de Diversão ao Líder Você encontrou com sucesso os dois Totens Lendários da Diversão! O Líder agradece por encontrar o tesouro perdido.\nO Líder também revela um segredo: Os Totens Lendários da Diversão não podem liberar todo o seu potencial até que sejam fundidos. Eles só podem ser mesclados pelo \u0026ldquo;Inventor\u0026rdquo;.\nSeu próximo passo é encontrar a pessoa que possa combinar os dois Totens Lendários da Diversão. O \u0026ldquo;Inventor\u0026rdquo; só aparecerá se você der uma grande festa!\nTarefa 10: Ajude os habitantes a se prepararem para a festa! Todo o planeta está convidado! Ajude os cidadãos a se prepararem para a festa descobrindo quantos convidados estarão presentes!\nVamos examinar o comando SUM!\nUsando o banco de dados \u0026lsquo;planet\u0026rsquo; e o comando SUM(), encontre o número total de convidados que comparecerão a esta festa incrível! Use o comando da atividade 1 para exibir todo o banco de dados.\nDica 1: O comando segue muito de perto o exemplo e o exemplo AVG() (tarefa anterior). Dica 2: A coluna \u0026lsquo;população\u0026rsquo; contém informações sobre o número de indivíduos por cidade. Digite o comando aqui!\rEnter Reset\rERRO ENTRADA INVÁLIDA\u003e\r\u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity11/",
	"title": "Atividade 11: Aprenda o comando GROUP BY",
	"tags": [],
	"description": "Aprenda o comando GROUP BY",
	"content": "\rFesta com os Habitantes! Você tem a tarefa de escolher qual comida servir na festa! Cada cidade tem sua comida preferida e você precisa decidir quais vai levar na festa! Vamos usar o comando GROUP BY para descobrir o que levar.\nO que o comando GROUP BY faz: Tarefa 11: Usando o banco de dados chamado \u0026lsquo;planet\u0026rsquo; com a coluna \u0026lsquo;favorite_food\u0026rsquo;, descubra o que levar para a festa! Dica: O comando segue de perto o exemplo acima.\nBÔNUS: Combine os comandos COUNT() e GROUP BY para mostrar o número de cidades que gostam de cada comida. (Revise a atividade 3 e a atividade 4 para obter ajuda)\nDigite o comando aqui!\rEnter Reset\rERRO ENTRADA INVÁLIDA\u003e\rClear Cook! Você conseguiu, Cadete Espacial! Agora os habitantes podem finalmente começar a festa! \u0026#10003;\rVocê completou a tarefa! Continue para a próxima missão!\r"
},
{
	"uri": "/pt-br/sql_workshop/activity12/",
	"title": "Atividade 12: Encontre o Inventor!",
	"tags": [],
	"description": "Encontre o Inventor!",
	"content": "\rTodos os convidados estão aqui! Precisamos encontrar o Inventor antes que seja tarde demais! A alegria é contagiante na festa! O inventor misterioso finalmente fez sua entrada triunfal. Agora, o desafio é desvendar sua identidade! Sem pistas sobre sua aparência, dependemos das dicas astutas do Líder para revelar o inventor entre nós!\nTarefa 12: Exiba todo o banco de dados chamado \u0026ldquo;pessoas\u0026rdquo; para que possamos ver todos os participantes. Dica 1: O comando que você usa deve exibir todo o banco de dados de “pessoas”. Dica 2: O comando é semelhante ao da atividade 1 (Aprenda o comando SELECT). Digite o comando aqui!\rEnter Reset\rERRO ENTRADA INVÁLIDA\rAqui estão algumas dicas para descobrir quem é o \u0026ldquo;Inventor\u0026rdquo;: A comida favorita do Inventor é Pizza.\nA matéria favorita do Inventor é Matemática.\nO filme favorito do Inventor é “Big Hero 6”.\nDigite a pessoa aqui!\rCheck! \u0026#10003;\rVocê completou a tarefa!\rVocê salvou o planeta da diversão! O Planeta da Diversão agora está protegido dos invasores graças a você! Você encontrou os Totens Lendários da Diversão perdidos e os devolveu ao seu devido lugar\re salvou os cidadãos do perigo! Os habitantes nunca esquecerão o seu ato de bondade! Parabéns cadete espacial! Você salvou com sucesso o Planeta da Diversão!\rClique no botão \"Download\" abaixo para receber seu certificado honorário!\rDownload\r"
},
{
	"uri": "/pt-br/adafruit/",
	"title": "Programando Frutas Musicais com Adafruit",
	"tags": [],
	"description": "Um guia introdutório para criar sons usando o Adafruit e aprender sobre hardware",
	"content": "Conteúdo Seções\rOs Componentes Construindo uma estação de DJ Criando o seu programa Baixando o seu programa "
},
{
	"uri": "/pt-br/security-phishing/",
	"title": "Security: Gone Phishing",
	"tags": [],
	"description": "An introductory guide to learn about phishing!",
	"content": "Table of Contents Bob goes fishing Phishing Basics A closer look More about phishing What's Phishy? Summary "
},
{
	"uri": "/pt-br/security/",
	"title": "Segurança: jogo de espionagem",
	"tags": [],
	"description": "Um guia introdutório para aprender sobre senhas e como criar uma senha forte!",
	"content": "Tabela de Conteúdos Conhecendo Alice, Bob e Eva Fundamentos de Senhas Atividade Jogo de espião Sumário "
},
{
	"uri": "/pt-br/web-basics/",
	"title": "HTML &amp; CSS: Fundamentos de Web",
	"tags": [],
	"description": "Um guia introdutório sobre como criar um site simples do zero",
	"content": "Vamos construir um site! Benji nasceu em Houston, Texas. Logo após o nascimento de Benji, um furacão devastador atingiu Houston. O furacão Harvey deslocou mais de 30 mil pessoas, incluindo a família de Benji. Benji não fala a língua humana, então não sabemos os detalhes. Tudo o que sabemos é que Benji está em busca de um lar e está empenhado em ser um bom menino por onde quer que vá. Vamos fazer um site para que possamos compartilhar suas informações e encontrar um novo lar!\nTabela de Conteúdos Tabela de Conteúdos\rNoções básicas Juntando as peças Atividade 1 – Familiarize-se com o editor online Atributos HTML Atividade 2 - CSS Media Elements Atividade 3 - Adicionando um GIF do Nuvi Atividade 4 - O exercício final Hospedar seu site Caso você esteja se perguntando "
},
{
	"uri": "/pt-br/java-datastructures/",
	"title": "Java: Estruturas de dados",
	"tags": [],
	"description": "Aprenda conceitos básicos de estruturas de dados Java",
	"content": "\rTransformando vidas através da alimentação Na NuevoEats, nosso objetivo é ajudar a capacitar e impulsionar as economias e negócios locais. Começamos ajudando os comerciantes – as empresas e restaurantes locais que criam mais de 60% dos empregos em todas as cidades. Nosso sonho é construir uma plataforma logística de última geração, criar um conjunto de serviços para aumentar as vendas de uma empresa e criar um programa que conecte os consumidores às empresas que os sustentam.\nO caminho a seguir na NuevoEats não será fácil. É por isso que procuramos pessoas de todas as origens para nos ajudar a resolver problemas aparentemente impossíveis na velocidade da luz. Aqueles com coragem e destemidos, que trabalham duro, rápido e inteligente. Aqueles que não esperam para implementar boas ideias e se sentem confortáveis ​​com as imperfeições, mas determinados a melhorar 1% a cada dia. Você acha que está preparado para o desafio? Junte-se a nós!\nTópicos\rIntrodução às estruturas de dados Configurando Pré Requisitos Loops For Arrays Introdução Operações Problema 1: Fundamentos de Array Problema 2: Arrays Avançados Arrays 2D: Menu Introdução O Cardápio Operações Problema 1: Cardápio de Exemplo ArrayList: ordenando no menu Introdução Métodos Problema 1: Fundamentos de ArrayList Filas: Recebimento de Pedidos Introdução Métodos Problema 1: Fundamentos de Queue Stacks: O motorista Introdução Métodos Problema 1: Fundamentos da Stack Hashmaps: A entrega Introdução Métodos Problema 1: Fundamentos de HashMap "
},
{
	"uri": "/pt-br/python-turtle/",
	"title": "Python: Codificando com Turtle",
	"tags": [],
	"description": "Aprenda a desenhar em uma tela com Python com Turtle",
	"content": "Introdução Bem-vindo à Colmeia Nuevo! Você chegou na hora certa para ajudar nosso novo bebê abelha Alex.\nAlex mora em um país chamado Ilhas Tartarugas. Os residentes das Ilhas Tartarugas falam uma linguagem chamada Python. Usaremos Python para ensinar Alex como viver em uma colmeia. Você está pronto para o desafio? Neste tutorial, aprenderemos como usar a linguagem Python para ajudar Alex a se tornar uma abelha ocupada!\nTabela de Conteúdos Seções\rUsando Trinket Os Fundamentos – Desenhando uma linha colorida Atividade 1 – Desenhar um quadrado Atividade 2 – Simplificando código com loops “Atividade 3 – Desenhando um hexágono” Atividade 4 – Simplificando código com funções Atividade 5 – Desenhando um favo de mel Parte 2 - Construindo uma Flor Mandala “Atividade 6 – Movendo a tartaruga” Atividade 7 - Desenhando uma figura 8 Atividade 8 – Criando uma flor mandala Atividade 9 – Colorindo sua flor mandala Atividade 10 – Randomizando a cor das pétalas da sua mandala Atividade 11 – Agora é a sua vez! "
},
{
	"uri": "/pt-br/python-earsketch/",
	"title": "Python: crie música com EarSketch",
	"tags": [],
	"description": "Crie música usando Python e EarSketch",
	"content": "Vamos fazer música! Bem-vindo a este guia introdutório sobre como fazer música usando EarSketch\re Python. Para ir para uma atividade específica, você pode clicar no link da seção na barra de navegação à esquerda da página.\nConheça DJ Nuvi Nuvi tem novos fones de ouvido! Você consegue encontrar o seu? Você foi contatado para fazer a próxima mixtape de sucesso do Nuvi, mas quando você chega ao estúdio, Nuvi diz que seu próximo projeto será produzido todo em código. Isso é algo que nunca foi feito antes. Você está à altura do desafio? Olhe ao seu redor para encontrar seus fones de ouvido e prepare-se para se juntar a ele!\nAntes de começarmos, certifique-se de que seus fones de ouvido estejam funcionando. Tente reproduzir o seguinte áudio. O que você ouve?!\nTeste o áudio para ver se o seu navegador suporta o elemento de áudio. Se você não conseguir reproduzir o áudio, provavelmente significa que seu navegador não oferece suporte para isso.\raudio element.\rTabela de Conteúdos Tabela de Conteúdos\rFundamentos de Música Fundamentos de `Python Introdução ao Earsketch Atividade 1 – Defina o andamento e adicione sons Atividade 2 – Faça uma música! Atividade 3 - Organize sua música usando funções Atividade 4 - Adicione efeitos à sua música Atividade 5 - Use efeitos para fade in "
},
{
	"uri": "/pt-br/guidelines/",
	"title": "Diretrizes para Colaboradores do Workshop",
	"tags": [],
	"description": "Agradecemos suas contribuições. Algumas das melhores formas de contribuir incluem testar funcionalidades, relatar bugs e criar ou aprimorar workshops.",
	"content": "Agradecemos suas contribuições! Você pode ajudar de diversas maneiras, como testando novos recursos, identificando e relatando bugs ou desenvolvendo novos workshops.\nPrimeiros Passos Identificou um erro de digitação ou bug? Você pode registrá-lo como um problema no GitHub.\nDeseja contribuir de forma mais ativa? Consulte nossos problemas que precisam de atenção para encontrar oportunidades de colaboração. Para começar, siga estas diretrizes:\nEstrutura do Site\rGuia de Introdução\rPara Criadores de Conteúdo Se deseja criar ou modificar workshops, siga os guias da seção \u0026ldquo;Primeiros Passos\u0026rdquo; e, em seguida, consulte:\nDiretrizes de Formatação\rCriação de Novos Workshops\rPara Desenvolvedores Web Caso tenha interesse em aprimorar este site, siga os guias da seção \u0026ldquo;Primeiros Passos\u0026rdquo; e, posteriormente, consulte:\nDiretrizes Web Developer\r"
},
{
	"uri": "/pt-br/",
	"title": "Minicursos Nuevo Foundation",
	"tags": [],
	"description": "",
	"content": "Projetos do Minicurso Análise de Supply Chain\rAprenda como usar conceitos STEM, como otimização, para ajudar a administrar sua biscoiteria!\nArduino: Jogo de luz\rConstrua um microcontrolador Arduino\nC\u0026#43;\u0026#43;: mensagens secretas\rAprenda C\u0026#43;\u0026#43; e crie suas próprias mensagens secretas\nDiretrizes para Colaboradores do Workshop\rAgradecemos suas contribuições. Algumas das melhores formas de contribuir incluem testar funcionalidades, relatar bugs e criar ou aprimorar workshops.\nHTML \u0026amp; CSS: Fundamentos de Web\rUm guia introdutório sobre como criar um site simples do zero\nJava: Estruturas de dados\rAprenda conceitos básicos de estruturas de dados Java\nJava: Fundamentos\rUma introdução aos fundamentos da linguagem de programação Java\nJava: Jogo da Velha\rAprenda sobre variáveis, funções e condicionais enquanto constrói um aplicativo Android do Jogo da Velha\nJS: JSappyBird\rCrie seu próprio jogo JSappyBird\nMinicurso básico de Linux\rUm guia introdutório sobre os comandos básicos do Linux.\nProgramando Frutas Musicais com Adafruit\rUm guia introdutório para criar sons usando o Adafruit e aprender sobre hardware\nPython: Codificando com Turtle\rAprenda a desenhar em uma tela com Python com Turtle\nPython: crie música com EarSketch\rCrie música usando Python e EarSketch\nPython: Fundamentos\rAprenda conceitos básicos de uso da linguagem de programação Python\nSecurity: Gone Phishing\rAn introductory guide to learn about phishing!\nSegurança: jogo de espionagem\rUm guia introdutório para aprender sobre senhas e como criar uma senha forte!\nSQL: Salvando a Galáxia\rAprendendo comandos SQL básicos\nUnity: Jogo espacial\rAprenda o básico do Unity criando um jogo espacial\nColabore conosco Gostaria de nos ajudar a melhorar nossos minicursos ou nosso site? Clique aqui: Guia de contribuição para minicursos\r!\n"
},
{
	"uri": "/pt-br/java-datastructures/img/lab/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "\u003c!doctype html\u003e\rCoisa SenhaEnterar\rColoque sua senha.\rFaça com que sua senha tenha pelo menos 8 caracteres e inclua um caractere especial :\n--\u003e\r"
},
{
	"uri": "/pt-br/java-datastructures/lab/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "\u003c!doctype html\u003e\rCoisa de SenhaEntrar\rColoque sua senha.\rFaça com que sua senha tenha pelo menos 8 caracteres e inclua um caractere especial :\n--\u003e\r"
},
{
	"uri": "/pt-br/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/pt-br/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]