<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTML &amp; CSS: 入門網站設計 on Nuevo Foundation Workshops</title>
    <link>/zh-hant/web-basics/</link>
    <description>Recent content in HTML &amp; CSS: 入門網站設計 on Nuevo Foundation Workshops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hant</language>
    <lastBuildDate>Tue, 03 Sep 2019 17:53:41 -0700</lastBuildDate><atom:link href="/zh-hant/web-basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基礎知識</title>
      <link>/zh-hant/web-basics/basics/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/basics/</guid>
      <description>什麼是網站? 網站只是可以在網路上找到的頁面。 當你在地址欄中輸入網站地址時，網站會通過瀏覽器顯示。
網站的各個部分 常見的網站元素包括資訊欄，搜索欄和聯繫資訊。
網站設計 製作網站的第一步是確定我們想要的元素以及它們的外觀。 這個過程稱為版面設計，它只是將不同部分組合在一起的粗略草圖。 有很多工具可以幫助你做到這一點，但是最早的也是最受歡迎的工具之一就是筆和紙。 這是我的草圖：
這個草圖只是一個準則。 當我們正式設計網站時，可以感變原來的草圖。 一個畫草圖的準則是盡可能的簡略些。</description>
    </item>
    
    <item>
      <title>組合網站的各個部分</title>
      <link>/zh-hant/web-basics/putting-together/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/putting-together/</guid>
      <description>為了使你的瀏覽器了解你網站的每個網站元素是什麼，我們需要使用HTML標籤(label)對其進行標記。 HTML又稱做超文本標記語言(HyperText Markup Language)。 標籤(label)是被符號 &amp;lt;, &amp;gt; 包圍的單詞。 例如，&amp;lt;img&amp;gt; 標記告訴你的瀏覽器 “這是個圖像”。 &amp;lt;button&amp;gt; 標記告訴它 “這是一個按鈕”。
標籤可以用來組織你的網頁！ 下圖概述了基本網頁的結構。 &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;通常包含其他使用的資訊庫(library)和頁面標題，而&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;包含大部分顯示的內容。
大多數標籤都需要一個開始標籤和一個結束標籤。 例如，你將看到所有頁面的頂部都有&amp;lt;html&amp;gt;開頭標籤，而結尾有&amp;lt;/html&amp;gt;結束標籤。 這告訴瀏覽器HTML元素在何處開始和在何處結束。 將標籤視為引號； 例如，電腦理解在&amp;lt;html&amp;gt;和&amp;lt;/html&amp;gt;標記之間的所有內容都是HTML網站的一部分。
有一些標籤（例如圖像標籤&amp;lt;img&amp;gt;）是 self-closing，這表示它們僅需要一個開始標籤，而無需關閉標籤。
這是一個例子：
See the Pen HTML Basics by Deliana Escobari (@Sunny-Dee)on CodePen.</description>
    </item>
    
    <item>
      <title>挑戰1 - 創建一個基本網站</title>
      <link>/zh-hant/web-basics/activity-1/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/activity-1/</guid>
      <description>挑戰1 - 創建一個基本網站 打開網絡編輯器 CodePen（單擊下面的 “嘗試一下！”按鈕） 使用標題標籤(&amp;lt;head&amp;gt;)添加標題，使用段落標籤(&amp;lt;p&amp;gt;)寫有關Benji的段落 如果有時間：寫一份Benji最喜歡的食物清單：火雞，花生醬和奶酪 嘗試一下！
使用此參考圖可以自己嘗試一些HTML標籤。
標籤 說明 例子 &amp;lt;html&amp;gt;&amp;lt;/html&amp;gt; 描述一個HTML文檔。 任何網站都必須以開始標記開頭，並以結束標記結尾。 上述的網絡編輯器 CodePen 有例子。 &amp;lt;!-- --&amp;gt; 描述評論。 註釋供其他網站設計人員查看，但不會顯示在網站上。 &amp;lt;!-- This line will not show in the browser --&amp;gt; &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt; 包含所有向瀏覽器提供信息以正確顯示網站的HTML元素。 &amp;lt;head&amp;gt; 和 &amp;lt;/head&amp;gt; 之間的HTML元素不會顯示。 上述的網絡編輯器 CodePen 有例子。 &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; 包含用於命名瀏覽器選項卡的網站標題。 &amp;lt;head&amp;gt;
&amp;lt;title&amp;gt; My Website &amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt; &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt; 包含頁面中顯示的所有HTML元素，例如文本和圖片。 上述的網絡編輯器 CodePen 有例子。 &amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;
&amp;hellip; &amp;lt;h6&amp;gt;&amp;lt;/h6&amp;gt; 定義標題/標題。 &amp;lt;h1&amp;gt;定義最重要（最大）的標題/標題，而&amp;lt;h6&amp;gt;定義最不重要（最小）的標題。 &amp;lt;h1&amp;gt;This will be a big title&amp;lt;/h1&amp;gt;
&amp;lt;h4&amp;gt;This will be a smaller title&amp;lt;/h4&amp;gt; &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt; 描述一個段落。 &amp;lt;p&amp;gt;Dogs evolved to love humans.</description>
    </item>
    
    <item>
      <title>HTML屬性</title>
      <link>/zh-hant/web-basics/html-attributes/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/html-attributes/</guid>
      <description>每個標籤還可以具有其他信息，例如可以更改元素的樣式屬性(style attrubute)。 我們可以使用一些屬性來更改元素的視覺外觀，例如大小，顏色和文本字體。 所有屬性的格式為：屬性=“內容”。 例如，我們可以使用以下代碼將段落的顏色更改為紅色：&amp;lt;p style=&amp;quot;color:red&amp;quot;&amp;gt;This text is red&amp;lt;/p&amp;gt;.
圖像標籤需要照片的位置，因此我們需要標籤內的屬性來告訴瀏覽器從何處獲取圖像。
這是一個例子：
結果如下： </description>
    </item>
    
    <item>
      <title>挑戰2 - CSS</title>
      <link>/zh-hant/web-basics/activity-2/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/activity-2/</guid>
      <description>用CSS設計網站的樣式 HTML標籤告訴瀏覽器要使用哪些網站元素（標題，照片，表格，等）。但是我們還需要告訴它如何顯示和擺放這些元素。我們可能希望標題位於中間或網站的右側; 我們也可能想要放張圖片再右側。我們可以通過兩種方式來設計網站的樣式：
使用HTML屬性 使用階層式樣式表 (CSS) 階層式樣式表（CSS） 雖然HTML屬性很容易使用，但它們很快就會變得混亂。如果我們希望做很多樣式設計，HTML元素可能會變得很長且難以閱讀。此外，如果我們想用相同的方式設置許多元素的樣式呢，我們將不得不複製每個元素的所有屬性。這樣不但效率不高並且容易出錯。對於設計大多網站樣式，最好使用CSS。
CSS文件與HTML標記緊密配合。每個HTML標籤可以具有一個class屬性或一個id有助於標識每個元素的屬性。不同的元素可以有相同的類（class），一個元素可以有多個不同的類(class)。但是，一個元素只能有一個單一的id，並且該id無法在元素之間共享。CSS文件會使用這些屬性來顯示與 class或id相關的網站元素。
以下是一的例子：
See the Pen Styling it up by Deliana Escobari (@Sunny-Dee) on CodePen.
單擊左上角的 “HTML” 選項以查看HTML程式編碼 ，然後單擊 “CSS” 選項以查看CSS 程式編碼。
讓我們看一下HTML代碼。找具有屬性&amp;quot;info&amp;quot;的標籤&amp;lt;div&amp;gt;，看起來像&amp;lt;div id=&amp;quot;info&amp;quot;&amp;gt;。通過 &amp;lt;div&amp;gt; 的 id，我們可以使用CSS來為這個HTML元素指定樣式。 切換到CSS文件。在這，我們還可以為特定類型的所有元素賦予樣式。例如，我們可以使用CSS為所有&amp;lt;header&amp;gt;元素賦予相同的樣式。在&amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;中，我們告訴瀏覽器為所有標題(header)著#0097A7色（藍綠色）。 讓我們討論一下CSS的語法。
首先，如果要為所有具有相同標籤的元素（例如: &amp;lt;header&amp;gt;）設置統一樣式，只需輸入名稱即可（例如: header）。 如果要使用class或id設置元素樣式，請分別在 class 或 id 名稱前放置 . 或 #。 然後，對於要更改的每個屬性，使用這個格式：屬性名稱(attribute-name)：值 (value) 並且以 ; 結尾。所有這些樣式都應由 { 和 } 包圍。 本教程中無法涵蓋所有樣式元素。上網查詢，如果你不確定如何使用CSS完成所需的樣式。
儘管CSS可以識別140種顏色名稱，例如“green(綠色)”，“red(紅色)” 和 “blue(藍色)”，但這仍然是有限制性的。例如，如果我們想要深綠色或稍淺的綠色怎麼辦？為此，我們可以引用十六進製或RGB形式的顏色。檢查此鏈接以查看顏色及其對應的十六進制形式。
添加新字體 讓我們從網上導入Heebo字體。首先，複製貼上以下文字於CSS文件頂部: @import url(&#39;https://fonts.googleapis.com/css?family=Heebo|Open+Sans&#39;); 然後，我們將body標籤設定適用此字體。由於body標籤包含所有HTML元素，所有元素都會使用此字體。 請注意，花括號內的格式為： 名稱(name): 值(value);
@import url（&#39; https://fonts.</description>
    </item>
    
    <item>
      <title>媒體元素</title>
      <link>/zh-hant/web-basics/media-elements/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/media-elements/</guid>
      <description>添加GIF GIF代表“ 圖形交換格式”，它是一種圖像文件。GIF和一般圖像的區別是該文件包含許多圖像。當顯示在瀏覽器中時，圖像將按順序播放，類似於手翻書。
新增影片 除了文字和圖像，我們也可以增加視頻。視頻文件非常大，因此最好上傳此視頻於網路，例如YouTube。一旦上傳到YouTube，我們將如何播放它？我們將使用一個稱為iframe的特殊元素。
iframe會顯示其他網站的HTML。這就像一個窗口，你可以在你的網站中查看其他網站發生的情況。此過程稱為嵌入（embedding）。
例如，下面的視頻是Benji Instragram的iframe：
View this post on Instagram Push yourself to try new things! 🍉 I stick to the paleo diet most days (usually just the meat part) but on occasion I go for something crazy
A post shared by Benji Escobari Marquez (@benjimite_thegudboi) on Aug 25, 2018 at 10:05pm PDT
許多網站都提供iframe嵌入你的網站。例如，以下是查找YouTube視頻的iframe代碼的方法：
iframe 例子 複製以下代碼：
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34; src=&amp;#34;https://www.youtube.com/embed/lQsqEBSGdyc&amp;#34; frameborder=&amp;#34;0&amp;#34; allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&amp;#34; allowfullscreen&amp;gt; &amp;lt;/iframe&amp;gt; 將其黏貼到你的 Code Pen 上，它將顯示如下：</description>
    </item>
    
    <item>
      <title>挑戰3 - 添加Nuvi的GIF</title>
      <link>/zh-hant/web-basics/activity-3/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/activity-3/</guid>
      <description> 點擊此鏈接以查看可用的GIF 單擊你喜歡的一個，然後選擇“嵌入”（Embed 從 “GIF嵌入代碼”（GIF Embed Code）下方的白框中復制代碼
將其貼上於標籤內 嘗試一下！ </description>
    </item>
    
    <item>
      <title>挑戰4 - 添加聯繫表格</title>
      <link>/zh-hant/web-basics/activity-4/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/activity-4/</guid>
      <description>添加聯繫表格 最後，我們將添加聯繫表格，以便人們對Benji感興趣時與我們聯繫。
大多數瀏覽器不支持直接從聯繫表單發送電子郵件，因為用戶能輕易發送垃圾郵件。垃圾郵件是通過網路發送的不相關或不適當的郵件。因此，要發送表單，我們將使用 FormSpree 的免費服務。如果我們希望聯繫表中的消息發送到我們的電子郵件中，我們首先需要通過FormSpree進行確認。這種確認方法可以防止不良行為者發送垃圾郵件。
See the Pen Contact Form by Deliana Escobari (@Sunny-Dee)on CodePen.
挑戰4 單擊自己“嘗試一下！”按鈕打開編輯器 更改&amp;lt;YOUR EMAIL HERE!&amp;gt;成為你的個人電子郵件或者使用email@nuevofoundation.org 嘗試發送訊息 將任何樣式添加到窗體。例如，更改字體或顏色 嘗試一下！</description>
    </item>
    
    <item>
      <title>挑戰5 - 最後的挑戰</title>
      <link>/zh-hant/web-basics/activity-5/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/activity-5/</guid>
      <description>使用你所學的知識，讓我們嘗試創建一個關於你的網站！嘗試使用以下某些部分或全部：
標題和段落標籤 不同的字體 不同的顏色 將圖片添加到你的網站 一個列表 加入gif或視頻 嘗試一下！</description>
    </item>
    
    <item>
      <title>託管你的網站</title>
      <link>/zh-hant/web-basics/hosting/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/hosting/</guid>
      <description>在網上託管你的網站！ 現在，你已經創建了自己的個人網站，讓我們將其託管在網路上，以便每個人都可以點閱它！你將需要一個GitHub帳戶。如果你沒有，請在此處創建一個。
創建帳戶並驗證電子郵件地址後，你將進入此頁面。
現在，你將需要創建一個新的存儲庫（repository）來存儲網站的內容！將存儲庫視為一個巨大的文件夾，可以為給定項目存儲許多其他文件和文件夾。你可以通過選擇 “啟動項目(Start a Project)” 或 “創建新存儲庫(Create a new repository)” 來創建一個。需要牢記以下兩個非常重要的事情：
你的存儲庫名稱不能有任何空格，但是你可以使用破折號(&amp;ndash;)或大寫字母來仿造空格！ 選中 “Initialize this repository with a README” 框 恭喜你！你已經創建了第一個存儲庫！在此處上傳屬於你網站的所有文件和文件夾。現在，當你轉到個人資料頁面時，新的存儲庫現在將顯示在“存儲庫（Repositories）”下。
上傳了為網站創建的所有內容後，回該存儲庫並選擇 “設置（Settings）”。
在此網頁，一直向下滾動到GitHub Pages部分。
將Source 從“None” 更改為 ”master branch”。然後點擊“ GitHub Pages”頂部的鏈接（在下面的示例中，該鏈接為https://exampleaccount1234.github.io/myFirstSite/）。現在，任何人都可以使用此網址訪問你的網站！</description>
    </item>
    
    <item>
      <title>如果你想知道</title>
      <link>/zh-hant/web-basics/conclusion/</link>
      <pubDate>Tue, 03 Sep 2019 17:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/conclusion/</guid>
      <description>你可能會擔心Benji，但我們很高興地告訴你，他通過自己的網站找到了自己的家。現在，Benji 是一個有家庭快樂的小狗。</description>
    </item>
    
    <item>
      <title>Answer Key - Web Basics</title>
      <link>/zh-hant/web-basics/answer-key/</link>
      <pubDate>Sat, 28 Mar 2020 12:53:41 -0700</pubDate>
      
      <guid>/zh-hant/web-basics/answer-key/</guid>
      <description>Special note: This curriculum allows students to be creative. The below is just an example of what they can do, please use your best judgement and ask for guidance if needed. The answer key provided here is fairly long because we are including snippets of full HTML for context.
When a student clicks on the &amp;lsquo;Try it yourself!&amp;rsquo; it&amp;rsquo;ll open a new tab with some of the HTML code (and CSS code) already scaffolded.</description>
    </item>
    
  </channel>
</rss>
