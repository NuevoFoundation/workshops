<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arduino: Light game on Nuevo Foundation Workshops</title>
    <link>/arduino/</link>
    <description>Recent content in Arduino: Light game on Nuevo Foundation Workshops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 27 Jul 2020 14:04:59 -0700</lastBuildDate><atom:link href="/arduino/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting up the PC</title>
      <link>/arduino/setting-up-the-pc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/arduino/setting-up-the-pc/</guid>
      <description>Getting to know the Arduino IDE Download and install the Arduino IDE from:
the Microsoft Store (quicker install) - https://www.microsoft.com/store/productId/9NBLGGH4RSD8or from the Arduino website https://www.arduino.cc/en/Main/Software(pick the latest version) Once the software has been installed on your computer, go ahead and open it up. This is the Arduino IDE and is the place where all the programming will happen. Take some time to look around and get comfortable with it.</description>
    </item>
    
    <item>
      <title>Activity 1: Blinking LED</title>
      <link>/arduino/activity-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/arduino/activity-1/</guid>
      <description>Wiring Our Blinking LED For your introduction to this system, we&amp;rsquo;re going to turn an LED on and OFF. From this we can get the basics of circuitry and how our program can run and manipulate components.
Attach the long lead (anode) of your LED to pin 25J and the short lead (cathode) anywhere in the blue [-] line. Attach a 220 resistor with one leg in 25H and the other anywhere in the red [+] line.</description>
    </item>
    
    <item>
      <title>Activity 2 -  Joystick with Serial Output</title>
      <link>/arduino/activity-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/arduino/activity-2/</guid>
      <description>Wiring the Joystick Now that you understand how we can get the system to provide signals from the program (outputs) and use those to control LEDs, let’s look at how we can get dynamic inputs into the system. For this activity we will use a joystick input, similar to those used in video game consoles.
Attach one end of a jumper wire to GND on the joystick and the other to GND on the Elegoo.</description>
    </item>
    
    <item>
      <title>Activity 3 - Joystick &amp; LEDs</title>
      <link>/arduino/activity-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/arduino/activity-3/</guid>
      <description>Activity 3 - Joystick + LEDs Let’s combine activity 1 and activity 2. Let’s control LEDs based on the input from the joystick.
Attach one end of a jumper wire to GND on the joystick and the other to 7X on the Breadboard. Attach one end of a jumper wire to +5V on the joystick and the other to 5W on the Breadboard. Attach one end of a jumper wire to VRx on the joystick and the other to A0 on the Elegoo.</description>
    </item>
    
    <item>
      <title>Activity 4 - LCD Display</title>
      <link>/arduino/activity-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/arduino/activity-4/</guid>
      <description>Wiring Diagram Now that you have mastered outputting signals to LEDs let’s look at displaying text with a simple display. Only 1 resistor (5K) is used to limit the brightness of the display. Try wiring this per the diagram without specific instructions.
The Code: //www.elegoo.com //2016.12.9 /* LiquidCrystal Library - Hello World Demonstrates the use a 16x2 LCD display. The LiquidCrystal library works with all LCD displays that are compatible with the Hitachi HD44780 driver.</description>
    </item>
    
    <item>
      <title>Appendix</title>
      <link>/arduino/appendix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/arduino/appendix/</guid>
      <description>Appendix The components, in detail Imagine our circuit is a play. Before the final performance in front of an audience, we need a place to practice. This is where the breadboard comes in.
Breadboards are simple platforms that we can use to build temporary circuits for testing and debugging before finalizing our design and permanently soldering (welding) it together. Breadboards allow us to easily add, remove, or reposition components. Below on the left is an image of a breadboard.</description>
    </item>
    
  </channel>
</rss>
