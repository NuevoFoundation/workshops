[{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/","title":"Minicurso básico de Linux","tags":[],"description":"Um guia introdutório sobre os comandos básicos do Linux.","content":"Antes de prosseguirmos, vamos aos requisitos necessários para completar nosso curso com sucesso:\n Um computador que não seja do tipo Chromebook Seu computador precisa ter pelo menos 3GB de memória livres Uma boa conexão com a internet para baixar os programas necessários:  ~10 minutos para baixar VirtualBox ~30 minutos para baixar a imagem de uma máquina virtual   \n  Nossas boas-vindas!  Que bom ter você com a gente! Eu sou Nuvi, uma agente do Club Secreto Nuevo (CSN). Infelizmente, nós acabamos de perceber que alguém pode ter invadido o nosso computador. Precisamos da sua ajuda para descobrir o que está acontecendo. As nossas mensagens secretas estão em risco e alguém pode ter vazado informações importantes!   Um Sistema Operacional (OS) é um software que atua como uma interface entre você e o hardware do seu computador. Todo computador deve ter pelo menos um sistema operacional para executar outros programas, como o seu navegador preferido! O sistema operacional ajuda você a se comunicar com seu computador sem saber falar o idioma dos computadores.\nO Microsoft Windows é o sistema operacional com o qual você provavelmente está mais familiarizado em casa. Outro comum que você pode ter visto é o da Apple, o macOS. Ainda temos o sistema operacional Linux! Este é o favorito dos desenvolvedores por sua versatilidade. Existem muitas outras opções por aí, mas hoje usaremos um sistema operacional baseado em Linux, chamado Kali Linux. É um sistema operacional popular entre especialistas em segurança e hackers!\nExistem diferenças e particularidades entre Windows, macOS e Linux. O Windows é perfeito para multimídia e jogos! O macOS fica em algum lugar entre o Windows e o Linux. Embora também seja excelente para multimídia, mas infelizmente não suporta todos os jogos. O Linux geralmente é melhor para programação e hospedagem de servidores.\nConteúdo Seções  Usando Máquinas Virtuais - Parte 1 \n   Usando Máquinas Virtuais - Parte 2 \n   Iniciando uma Máquina Virtual \n   Atividade 1 - Identificando Usuários no Linux \n   Atividade 2 - Identificando a Localização do Usuário \n   Atividade 3 - Explorando o diretório atual \n   Atividade 4 - Praticando anotações \n   Atividade 5 - Protegendo as permissões de usuários \n   Atividade 6 - Um arquivo corrompido \n   Atividade 7 - O que há de errado com o arquivo? \n   Atividade 8 - Verificando diferenças entre arquivos \n   Atividade 9 - Removendo arquivos maliciosos \n   Atividade 10 - Aprendendo a mover e substituir arquivos \n   Atividade 11 - Guardando e protegendo arquivos \n   Resoluções - Minicurso Básico de Linux \n   Finalizando \n    "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/vbox-setup/","title":"Usando Máquinas Virtuais - Parte 1","tags":[],"description":"Um guia introdutório sobre máquinas virtuais","content":"  Estamos fornecendo a você uma cópia do nosso computador invadido. Ela é chamada de máquina virtual. Agradecemos a sua ajuda!   O que é uma máquina virtual? Uma máquina virtual (também chamada de VM) é um arquivo de computador (chamado de imagem), que se comporta como um computador real. Em outras palavras, é um computador dentro de um computador. Ele é executado em uma janela, como qualquer outro programa. A VM oferece a mesma experiência como se estivéssemos em um computador comum.\nA VM é isolada do resto do sistema, o que significa que o software dentro de uma VM não pode afetar o próprio computador. Isso produz um ambiente ideal para podermos testar outros sistemas operacionais, acessar dados infectados por vírus e criar novos softwares ou aplicativos.\n O que é VirtualBox? VirtualBox é um software de virtualização, também chamado de hypervisor. Ele permite que o nosso computador rode máquinas virtuais.\nComo podemos baixar o VirtualBox? Vamos baixar o VirtualBox usando este link:\nBaixar  Se você estiver usando Windows: selecione \u0026ldquo;hosts do Windows\u0026rdquo; Se você estiver usando macOS: selecione \u0026ldquo;hosts do OS X\u0026rdquo; Se você estiver usando outro sistema, recomendamos o uso do Windows ou macOS para este minicurso. Qualquer outra coisa está além do escopo deste minicurso.\nEm seguida, vamos executar o programa que acabamos de baixar.\nVamos manter as opções padrões. Clique em \u0026ldquo;Avançar\u0026rdquo; para prosseguir.\nObserve que há algumas opções na terceira página. Vamos clicar na primeira opção. Caso um aviso similar ao abaixo apareça, não se preocupe! Esse tipo de aviso é esperado. Clique em \u0026ldquo;Yes\u0026rdquo; para prosseguir. Agora, clique em \u0026ldquo;Install\u0026rdquo; para concluir a configuração. Por fim, vamos marcar a caixa de seleção para iniciar o VirtualBox após concluir a instalação.  Parabéns! Nós terminamos a instalação do VirtualBox. Agora avançaremos para o preparo do nosso ambiente de investigações!   "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/adafruit/the-components/","title":"Os Componentes","tags":[],"description":"","content":"Todos os componentes que usaremos para o projeto estão listados abaixo. Certifique-se de adquirir todos os materiais necessários antes de começar o projeto:\n Uma Placa Arduíno Adafruit Cabo Micro USB para USB 2 conectores do tipo garra de jacaré, em qualquer cor Duas laranjas  "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/vm-import-setup/","title":"Usando Máquinas Virtuais - Parte 2","tags":[],"description":"Continuando o guia introdutório sobre máquinas virtuais","content":"  Excelente trabalho na preparação do nosso ambiente de trabalho! Agora vamos executar a imagem do nosso computador invadido como uma VM.   O que é uma imagem? Imagens vêm em uma variedade de tipos. Temos fotografias, que são imagens. E as imagens do nosso computador que também são muito semelhantes. Ambas são cópias de coisas de um único ponto no tempo. Nesse minicurso trabalharemos com uma cópia de um computador que está agindo de forma estranha. Mas não se preocupe, isso não vai prejudicar o seu computador! Lembre-se que o SO estará isolado, o que significa que não pode afetar seu computador.\nConfigurando o Kali Linux Baixando a imagem Imagens do sistema operacional facilitam o envio de cópias exatas de computadores. O VirtualBox usa a extensão de arquivo .ova para suas imagens. Isso assemelha-se a maneira como salvamos nossos documentos como um arquivo .docx e fotografias como .png.\nAgora, vamos baixar a nossa cópia do computador infectado! Clique no link abaixo para fazer o download. A maioria das imagens do sistema operacional é grande (~8 GB), mas a nossa é de apenas ~3 GB. Mesmo assim, o download ainda pode demorar alguns minutos.\nBaixar  Importando uma Máquina Virtual Agora que baixamos a nossa imagem da máquina infectada, é hora de configurá-la!\nPasso 1 No aplicativo VirtualBox, podemos importar as nossas imagens. Vamos clicar no botão \u0026ldquo;Import\u0026rdquo; para começar!\nPasso 2 A imagem que queremos importar, aqui chamada de appliance, será o arquivo .ova que você baixou anteriormente. Clique na pequena pasta com um símbolo de acento circunflexo verde. Isso abrirá uma janela para que você possa encontrar e selecionar a nossa imagem de extensão .ova.\nPasso 3 Agora que você selecionou o arquivo de imagem .ova. Clique em \u0026ldquo;Abrir\u0026quot;. Em seguida, clique em \u0026ldquo;Next\u0026rdquo; na tela \u0026ldquo;Appliance to Import\u0026quot;.\nPasso 4 Agora vamos ao último passo! No campo \u0026ldquo;Name\u0026quot;, nomeie a nossa imagem para algo de sua escolha. Ela é a sua própria VM! Certifique-se de que a opção \u0026ldquo;USB Controller\u0026rdquo; não esteja selecionada. Certifique-se de desmarcá-la. Em seguida, para a campo \u0026ldquo;MAC Address Policy\u0026quot;, certifique-se de que a opção \u0026ldquo;Generate new MAC addresses for all network adapters\u0026rdquo; esteja selecionada. Por fim, clique em \u0026ldquo;Import\u0026quot;!\nObservação: será exibida uma janela informando o tempo necessário para concluir a importação. Normalmente, isso leva cerca de 5 minutos, mas pode demorar um pouco mais dependendo do seu computador.\n  Excelente! Agora que importamos a nossa imagem infectada, vamos executá-la para começarmos a nossa investigação.   "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/adafruit/building-the-dj-station/","title":"Construindo uma estação de DJ","tags":[],"description":"","content":"Ligando as laranjas Pegue uma laranja e um de seus fios. Abra uma das garras jacaré e insira a parte inferior na laranja, deixando a parte superior da garra visível para fora. Será mais fácil de fazer se você inseri-lo no parte central inferior da laranja. O mesmo local onde você começaria a descascar se fosse comer a laranja.\nRepita o mesmo para a segunda laranja usando o outro fio. Conecte uma laranja a entrada A1 e a outra a entrada A2. Agora que tudo está conectado, sua laranja ficará assim! Usando o cabo USB, conecte o lado pequeno a placa arduíno. Ele ficará conectado a porta prateada. Agora vamos criar o nosso programa antes de conectar a placa arduíno ao computador! Atenção: Certifique-se de que seu computador está MUDO antes de começar.\n"},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/launch-vm/","title":"Iniciando uma Máquina Virtual","tags":[],"description":"Continuação do guia introdutório sobre máquinas virtuais","content":"  Agora que tudo está instalado, vamos iniciar a nossa máquina virtual!   Iniciando uma Máquina Virtual Iniciar uma VM é bem simples no VirtualBox. Basta clicar duas vezes na máquina virtual que criamos na etapa anterior e pronto!\nÀ medida que a máquina virtual está sendo iniciada, poderemos notar alguns avisos como na imagem a seguir. É seguro ignorá-los.\nAcessando a nossa Máquina Virtual Primeiro precisaremos acessar a nossa máquina virtual. Usaremos estas credenciais para começar!\n   Usuário Senha     nuvi nuevo123    Esta não é uma forma segura de compartilhar senhas! Ela destina-se apenas aos propósitos deste minicurso. Não use senhas simples suas contas pessoais nem as compartilhe com ninguém!\nAprenderemos mais sobre senhas em nosso minicurso de segurança!\nMinicurso de Segurança  O Terminal Em todas as nossas atividades, estaremos praticando as nossas habilidades em linha de comando (CLI). É bom aprender a CLI porque pode ser mais rápido e eficiente do que usar uma GUI. GUI é a interface gráfica de usuário, que é provavelmente o que você mais costuma fazer em um computador. Agora vamos abrir o nosso terminal, que é outro nome para a CLI. Em Kali este aplicativo é chamado de \u0026ldquo;Emulador de Terminal\u0026quot;.\nApós clicar no botão, o terminal deverá abrir como na imagem abaixo. Uma vez aberto, você finalmente está pronto para desenvolver suas habilidades sobre o Linux!\n"},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/adafruit/creating-the-program/","title":"Criando o seu programa","tags":[],"description":"","content":"Abra seu navegador de internet favorito (como Edge, Firefox, Google Chrome, Brave) e acesse https://aka.ms/oranges. Sua tela ficará assim:\nDefinindo as variáveis Hoje vamos usar laranjas para dizer ao nosso Adafruit quando fazer barulho. A primeira coisa que precisamos fazer é dar um nome para cada laranja, possibilitando ao nosso computador saber onde procurar o que elas estão dizendo. Fazemos a primeira parte definindo uma variável. Clique na seção que diz VARIABLES ou variáveis em português. Ela é de cor salmão e pode ser encontrado na sétima posição de cima para baixo da lista de botões. Em seguida, defina uma variável clicando em Make a variable, dando-lhe um nome. Faça isso duas vezes. Aqui nomeamos as nossas variáveis como analog1 e analog2, mas você pode chamá-las como quiser.\nInterpretando as entradas Agora que temos um nome que nosso computador conhece para cada uma das nossas laranjas, vamos deixar o Adafruit saber como entendê-las. Existem dois tipos de entradas, digital e analógica. Interruptores de luz e botões de energia são exemplos de entradas digitais. Eles podem ser ligados ou desligados, 1 ou 0. As entradas analógicas são como um botão de volume ou um dimmer de luz. Eles possuem mais opções de valores que podem ser ajustáveis girando o botão. No nosso projeto, as nossas laranjas serão como entradas analógicas, que ajustarão os valores no Adafruit, conforme elas são tocadas ou espremidas.\nClique novamente na seção Variáveis. Desta vez, você verá quatro caixinhas nas opções do menu. Isso acontece porque anteriormente nos definimos as nossas duas variáveis. Arraste a caixinha “set __ to __” para o bloco verde “forever” localizado na sua área de trabalho. Usando a seta branca para baixo, altere o primeiro espaço em branco para a sua primeira variável, aqui chama-se “analog1”.\nEm seguida, em ADVANCED, clique na seta para baixo para expandir o menu e então clique em PINS. Procure pela caixinha “analog read pin __”, ele fica na terceira posição de cima para baixo da lista. Insira-o na posição onde o 0 está localizado, na caixinha “set analog1 to 0”. Para inseri-lo nesse slot, clique na caixinha e arraste-a para que fique acima do zero. Verifique se o 0 está destacado em amarelo e solte botão do mouse (ou touchpad). Você perceberá que a primeira caixinha estendeu-se para acomodar a segunda caixinha. Se esse comportamento não acontecer, tente novamente.\nDepois de finalizado, sua área de trabalho deverá se parecer com a imagem acima. Repita este processo novamente, mas desta vez selecione a sua segunda variável. Para isso, use as setas brancas para baixo para selecionar analog2 e A2. Agora compare com a imagem abaixo para verificar se você o fez corretamente.\nCriando nossos loops Agora que nosso computador sabe como chamar nossas laranjas e também como entender o que elas estão dizendo, vamos criar um loop que verificará quando estivermos segurando nossa laranja. Clique na seção LOGIC e arraste a caixinha “If ____ then” para adicioná-la ao seu conjunto de variáveis.\nNessa etapa, voltaremos ao exemplo do botão de volume para entender a comparação que faremos em nosso loop. Cada pessoa tem um ponto em que gosta de ouvir sua música para se divertir. Este ponto ideal também aplica-se para as nossas laranjas. Elas informarão ao computador um determinado valor quando ninguém as toca e um valor menor quando as tocarmos. O truque é encontrar o meio termo para que só façamos barulho quando quisermos.\nPara realizar esta configuração, vá para a seção LOGIC novamente e pegue a caixinha logica \u0026ldquo;0 \u0026lt; 0\u0026rdquo; que é o segundo na subseção Comparison. Coloque-a sob o valor “true” na caixinha “If ____ then”. Certifique-se de ver o destaque amarelo antes de soltá-la nessa posição. Observe a imagem abaixo para comparar com a sua área de trabalho.\nAgora vamos adicionar o que estamos comparando. Volte para a seção VARIABLES, retire analog1 e coloque-a no primeiro espaço. Em seguida, clique no segundo espaço e digite 40. O número 40 seria o ponto ideal para a maioria das pessoas. Caso sua laranja esteja fazendo barulho sem que você a toque, volte para esta etapa e aumente o valor. Ainda, se a sua laranja não estiver fazendo barulho algum ao tocá-la, você também pode voltar e aumentar o mesmo valor. Por enquanto, vamos deixá-lo em 40.\nAgora podemos escolher nossa música! Clique na seção MUSIC e arraste a segunda caixinha ”play sound __ until done” para o nosso bloco If-Then. Sinta-se à vontade para clicar na seta para baixo e selecionar os sons de sua preferência.\nAgora repita os últimos passos descritos acima para a segunda variável, analog2. Ao finalizar, sua área de trabalho ficará como a imagem abaixo (mas com suas opções de música).\nDiversão com luzes (se o tempo permitir) A placa da Adafruit possui diversas luzes! Elas são superdivertidas de brincar, então vamos adicionar um pouco de cor as nossas músicas para que possamos ver e ouvir a diferença quando tocamos em nossas laranjas. Clique na seção LIGHT e arraste a caixinha “Set all Pixels to ___” para os nossos dois blocos If-Then. Faça isso antes de tocar qualquer som. Por fim, fique à vontade para mudar a cor das luzes. Para isso, você deve clicar na parte da cor e escolher uma que mais te agrade.\n"},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-1/","title":"Atividade 1 - Identificando Usuários no Linux","tags":[],"description":"Aprendendo sobre os commandos do Linux para identificar que usuário você é","content":"  Agora que estamos na linha de comando. Vamos testar um comando simples para identificar a conta de usuário!   O que são contas de usuário? Cada usuário no Linux tem uma conta de usuário. Eles são usados ​​para identificar exclusivamente cada usuário.\nPor exemplo, digamos que você e seu amigo Nuvi compartilhem o mesmo computador. Você e o Nuvi podem criar contas de usuário separadas e acompanhar quais arquivos pertencem a cada um de vocês. Isso garante que nenhum de vocês altere acidentalmente algo importante um do outro.\nComo descubro qual conta estou usando? O comando Linux whoami, que significa \u0026ldquo;quem eu sou\u0026quot;, informará qual conta você está usando. Vamos tentar?\nwhoami A saída esperada para o comando acima é o nome do nosso usuário, nuvi, como podemos observar abaixo:\n Agora que verificamos quem somos, na próxima atividade, iremos descobrir onde estamos!   "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/adafruit/downloading-your-program/","title":"Baixando o seu programa","tags":[],"description":"","content":"Na parte inferior da sua área de trabalho, ao lado do nome do seu programa, você poderá ver um botão de download em cor rosa-brilhante. Mas antes de baixar o seu programa, vamos nomeá-lo primeiro. Você pode nomear à sua preferência. Aqui nós o chamamos de adafruit_musicalfruit. Agora, clique no botão de download.\nVocê verá uma nova janela, perguntando onde deseja salvar o seu arquivo. O padrão deve ser a pasta Downloads, caso contrário, navegue até a pasta de Downloads e salve o arquivo lá.\nAgora você pode conectar o seu cabo USB ao computador. Ao conectar, você verá algumas luzes do arco-íris! Isso significa que a sua placa está ligada e executando o programa padrão. Vamos substituí-lo pelo nosso programa. Clique no pequeno botão de reset no centro da placa. As luzes devem ficar vermelhas e depois verdes. Se as luzes não ficarem verdes, clique duas vezes rapidamente no botão de reinicialização e aguarde alguns segundos.\nQuando as luzes estiverem verdes, abra uma janela do Windows Explorer, caso ela não apareça de imediato. Agora você verá uma unidade CPLAYBOOT. Aqui é mostrado como uma unidade D:, mas pode ser E:, F:, etc.\nDepois de confirmar que você pode ver este CPLAYBOOT, vá para a pasta Downloads e encontre o arquivo que você salvou lá. Você precisará clicar e arrastar esse arquivo até passar o mouse sobre CPLAYBOOT. Você verá algum texto pop-up dizendo “\u0026ndash;\u0026gt; Move to CPLAYBOOT”, traduzindo, mova para CPLAYBOOT. Solte o arquivo lá para copiá-lo para CPLAYBOOT.\nDepois de soltar o arquivo no lugar certo, as luzes verdes se apagarão, indicando que você programou seu Adafruit com sucesso!\nPARABÉNS! Você conseguiu finalizar o seu projeto! Fique à vontade para voltar e ajustar os sons ou seu número mágico nas comparações. "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-2/","title":"Atividade 2 - Identificando a Localização do Usuário","tags":[],"description":"Aprendendo sobre os commandos do Linux para determinar em qual diretório você está atualmente","content":"  Antes que possamos parar o ataque dos hackers, precisamos aprender a navegar no sistema de arquivos Linux!   O que é um sistema de arquivos? Um sistema de arquivos é uma coleção estruturada de arquivos e dados em um disco ou unidade de computador. O nível mais alto de um sistema de arquivos é chamado de \u0026ldquo;raiz\u0026quot;. Pense nisso como o início do sistema de arquivos.\nCuriosidade: os sistemas de arquivos são frequentemente descritos como uma \u0026ldquo;árvore\u0026quot;. Isso ocorre porque o sistema de arquivos se parece com uma árvore de cabeça para baixo e cada pasta ou diretório seria como um ramo ou folha. Por exemplo, o seu sistema de arquivos pode se parecer com o abaixo.\n Em um computador Windows, você pode navegar pelo sistema de arquivos da unidade \u0026ldquo;C:\\\u0026rdquo; deste computador usando o \u0026ldquo;Explorador de Arquivos\u0026quot;. Observe a sua estrutura abaixo:\nEm um Mac, você pode navegar pelo sistema de arquivos do computador em \u0026ldquo;Finder\u0026rdquo; como podemos observar abaixo:\nOnde nós estamos no sistema de arquivos? Queremos descobrir qual é o nosso \u0026ldquo;diretório de trabalho atual\u0026quot;. Este é o local no sistema de arquivos em que você está atualmente.\nO comando do Linux pwd exibirá o caminho completo do diretório de trabalho atual. Traduzindo do Inglês, significa \u0026ldquo;Imprima o diretório Atual\u0026quot;. Vamos tentar?\npwd A saída esperada para o seu comando pode ser parecida com a nossa abaixo:\nEla mostra o caminho /home/nuvi. E o que isso significa? Tentaremos desvendar abaixo:\n /: Este é o símbolo para o diretório raiz do sistema de arquivos. É sempre o primeiro diretório no Linux. /home: Este é o caminho do diretório home, localizado no diretório raiz. /home/nuvi: Este é o caminho para o diretório nuvi, localizado no diretório home. A saída do terminal finaliza aqui, significando que /home/nuvi é o diretório de trabalho atual onde estamos localizados. O processo de entrar no sistema de arquivos através de cada diretório pode continuar por muitas outras etapas em alguns casos. O caminho exibido e descrito acima é chamado de caminho absoluto, porque é o caminho fornecido do diretório raiz até o diretório atual.  Como podemos navegar pelo sistema de arquivos? Para mover para um diretório diferente, use o comando cd. Isso significa \u0026ldquo;Alterar diretório\u0026rdquo;. O formato deste comando é cd [nome do diretório].\nNa saída do terminal acima, podemos observar que quando digitamos pwd novamente, o diretório de trabalho em que estamos agora é Desktop. Agora vamos tentar o comando cd ..:\ncd .. O .. após o comando cd leva você um nível acima na árvore do sistema de arquivos. A saída de pwd agora mostra que estamos de volta ao diretório que começamos, ou seja, nós começamos no diretório nuvi, depois descemos a árvore para diretório Desktop com o comando cd Desktop, e então subimos na árvore com o comando cd ...\n Excelente! Na próxima atividade, exploraremos os mais sobre diretórios.   "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/adafruit/answer-key/","title":"Chave de resposta - Adafruit","tags":[],"description":"Chave de resposta de referência fácil para o currículo adafruit","content":"Configuração Em resumo:\n As duas garras de jacaré devem ser presos na superfície das laranjas. O outro lado das garras deve estar nas entradas A1 e A2 do adafruit. O USB deve ser conectado ao adafruit, mas não ao computador.  Após a configuração, as laranjas e adafruit devem ficar assim:\nSolução Solução - avançada (com luzes) Como funciona "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-3/","title":"Atividade 3 - Explorando o diretório atual","tags":[],"description":"Aprendendo sobre os commandos do Linux para visualizar o conteúdo do diretório atual","content":"  Agora que sabemos quem somos e onde estamos, vamos analisar outras provas em busca de mais evidências dos hackers!   Como podemos explorar um diretório? Para listar os arquivos no diretório atual, usamos o comando ls. Esse comando significa \u0026ldquo;Listar\u0026quot;. Vamos tentar?\nls Como podemos obter mais informações sobre os arquivos neste diretório? Vamos começar digitando o comando ls seguido da flag -l:\nls -l A flag -l que acabamos de testar, auxilia o comando ls a listar o conteúdo do diretório em formato longo apresentado detalhes sobre esses arquivos.\nQuais informações estão sendo exibidas? Agora vamos examinar os detalhes do comando ls -l para o diretório Videos:\n verde: exibe as permissões de acesso aos arquivos e diretórios. O primeiro caractere d denota que Videos é um diretório. Se fosse um - significaria que Videos era um arquivo. vermelho: exibe o número de links para este arquivo. No nosso exemplo, o diretório Videos contem 2 links. roxo: exibe o usuário dono do arquivo. Usuário nuvi é dono do diretório Videos. branco: exibe o grupo dono do arquivo. No nosso exemplo, o arquivo pertence ao grupo nuvi. amarelo: exibe o tamanho do arquivo em bytes. O diretório Videos contém um tamanho de 4096 bytes. laranja: exibe a data e a hora em que o arquivo foi criado. azul: exibe o nome do arquivo ou diretório.  "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-4/","title":"Atividade 4 - Praticando anotações","tags":[],"description":"Aprendendo sobre os commandos do Linux para criar um novo arquivo","content":"  Como engenheiro de segurança cibernética, é importante fazer muitas anotações. Elas são úteis para referências futuras e entender como a invasão aconteceu. Vamos registrar nosso trabalho!   E se nós quisermos criar um novo diretório? Para criar um novo diretório, use o comando mkdir (que significa \u0026ldquo;Crie um Diretório\u0026quot;) no seguinte formato: mkdir minha_pasta\nVamos criar um diretório chamado files digitando o comando abaixo:\nmkdir files Como podemos observar, quando executamos o comando ls -l, um diretório adicional chamado files aparece na lista de diretórios.\nO que podemos fazer com esses arquivos? Um exemplo de como podemos manipular um arquivo ou diretório é movendo-o para outro local. Isso é feito pelo comando de movimento, mv. Agora, vamos mover o diretório Music para o diretório Documents.\nDigite o seguinte comando abaixo no seu terminal:\nmv Music/ Documents/ Agora vamos listar os diretórios mais um vez. Digite o comando ls -l e observe a saída do terminal.\nVocê pode perceber que o diretório Music não aparece mais na sua lista de diretórios. O motivo disso acontecer é porque ele foi movido para o diretório Documents.\nPodemos ver que ele foi movido para Documents usando o comando ls + o local do diretório ao qual o arquivo foi movido. Como por exemplo:\nls -l Documents/ \n Agora, vamos praticar o comando mv mais uma vez, movendo o arquivo Music para o nosso diretório atual.\nVamos praticar?\nmv Documents/Music/ . No comando acima, nós movemos o diretório Music do diretório Documents, para o nosso diretório atual, denotado por .. O ponto representa o diretório atual do usuário. Nesta etapa, se digitarmos ls -l mais uma vez, perceberemos que o diretório Music aparece novamente na lista de diretórios.\n Ótimo trabalho! Agora você sabe como mover arquivos. Usaremos esse conhecimento em breve para recuperarmos nossos documentos do ataque.   E se quisermos criar um novo arquivo? Para criarmos um arquivo, usamos o comando touch. O comando touch cria um arquivo vazio e sem dados.\nVamos treinar esse comando, criando um arquivo chamado file1:\ntouch file1 Agora, quando digitamos ls -l podemos ver que o arquivo file1 foi criado.\nComo podemos adicionar dados ao nosso arquivo? Um arquivo vazio não tem muita utilidade, então vamos adicionar alguns dados no nosso arquivo, como nosso nome. Para abrir o nosso arquivo para edição, usaremos o comando vim. O Vim é um editor que permite adicionar, remover e alterar os dados de um arquivo.\nDigite o comando abaixo para editar o arquivo file1:\nvim file1 Agora que abrimos o nosso arquivo, pressione i para informarmos ao Vim que queremos inserir dados no nosso arquivo. Depois digite nuvi e pressione a tecla esc para sair do modo de inserção. Por fim, digite :wq e pressione enter. Os dois pontos informam ao Vim que estaremos digitando um comando. O w e o q dizem ao vim que desejamos salvar as alterações feitas e fechar o arquivo.\nPara sair do editor vim, pressione esc e então digite :wq. Salve essas informações pois você as usará toda vez que precisar usar o comando vim!\n Digitaremos o comando ls -l mais uma vez. Agora podemos notar que o arquivo file1 tem 5 bytes de conteúdo, em vez de 0 bytes, quando este estava em branco.\nDefinição: Um byte é uma unidade de medida para dados. No nível mais baixo, os computadores usam o que é conhecido como \u0026ldquo;bit\u0026quot;, que é uma única unidade de dados cujo valor só pode ser \u0026ldquo;0\u0026rdquo; ou \u0026ldquo;1\u0026quot;, para representar informações. Um byte é uma coleção de 8 bits.\n Agora vamos a última etapa da nossa atividade. Vamos mover o nosso novo arquivo file1 para o nosso novo diretório files.\nDigite o seguinte comando:\nmv file1 files  Parabéns, você criou, editou e moveu o seu primeiro arquivo! Agora vamos proteger o nosso sistema!   "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-5/","title":"Atividade 5 - Protegendo as permissões de usuários","tags":[],"description":"Aprendendo sobre os commandos do Linux para proteger os seus arquivos","content":"  Essa não! Parece que alguns de nossos arquivos foram manipulados! Precisamos proteger as nossas anotações urgentemente. Não queremos que um hacker acesse nossos segredos!   Como podemos limitar o acesso aos nossos arquivos? A resposta é, podemos dar \u0026ldquo;permissões\u0026rdquo; aos usuários nos próprios arquivos!\nAs permissões são uma maneira de determinar como o computador permite aos usuários o acesso aos arquivos e o que eles podem fazer com esses arquivos.\nNo Linux, existem três tipos comuns de acesso a um arquivo que um usuário pode solicitar: \u0026ldquo;leitura\u0026quot;, \u0026ldquo;escrita\u0026rdquo; ou \u0026ldquo;execução\u0026quot;.\nA permissão de \u0026ldquo;Leitura\u0026rdquo; significa que um usuário pode abrir e ler o arquivo. O acesso do tipo \u0026ldquo;leitura\u0026rdquo; geralmente é indicado com um símbolo r que vem do Inglês read.\nA permissão de \u0026ldquo;Escrita\u0026rdquo; significa que um usuário pode abrir e escrever no arquivo. Isso inclui renomear e mover um arquivo para um local diferente no sistema de arquivos. O acesso do tipo \u0026ldquo;escrita\u0026rdquo; geralmente é indicado com um símbolo w que vem do Inglês write.\nA permissão de \u0026ldquo;Execução\u0026rdquo; significa que um usuário pode tentar executar o arquivo como um programa. O acesso do tipo \u0026ldquo;execução\u0026rdquo; geralmente é indicado com um símbolo x que vem do Inglês execute.\n Mas como sabemos o quão protegidos estão nossos arquivos? Nós já estudamos um comando em um das atividades passadas que pode nos mostrar o quão protegidos estão nossos arquivos. Você lembra dele? Caso não lembre, fique à vontade para relembrá-lo acessando a atividade 3!\nDevemos continuar usando esse mesmo comando para verificar se as nossas futuras alterações ocorrerão conforme o esperado.\n Então como podemos proteger os nossos arquivos com essas permissões? Vamos analisar o comando chmod:\nchmod u=rwx g=rx o=x file1 Usamos o comando chmod para modificar as permissões dos nossos arquivos. Nós \u0026ldquo;alteramos o modo\u0026rdquo; que nossos arquivos são acessados modificando os três grupos de permissões:\n o grupo u que representa o usuário e dono do arquivo o grupo g que representa o grupo de usuários que têm acesso permitido naquele arquivo o grupo o que representa os outros usuários que não têm acesso  Esses grupos podem ser modificados com as seguintes permissões:\n r para leitura w para escrita x para execução.   Hora de aplicar o que aprendemos até agora! Agora, vamos tentar alterar as permissões dos nossos arquivos. Queremos que qualquer pessoa dentro e fora do nosso grupo não consiga acessar file1. Apenas o dono do arquivo deve ter acesso. Você sabe como faríamos isso?\nCuriosidade! chmod também pode ser usado com comandos numéricos simples. Esse método é chamado de modo octal pois possui oito tipos de permissões diferentes. Para modificar um arquivo no modo octal nos usamos:\nchmod 751 [digite o nome do arquivo] Quando utilizamos o modo octal, podemos passar o modo de permissões de cada grupo de usuários. A ordem é sempre: usuário dono, grupo dono e outros usuários. Abaixo podemos verificar os oito tipos de permissões diferentes para esse método:\n   Número Permissão     7 leitura + write + execute   6 leitura + escrita   5 leitura + execução   4 leitura   3 execução + escrita   2 escrita   1 execução   0 sem permissão    "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-6/","title":"Atividade 6 - Um arquivo corrompido","tags":[],"description":"Aprendendo sobre os commandos do Linux para procurar arquivos","content":"  Eu sei que tinha um arquivo chamado secret-message.txt com uma das minhas citações favoritas nele. \"Ser. Ou não ser. Eis a questão.\" Preciso encontrá-la. Você pode me ajudar?   Procurando padrões específicos em um arquivo? O comando grep é um comando usado para pesquisar texto em arquivos. O seu significado é: \u0026ldquo;pesquise globalmente por expressão regular e imprima o resultado\u0026quot;. Ele ainda possui diferentes argumentos ou opções que podem alterar a forma como ele é usado.\nO formato é: grep [argumento] “[padrão]” [nome do arquivo].\n   Argumentos Significado     -c Retorna o número de arquivos com o padrão   -i Pesquisa arquivos ignorando as letras maiúsculas e minúsculas. “uNiX” é o mesmo que “unix”   -n Retorna o número de linhas e suas linhas correspondentes.   -R Pesquisa todos os arquivos no diretório atual.     Vamos praticar este comando para podermos encontrar o meu arquivo secret-message.txt original!   Vamos tentar o seguinte comando:\ngrep -R \u0026quot;Ser. Ou não ser. Eis a questão.\u0026quot;  Por que o arquivo de mensagem secreta parece estranho?  Você lembra daquele arquivo chamado malware.sh? Devemos encontrá-lo novamente e analisa-lo melhor. Acho que foi criado pelos hackers!   O comando find filtra arquivos por parâmetros dentro de um diretório ou região de arquivos. Ele pode ser usado de várias maneiras, incluindo:\n Filtrar arquivos com um nome específico O formato é: find [diretório] -name [nome do arquivo] Filtrar todos os arquivos com uma extensão específica (por exemplo, arquivos de texto, terminando com .txt) O formato é: find [diretório] -name *.txt  Use o comando find para filtrar o arquivo dentro do diretório atual. Existe algum comando que podemos usar para descobrir qual é o diretório atual?\n"},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-7/","title":"Atividade 7 - O que há de errado com o arquivo?","tags":[],"description":"Aprendendo sobre os commandos do Linux para ler um arquivo sem abri-lo","content":"  Arquivos com vírus podem ser perigosos! Não o abra imediatamente! Em vez disso, vamos usar a linha de comando ao nosso favor para analisar o seu conteúdo.   Para arquivos sobre os quais não temos certeza, precisamos primeiro verificar o seu conteúdo para não abrirmos um vírus acidentalmente.\n Mas e como podemos olhar para as primeiras linhas de um arquivo? Às vezes precisamos verificar apenas o início de um arquivo. O comando head mostra a primeira linha de um arquivo.\nO formato é: head [filename]\nSe você adicionar o argumento -n, poderá sinalizar para o comando head quantas linhas do arquivo deseja visualizar a partir do início do arquivo. O formato é: head -n [# de linhas] [nome do arquivo]\n Analise as primeiras 5 linhas do arquivo malware.sh!\nE se quisermos visualizar as últimas linhas do arquivo? Às vezes precisamos verificar apenas o final de um arquivo. O comando tail mostra a última linha de um arquivo.\nO formato é: tail [nome do arquivo]\nSe você adicionar o argumento -n, poderá sinalizar para o comando tail quantas linhas do arquivo deseja visualizar a partir do final do arquivo. O formato é: tail -n [# de linhas] [nome do arquivo]\n Analise as últimas 5 linhas do arquivo malware.sh!\nE como podemos ver o arquivo inteiro? Às vezes, precisamos ver o arquivo inteiro para entender o que ele está fazendo e o que devemos fazer a respeito. Agora, precisamos verificar todo o conteúdo do arquivo malware.sh!\nO comando cat mostra o conteúdo de um arquivo. O formato é: cat [nome do arquivo]\nless e more são commandos similares ao cat.\nO comando more O comando more é indicado para arquivos grandes. Ele mostra o maior número de linhas possível. Podemos navegar entre as linhas pressionando a tecla enter até chegar ao final do arquivo.\nO formato é: more [nome do arquivo]\nO comando less O comando less é útil quando precisamos navegar pelas linhas de um arquivo. Funciona de forma semelhante ao comando more, mas com uma diferença do uso das teclas de seta para cima e seta para baixo para movermos entre as linhas de um arquivo. A maneira para sair desse comando é pressionando a letra q.\nO formato é: less [nome do arquivo]\n  O que você acha que o arquivo malware.sh faz? Anote suas observações no relatório!   "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-8/","title":"Atividade 8 - Verificando diferenças entre arquivos","tags":[],"description":"Aprendendo sobre os commandos do Linux para comparar arquivos","content":"  Vamos dar uma olhada na nossa mensagem secreta para ter certeza de que esse arquivo estranho chamado malware.sh não fez nada com ela!   Verificando diferenças entre arquivos Conhecemos algum comando que pode nos ajudar a encontrar a localização do arquivo secret-message.txt?\nAgora, vamos entrar nesse diretório e verificar a citação \u0026ldquo;Ser. Ou não ser. Eis a questão\u0026rdquo; de antes. Mas qual seria o comando que pode nos ajudar a verificar a mensagem?\n Este arquivo geralmente tem citações boas e divertidas, mas parece que alguém as modificou. Acho que devemos compará-las com uma boa versão conhecida desse arquivo. Vamos lá?   Precisamos verificar se existe alguma cópia de segurança da mensagem secreta em seu diretório. Vá para o diretório de documentos e digite:\nls -la O argumento -a fornece informação de todos arquivos e diretórios incluindo arquivos e diretórios ocultos.\n  Encontrou algum arquivo novo? Então vamos anotar as mudanças!   Compare o arquivo secret-message.txt com o arquivo da cópia de segurança O comando diff é usado para comparar dois arquivos e obter informações sobre o que foi adicionado, alterado e excluído do arquivo.\nO formato é: diff [arquivo] [nome do arquivo de comparação]\nCuriosidade: Executar diff --help produzirá informações sobre como usar a ferramenta diff, incluindo quais opções extras podemos usar para essa ferramenta.\n Verifique a diferença entre os dois arquivos. Quantas diferenças você encontrou? Anote suas descobertas no arquivo que você fez!\nUma maneira melhor de ver as diferenças O comando vimdiff permite a visualização dos arquivos em abas separadas, destacando as diferenças entre esses arquivos.\nVamos tentar usar vimdiff para visualizar melhor as diferenças entre os nossos arquivos.\n "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-9/","title":"Atividade 9 - Removendo arquivos maliciosos","tags":[],"description":"Aprendendo sobre os commandos do Linux para deletar arquivos e diretórios","content":"  Então o arquivo malware.sh é definitivamente um arquivo ruim deixado pelos hackers? Hmm! Até o diretório foi comprometido? Precisamos urgentemente remover esse diretório junto com o arquivo malicioso!   Removendo um arquivo corrompido! O comando rm permite remover arquivos.\nO formato é: rm [nome do arquivo].\nO comando rm remove permanentemente um arquivo.\n Vamos remover o arquivo corrompido que está nos causando problemas. Depois, usaremos o comando ls -l para verificar se o arquivo foi totalmente removido.\n E se precisarmos remover um diretório? O comando rmdir permite remover um diretório vazio.\nO formato é: rmdir [nome do diretório].\nO comando rmdir remove permanentemente um diretório.\n Como podemos remover o diretório em que o arquivo inválido estava?\nRemover arquivos pode ser uma operação perigosa, especialmente no Linux. Certifique-se de ter 100% de certeza de que o arquivo que deseja excluir é seguro para remover. Ao remover o arquivo errado, você pode acidentalmente arruinar o seu computador.\n Você se lembra do comando para refazer o diretório que excluímos?\n Qual seria o comando que nos ajudaria a restaurar o arquivo secret-message.txt?   "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-10/","title":"Atividade 10 - Aprendendo a mover e substituir arquivos","tags":[],"description":"Aprendendo sobre os commandos do Linux para mover e copiar arquivos","content":"  Excelente! Agora que o arquivo malicioso dos hackers não nos causará mais problemas, vamos restaurar o arquivo antigo para que as coisas voltem a funcionar normalmente.   Como corrigir o nosso arquivo secreto O comando mv também pode ser usado para substituir o arquivo de destino pelo arquivo de origem.\nO formato é: mv [source filename] [destination name].\nAgora, vamos substituir a mensagem secreta corrompida pelo backup que encontramos anteriormente. E também vamos mover o arquivo para o novo diretório que criamos.\n Salvando uma cópia de segurança dos nossos arquivos  O arquivo de backup anterior foi útil para corrigir o arquivo adulterado. Vamos fazer uma cópia de segurança dos arquivos em nosso diretório!   O comando cp copia um arquivo de um logar para outro. O formato é: cp [arquivo atual] [arquivo destino].\nFaça uma cópia do arquivo secreto secret-message.txt.\n"},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/activity-11/","title":"Atividade 11 - Guardando e protegendo arquivos","tags":[],"description":"Aprendendo sobre os commandos do Linux para compactar e descompactar","content":" Muito obrigada por ajudar a recuperar a minha máquina! Agora vamos compactar tudo em um belo pacote.   Proteja os seus arquivos, para que eles não sejam adulterados novamente O comando tar permite criar e extrair arquivos compactados.\nUm arquivo compactado é uma coleção de arquivos que ocupam menos espaço de armazenamento no seu computador. Eles também podem ser transferidos para outros computadores mais rapidamente do que arquivos não compactados.\nO comando zip também permite compactar um conjunto de arquivos. O formato é: zip [nome do arquivo compactado] [arquivos a serem compactados]\n O formato é: tar [arquivos].\n   Símbolos Ação     -c Cria arquivo   -x Extrai arquivo   -f Cria arquivo com específico nome    Use o comando tar para proteger seu diretório de arquivos! Você pode salvar um arquivo com o nome files.tar.gz.\n"},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/answer-key/","title":"Resoluções - Minicurso Básico de Linux","tags":[],"description":"Resoluções de todos os exercícios","content":"Atividade 1 whoami Atividade 2 pwd cd Desktop cd .. Atividade 3 ls -l mv Documents/ Downloads/ ls -l Downloads mv Downloads/Documents/ . Atividade 4 mkdir files touch file1 vim file1 mv file1 files Atividade 5 chmod u=rwx g=rx o=x file1 chmod 751 [insert filename] Atividade 6 cd grep -R \u0026quot;Do. Or do not. There is no try.\u0026quot; find . -name *.sh Atividade 7 head -n 5 malware.sh tail -n 5 malware.sh cat malware.sh more malware.sh less malware.sh Atividade 8 find . -name *.txt grep -R \u0026quot;Do. Or do not. There is no try.\u0026quot; ls -la diff malware.sh secret-message.txt vimdiff malware.sh secret-message.txt Atividade 9 rm Downloads/malware.sh rm files mkdir files Atividade 10 mv secret-message.txt . ls -l cp secret-message.txt file1 ls cd files cp secret-message.txt file1 ls -l Atividade 11 tar -f files.tar.gz "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/linux-basics/closing/","title":"Finalizando","tags":[],"description":"A última tela após a conclusão das atividades","content":"Parabéns!  Você frustrou as travessuras dos hackers aprendendo sobre os vários comandos do Linux. Muito obrigada por nos ajudar! E não conte a ninguém sobre as suas novas habilidades!   Clique em \u0026ldquo;Baixar certificado\u0026rdquo; abaixo para receber o seu certificado de conclusão do Minicurso Básico de Linux!\nBaixar certificado "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/","title":"Minicursos Nuevo Foundation","tags":[],"description":"","content":"Projetos do Minicurso \t   Minicurso básico de Linux   Um guia introdutório sobre os comandos básicos do Linux.\n \t   Programando Frutas Musicais com Adafruit   Um guia introdutório para criar sons usando o Adafruit e aprender sobre hardware\n  Colabore conosco Gostaria de nos ajudar a melhorar nossos minicursos ou nosso site? Clique aqui: Guia de contribuição para minicursos !\n"},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/adafruit/","title":"Programando Frutas Musicais com Adafruit","tags":[],"description":"Um guia introdutório para criar sons usando o Adafruit e aprender sobre hardware","content":"Conteúdo Seções  Os Componentes \n   Construindo uma estação de DJ \n   Criando o seu programa \n   Baixando o seu programa \n    "},{"uri":"https://nuevofoundation.github.io/workshops/pt-br/tags/","title":"Tags","tags":[],"description":"","content":""}]