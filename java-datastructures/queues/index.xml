<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Queues: Receiving Orders on Nuevo Foundation Workshops</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/queues/</link><description>Recent content in Queues: Receiving Orders on Nuevo Foundation Workshops</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Feb 2020 13:24:17 -0700</lastBuildDate><atom:link href="https://nuevofoundation.github.io/workshops/java-datastructures/queues/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/queues/introduction/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/queues/introduction/</guid><description>Visualizing a Queue Imagine that you are designing NuevoEats for a business, and perhaps this business is McDonalds.
We want to serve our new potential clients in the most efficient way possible for our large business; one at a time. When customers place their to-go order on the NuevoEats app, it is almost as if they are forming an orderly line in front of our restaurant, with new customers joining at the rear.</description></item><item><title>Methods</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/queues/methods/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/queues/methods/</guid><description>Priority Queues A PriorityQueue is used when the objects are supposed to be processed based on the priority. In this case, we want to sort the queue by the time the customer has been waiting. It is known that a Queue follows the First-In-First-Out algorithm, but sometimes the elements of the queue are needed to be processed according to the priority; thatâ€™s when the PriorityQueue comes into play. The PriorityQueue is based on the priority heap.</description></item><item><title>Problem 1: Queue Basics</title><link>https://nuevofoundation.github.io/workshops/java-datastructures/queues/problem-1/</link><pubDate>Mon, 10 Feb 2020 13:24:17 -0700</pubDate><guid>https://nuevofoundation.github.io/workshops/java-datastructures/queues/problem-1/</guid><description>-- Task 1: Clearing Queue for New Orders A new restaurant has been added into Nuevo Eats! New orders have been flooding in and the Queue is flooded with orders! The popularity of the different tacos grew fast and the restaurant is overloaded. Look for a way to clear all elements to save the restaurant!
How can you iterate through the Queue? Try to clear the Queue as you go through it!</description></item></channel></rss>